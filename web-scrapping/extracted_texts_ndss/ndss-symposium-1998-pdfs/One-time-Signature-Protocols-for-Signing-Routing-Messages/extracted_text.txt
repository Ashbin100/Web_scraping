’ $
%
One-time Signature Protocols for
Signing Routing Messages
Kan Zhang
Computer Laboratory
Cambridge University
kz200@cl.cam.ac.uk
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
Attacks on Routing Protocols
(cid:15)
Replay of old routing messages
(cid:15)
Inserting bogus routing messages
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
Securing Routing Protocols
Current protection (RIP, OSPF, ISIS, IDRP):
(cid:15)
Clear-text passwords
Perlman and others proposed stronger protection
mechanisms in which public-key digital signatures are
used to provide:
(cid:15)
Authenticity
(cid:15)
Integrity
of routing messages.
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
FLS by Hauser, Przygienda and Tsudik
Hash table computed by a router for link
L 1
to
L n
:
1
2
h
h
u
1
2
p
(
(
x
x
1
1
)
)
L 1
d
f
f
o
1
2
w
(
(
x
x
n
1
1
)
)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
h
h
u
1
2
p
(
(
x
x
n
n
)
)
L n
d
f
f
o
1
2
w
(
(
x
x
n
n
n
)
) . . . . .. . . . . . .
k h
k
( x 1 ) f
k
( x 1 ) (cid:1) (cid:1) (cid:1) h
k
( x n ) f
k
( x n )
where
h
and
f
are two hash functions and
x i
are
random values.
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
Limitations
(cid:15)
Very frequent state changes
(cid:15)
Clock drifts
(cid:15)
Multiple-valued link costs
(cid:15)
Large or changing number of links
(cid:15)
Applicability to other routing messages
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
One-time Signature Schemes
(cid:15)
Lamport’s original scheme
To sign a single bit
m
, choose
x 0
and
x 1
and publish
h ( x 0 )
and
h ( x 1 )
s m =
8
>><
>>:
x 0
if
x 1
m = 0
if
(cid:15)
m = 1
Improvement by Merkle
message
0 0 1 0 1 1 0 0
sign
(cid:15)
0 0 1 0 1 1 0 0 1 0 1
Improvement by Winternitz
(cid:15)
Authentication tree by Merkle, Vaudenay, Bleichen-
bacher and Maurer
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
Chained One-time Signature Protocol
(COSP)
(cid:15)
Choose at random as secret key components
(cid:15)
x j ; j = 1 ; : : : ; n :
Prepare a table of
n
hash chains of length
k
:
0
1
h
h
0
1
(
(
x
x
1
1
)
)
;
;
h
h
0
1
(
(
x
x
2
2
)
)
;
;
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
;
;
h
h
0
1
(
(
x
x
n
n
)
) . . . . . . .. . . . . . . .
(cid:15)
k h
k
( x 1 ) ; h
k
( x 2 ) ; (cid:1) (cid:1) (cid:1) ; h
k
( x n )
Sign and broadcast the
k
th row of the table .
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
COSP Signing
1. Obtain a
n
-bit binary string
g
by concatenating
f ( M i )
with a count field using Merkle’s method as
explained above.
2. Form the one-time signature by concatenating the
hash values
h
k
(cid:0)
i
( x j )
in the
( k (cid:0) i )
th row of the table
for all
j
such that
g j = 1
, where
g j
is the
j
th bit of
string
g
.
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
COSP Verification
1. Obtain the
n
-bit binary string
g
by concatenating
f ( M i )
with a count field using Merkle’s method as
explained above.
2. For all
j
such that
g j = 1
, check if
h
i
(cid:0)
i
0
( r j ) = v j ;
(1)
where
r j
and
v j
are the received and stored value
for the
j
th bit, respectively, and
v j
is last updated
for message
i
0
.
3. If true, accept the message and update
v j
with value
r j
so that when he evaluates Eq. (1) for message
i
0 0
> i
in the future he only needs to perform
i
0 0
(cid:0) i
hash computations.
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
Delay-and-Forge Attack
message
M i 0 0 1 0 1 1 0 0 1 0 1 message
M i + 1 0 1 1 0 1 1 0 0 1 0 0 fake message
(cid:15)
x
i
2 =
M
h
0
i
( x
0
i
2
+
1 1
1
)
0 1 0 0 0 1 0 1
Signature are sent at pre-set time interval
(cid:15)
T
Clocks have to be synchronized within time
window
(cid:15)
T
Signatures are valid within time window
’
&
$
%
T
UniversityofCambridge
Computer Laboratory’ $
%
Independent One-time Signature Protocol
(IOSP)
(cid:15)
To sign message
M i
, choose at random as secret key
components for next message
x
0
j
,
j = 1 ; : : : ; n
and
compute one-time public key
P
0
for next message as
(cid:15)
P
0
= h ( h ( x
0
1 ) k (cid:1) (cid:1) (cid:1) k h ( x
0
n ) )
Obtain a
n
-bit binary string
g
by concatenating
f ( M i k P
0
)
with a count field using Merkle’s method
as explained above.
(cid:15)
Compute one-time signature
S
by concatenating
signature components
s j
,
j = 1 ; (cid:1) (cid:1) (cid:1) ; n
, given by
s j =
8 >><
>>:
h ( x j )
if
x j
g j = 0 if
g j = 1
where
g j
is the
j
th bit of string
g
.
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
IOSP Verification
(cid:15)
Obtain the
n
-bit binary string
g
by concatenating
f ( M i k P
0
)
with a count field using Merkle’s method
as explained above.
(cid:15)
Compute
V = h ( v 1 k v 2 k (cid:1) (cid:1) (cid:1) k v n )
, where
v j
,
1 ; (cid:1) (cid:1) (cid:1) ; n
j = is given by
v j =
8 >><
>>:
r j
if
h ( r j )
g j = 0 if
g j = 1
where
r j
is the received
j
th signature component
and
g j
is the
j
th bit of string
g
.
(cid:15)
If
V = P
, accept the message and update
P
with
value
P
0
.
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
Performance
(cid:15)
COSP verification needs
l + b l o g 2 l c + 2
hash compu-
tations while IOSP needs about half of that.
(cid:15)
Signature verification using IOSP runs more than
10 times faster than RSA (MD5 vs. 1024/8 RSA on
200MHz/64MB Pentium PC using CryptoLib 1.1)
(cid:15)
Both COSP and IOSP signature generation takes
negligible time, whereas RSA signature generation
is about 100 times slower than verification
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
Comparison of COSP and IOSP
(cid:15)
Advantages of IOSP
– Signature verification runs twice as fast as COSP
– Less memory for storing keys
– No timing constraint
(cid:15)
Advantages of COSP
– The signature size of COSP is roughly half of that
of IOSP (2KB for IOSP and 1KB for COSP using
MD5)
– Easy to catch up
’
&
$
%
UniversityofCambridge
Computer Laboratory’ $
%
Applicability as efficient alternatives to
public-key signatures
(cid:15)
Fast signature generation and verification
(cid:15)
Non-interactive
As a general approach, the way our protocols being
used with public-key systems for message signing is
similar to that of secret-key cryptography being used
with public-key systems for data encryption.
’
&
$
%
UniversityofCambridge
Computer Laboratory