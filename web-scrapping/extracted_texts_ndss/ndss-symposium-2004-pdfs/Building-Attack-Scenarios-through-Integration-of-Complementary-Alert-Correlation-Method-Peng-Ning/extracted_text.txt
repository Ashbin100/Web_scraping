Building Attack Scenarios through Integration of Complementary Alert
Correlation Methods ∗
Peng Ning,DingbangXu,ChristopherG.Healey,and Robert St. Amant
CyberDefenseLaboratory
DepartmentofComputerScience
NorthCarolinaStateUniversity
Raleigh,NC 27695-8207
Abstract ityofintrusionalerts(i.e.,missedattacksandfalsealerts)
makeitaverychallengingtaskforhumanusersorintru-
sion response systems to understand the alerts and take
Severalalertcorrelationmethodswereproposedinthe appropriateactions. Thus, itis usuallynecessaryto con-
pastseveralyearstoconstructhigh-levelattackscenarios struct high-level attack scenarios from a large collection
from low-level intrusion alerts reported by intrusion de- oflow-levelintrusionalerts.
tection systems (IDSs). These correlation methods have Severalalertcorrelationtechniqueshavebeenproposed
different strengths and limitations; none of them clearly to facilitate the analysisofintrusionalerts, includingap-
dominate the others. However, all of these methods de- proaches based on the similarity between alert attributes
pendheavilyontheunderlyingIDSs,andperformpoorly [4,7,25,27], previously known (or partially known) at-
when the IDSsmiss critical attacks. In orderto improve tack scenarios[8,9],andprerequisitesandconsequences
theperformanceofintrusionalertcorrelationandreduce ofknownattacks[5,19].Acommonrequirementofthese
the impact of missed attacks, this paper presents a se- approachesisthattheyalldependonunderlyingIDSsfor
ries of techniques to integrate two complementary types alerts. Thismeanstheresultsofalertcorrelationarelim-
ofalertcorrelationmethods: (1)thosebasedonthesim- itedtotheabilitiesoftheIDSs. Inparticular,iftheIDSs
ilarity between alert attributes, and (2) those based on misscriticalattacks,theresultsofalertcorrelationwillnot
prerequisitesandconsequencesof attacks. In particular, reflectthetrueattackscenario,andthusprovidemislead-
thispaperpresentstechniquestohypothesizeandreason inginformation.
aboutattackspossiblymissed byIDSsbasedontheindi- Inthispaper,wedevelopaseriesoftechniquestocon-
rect causal relationshipbetween intrusion alerts and the struct high-level attack scenarios even if the IDSs miss
constraints they must satisfy. This paper also discusses criticalattacks. Ourapproachistointegratecomplemen-
additionaltechniquestovalidatethehypothesizedattacks taryintrusionalertcorrelationmethodsandusetheintrin-
through raw audit data and to consolidate the hypothe- sic relationships between possibly related attacks to hy-
sizedattackstogenerateconciseattackscenarios.Theex- pothesize and reason about attacks missed by the IDSs.
perimentalresultsinthispaperdemonstratethepotential We are particularly interested in two types of alert cor-
ofthesetechniquesinbuildinghigh-levelattackscenarios relation methods: correlation based on prerequisites and
andreasoningaboutpossiblymissedattacks. consequencesofattacks[5,19](whichwecallcausalcor-
relation methods, since they are intendedto discoverthe
causalrelationshipsbetweenalerts),andcorrelationbased
1. Introduction on similarity between alert attribute values [4,7,25,27]
(which we call clustering correlation method). Because
Itiswell-knownthatcurrentintrusiondetectionsystems thesetwomethodscorrelatealertsusingdifferentmecha-
(IDSs)producelargenumbersofalerts,includingbothac- nisms,combiningthemcanpotentiallyleadtobettercor-
tualand false alerts. The highvolumeand the low qual- relation results. Our main contributionin this paper is a
series of techniques to integrate the causal and the clus-
∗Theauthorswouldliketothanktheanonymousreviewersfortheir
tering correlation methods, and to use the results to hy-
valuablecomments.ThisworkispartiallysupportedbytheNationalSci-
enceFoundation(NSF)undergrantsITR-0219315andCCR-0207297, pothesizeandreasonaboutattackspossiblymissedbythe
andbytheU.S.ArmyResearchOffice(ARO)undergrantDAAD19-02- IDSs. These techniquesare criticalto constructinghigh-
1-0219.
1levelattackscenariosfromlow-levelintrusionalertsinsit- 2. Previous Work: Alert Correlation Using
uationswheretheIDSscannotguaranteetodetectallat- Prerequisites ofAttacks
tacks. ThesetechniquescomplementtheunderlyingIDSs
Thenewtechniquesinthispaperarebuiltonthebasis
byhypothesizingandreasoningaboutmissedattacks,and
ofthecausalcorrelationmethodproposedin[19],which
thuscanprovidevaluableadditionalevidencestosupport
webrieflydescribebelow.
furtherintrusioninvestigationandresponse.
The approach in [19] correlates intrusion alerts using
Our approach starts with a straightforward combina-
theprerequisitesandconsequencesofattacks. Intuitively,
tionofthecausalandtheclusteringcorrelationmethods.
theprerequisiteofanattackisthenecessaryconditionfor
Specifically, we first correlate the same set of intrusion
theattacktobesuccessful. Forexample,theexistenceof
alertswithbothmethodsindependently,thencombinere-
avulnerableserviceistheprerequisiteofaremotebuffer
sults from the causal correlation method (represented as
overflow attack against the service. The consequence of
correlationgraphs) using results from the clustering cor-
anattackisthepossibleoutcomeoftheattack. Forexam-
relationmethod.Forexample,iftheclusteringcorrelation
ple, gaining local access as root from a remote machine
methoddecidesthattwoalertsintwoseparatecorrelation
may be the consequence of a ftp buffer overflow attack.
graphs are very similar (e.g., same target, close times-
In a series of attacks where earlier ones are launched to
tamps,etc.),wecombinethesetwocorrelationgraphsinto
prepare for later ones, there are usually connections be-
one. Wethendeveloptechniquestohypothesizeaboutat-
tweentheconsequencesoftheearlierattacksandthepre-
tacks possibly missed by the IDSs, especially unknown
requisitesofthe later ones. Accordingly,we identifythe
variationsofknownattacks.
prerequisites (e.g., existence of vulnerable services) and
We observe that if two attacks are causally related
the consequences(e.g.,discoveryofvulnerableservices)
through some intermediate attacks, they usually satisfy
of attacks, and correlate detected attacks (i.e., alerts) by
certain conditions (e.g., sharing the same destination IP
matching the consequencesof previousalerts to the pre-
address), even if they are not directly adjacent in a se-
requisitesoflaterones.
quenceofattacks. Theattributevaluesofthecorrespond-
The correlation method uses logical formulas, which
ingalertsshouldalsosatisfysuchconditions. Thisobser-
are logical combinations of predicates, to represent the
vation provides another opportunity to reason about the
prerequisitesand consequencesof attacks. For example,
hypothesized attacks by inferring their attribute values.
a scanningattack maydiscoverUDP servicesvulnerable
Moreover, the hypothesized attacks can be further vali-
tocertainbufferoverflowattacks. ThenthepredicateUD-
datedthroughrawauditdata. Forexample,wemighthy-
PVulnerableToBOF(VictimIP,VictimPort)maybeusedto
pothesize that variations of IMAP Authen Overflow
representthisdiscovery.
and/orRPC Cmsd OverflowweremissedbytheIDSs.
The correlation model formally represents the prereq-
However, if during the target time frame, there is only
uisitesandconsequencesofknownattacksashyper-alert
IMAP traffic and no RPC traffic to the target host, we
types. A hyper-alert type is a triple (fact, prerequisite,
can easily concludethat the latter hypothesisis impossi-
consequence),wherefactisasetofalertattributenames,
ble. Finally, to improve the usability of the constructed
prerequisiteisa logicalformulawhosefreevariablesare
attackscenarios,wepresentatechniquetoconsolidatethe
all in fact, and consequence is a set of logical formu-
hypothesizedattacksandgenerateconciserepresentations
las such that all the free variables in consequence are in
ofthehigh-levelattackscenarios.
fact. Intuitively,ahyper-alerttypeencodestheknowledge
The remainder of this paper is organized as follows.
about the correspondingtype of attacks. Given a hyper-
The next section briefly describes a specific causal cor-
alert type T = (fact, prerequisite, consequence), a type T
relation method, on the basis of which our techniques
hyper-alert h is a finite set of tuples on fact, where each
aredeveloped. Section3presentsourtechniquestointe-
tuple isassociated with aninterval-basedtimestamp[be-
grateclusteringandcausalcorrelationmethods,including
gin time,end time].Thehyper-alerthimpliesthatprereq-
approachesto hypothesizingandreasoningaboutattacks
uisitemustevaluatetoTrueandallthelogicalformulasin
possibly missed by IDSs, methods to validate hypothe-
consequencemightevaluatetoTrueforeachofthetuples.
sizedattacksusingrawauditdata,andwaystoconsolidate
The correlation process is used to identify prepare-
hypothesizedattacks. Section4reportsourexperimental
for relations between hyper-alerts. Intuitively, this re-
resultstotesttheeffectivenessofourtechniques. Section
lation exists if an earlier hyper-alert contributes to the
5discussesrelatedwork,andSection6concludesthispa-
prerequisite of a later one. In the formal model,
per and points out some future research directions. The
correlations are identified via prerequisite and conse-
Appendix gives more information about the alert types
quence sets. Given a hyper-alert type T = (fact, pre-
usedinourexperiments.
requisite, consequence), the prerequisite set (or conse-
quence set) of T, denoted Prereq(T) (or Conseq(T)),correlation graphs shown in Figures 1(a) and 1(b) (The
ICMP_PING_NMAP1 Rsh3 string inside each node is a hyper-alert type name fol-
lowed by an alert ID), if the clustering method groups
SCAN_NMAP_TCP2 Mstream_Zombie4 SCAN NMAP TCP2 and Rsh3 in the same cluster based
ontheircommonsourceanddestinationIPaddresses,we
(a)CG 1 (b)CG 2 considerintegratingthesetwographstogether.
Because this simple technique works well in practice,
Figure1.Twocorrelationgraphs
our main focus in this paper is on the second step: how
to identify causal relationships between alerts in differ-
entcorrelationgraphs.Thisischallenging,sincewemust
is the set of all predicates that appear in prerequisite
deal with missed attacks that cause an attack scenario to
(or consequence). The expanded consequence set of
splitintomultiplecorrelationgraphs.
T, denoted ExpConseq(T), is the set of all predi-
To meetourgoal, we developeda series of techniques
cates that are implied by Conseq(T). (This is com-
to integrate multiple correlation graphs. We start with a
puted using the implication relationships between pred-
straightforwardmethod,andgraduallyaddmoresophisti-
icates [19].) Thus, Conseq(T) ⊆ ExpConseq(T).
catedtechniquesintoourapproach. Withoutlossofgen-
Given a type T hyper-alert h, the prerequisite set, con-
erality,weassumeweintegratetwocorrelationgraphsin
sequence set, and expanded consequence set of h, de-
thefollowingdiscussion.
notedPrereq(h), Conseq(h), andExpConseq(h)), re-
spectively,arethepredicatesinPrereq(T),Conseq(T),
3.1.CombiningRelatedCorrelationGraphs
andExpConseq(T)withargumentsreplacedbythecor-
responding attribute values of each tuple in h. Each el- A straightforward approach to combining two corre-
ement in Prereq(h), Conseq(h), or ExpConseq(h) is lation graphs is to use the prior knowledge of attacks
associatedwiththetimestampofthecorrespondingtuple andthealerttimestampinformationtohypothesizeabout
in h. Hyper-alert h 1 preparesforhyper-alerth 2 if there the possible causal relationships between alerts in dif-
existp∈Prereq(h 2)andc∈ExpConseq(h 1)suchthat ferent correlation graphs. For example, suppose an at-
p=candc.end time<p.begin time. tacker uses nmap to find out a vulnerable service, then
A hyper-alert correlation graph is used to represent a uses a buffer overflow attack to compromise that ser-
set of correlated hyper-alerts. A hyper-alert correlation vice, andfinallyinstalls andstartsa DDOSdaemonpro-
graphCG=(N,E)isaconnecteddirectedacyclicgraph, gram. WhenweobserveanearlierSCAN NMAP TCPand
whereN isasetofhyper-alertsandforeachpairn 1,n 2 ∈ alaterMstream Zombiealertintwocorrelationgraphs
N,thereisadirectededgefromn 1ton 2inEifandonly that are identified for integration, we may hypothesize
ifn 1preparesforn 2.Forbrevity,werefertoahyper-alert thattheSCAN NMAP TCPalertindirectlypreparesforthe
correlationgraphasacorrelationgraphinthispaper. Mstream Zombiealertthroughanunknownattack(or
anunknownvariationofaknownattack,e.g.,avariation
3.IntegratingComplementaryAlertCorrela- oftheabovebufferoverflowattack).Asaresult,wewould
add a hypothesized indirect causal relationship between
tionMethods
thesetwoalerts.
To integrate the causal and the clustering correlation Tofurthercharacterizethisintuitionandfacilitatelater
methods,wecombinecorrelationgraphsgeneratedbythe discussion,weintroducetwodefinitions. (NotethatDef-
causalmethodusingtheresultsfromtheclusteringmeth- inition 1 is based on the model in [19], which has been
ods. Intuitively, if the IDSs miss certain attacks, alerts described briefly in Section 2.) For convenience,we de-
fromthesameattackscenariomaybesplitacrossseveral notethetypeofahyper-alerthasType(h).
correlation graphs. The clustering methodshave the po-
Definition1 Given two hyper-alert types T and T0,
tential to identify the common features shared by these
we say T maypreparefor T0 if ExpConseq(T) and
alerts, andthereforeto help re-integratethe relevantcor-
Prereq(T0) share at least one predicate (with possibly
relationgraphstogether.
differentarguments). Givena set T ofhyper-alerttypes,
The integration process can be conceptually divided
wesayT mayindirectlyprepareforT0w.r.t.T ifthereex-
intotwosteps: (1)identifythecorrelationgraphstobein-
ists asequenceofhyper-alerttypesT,T ,...,T ,T0 such
1 k
tegrated, and (2) determine possible causal relationships
that (1) all these hyper-alert types are in T, and (2) T
betweenalertsin differentcorrelationgraphs. Inthispa-
may preparefor T , T may preparefor T , where
1 i i+1
per, we choose a simple technique for the first step: we
i=1,2,...,k−1,andT mayprepareforT0.
k
integrate two correlation graphs when they both contain
alertsfromacommoncluster. Forexample,giventhetwo Intuitively,giventwohyper-alerttypesT andT0,T mayICMP_PING_NMAP1 ICMP_PING_NMAP1
SCAN_NMAP_TCP2
SCAN_NMAP_TCP2
IMAP_Authen_Overflow5 FTP_Glob_Expansion6
Rsh3
Rsh3
Mstream_Zombie4
Mstream_Zombie4
Figure2.AstraightforwardcombinationofCG
1 Figure 3. Integration of CG and CG with hy-
1 2
andCG
2 pothesesofmissedattacks
prepareforT0 if thereexista type T hyper-alerth and a
mined solely on the basis of prior knowledge about at-
typeT0hyper-alerth0suchthathpreparesforh0.
tacks. There is no “reality check.” Though a clustering
Definition2 Given a set T of hyper-alerttypes and two correlation method combinesseveral hyper-alertcorrela-
hyper-alerts h and h0, where Type(h) and Type(h0) ∈ tion graphs together, the hypothesized virtual edges are
T and h0.begin time > h.end time, h may indirectly notnecessarilytrueduetothelimitationsoftheclustering
prepare for h0 if Type(h) may indirectly prepare for correlationmethodandthelackofinformationaboutthe
Type(h0) w.r.t. T. Given a sequence of hyper-alerts h, missedattacks.
h 1,...,h k,h0 wherek > 0,hindirectlypreparesforh0 if
hpreparesforh 1,h ipreparesforh i+1fori=1,...,k−1, 3.2.HypothesizingMissedAttacks
andh preparesforh0.
k
Themay-prepare-forandmay-indirectly-prepare-forre-
Intuitively,hmayindirectlyprepareforh0iftherecould lationsidentifiedinDefinitions1and2provideadditional
exista pathfromh to h0 in a correlationgraph(withad- opportunitiestohypothesizeandreasonaboutmissedat-
ditionalhyper-alerts),whilehindirectlypreparesforh0if tacks,especiallyunknownvariationsofknownattacks.
such hyper-alertsdo exist. We areparticularlyinterested Consider two hyper-alertsh and h0 that belong to dif-
inthecasewherehmayindirectlyprepareforh0butthere ferent correlation graphs prior to integration. If h may
do not exist additional hyper-alerts showing that h indi- indirectlyprepareforh0,wecanthenidentifypossiblese-
rectlypreparesforh0. Indeed,apossiblereasonforsucha quencesofhyper-alerttypesin the formofT ,T ,...,T
1 2 k
situationisthattheIDSsmisssomecriticalattacks,which, suchthatType(h)mayprepareforT 1,T imaypreparefor
ifdetected,wouldleadtoadditionalhyper-alertsshowing T i+1,i=1,2,...,k−1,andT kmayprepareforType(h0).
thathindirectlypreparesforh0. Thesesequencesofhyper-alerttypesarecandidatesofat-
A simple way to take advantageof the aboveobserva- tackspossiblymissedbytheIDSs. (Moreprecisely,vari-
tion is to assume a possible causal relationship between ations of these attacks, which could be used by an at-
hyper-alerts h and h0 if they belong to different correla- tackerandthenmissedbytheIDSs,aretheactualcandi-
tion graphs and h mayindirectlyprepareforh0. Let us datesofmissedattacks.) Wecanthensearchinthealerts
continue the example in Figure 1. If SCAN NMAP TCP and/or the raw audit data between h and h0 to check for
maypreparefor FTP Glob Expansion, which may signs of these attacks (or their variations). For example,
prepareforRsh, then we have SCAN NMAP TCP may tocontinuetheexampleinFigure2,wemayhypothesize
indirectlyprepareforRsh. Thus, we may hypothesize that variations of either IMAP Authen Overflow, or
that SCAN NMAP TCP2 indirectly prepares for Rsh3. FTP Glob Expansion,orbothmayhavebeenmissed
We add a virtual edge, displayed in a dashed line, from bytheIDSsbasedonourpriorknowledgeaboutattacks.
SCAN NMAP TCP2 to Rsh3 in Figure 2, indicating that To better present these hypotheses, we may add the hy-
theremaybesomeattacksbetweenthemthataremissed pothesized attacks into the correlation graph as virtual
bytheIDSs. nodes (displayed in gray). Figure 3 shows the resulting
Though this simple approach can integrate related correlationgraph.
hyper-alertcorrelationgraphsandhypothesizeaboutpos- Tofacilitatehypothesizingaboutmissedattacks,ween-
sible causal relationships between alerts, it is limited in code our knowledge of the relationships between hyper-
severalways. First, the virtualedgesgeneratedwith this alert types in a hyper-alert type graph, or simply a type
approach provide no information about attacks possibly graph. Letusfirstintroducetheconceptofequalitycon-
missed by the IDSs. Second, the virtualedgesaredeter- straint, whichwasoriginallydefinedin[20],tohelpfor-mallydescribethenotionoftypegraph.
n1:ICMP_PING_NMAP
Definition3 (equality constraint [20]) Given a pair of
{n1.DestIP=n2.DestIP}
hyper-alert types (T 1,T 2), an equality constraint for
(T 1,T 2) is a conjunction of equalities in the form of n2:SCAN_NMAP_TCP
u 1 = v 1∧···∧u n = v n,whereu 1,···,u n areattribute {n2.DestIP=n3.DestIP} {n2.DestIP=n4.DestIP}
namesinT 1andv 1,···,v nareattributenamesinT 2,such
that there exist p(u 1,···,u n) and p(v 1,···,v n), which n3:IMAP_Authen_Overflow n4:FTP_Glob_Expansion
arethesamepredicatewithpossiblydifferentarguments,
{n3.DestIP=n5.SrcIP, {n4.DestIP=n5.SrcIP,
inExpConseq(T 1)andPrereq(T 2),respectively.Given n3.DestIP=n5.DestIP} n4.DestIP=n5.DestIP}
atypeT 1 hyper-alerth 1 andatypeT 2 hyper-alerth 2,h 1 n{ 3n .3 D.D ese ts It PI =P n= 6n .6 D.S er sc tII PP }, n5:Rsh n{ 4n .4 D.D ese ts It PI =P n= 6n .6 D.S er sc tII PP },
andh 2satisfytheequalityconstraintifthereexistt
1
∈h
1
{n5.SrcIP=n6.SrcIP,
andt 2 ∈h 2suchthatt 1.u 1 =t 2.v 1∧···∧t 1.u n =t 2.v n n5.DestIP=n6.DestIP,
n5.SrcIP=n6.DestIP,
evaluatestoTrue. n5.DestIP=n6.SrcIP}
An equality constraint characterizes the relationships n6:Mstream_Zombie
betweentheattributevaluesoftwohyper-alertswhenone
of them preparesforthe other. There may be several Figure4.Anexampletypegraph
equalityconstraintsforapairofhyper-alerttypes. How-
ever, if a type T hyper-alert h preparesfora type T
1 1 2
hyper-alert h 2, then h 1 and h 2 must satisfy at least one Mstream Zombie}. (We include the specifica-
equalityconstraint.Indeed,h 1preparingforh 2isequiva- tions of these hyper-alerttypesin AppendixA.) We can
lenttotheconjunctionofh 1andh 2satisfyingatleastone compute the type graph over T as shown in Figure 4.
equivalentconstraintandh 1occurringbeforeh 2[20]. Thestringinsideeachnodeisthenodenamefollowedby
Givenasetofhyper-alerttypes(representingtheknown the hyper-alerttype name. The label of each edge is the
attacks), we can derive all possible may-prepare-forre- correspondingsetofequalityconstraints.
lations between them together with the corresponding
Obviously, given multiple correlation graphs that may
equality constraints. This information can help us un-
be integrated together, we can hypothesize about pos-
derstand how these known attacks may be combined to
sibly missed attacks that break the attack scenario ac-
launch sequences of attacks, and thus hypothesize about
cording to the type graph. Let us revisit the exam-
which attacks (more precisely, their variations) may be
ple in Figure 1. Given the type graph in Figure 4, we
missedwhenweobservealertsthatmayindirectlyprepare
can systematically hypothesize that the IDSs may have
foreachother. Thefollowingdefinitionformallycaptures
missed variations of IMAP Authen Overflow and/or
thisintuition.
FTP Glob Expansionattacks. Asa result, we obtain
Definition4 GivenasetT ofhyper-alerttypes,a(hyper- theintegratedcorrelationgraphshowninFigure3.
alert)typegraphTGoverT isaquadruple(N,E,T,C),
where 3.3.ReasoningaboutMissedAttacks
(1) (N,E)isadirectedgraph, Considernodesn2,n3,andn5inFigure4. Thereisan
equalityconstraintn2.DestIP =n3.DestIP associated
(2) T is a bijectivemappingfromN to T, whichmaps
with(n2,n3),andtwoequalityconstraintsn3.DestIP =
eachnodeinN toahyper-alerttypeinT,
n5.SrcIP and n3.DestIP = n5.DestIP associated
with (n3, n5). These imply that n2.DestIP =
(3) there is an edge (n 1,n 2) in E if and only if T(n 1)
n5.SrcIP or n2.DestIP = n5.DestIP. In other
mayprepareforT(n 2),and
words, if a type SCAN NMAP TCP hyper-alertindirectly
(4) C is a mapping that maps each edge (n 1,n 2) in prepares for a type Rsh hyper-alert (through a type
E to a set of equality constraints associated with IMAP Authen Overflow hyper-alert), they must sat-
(T(n 1),T(n 2)). isfy one of these two equations. We obtain the same
equationsif we considernodesn2, n4, andn5 in Figure
4. In general, we can derive constraints for two hyper-
Example1 Consider the following set of alert types when one of themmayindirectlypreparefor
hyper-alert types: T={ICMP PING NMAP, the other. Informally, we call such a constraint an indi-
SCAN NMAP TCP, IMAP Authen Overflow, rectequalityconstraint. Theseconstraintscanbeusedto
FTP Glob Expansion, Rsh, studywhethertwohyper-alertsintwodifferentcorrelationgraphscouldbeindirectlyrelated. Thisinturnallowsus S(T 0.a i)areequalto T 0.a i, since eachadditionis based
tofilteroutincorrectlyhypothesizedattacks. onaconjunctT j−1.a = T j.b,whereT j−1.aisalreadyin
Indirectequalityconstraintscanbeconsideredagener- S(T 0.a). Further because step 9 removes the attributes
alizationoftheequalityconstraintsspecifiedinDefinition of T j−1, only attributes of T
k+1
remain in S(T 0.a i),
3. In this paper, we combine the terminology and sim- i = 1,2,...,l. Thus,afterstep 9,eachS(T 0.a i)includes
ply refer to an indirect equality constraintas an equality all the attributes of T that are equal to T .a , where
k+1 0 i
constraintwhenitisnotnecessarytodistinguishbetween i = 1,2,...,l. Steps10to13thentransformtheseequal-
them. ity relationsinto a conjunctiveformulaec. Since the se-
To take advantage of the above observation, we must quenceofconstraintsC ,i =0,1,...,k,whereeachC is
i i
derive indirectequality constraints. Algorithm 1 (shown satisfiedbyh andh ,isusedintheaboveprocess,we
i i+1
in Figure 5) outlines an approach for generating the set can easily concludethat h (h) and h (h0) satisfy ec.
0 k+1
of indirect equality constraints between two hyper-alert Thus, if hindirectlypreparesforh0, theymustsatisfy at
types T and T0 where T mayindirectlyprepareforT0. leastoneequalityconstraintinC. 2
Intuitively, for each pair of hyper-alert types T and T0,
Algorithm1 identifies allpaths fromT to T0 in the type Note that Algorithm 1 is meant to illustrate the basic
graph, and computes an indirect equality constraint for idea behind computing indirect equality constraints. In
eachcombinationofequalityconstraintsbetweenconsec- practice,wecomputetheindirectequalityconstraintsfor
utivehyper-alerttypesalongthepath.Thebasicideaisto allpairsofhyper-alerttypessimultaneouslyaswetraverse
propagatetheequalityrelationshipsbetweenattributesof throughthepathsbetweenapairofhyper-alerttypes,and
hyper-alerttypes. Each indirectequality constraintis la- thus significantly reduce the required computation time.
beledwiththecorrespondingpaththatproducesthecon- Moreover,weneedtoperformthiscomputationonlyonce
straint. Thisinformationprovidesfurtherguidelineinhy- after we determine the set of known attacks. Thus, the
pothesizingmissedattacks. TheusefulnessofAlgorithm performanceofthisalgorithmwillnotimpacttheperfor-
1isguaranteedbyLemma1. manceofintrusionanalysisgreatly.
Lemma1 Consider a type graph TG and two hyper- Example2 ConsiderthetypegraphinFigure4andtwo
alerts h and h0, where Type(h) and Type(h0) are in hyper-alert types SCAN NMAP TCP (node n2) and Rsh
TG. AssumeAlgorithm1outputsasetC ofequalitycon- (node n5). Using Algorithm 1, we can easily compute
straintsforType(h)andType(h0). IfCisnon-emptyand theindirectequalityconstraintsforthem:{n2.DestIP =
hindirectlypreparesforh0,thenhandh0 mustsatisfyat n5.DestIP, n2.DestIP = n5.SrcIP}. Both indirect
leastoneequalityconstraintinC. equality constraints are labeled with the following two
paths: hSCAN NMAP TCP, IMAP Authen Overflow,
PROOF. AccordingtoDefinition2, ifhindirectlypre- RshiandhSCAN NMAP TCP,FTP Glob Expansion,
paresforh0, theremustexists a sequenceof hyper-alerts Rshi. Moreover,we canderivethesets ofequalitycon-
h 1, ..., h k, wherek > 0, such that hpreparesforh 1, h
i
straintsforallpairsofhyper-alerttypesinFigure4where
preparesforh i+1fori=1,...,k−1,andh kpreparesfor oneofthepairmay(indirectly)preparefortheother. Ta-
h0. Thus, we have Type(h)mayprepareforType(h 1), ble 1 shows the results. (To save space, we use node
Type(h i)mayprepareforType(h i+1)fori=1,...,k−1, names to represent the corresponding hyper-alerttypes.)
andType(h )mayprepareforType(h0). Followingthe Eachcellinthetablecontainstheequalityconstraintsfor
k
convention of Algorithm 1, we denote Type(h) as T 0, the hyper-alert types in the given row and the column,
Type(h ) as T , where i = 1,...,k, and Type(h0) as where the row may(indirectly)prepareforthe column.
i i
T .ItiseasytoseetheremustbeapathT ,T ,...,T
k+1 0 1 k+1
inthecorrespondingtypegraphTG.Forconvenience,we
The equality constraints derived for indirectly related
alsodenotehash ,andh0ash .
0 k+1 hyper-alerttypes can be used to improve the hypotheses
According to [20], if h preparesfor h , then h
i i+1 i of missed attacks. Given two correlation graphs G and
and h mustsatisfy atleast one equalityconstraintfor
i+1 G0 that may be integrated together, we can check each
(T i,T i+1). Fori=0,1,...,k,wedenotetheconstrainth
i pairofhyper-alertshandh0,wherehmayindirectlypre-
andh satisfyasC . AccordingtoFigure5,Algorithm
i+1 i pareforh0, and h and h0 belong to G and G0, respec-
1willprocessthepathT ,T ,...,T (instep2)andthe
0 1 k+1 tively. If h andh0 satisfy at least one equalityconstraint
combinationofequalityconstraintsC ,C ,...,C that
0 1 k+1 for (Type(h),Type(h0)), then we have consistent evi-
h ,h ,...,h satisfy(instep4).
0 1 k+1 dence that supports the hypothesis that h indirectlypre-
Now consider steps 5 to 9. For each S(T 0.a i), we
paresforh0 (through some missed attacks). Moreover,
can proveby inductionthatall attributesT .b addedinto
j for each equality constraint ec that h and h0 satisfy, weAlgorithm1.ComputationofIndirectEqualityConstraints
Input:AtypegraphTG,andtwohyper-alerttypesT andT0inTG,whereT mayindirectlyprepareforT0.
Output:AsetofequalityconstraintsforT andT0.
Method:
1.LetResult=∅.
2.ForeachpathT,T1,...,T k,T0fromT toT0inTG
3. DenoteT asT0,andT0asT k+1.
4. ForeachcombinationofconstraintsC1,C2,...,C k+1,whereC iisanequalityconstraintfor(T i−1,T i)
5. LetS(T0.a i)={T0.a i},whereT0.a i,i=1,2,...,l,arealltheattributesofT0thatappearinC1.
6. Forj =1tok+1
7. ForeachconjunctT j−1.a=T j.binC
j
8. ForeachS(T0.a i)thatcontainsT j−1.a,letS(T0.a i)=S(T0.a i)∪{T j.b}.
9. RemovevariablesofT j−1fromeachS(T0.a i),i=1,2,...,l.
10. Lettemp=∅.
11. Foreachnon-emptyS(T0.a i)andeachT k+1.binS(T0.a i)
12. Lettemp=temp∪{T0.a
i
=T k+1.b}.
13. Letecbetheconjunctionofallelementsintemp.
14. IfecisinResultthen
15. LetLabel(ec)=Label(ec)∪{hT,T1,...,T k,T0 i}
16. elseLetLabel(ec)={hT,T1,...,T k,T0i},andResult=Result∪{ec}.
17.ReturnResult.
Figure5.Algorithmtocomputeindirectequalityconstraintsfortwohyper-alerttypes
Table1.Equalityconstraintsforhyper-alerttypesinFigure4whereonemay(indirectly)preparefortheother.
n1 n2 n3 n4 n5 n6
n1 / {n1.DestIP=n2.DestIP} {n1.DestIP=n3.DestIP} {n1.DestIP=n4.DestIP} {n1.DestIP=n5.DestIP, {n1.DestIP=n6.DestIP,
n1.DestIP=n5.SrcIP} n1.DestIP=n6.SrcIP}
n2 / / {n2.DestIP=n3.DestIP} {n2.DestIP=n4.DestIP} {n2.DestIP=n5.DestIP, {n2.DestIP=n6.DestIP,
n2.DestIP=n5.SrcIP} n2.DestIP=n6.SrcIP}
n3 / / / / {n3.DestIP=n5.DestIP, {n3.DestIP=n6.DestIP,
n3.DestIP=n5.SrcIP} n3.DestIP=n6.SrcIP}
n4 / / / / {n4.DestIP=n5.DestIP, {n4.DestIP=n6.DestIP,
n4.DestIP=n5.SrcIP} n4.DestIP=n6.SrcIP}
n5 / / / / / {n5.SrcIP=n6.SrcIP,
n5.DestIP=n6.DestIP,
n5.SrcIP=n6.DestIP,
n5.DestIP=n6.SrcIP}
n6 / / / / / /
canaddthepathsinLabel(ec)intotheintegratedcorrela- alerttype. Assumethattherawauditdatasetconsistsof
tiongraph.NotethateachpathinLabel(ec)isintheform a sequence of audit records, and we can extract a set of
ofType(h),T 1,...,T k,Type(h0). Type(h)andType(h0) attributes from each audit record directly, or through in-
are then mergedwith h and h0, respectively, andthe rest ference. For example, we may extract the source IP ad-
of the path is added as a virtual path (i.e., virtual nodes dressfromatcpdumprecorddirectly,orinferthetypeof
andedges)fromhtoh0. service using the port and payload information. For the
sakeofpresentation,wecallsuchattributesobtainedfrom
3.4.ValidatingthroughRawAuditData the raw audit data auditattributes. Given a set A of au-
ditattributesandahyper-alerttypeT,afilteringcondition
Thehypothesizedattackscanbefurthervalidatedusing
forT w.r.t.Aisalogicalformulainvolvingauditattribute
rawauditdata. Forexample,wemayhypothesizethereis
namesinA, whichevaluatestoTrueorFalseiftheaudit
avariationofFTP Glob Expansionattackbetweena
attribute names are replaced with specific values. Intu-
SCAN NMAP TCPalertandaRshalert.However,ifthere
itively,afilteringconditionforT w.r.t.AmustbeTrueif
isnoftpactivityrelatedtothevictimhostbetweenthese
anattackcorrespondingtoT oritsvariationsindeedhap-
two alerts, we can easily concludethat our hypothesisis
pen.
incorrect. Bydoingsowecanfurthernarrowthehypoth-
Using filtering conditions is indeed straightforward.
esizedattacksdowntomeaningfulones.
Whenwehypothesizeasequenceofmissedattacksbased
To take advantage of this observation, we extend our ontwohyper-alertshandh0,weknowthatallthetimes-
modeltoassociatea“filteringcondition”witheachhyper-3.5.ConsolidatingHypothesizedAttacks
ICMP_PING_NMAP1
In the earlier discussion, we focused on hypothesiz-
SCAN_NMAP_TCP2
ing and reasoning about missed attacks. However, this
IMAP_Authen_Overflow5 method does not consider the possibility that the same
hypothesized attack could be related to multiple hyper-
Rsh3 alertsindifferentcorrelationgraphs.Asaresult,theinte-
grated correlationgraphwith hypothesizedattackscould
Mstream_Zombie4
beoverlycomplex. Inparticular,therecouldbemultiple
hypothesizedattacksforonemissed attack. Thoughitis
Figure 6. Integration of CG and CG after re-
1 2 possible that the same hypothesizedattacks are repeated
finementwithrawauditdata
multipletimes,havingtoomanyuncertaindetailsreduces
theusabilityoftheintegratedcorrelationgraph.
Todealwiththeaboveproblem,weconsolidatethehy-
tamps of the hypothesized attacks are between those of pothesizedattacksbasedontheirtypesandtheirinferred
h and h0. Thus, to validate a hypothesized attack, we attributevalues. Thegeneralideaistomergethehypoth-
cansearchthroughtherawauditrecordsduringtheafore- esizedattacks(andthusreducethecomplexityoftheinte-
mentioned time period, and evaluate the filtering condi- gratedcorrelationgraph)aslongasitispossiblethatthe
tion for the hypothesized attack using the values of the hypothesizedattackstobemergedarethesameattack. In
auditattributesextractedfromeachraw auditrecord. To otherwords,weaggregatethesametypeofhypothesized
continue the earlier example, we may associate a fil- attacksiftheirinferableattributevaluesareconsistent.
tering condition protocol=ftp with the hyper-alert type The attribute values of a hypothesized attack
FTP Glob Expansion. If there is no ftp traffic be- can be inferred from the hyper-alerts that lead
tweenthehyper-alertsSCAN NMAP TCP2andRsh3,this to this hypothesis. For example, if we hypoth-
conditionwillevaluateto False forall auditrecords,and esize that an IMAP Authen Overflow attack
wecanconcludethatnoftpbasedattackismissedbythe after a SCAN NMAP TCP alert and before a Rsh
IDSs. Asaresult,theintegratedcorrelationgraphinFig- alert such that SCAN NMAP TCP prepares for
ure3canberefinedtotheoneinFigure6. IMAP Authen Overflow, which then prepares for
Alimitationofusingfilteringconditionsisthathuman Rsh, thenfromTable 1we knowthatSCAN NMAP TCP
users must specify the conditions associated with each and IMAP Authen Overflow have the same destina-
hyper-alert type. It has at least two implications. First, tion IP address, and the destination IP address involved
itcouldbetimeconsumingtospecifysuchconditionsfor in IMAP Authen Overflow is the same as either
everyknownattack.Second,humanusersmaymakemis- the source or the destination IP address in Rsh. In
takes during the specification of filtering conditions. In general, we can use the equality constraints between the
particular, a filtering condition could be too specific to actual alerts and the hypothesized attacks to infer the
capturetheinvariantamongthevariationsofaknownat- possible attribute values of these attacks. As a special
tack,ortoogeneraltofilteroutenoughincorrecthypothe- attribute, we estimate the timestamp of a hypothesized
ses. Nevertheless,weobservethatanyfilteringcondition attack with a possible range. If an attack T is hypoth-
mayhelpreduceincorrectlyhypothesizedattacks,evenif esized with two actual alerts h and h0, where h occurs
itisverygeneral. Inourexperiments,we simplyusethe before h0, then the possible range of T’s timestamp is
protocolsoverwhichtheattacksarecarriedoutasfiltering (h.end time,h0.begin time).
conditions.Itisinterestingtostudyhowtogetthe“right” Toreducethenumberofhypothesizedattacksandmake
waytospecifyfilteringconditions.Weconsiderthisprob- the integrated correlation graph easy to understand, we
lemoutsideofthescopeofthispaper;wewillinvestigate take an aggressive approach. Specifically, we aggregate
itinourfuturework. twohypothesizedattackstogetherifthey(1)belongtothe
Anotherissue is the executioncost. To filter outa hy- sametype,(2)sharethesamevaluesontheircommonin-
pothesizedattackwithafilteringcondition,wehavetoex- ferable attributes, and (3) the ranges of their timestamps
amineeveryauditrecordduringthe periodoftime when overlap. An example of consolidation is what we per-
the attack couldhave happened. Thoughthere are many formedinourexperiments,whichconsolidatedabout300
waystooptimizethefilteringprocess(e.g.,indexing,con- hypothesizedattacksinto16.Inthefollowing,weoutline
currentexamination),thecostisnotnegligible,especially theapproachtoconsolidatinghypothesizedattacks.
when the time period is large. Thus, filtering conditions The consolidation process is performed in three steps.
are more suitable for off-line analysis such as forensic First,wegettheinferableattributevaluesforallhypothe-
analysis. sized attacks. Second, we partition the hypothesized at-tacks into groups such that all hypothesized attacks in
the same group have the same hyper-alert type, their at- FTP_Syst67243 Sadmind_Ping67343
tributevaluesdonothaveconflictvalues(i.e., iftwo hy-
pothesized attacks have inferable values on the same at- (a)CG
a
tribute, these two valuesshouldbe the same), and possi-
blerangesoftheirtimestampsoverlap.Wethenaggregate
eachgroupintoonehypothesizedattack.Third,wemerge
Rsh67558
virtual edges between the same pair of (aggregated) hy-
Email_Almail_Overflow67529 Mstream_Zombie67554
pothesizedattacks. Theresultingcorrelationgraphisthe Rsh67559
Email_Almail_Overflow67304 Rsh67560
finalintegratedcorrelationgraph.
Rsh67553
Among the three steps, the only non-trivialstep is the
inferenceofattributevaluesforhypothesizedattacks. We Rsh67542
achievethisbyrevisingAlgorithm1.InSteps5o9,inad- Rsh67549 Mstream_Zombie67776
Rsh67550
ditiontomaintainingthesetsS(T 0.a i)onlyforattributes
Rsh67540 Mstream_Zombie67767
of T 0, we construct such sets for all attributes of each Stream_DoS67773
Rsh67543 Mstream_Zombie67537
hyper-alerttypeT thatappearintheequalityconstraint
j−1
Rsh67545
C j. As a result, for each combination of equality con-
Rsh67546
Mstream_Zombie67777
straintsmentionedinStep 4andeachT , j = 1,2,...,k,
j Rsh67547
we can get an equalityconstraintfor T and each T , de-
j Rsh67562
notedec , andanotherequalityconstraintforT andT0,
j j Rsh67535
denotedec0. Givena typeT hyper-alerth anda typeT0
j Rsh67536 Mstream_Zombie67563
hyper-alert h0, if T, T , ..., T , T0 are the hypothesized
1 k Rsh67538
path that leads to h indirectlypreparingforh0 and C 1, Rsh67539
C , ..., C are the correspondingsequenceof equality
2 k+1
constraints,thenforeachhypothesizedattackT ,T must
satisfybothec andec0.
Thus,wecaninferthej attrj
ibutes
(b)CG
b
j j
involvedinec andec0 usinghandh0. Tokeepthisinfor-
j j
mation,eachT shouldmaintainec andec0 w.r.t.T and Figure 7. Two correlation graphs constructed
j j j
T0. fromLLDOS1.0insidetraffic
We shall point out that each hypothesized attack may
correspondto multiple actual attacks in the consolidated
correlationgraph. In other words, each hypothesizedat-
Ourcurrentimplementationisstillsemi-automatic.Our
tack in an integrated correlation graph is indeed a place
prototypecan automaticallydecidewhat hyper-alertcor-
holderforoneorseveralpossibleattacks.
relation graphsto integrate, hypothesizepossibly missed
attacks, and consolidate the hypothesizedattacks. How-
4. Experimental Results
ever,thevalidationofhypothesizedattackswithrawaudit
To examine the effectiveness of the proposed tech- data still has to be handled semi-manually. Specifically,
niques, we performed a series of experiments using one weuseEthereal[3]toextracttheprotocolinformationfor
ofthe 2000DARPA intrusiondetectionscenariospecific each packet, and then validate the hypothesized attacks
datasets, LLDOS1.0[15]. LLDOS1.0containsaseries accordingly. We are currently refining our implementa-
ofattacksinwhichanattackerprobed,broke-in,installed tionsothatallstepscanbeautomated.
thecomponentsnecessarytolauncha DistributedDenial In our experiments, we use a simple clustering corre-
ofService(DDOS)attack,andactuallylaunchedaDDOS lationmethod. Thatis, we clusteralertstogetheraslong
attack against an off-site server. The network audit data as they involve the same destination IP address. Since
werecollectedinboththeDMZandtheinsidepartsofthe ourgoalistoexaminetheeffectivenessoftheintegration
evaluation network. We used RealSecure Network Sen- techniques, we believe this is acceptable for our experi-
sor 6.0 [11]as the IDS sensor to generatealerts, and the ments. Inpractice,moresophisticatedclusteringcorrela-
NCSU Intrusion Alert Correlator [18] to correlate these tion methods (e.g., those proposed in [27]) are certainly
alerts into correlation graphs. To validate the hypothe- neededforbetterperformance.
sizedattacksusingrawauditdata,weusedEthereal[3],a To test the ability of our techniques to hypothe-
networkprotocolanalyzer,toextractinformationfromthe size and reason about missed attacks, we dropped
raw tcpdumpfile (i.e., the networkaudit data). We used all Sadmind Amslverify OverflowalertsthatRe-
Graphviz[2]tovisualizecorrelationgraphs. alSecure Network Sensor detected in LLDOS1.0. As aresult,theattackscenariosthattheIntrusionAlertCorre- alerts. As a slight difference, FTP Put are hypothe-
lator outputbeforedroppingthese alertsare all splitinto sized during both integration processes, but all hypothe-
multipleparts, some ofwhichbecomeindividual,uncor- sizedFTP Putattacksareinvalidatedlaterusingrawau-
related alerts. Figure 7 shows two of these correlation ditdata.Inotherwords,wefindnoftpactivitiesinvolving
graphsconstructedfromtheinsidetrafficinLLDOS1.0. thecorrespondinghostduringthetimeframewhenthehy-
Now let us focus on the correlation graphs in Figure pothesizedattacksmighthappen.Figure9showstheinte-
7. As mentioned earlier, we cluster alerts together if gratedcorrelationgraphafterthehypothesizedattacksare
they share the same destination IP address. Since the consolidated.Thehypothesizedattacksareshowningray,
destinationIPaddressesofbothSadmind Ping67343 andarelabeledbythecorrespondinghyper-alerttypefol-
(in Figure 7(a)) and Rsh67553 (in Figure 7(b)) are lowedbyanIDtodistinguishbetweendifferentinstances
172.16.112.50, they belong to the same cluster. We in- ofthesametypeofattacks.
tegrate two correlation graphs as long as they both have Nowletusexaminetheintegratedcorrelationgraphin
alerts in the same cluster. Thus, Figures 7(a) and 7(b) Figure 9. According to the description of the data sets
shouldbeintegratedtogether. [15],thethreeSadmind Amslverify Overflowat-
WeconsideralltypesofalertsgeneratedbytheRealSe- tacks and theprepare-forrelationsbetween these attacks
cure Network Sensor 6.0 in our type graph. The speci- and the other alerts are all hypothesizedcorrectly. How-
fication of the correspondinghyper-alert types are given ever, the FTP Put and HTTP Shells attacks are hy-
in Appendix A, and the type graph is given in Figure 8. pothesizedincorrectly.Inaddition,thegrayRshnodesin
Forspacereasons,we didnotputtheisolatednodes(the Figure9resultfromthedifferentcombinationsofequality
nodeswhichdo nothave edgesconnectingto them)into constraintsbetweenhyper-alerttypes(Theirattributeval-
thetypegraph.Basedonthetypegraph,wecaneasilyhy- ueswereinferredthroughexistingalerts,andtheycannot
pothesize that variationsof FTP Syst, HTTP Shells, be furtherconsolidatedwith other alerts or hypothesized
and Sadmind Amslverify Overflow could have attacks. In our future work, we may look for a way to
been missed by the IDS. For example, there could be furtherreducethem).
variations of Sadmind Amslverify Overflow be- We also performed the experiments using
tween Sadmind Ping and any later Rsh alert. By the DMZ data set in LLDOS 1.0. Similar to
reasoning about the hypothesized attacks using equal- the inside data set, we deliberately dropped all
ity constraints, we rule out some of these hypothesized Sadmind Amslverify Overflow alerts from those
attacks. For example, the destination IP address of generatedbyRealSecure NetworkSensor6.0. Usingthe
Sadmind Ping67343 is 172.16.112.50, which is dif- type graph in Figure 8, we generated three integrated
ferentfromeitherthesourceorthedestinationIPaddress correlation graphs in Figure 10, in which hypothesized
of Rsh67543. Thus, Sadmind Ping67343 cannot attacks are shown in gray. Based on the reasoning of
indirectlyprepareforRsh67543 through a variation of thehypothesizedattacks, weknowthedestinationIPad-
Sadmind Amslverify Overflow. dresses of Sadmind Amslverify Overflow4,
The hypothesized attacks are further validated using Sadmind Amslverify Overflow5 and
the raw audit data. In our experiments, we use the Sadmind Amslverify Overflow6 are
inferred attribute values and the protocol that carries 172.16.115.20, 172.16.112.10 and 172.16.112.50,
the corresponding attack as the filtering condition for respectively. Similarly, the destination IP address
each hyper-alert type. For example, the filtering con- of HTTP Shells2 is 172.16.112.50. Accord-
dition for (variations of) FTP Put is protocol = ftp ing to the description of the data sets [15], the
plus all the inferable attributes. All the hypothesized Sadmind Amslverify Overflow attacks are
attacks are then checked using the audit records be- all hypothesized correctly, while the HTTP Shells
tween the hyper-alertsthat result in the hypothesizedat- attack is hypothesized incorrectly. These experiment
tacks. For example, we search all the IP packets be- results(includingLLDOS1.0insideandDMZdatasets)
tweenSadmind Ping67343andRsh67560forRPC indicatethatthoughtheproposedtechniquescanidentify
packetsin orderto validatea hypothesized(variationof) missedattacks,theyarestillnotperfect.Nevertheless,the
Sadmind Amslverify Overflowattack(whichisa proposedtechniqueshavealreadyexceededthelimitation
RPCbasedattack). ofIDSs.
We continue the above process to integrate the re- The experimental evaluation reported in this paper is
sulting correlation graph with additional ones generated still preliminary, though they have demonstrated the po-
by the Intrusion Alert Correlator. We are able to fur- tentialoftheproposedtechniques. Tofurtherunderstand
ther integrate hyper-alerts Sadmind Ping67286 and thecapabilityofthesetechniques,amoredetailed,quan-
Sadmind Ping67341, which are both uncorrelated titativeevaluationisrequired.Wewillperformsucheval-{n17.DestIP=n6.DestIP
^n17.DestPort=n6.DestPort}
{n17.DestIP=n9.DestIP
^n17.DestPort=n9.DestPort}
{n17.DestIP=n11.DestIP
^n17.DestPort=n11.DestPort}
{n17.DestIP=n10.DestIP
^n17.DestPort=n10.DestPort}
{n17.DestIP=n18.DestIP {n10.SrcIP=n11.SrcIP
n17:Port_Scan ^n17.DestPort=n18.DestPort} ^n10.DestIP=n11.DestIP}
n10:Email_Ehlo n11:Email_Turn
{n20.DestIP=n10.DestIP ^n20.DestPort=n10.DestPort}
{n17.DestIP=n19.DestIP
^n17.DestPort=n19.DestPort}
n18:FTP_Pass
{n20.DestIP=n18.DestIP
^n20.DestPort=n18.DestPort}
{n9.DestIP=n7.SrcIP,
{n17.DestIP=n5.DestIP n9.DestIP=n7.DestIP}
^n17.DestPort=n5.DestPort}
^n2{ 0n .2 D0 e.D ste Ps otI rP t== nn 11 99 .. DD ee ss tt PI oP rt} n19:FTP_User n{ 5n .5 D.D ese ts It PI =P n= 7n .7 D.S er sc tII PP },
{n20.DestIP=n11.DestIP {n9.DestIP=n6.DestIP}
^n20.DestPort=n11.DestPort} n9:Email_Debug
n20:UDP_Port_Scan ^n1{ 7n .1 D7 e.D ste Ps otI rP t== nn 11 22 .. DD ee ss tt PI oP rt} ^n2{ 0n .2 D0 e.D ste Ps otI rP t== nn 99 .. DD ee ss tt PI oP rt} n{ 9n .9 D.D ese ts It PI =P n= 8n .8 D.S er sc tII PP },
^n2{ 0n .2 D0 e.D ste Ps otI rP t== nn 55 .. DD ee ss tt PI oP rt} n5:Email_Almail_Overflow {n5.DestIP=n6.DestIP}
{n20.DestIP=n6.DestIP
^n20.DestPort=n6.DestPort} {n3.DestIP=n6.DestIP} n6:FTP_Put
{n17.DestIP=n1.DestIP {n6.DestIP=n7.SrcIP,
^n17.DestPort=n1.DestPort} n6.DestIP=n7.DestIP}
{n12.DestIP=n3.DestIP} {n2.DestIP=n6.DestIP}
{n20.DestIP=n12.DestIP
^n20.DestPort=n12.DestPort} n12:FTP_Syst {n12.DestIP=n4.DestIP} n4:Sadmind_Ping {n4.DestIP=n3.DestIP} {n14.DestIP=n6.DestIP}
{n1.DestIP=n4.DestIP}
^n2{ 0n .2 D0 e.D ste Ps otI rP t== nn 11 .. DD ee ss tt PI oP
rt}
{n12.DestIP=n2.DestIP} n3:Sadmind_Amslverify_Overflow n{ 5n .5 D.D ese ts It PI =P n= 8n .8 D.S er sc tII PP }, n{ 3n .3 D.D ese ts It PI =P n= 7n .7 D.S er sc tII PP },
n1:DNS_HInfo {n1.DestIP=n3.DestIP}
{n1.DestIP=n2.DestIP}
n2:HTTP_Shells
n{ 3n .3 D.D ese ts It PI =P n= 8n .8 D.S er sc tII PP },
n8:Rsh
nn n{ 8n 8 8 .D8 . .S D. eS r e scr s tIc ItP PI IP P= == =n nn 7 n 77 . 7 .D D. .S Se er rs sc ct tI I I IP P P P, ,,
} n7:Mstream_Zombie { } n16:Stream_DoS
{n2.DestIP=n8.SrcIP,
n2.DestIP=n8.DestIP}
{n2.DestIP=n7.SrcIP,
n2.DestIP=n7.DestIP}
{n14.DestIP=n8.SrcIP,
n14.DestIP=n8.DestIP}
{n14.DestIP=n7.SrcIP,
n14.DestIP=n7.DestIP}
n14:HTTP_Cisco_Catalyst_Exec
{n13.SrcIP=n7.SrcIP,
n13.SrcIP=n7.DestIP}
n13:HTTP_ActiveX
{n15.SrcIP=n7.SrcIP,
n15:HTTP_Java n15.SrcIP=n7.DestIP}
Figure8.ThetypegraphusedinourexperimentsEmail_Almail_Overflow67529 Rsh67560
Email_Almail_Overflow67304 Rsh67558
Rsh67559
Rsh67553
HTTP_Shells1
FTP_Syst67243 FTP_Put7
Sadmind_Ping67343 Sadmind_Amslverify_Overflow2 Mstream_Zombie67554
Rsh8
Rsh3
Rsh5
Rsh9 Mstream_Zombie67776
Rsh10
Rsh67542
Rsh14
Rsh13
Rsh15
Rsh67540
Sadmind_Ping67286 Sadmind_Amslverify_Overflow11 Rsh67543 Mstream_Zombie67767
Stream_DoS67773
Rsh67545 Mstream_Zombie67537
Rsh67546
Rsh67547
Mstream_Zombie67777
Rsh67549
Rsh67550
Rsh17
Rsh16 Mstream_Zombie67563
Rsh67562
Sadmind_Ping67341 Sadmind_Amslverify_Overflow19
Rsh67535
Rsh67536
Rsh67538
Rsh67539
Rsh23
Figure9.TheintegratedcorrelationgraphconstructedfromLLDOS1.0insidetraffic
uationsinourfutureresearch. vices such as IDSs and firewalls with the importance of
system assets [21]. The alert clustering techniques in
5. RelatedWork [13,14] use conceptual clustering and generalization hi-
erarchy to aggregate alerts into clusters. An interesting
Ourworkinthispaperiscloselyrelatedtotherecentre- approachwasproposedrecentlytoapplystatisticalteststo
sultsinintrusionalertcorrelation. Inparticular,ourtech- identifycausalrelationshipsamongaggregatedalerts[22].
niquesintegratethe causalcorrelationmethodsin [5,19] Alertcorrelationmay also beperformedby matchingat-
andtheclusteringcorrelationmethodsin[4,7,25,27]. In tackscenariosspecifiedbyattacklanguages.Examplesof
additiontocorrelatingintrusionalerts,ourtechniquesal- suchlanguagesincludeSTATL[10],LAMBDA[6],JIG-
low to further hypothesizeand reason aboutattackspos- SAW [26] and Chronicles [16]. We consider these tech-
siblymissedbytheIDSs,andthuscanpotentiallyexceed niquesascomplementarytoours.
thelimitationofIDSs. Ourapproachisalsorelatedtotechniquesforstaticvul-
Thereareotheralertcorrelationtechniques. TheTivoli nerabilityanalysis(e.g.,[1,12,23,24]). Inparticular,the
approach correlates alerts based on the observation that methods in [1,24] also use a model of exploits (possi-
some alerts usually occur in sequence [9]. M2D2 corre- bleattacks)intermsoftheirpre-conditions(prerequisites)
lates alerts by fusing information from multiple sources and post-conditions(consequences)to constructpossible
besidesintrusionalerts, suchas the characteristicsof the sequencesofattacks. However,ourmethodaimstocon-
monitoredsystemsandthevulnerabilityinformation[17], structhigh-levelattackscenariosfromlow-levelintrusion
thushavingapotentialtoresultinbetterresultsthanthose alerts and reason about attacks possibly missed by the
simply looking at intrusion alerts. The mission-impact- IDSs, while the vulnerability analysis techniques are in-
based approachcorrelatesalerts raised by INFOSEC de-Rsh66331
Rsh66332
Rsh66333
Rsh66335
Sadmind_Ping66048 Sadmind_Amslverify_Overflow4
Rsh66336 Rsh66348
Rsh66338 Rsh66350
Sadmind_Ping66115 Sadmind_Amslverify_Overflow5
Rsh66341 Rsh66352
Rsh66351 Rsh66353
(a)IntegratedCorrelationGraphICG
a
(b)IntegratedCorrelationGraphICG
b
Sadmind_Ping66111 Sadmind_Amslverify_Overflow6 Rsh66345
FTP_Syst66006
HTTP_Shells2 Rsh66346
Email_Almail_Overflow66050
Rsh66347
Email_Almail_Overflow66320
Rsh66355
(c)IntegratedCorrelationGraphICG
c
Figure10.ExperimentalresultsusingtheDMZdatasetinLLDOS1.0
tended to understandpossible ways of combiningdiffer- known attacks used together with unknown attacks to
ent attacks. In our method, the investigation of the ac- identify those unknownones. These techniques will fail
tualalertsandrawauditdatapresentsmoreopportunities ifallattacksinvolvedinasequenceattacksareunknown.
that cannot be provided by static vulnerability analysis. Moreover,theeffectivenessofthesetechniquesfordiffer-
Thus, we believe that our techniques are more suitable entmixturesofknownandunknownattacksstillrequires
thanstaticvulnerabilityanalysiswhenrealintrusiondata furtherinvestigation.
isavailable. This paper is a starting point for improving intrusion
detectionthroughalertcorrelation.Inourfutureresearch,
6. ConclusionandFuture Work weplantocontinueourinvestigationinthisdirection. In
particular, we will develop additionaltechniquesto vali-
Inthispaper,wepresentedaseriesoftechniquestocon- date and reason about hypothesized attacks and perform
struct high-level attack scenarios even if the underlying a morethorough,quantitativeevaluationofthe proposed
IDSs miss critical attacks. Our approach integrates two techniques.
complementary intrusion alert correlation methods: (1)
correlation based on similarity between alert attributes, References
and (2) correlation based on prerequisites and conse-
quencesof attacks. Moreover,our approachuses the in- [1] P. Ammann, D. Wijesekera, and S. Kaushik. Scalable,
trinsic relationships between possibly related attacks to graph-based network vulnerability analysis. InProceed-
hypothesizemissedattacks.Toreasonabouthypothesized ingsofthe9thACMConferenceonComputerandCom-
municationsSecurity,pages217–224,November2002.
attacks, we developedtechniquesto compute constraints
[2] AT&TResearchLabs.Graphviz-opensourcegraphlay-
that indirectly related attacks must satisfy and proposed
outanddrawingsoftware. http://www.research.
to further validate hypothesized attacks through raw au-
att.com/sw/tools/graphviz/.
ditdata. Finally,wepresentedatechniquetoconsolidate
[3] G. Combs. The ethereal network analyzer. http://
hypothesized attacks to generate concise representations
www.ethereal.com.
ofconstructedattackscenarios. Ourexperimentalresults
[4] F.Cuppens.Managingalertsinamulti-intrusiondetection
demonstratedthepotentialofthesetechniques.
environment.InProceedingsofthe17thAnnualComputer
The proposed techniques can provide meaningful
SecurityApplicationsConference,December2001.
“guesses” of attacks possibly missed by the IDSs, and
[5] F. Cuppens and A. Miege. Alert correlation in a coop-
thussupplygoodstartingpointsaswellassupportingev- erativeintrusiondetectionframework. InProceedingsof
idences to facilitate investigationof unknownintrusions. the2002IEEESymposiumonSecurityandPrivacy,May
A limitation of these techniques is that they depend on 2002.[6] F. Cuppens and R. Ortalo. LAMBDA: A language to Computer and Communications Security, October 2003.
modeladatabasefordetectionofattacks. InProc.ofRe- Toappear.
centAdvancesinIntrusionDetection(RAID2000),pages [21] P. Porras, M. Fong, and A. Valdes. A mission-impact-
197–216,September2000. based approach to INFOSEC alarm correlation. In Pro-
[7] O.DainandR.Cunningham. Buildingscenarios froma ceedings of the 5th International Symposium on Recent
heterogeneous alert stream. In Proceedings of the 2001 AdvancesinIntrusionDetection(RAID2002),pages95–
IEEE Workshop on Information Assurance and Security, 114,2002.
pages231–235,June2001. [22] X.QinandW.Lee.Statisticalcausalityanalysisofinfosec
[8] O. Dain and R. Cunningham. Fusing a heterogeneous alertdata. InProceedings ofThe6thInternational Sym-
alert stream into scenarios. In Proceedings of the 2001 posiumonRecentAdvancesinIntrusionDetection(RAID
ACMWorkshoponDataMiningforSecurityApplications, 2003),Pittsburgh,PA,Sept.2003.
pages1–13,Nov.2001. [23] C.RamakrishnanandR.Sekar. Model-basedanalysisof
[9] H. Debar and A. Wespi. Aggregation and correlation of configurationvulnerabilities. Journal ofComputerSecu-
intrusion-detectionalerts.InRecentAdvancesinIntrusion rity,10(1/2):189–209,2002.
Detection,LNCS2212,pages85–103,2001. [24] O.Sheyner,J.Haines,S.Jha,R.Lippmann,andJ.Wing.
[10] S.Eckmann,G.Vigna,andR.Kemmerer.STATL:AnAt- Automated generation and analysis of attack graphs. In
tackLanguageforState-basedIntrusionDetection. Jour- ProceedingsofIEEESymposiumonSecurityandPrivacy,
nalofComputerSecurity,10(1/2):71–104,2002. May2002.
[11] InternetSecuritySystems. RealSecureintrusiondetection [25] S.Staniford,J.Hoagland,andJ.McAlerney. Practicalau-
system. http://www.iss.net. tomateddetectionofstealthyportscans. JournalofCom-
[12] S. Jha, O. Sheyner, and J. Wing. Two formal analyses puterSecurity,10(1/2):105–136,2002.
of attack graphs. In Proceedings of the 15th Computer [26] S. Templeton and K. Levitt. A requires/provides model
SecurityFoundationWorkshop,June2002. for computer attacks. In Proceedings of New Security
[13] K.Julisch. Miningalarmclusterstoimprovealarmhan- ParadigmsWorkshop,pages31–38.ACMPress,Septem-
dlingefficiency. InProceedingsofthe17thAnnualCom- ber2000.
puter Security Applications Conference (ACSAC), pages [27] A.ValdesandK.Skinner. Probabilisticalertcorrelation.
12–21,December2001. InProceedingsofthe4thInternationalSymposiumonRe-
[14] K. Julisch and M. Dacier. Mining intrusion detection centAdvancesinIntrusionDetection(RAID2001),pages
alarmsforactionableknowledge. InThe8thACMInter- 54–68,2001.
national Conference on Knowledge Discovery and Data
Mining,July2002. A. The Hyper-alert Types
[15] MIT Lincoln Lab. 2000 DARPA intrusion
detection scenario specific datasets. http: In this appendix, we give more information about the
//www.ll.mit.edu/IST/ideval/data/2000/ hyper-alerttypes used in our examplesand experiments.
2000_data_index.html,2000. We present the implication relationships between pred-
[16] B. Morin and H. Debar. Correlation of intrusion symp-
icates in Table 2. Table 3 shows all hyper-alert types
toms: anapplicationofchronicles. InProceedingsofthe
usedinourexamples,andTable4describesallhyper-alert
6th International Conference on Recent Advances in In-
typesusedinourexperiments.InbothTables3and4,the
trusionDetection(RAID’03),September2003.
set of fact attributes for each hyper-alert type is {SrcIP,
[17] B.Morin, L.M´e, H.Debar, andM.Ducass´e. M2D2: A
formaldatamodelforIDSalertcorrelation. InProceed- SrcPort,DestIP,DestPort}.
ings of the 5th International Symposium on Recent Ad-
vances in Intrusion Detection (RAID 2002), pages 115–
137,2002.
[18] P. Ning and Y. Cui. Intrusion alert correlator (version Table 2. Implication relationships between the
0.2). http://discovery.csc.ncsu.edu/ predicates
software/correlator/ver0.2/iac.html,
Predicate ImpliedPredicate
2002.
ExistService(IP,Port) GainInformation(IP)
[19] P.Ning,Y.Cui,andD.S.Reeves.Constructingattacksce-
GainOSInfo(IP) GainInformation(IP)
nariosthroughcorrelationofintrusionalerts. InProceed-
GainOSInfo(IP) OSSolaris(IP)
ingsofthe9thACMConference onComputerandCom-
OSSolaris(IP) OSUNIX(IP)
municationsSecurity, pages245–254, Washington, D.C., GainSMTPInfo(SrcIP,DestIP) SMTPSupportTurn(SrcIP,DestIP)
November2002. GainAccess(IP) SystemCompromised(IP)
[20] P.NingandD.Xu. Learningattackstratagiesfromintru- SystemCompromised(IP) SystemAttack(IP)
sionalerts.InProceedingsofthe10thACMConferenceon ReadyForDDOSAttack(IP) ReadyForDDOSAttackTable3.Hyper-alerttypesusedintheexamples
Hyper-alertType Prerequisite Consequence
ICMP PINGNMAP ExistHost(DestIP)
SCANNMAPTCP ExistHost(DestIP) {ExistService(DestIP,DestPort)}
IMAPAuthen Overflow ExistService(DestIP,DestPort) {GainAccess(DestIP)}
∧VulnerableAuthenticate(DestIP)
FTPGlobExpansion ExistService(DestIP,DestPort) {GainAccess(DestIP)}
∧VulnerableFTPRequest(DestIP)
Rsh GainAccess(DestIP)∧GainAccess(SrcIP) {SystemCompromised(DestIP),
SystemCompromised(SrcIP)}
Mstream Zombie SystemCompromised(DestIP) {ReadyForDDOSAttack(DestIP),
∧SystemCompromised(SrcIP) ReadyForDDOSAttack(SrcIP)}
Table4.Hyper-alerttypesusedinourexperiments
Hyper-alertType Prerequisite Consequence
Admind
DNSHInfo ExistService(DestIP,DestPort) {GainOSInfo(DestIP)}
EmailAlmailOverflow ExistService(DestIP,DestPort) {GainAccess(DestIP)}
∧VulnerableAlMailPOP3Server(DestIP)
EmailDebug ExistService(DestIP,DestPort) {GainAccess(DestIP)}
∧SendMailInDebugMode(DestIP)
EmailEhlo ExistService(DestIP,DestPort) {GainSMTPInfo(SrcIP,DestIP)}
∧SMTPSupportEhlo(DestIP)
EmailTurn ExistService(DestIP,DestPort) {MailLeakage(DestIP)}
∧SMTPSupportTurn(SrcIP,DestIP)
FTPPass ExistService(DestIP,DestPort)
FTPPut ExistService(DestIP,DestPort) {SystemCompromised(DestIP)}
∧GainAccess(DestIP)
FTPSyst ExistService(DestIP,DestPort) {GainOSInfo(DestIP)}
FTPUser ExistService(DestIP,DestPort)
HTTPActiveX ActiveXEnabledBrowser(SrcIP) {SystemCompromised(SrcIP)}
HTTPCiscoCatalyst Exec CiscoCatalyst3500XL(DestIP) {GainAccess(DestIP)}
HTTPJava JavaEnabledBrowser(SrcIP) {SystemCompromised(SrcIP)}
HTTPShells VulnerableCGIBin(DestIP) {GainAccess(DestIP)}
∧OSUNIX(DestIP)
Mstream Zombie SystemCompromised(DestIP) {ReadyForDDOSAttack(SrcIP),
∧SystemCompromised(SrcIP) ReadyForDDOSAttack(DestIP)}
PortScan {ExistService(DestIP,DestPort)}
RIPAdd
RIPExpire
Rsh GainAccess(DestIP)∧GainAccess(SrcIP) {SystemCompromised(DestIP),
SystemCompromised(SrcIP)}
SadmindAmslverify Overflow VulnerableSadmind(DestIP) {GainAccess(DestIP)}
∧OSSolaris(DestIP)
SadmindPing OSSolaris(DestIP) {VulnerableSadmind(DestIP)}
SSHDetected
Stream DoS ReadyForDDOSAttack {DDOSAgainst(DestIP)}
TCPUrgentData {SystemAttacked(DestIP)}
TelnetEnvAll {SystemAttacked(DestIP)}
TelnetTerminaltype {GainTerminalType(DestIP)}
TelnetXdisplay {SystemAttacked(DestIP)}
UDPPortScan {ExistService(DestIP,DestPort)}