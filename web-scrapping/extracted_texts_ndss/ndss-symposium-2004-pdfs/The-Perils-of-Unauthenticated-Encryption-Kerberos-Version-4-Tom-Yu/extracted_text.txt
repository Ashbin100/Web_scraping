The Perils of Unauthenticated Encryption: Kerberos Version 4∗
Tom Yu Sam Hartman Kenneth Raeburn
Massachusetts Institute of Technology
Abstract vulnerabilities. Ongoing work on the specification of ver-
Version 4 of the widely deployed Kerberos authentica- sion5repairseventhoseflaws. Despitetheprogressmade
tion protocol encrypts essential information without ade- in updating the Kerberos protocol, version 4 remains in
quate authentication. We have implemented an efficient widespreaduse,andthatfactillustratesthatprotocolshave
chosen-plaintext attack that uses this design flaw to im- a longer life than their designers might anticipate.
personate arbitrary principals. Related flaws exist in ver- Kerberosversion4usesunauthenticatedencryptionfor
sion 5 of the protocol. We discuss the mistakes in the essential authentication information. This allows an at-
design of the protocol that contribute to these vulnerabil- tacker to forge credentials impersonating arbitrary prin-
ities, and how to avoid making them. We identify correc- cipals by using an adaptive chosen-plaintext attack as an
tivemeasurestakenintheproposedrevisionstoversion5, encryption oracle. We have successfully implemented a
which repair these flaws. startlingly efficient attack based on this oracle: O(n) or-
acle queries are needed to forge a credential ciphertext n
blocks long. The attack is sufficiently inexpensive that its
1. Introduction successful execution may go completely undetected.
The use of unauthenticated encryption is one of sev-
The dangers of unauthenticated encryption are well eral design errors in version 4. Other mistakes include
known [6, 7, 8, 13, 20, 22, 39]. Although most cryp- a failure to explicitly identify the role of encryption and
tographicattacksfocus onrecoveringaplaintextor akey, a failure to sufficiently abstract the encryption scheme.
a more powerful attack is to forge a ciphertext that de- Though RFC 1510 corrects some of the mistakes of ver-
crypts to a desired plaintext, particularly when attacking sion 4, it too has deficiencies. The MIT implementation’s
an authentication system. This sort of forgery is often use of identical keys between versions 4 and 5 allows
far more dangerous than a breach of confidentiality; it is a cross-protocol attack, which we describe later. Ongo-
far more useful to become someone than to merely know ing revisions to version 5 remedy the existing flaws in
what someone said once. RFC 1510, and implement current best practices in au-
Consideratransactioninahypotheticalbankingproto- thenticated encryption.
colinwhichAliceinstructsherbanktosend$100toBob. Protocol designers should clearly identify the role of
An eavesdropper Eve will probably not be that interested encryption in their protocols. The designers of Kerberos
in reading such a message. On the other hand, Eve will version4failedtoexplicitlyidentifyanimportantassump-
probably find it much more useful to modify the message tion: nonmalleability. The unauthenticated encryption
so that Alice appears to have instructed the bank to send used in version 4 constitutes a lack of nonmalleability,
$100toEve. EvenmoredevastatingisforEvetohavethe leading to the attack we describe. If a protocol requires
capabilitytoimpersonateAlice,sothatEveneednotmod- nonmalleable encryption, which is more likely than not,
ify an existing message that Alice sends. Authentication clearly state so in the specification, and ensure that the
is usually more important than confidentiality. encryption scheme actually achieves this requirement.
Kerberosversion4[28,37]hasacriticalauthentication Designers should sufficiently abstract the use of en-
vulnerability which allows an attacker to impersonate ar- cryption from the contents of the protocol messages, so
bitraryprincipals. Thisvulnerabilityresultsfrommultiple that the exact form and layout of the protocol messages
design errors. Additional flaws in MIT’s implementation do not compromise the efficacy of the encryption. The
of version 4 enable additional attacks. The current spec- designers of version 4 assumed that the message layout
ification of Kerberos version 5, Internet RFC 1510 [23], itself would enhance the security properties of the en-
fixes some flaws in version 4, though it too has some cryption scheme. The resulting confusion creates cross-
∗An unauthorized copy of an earlier version of this paper appeared dependencies between details of protocol layout and the
on full-disclosure@lists.netsys.com in March 2003. security of the encryption scheme, further enabling theattack that we describe. on top of Kerberos version 4.
One reason why our attack succeeds is because the Some researchers have performed formal analyses
encryption scheme in Kerberos version 4 is deterministic. [2, 3, 14] regarding the correctness and secrecy of Ker-
An attacker can use a predictable mapping from plaintext beros version 4, but they make assumptions (often im-
to ciphertext to assemble an efficient encryption oracle, plicit) about its use of encryption, and largely ignore
whichcanthenbeusedtoforgenewciphertexts. Kerberos possible vulnerabilities in the actual Kerberos encryption
version 5 thwarts the creation of an encryption oracle. scheme. Although others have noted shortcomings in the
Designers should ensure that attackers cannot use Kerberos encryption scheme [12, 38], none are quite as
ciphertext surgery to subvert message authentication serious as the vulnerabilities we have discovered. Lowe
schemes in a protocol. Though designers should not [27] demonstrates some related encryption-oracle attacks
allow an attacker to implement an encryption oracle at against several other protocols, but unlike Lowe’s attacks,
all, they should also ensure that an attacker cannot use ours involves the blockwise forgery of complete cipher-
an encryption oracle to attack the message authentication texts.
schemes. As we show later, encrypted plaintext check- Kerberos continues to evolve. RFC 1510 fixes some
sums, specified in RFC 1510, can be subverted. The of the flaws in version 4, and ongoing work in the IETF
proposed revisions to the specification of version 5 rem- to revise the specification of version 5 and its encryption
edy this flaw by improving the authentication scheme for schemes [34, 36] further repair cryptographic flaws. The
encrypted messages. strategies used in these revisions are similar to those pro-
Despite its known shortcomings, Kerberos version 4 posed in recent work [6] on the Secure Shell (SSH) pro-
remained in widespread use until the discovery of this tocol.
vulnerability. The inherent difficulties in deploying a se-
curity architecture appear to create resistance to change 3. Design shortcomings of Kerberos
unless a clear and present danger exists. Security pro-
tocols could therefore benefit from conservative design,
Kerberosversion4hassomeseriousshortcomingsinits
and users would also do well to evaluate whether appar-
abstract design principles, in addition to fatal problems in
entlytheoreticalvulnerabilitiesmaybeindicativeofmore
its concrete design choices. Some of the concrete design
serious problems.
choicesmayhaveseemedjustifiableatthetimetheywere
made, however, they are hardly excusable today.
2. Kerberos history DemilloandMerritt[17]adviseexplicitlystatingcryp-
tographic assumptions during the design of a protocol.
Kerberosisatrusted-third-partyauthenticationprotocol Abadi and Needham [1] echo this sentiment, pointing
basedontheNeedham-Schroedersymmetric-keyprotocol out some apparent confusion in the Kerberos protocol’s
[33],modifiedtousetimestamps[18]tomitigatereplayat- use of encryption. The designers of version 4 clearly
tacks. KerberosoriginatedinMIT’sProjectAthena,where did not make all their cryptographic assumptions explicit;
version4[28,37]wasdeployedforquitesometime. The amongotherthings,theyunwittinglyinheritedtheassump-
current specification of Kerberos version 5, RFC 1510 tion of nonmalleable cryptography from the underlying
[23], corrects many known flaws in version 4, and is un- Needham-Schroeder protocol.
dergoing standardization in the Internet Engineering Task Dolev, Dwork, and Naor [19] observe that the origi-
Force (IETF). Proposed revisions to version 5 [34, 36] nal Needham-Schroeder protocol implicitly requires non-
remedy vulnerabilities present in RFC 1510. malleable encryption. Roughly, nonmalleable encryption
Kerberos version 4 was widely deployed; the use of prevents an attacker, given a ciphertext, from producing
Kerberos version 4 as the authentication infrastructure of a different ciphertext whose plaintext is meaningfully re-
CMU’s Andrew File System (AFS) led to the widespread lated to the plaintext of the original ciphertext. This is
adoption of Kerberos at large universities and corpora- precisely the guarantee that Kerberos version 4 fails to
tions by virtue of their adoption of AFS. Although AFS provide, by inadequately authenticatingits messages. The
was commercialized by Transarc and IBM, release of an designers did not consider nonmalleability, probably be-
open-source version, OpenAFS, led to even wider adop- cause the concept was not well-developed then.
tion. Difficulties inherent in the design of the AFS proto- The specific design choices in version 4 are not much
coldiscouragedtheimplementationofKerberosversion5 better. The protocol uses the Data Encryption Standard
support in AFS. Our discovery of the chosen-plaintext at- (DES) [31], now known to have an insufficient key size,
tack on version 4 finally prompted rapid implementation in the nonstandard propagating cipher block chaining
ofversion5supportinAFS.Similarscenarioshavedoubt- (PCBC) mode. This cipher mode is slightly different
less occurred with other protocols which have been built from the more usual cipher block chaining (CBC) [30]mode. Although DES was the standard at the time, the contains information identifying the client A, the service
use of a non-standard mode of operation seems unwise, B, as well as a session key k . A ticket alone is not
ab
particularly in hindsight: PCBC has some odd properties, sufficient to authenticate to a service; proof of knowledge
suchasciphertextblockswapsbeingundetectablewithout of the session key is also required. The ticket, along with
additional integrity checking. the associated session key, constitute a credential.
Thedesigndocumentforversion4[28]implicitly(and
incorrectly) assumes that the error propagation properties 4.1. Kerberos protocol exchanges
of PCBC mode will cause ciphertext errors to scramble
the plaintext following the manipulated ciphertext, and There are two conceptual services embodied in the
even suggests that certain fields near the end of a ticket, KDC. One of these services is the authentication service
e.g.,principalnamesandtimestamps,beusedforintegrity (AS); the other is the ticket granting service (TGS). The
checking. While it is usually true that modification of a AS exchange is used to obtain credentials encrypted with
PCBC ciphertext propagates errors through the remainder the client’s long-term key k a, while the TGS exchange
of the decrypted plaintext, this assumption only holds for treats the TGS itself as a special service used for obtain-
random transmission errors. The willful manipulations ing additional credentials. The TGS enables a client to
of an attacker with an encryption oracle hardly constitute avoid typing a password for each credential obtained. A
randomtransmissionerrors. RelyingonPCBCmodeitself typicalKerberosloginsessionbeginswiththeclientusing
to ensure integrity against active attackers utterly fails. the AS exchange to obtain credentials for the TGS:1
The dependency between integrity and message layout
A→S : A,S
in Kerberos version 4 betrays a lack of sufficient abstrac-
tion between the encryption scheme and the rest of the S→A : {k ,S,{A,S,t ,k }k }k ,
as s as s a
protocol, leading to the sort of subtle vulnerabilities that
we have discovered. Bellovin and Merritt [12] empha- where t s is the KDC’s timestamp and {M}k x denotes M
size the importance of applying this separation to future encryptedwiththekeyk x. Aistheclient’sname, andS is
revisions to the Kerberos protocol. The security of the thenameoftheTGS.Forclarity,weomitsomeadditional
encryption should not depend on the details of the packet information included in the tickets, such as lifetimes and
layout of the protocol. network addresses. The ticket is
The security assumptions of version 4 do not include
{A,S,t ,k }k .
anattackerwithanencryptionoracle. Manysecurityanal- s as s
yses applied to version 4 assume an attacker capable of
k is the session key shared between the client A and the
as
interceptingmessages, butfailtoincludechosen-plaintext
TGS.
attacks. VoydockandKent[40]identifyachosen-plaintext
The client may then use this ticket-granting ticket
attack against CBC mode with a fixed initialization vec-
(TGT) to obtain credentials for other services. The TGS
tor (IV), of which the designers of version 4 appear to
exchange for the client A obtaining credentials for the
havebeenunaware. Thedesignersofversion5[24]came
service B is
very close to identifying the attack we describe, noting
the possible consequences of chosen-plaintext attacks in
A→S : {A,S,t ,k }k ,{A,t }k ,B
s as s a as
version 4. These concerns were dismissed with the argu-
S→A : {k ,B,{A,B,t ,k }k }k ,
mentthatinversion4,thefirstciphertextblockcontainsa ab s ab b as
random session key, frustrating a chosen-plaintext attack.
where
This is true for the KDC’s encrypted reply to the client
{A,t }k
a as
[15],butnotfortheticketitself[16],whichismoreinter-
esting to attack. Once again, this sort of logic reveals an is the authenticator, and t a is the client’s timestamp. The
unhealthy lack of abstraction of the encryption scheme. authenticator assures the TGS that the client has recent
knowledgeofthesessionkeyk ,sincevaluesoft toofar
as a
removedfromthecurrenttimewillcausetheTGStoreject
4. Kerberos version 4 (simplified)
the authenticator. The entire scheme relies upon close
synchronizationofclocks; wewillnotfurtherdiscussthat
A simplified description of version 4 of the protocol
issue here.
follows. The trusted third party in Kerberos is called the
KeyDistributionCenter(KDC).FundamentaltoKerberos 1The superfluous superencryption of the ticket, both here and in
is the concept of a ticket. A ticket issued to a client theTGSexchange, isonlypresentinversion4; ithasbeeneliminated
in version 5, at the expense of introducing a delayed denial-of-service
A for a service B is encrypted in the long-term key k
b attack. Ongoing work on the specification of version 5 is investigating
shared between the KDC and the service B. The ticket countermeasures for this denial of service.To actually use the service ticket administrators in the local realm can limit the damage
fromanuntrustworthyforeignrealmmerelybyrefusingto
{A,B,t s,k ab}k b, grant any privileges to principals from that realm. As we
demonstrate, cryptographic flaws in version 4 invalidate
the client sends the message
these trust assumptions.
A→B:{A,B,t ,k }k ,{A,t }k .
s ab b a ab 5. A block-encryption oracle
As in the TGS exchange, the authenticator
An essential component of the attack on Kerberos ver-
{A,t }k sion4isablock-encryptionoraclebasedonchosenplain-
a ab
text. The oracle takes advantage of the structure of the
provestotheserviceBthattheclienthasrecentknowledge CBC or the PCBC mode. CBC mode is defined as
of the session key k .
ab
C = k(P ⊕C)
i+1 i+1 i
4.2. Kerberos names P = k−1(C )⊕C,
i+1 i+1 i
ThestructureofnamesinKerberosversion4hassome where C 0,C 1,...,C n are the ciphertext blocks; P 0,P 1,...,
implications for the execution of the attack, as we show P n aretheplaintextblocks; k(x)denotestheencryptionof
later. A version 4 principal name is a three-tuple the block x with the key k; k−1(x) denotes decryption of
the block x with the key k; and x⊕y denotes the bitwise
{primaryname,instance,realm}. exclusive-OR of x with y.
PCBC mode is defined as
The usual way of displaying principal names to users is
“primaryname.instance@realm”. The period between the C = k(P ⊕C ⊕P)
i+1 i+1 i i
instance and primary name is usually omitted if the in- P = k−1(C )⊕C ⊕P.
i+1 i+1 i i
stanceisempty. Therealmindicateswhichauthentication
domain the principal belongs to; generally, one KDC (or It is useful to generalize these cipher modes as block-
replicated set of KDCs) functions to authenticate princi- feedback modes by considering the input block of the
pals of only one realm to each other. In order to authenti- block cipher to consist of the exclusive-OR of a plaintext
cateprincipalsofonerealmtoprincipalsofanotherrealm, block with a feedback block:
shared keys must be established between the two realms.
These are in the form of specialized TGS principals. C i = k(P i⊕F i)
The normal TGS principal name for a realm is P = k−1(P)⊕F,
i i i
“krbtgt.realm@realm”. A TGS principal name used
for cross-realm authentication takes a different form: the where F i represents the i-th feedback block, which is not
TGS principal name, as received from a foreign princi- necessarily transmitted. For CBC mode, F i+1=C i, while
pal by the local realm’s KDC, is “krbtgt.localrealm for PCBC mode, F i+1=C i⊕P i. For these cipher modes,
@foreignrealm”. The local realm KDC ensures that each F 0 is known as the initialization vector (IV).
cross-realm TGT originating from a foreign realm has Assume that an attacker can cause the production of
its client principal name’s realm component matching the some ciphertextC 0,C 1,...,C j,...,C n with the contents of
nameoftheforeignrealm. Thisnormallyensuresthatthe the feedback block F j known in advance and with its
local realm’s KDC cannot be tricked by foreign realm’s corresponding plaintext block P j chosen by the attacker.
KDC into issuing a ticket for an incorrect client principal To obtain the ciphertext X of an arbitrary plaintext block
realm. As we demonstrate later, design flaws in the Ker- M under the block cipher, the attacker can choose P j =
beros version 4 encryption scheme allow for this measure M⊕F j. The resulting ciphertext block is
to be circumvented.
C = k(P ⊕F)
As originally designed in version 4, sharing a cross- j j j
realmkeywithaforeignrealmonlyimpliesatrustthatthe = k(M⊕F j⊕F j)
foreign realm will truthfully authenticate principals in its = k(M)=X.
realm. There was no reason that compromise of a foreign
realm could compromise principals in the local realm, In a well-designed protocol, an attacker should have
so realm administrators tended to freely exchange cross- significant difficulty assembling such an oracle, since F
j
realmkeys. Compromiseofaforeignrealm’sKDCwould should not be known in advance. This is not the case in
only render principals in the foreign realm untrustworthy; version 4 of the Kerberos protocol.6. Constructing the desired ciphertext HOST_BYTE_ORDER;thisflagindicatesthebyteorderof
the KDC issuing the ticket. An attacker can usually pre-
To construct a complete ciphertext that will decrypt to
dict the value of this bit without difficulty. The following
a desired plaintext, it is necessary to proceed one block
example of encryption oracle construction assumes that
at a time, taking into account the feedback block of the
the attacker varies P to encrypt a desired plaintext block
1
constructed ciphertext each time. If the desired cipher-
intoC . It may be generalized to assume manipulation of
1
text consists of the blocks {X}, and the desired plaintext
i an arbitrary P, though.
j
consists of the blocks {M}, then the relation
i We initially describe the attack based on the TGS ex-
X =k(M ⊕F ), change, as it is reasonably easy to implement. Assume
i i i
that the attacker controls a realm A, the target realm is
where F i indicates the feedback block related to X i, may B, and that these two realms share a cross-realm TGS
be used to choose plaintext blocks for encryption by the key. The attacker knows the key for the TGS principal
encryption oracle. The only difficulty is if the initial- krbtgt.B@A,whichhasthesamekeyaskrbtgt.A@B
ization vector F 0 is unknown. In the case of Kerberos in the realm B. Using the known cross-realm TGS key,
version 4, F 0 is the actual key, which will not be known the attacker can fabricate a cross-realm ticket having the
to the attacker. There are chosen-ciphertext attacks that unusual-looking client principal
can recover the IV from a chaining mode [21], but they
are of little practical importance here. To produce a X a234567XXXXXXXX@A,
0
that decrypts to a desired value M , the attacker must be
0 where “a234567” is an arbitrary string held constant
able to directly submit the desired M as the first block
0 between iterations of the attack, and “XXXXXXXX” is a
of a plaintext to be encrypted under the key k. This does
block P chosen to produce the encryption of a desired
not usually pose a significant difficulty in Kerberos ver- 1
plaintext block. (The client principal’s realm must be
sion 4, though it does place some limitations on which
A, because the target KDC will verify that the requested
client principal names can be forged.
client principal’s realm corresponds to that of the issuing
realm.)
7. Ticket ciphertext as oracle
Theattackerthenusesthefabricatedcross-realmticket
The predictable plaintext of a version 4 ticket enables toperformaTGSexchangewiththeKDCofBtoobtaina
an attacker to create a block-encryption oracle by manip- service ticket for the service being attacked, for example,
ulating a portion of the plaintext of a ticket, preferably krbtgt.B@B (for maximum damage).2
part of the client principal name, as it occurs earliest ThetargetKDC,whenissuingtheserviceticket,copies
in the ticket plaintext. The easiest way to perform this the client principal name from the fabricated cross-realm
chosen-plaintext attack is by exploiting the cross-realm ticket into the plaintext of the service ticket. It then en-
authentication exchange, as it allows nearly any principal crypts the plaintext using the target service’s long-term
name to be fabricated. It is also possible to implement key. This results in a ciphertext whose plaintext is par-
a chosen-plaintext attack on the AS exchange, which can tially controlled by the attacker. Note that while the ses-
be done by creating principals in the target realm, among sionkey,timestamp,etc.,maynotbeknowntotheattacker
other ways. beforeencryption, theseunknownvaluesdonotaffectthe
The plaintext of a Kerberos version 4 ticket [16] prior ciphertext blocks of interest.
to encryption is: The fixed string “a234567”, appended to the one-
byte flags field, becomes the first plaintext block P . This
0
1 byte flags namely, HOST_BYTE_ORDER means that chosen plaintext string “XXXXXXXX” is the
string pname client’s name
entiretyofthesecondplaintextblockP . C willbeafixed
1 0
string pinstance client’s instance
value, giventhefixedstring, sincethefirst7charactersof
string prealm client’s realm
the principal name, the IV, and the key all remain fixed.
4 bytes paddress client’s address
Likewise, F will not change, since it is based on fixed
8 bytes session session key 1
1 byte life ticket lifetime values(F 1=C 0⊕P 0,assumingPCBCmode). Theattacker
4 bytes time sec KDC timestamp merely has to choose the variable string “XXXXXXXX”,
string sname service’s name which is P 1, to be M⊕F 1, where M is the block that is
string sinstance service’s instance to be encrypted using the oracle. The C in the resulting
1
≤7 bytes null null pad to 8 byte multiple ticket will then be the encryption of the desired block.
The attacker can obtain the initial fixed value of F by
The fields labeled “string” are NUL-terminated ASCII 1
strings, each limited to 40 characters (including the ter- 2The ticket-granting principal in the target realm may only be
minal NUL). The flags byte has only one meaningful bit, attacked by virtue of an implementation design flaw, described later.performing one iteration of the attack with the chosen P an initial ciphertext block of a ticket issued to the target
0
to acquireC . client principal. This limitation can be circumvented by
0
If a particular P in an iteration of the attack needs to the cross-protocol attack, which we describe later.
1
containoneNULcharacter,thevalueofP willbesplitbe- Controlling a cross-realm key is merely one of the
1
tween the pname and pinstance fields of the ticket, rather most efficient methods of attack, and it is the only attack
than being completely contained within the pname field. variant that we have implemented so far. Our implemen-
This does not pose a problem. However, if two or more tation of the attack only requires about one oracle query
NUL characters3 need to appear in P , the target KDC perforgedciphertextblock,needingslightlymorequeries
1
will probably not create a useful ticket, so the attacker when too many NUL characters would have to appear in
mustchangethepreviouslyfixedstringappearinginP in the relevant plaintext block.4 This sort of attack might
0
ordertoobtainavalueofF whichdoesnotrequiremore go completely unnoticed by all but the most vigilant ad-
1
than one NUL character to appear in P . Similarly, the ministrators, allowing the attacker to surreptitiously com-
1
attackermayalsopermuteP suchthatthecompleteclient promise the realm. As noted above, but not implemented
0
principal name will not need to contain any “suspicious” by us, the attacker can utilize a larger number of queries
characters, e.g., non-alphanumeric characters, though this to avoid using principal names containing “suspicious”
practice will increase the number of iterations needed to characters, making the attack even less detectable.
complete the attack.
Almost none of this attack is specific to the particular 8. Forging arbitrary tickets
cipher mode (CBC or PCBC), provided that the mode is
of the general block-feedback form. The scenario of a Given the encryption oracle, an attacker may construct
compromised realm sharing a key with the target realm is an arbitrary Kerberos version 4 ticket, subject to certain
not farfetched; it is not uncommon for a realm to set up a conditions. The attacker must usually obtain the cipher-
shared key with a less-secure realm for testing purposes. textofthecounterfeitticketoneblockatatime, sincethe
As mentioned earlier, this practice would not constitute feedback block corresponding to a particular ciphertext
a security exposure if it were not for this cryptographic block is generally not known in advance. Optimizations
attack. may exist which permit multiple ciphertext blocks to be
The attacker need not control a cross-realm key shared producedandsplicedtogetheratonce,butthelengthcon-
with the target realm; knowledge of a sufficient number straints inherent in version 4 principal names, as well as
of keys in the target realm enables the use of the AS the use of NUL-terminated strings in the tickets, limit
exchange, instead of the TGS exchange, as an oracle. these optimizations somewhat.
This is particularly easy if the attacker has privileges to To forge a ticket ciphertext {X :X =k(M ⊕F )} that
i i i i
adaptivelycreateprincipalsinthetargetrealm’sdatabase, decryptstotheplaintext{M},theattackeriteratesthrough
i
in which case the required number is not large at all. each M, determining the corresponding F , and submit-
i i
Forexample,theMITimplementationprovidesafacil- ting M ⊕F to the encryption oracle to receive X. The
i i i
ity for allowing a less-privileged administrator (typically use of the key as the IV in Kerberos version 4 introduces
one responsible for deploying server hosts) to create or a slight difficulty in forging the initial ciphertext block,
change a key associated with a host-based service. Typi- X ; the attacker must cause the TGS to encrypt M as the
0 0
cally, site policy limits the principal names to forms such first block of a ticket. The attacker cannot use the oracle
as“rcmd.hostname@realm”; thercmdkeysareusedfor to directly produce X because the feedback block F is
0 0
authenticating remote logins to a host. If the hostname secret.
portion of these principals is not restricted to the set of This property of X places some constraints on the
0
characters typically valid for use as hostnames, this at- set of client principal names that an attacker may forge.
tack may require the creation of as few as n principals In particular, if the target client principal’s primaryname
to forge a ticket that is n ciphertext blocks long. Tighter andinstancecomponentstotallessthan7bytes,including
constraints, e.g., character set restrictions, on the form terminating NUL characters, the target realm must share
of the principal names that the administrator is permitted an initial substring with the attacking realm. This initial
to create will cause the required number of principals to substring requirement arises from the TGS’s checking for
increase. Regardless, this approach is not useful in a ver- a match between the client realm and the realm issuing
sion4-onlyenvironment,astheinterestingclientprincipal the cross-realm ticket. The length limitation on the target
names to impersonate rarely begin with “rcmd”; the at- principal name may be circumvented by copying the first
tacker must somehow obtain (possibly by packet-sniffing) ciphertext block of a legitimate ticket issued to the target
3Actually, if the second NUL character appears at the end of the 4This complication occurs with probability ∼2−11, assuming that
first block, it is not a problem. all possible feedback block contents are equally likely.principal, e.g., by sniffing the network while the target 9.2. Cross-protocol attack
principal is using the ticket to authenticate to a service.
Thereuseofakeyformultiplecryptographicpurposes
9. Implementation flaws can also lead to a vulnerability. The MIT implementation
of version 5 has a backwards compatibility mode that al-
The MIT implementations of Kerberos version 4 have lowstheKDCtoissueversion4tickets. Asingledatabase
a few design flaws which enable more widespread dam- isusedforhandlingbothversion4andversion5requests,
age than would be possible if the implementation were andtheKDCusesthesamekeytoencryptbothversion4
better designed. We emphasize that these additional flaws and version 5 tickets for a given service principal. An
are not flaws in the protocol, but rather are flaws in the attacker can use the version 4 encryption oracle to attack
implementation. Even the most secure protocol is use- the version 5 protocol. This enables a wider attack than
less if the implementation is insecure, and we encourage would be possible against version 4 alone.
specifiers of cryptographic protocols to identify particular TicketsinKerberosversion5alsoconsistofastringof
pitfalls that implementors may encounter. encrypted data, although, unlike version 4, the version 5
In the MIT implementation of version 4, a poorly de- encryption scheme performs some encoding on the data
signedlineagecheckforcross-realmauthenticationallows prior to encryption. The format of the encoded plaintext
an attacker to compromise realms other than the initial in version 5 immediately prior to encryption is
target realm. Also, the MIT implementation of version 5
{confounder,checksum,data,pad}.
uses identical keys for encrypting version 4 and version 5
tickets for the same service principal, enabling a cross- The confounder is one block of random bytes. The Ker-
protocolattackagainstversion5. Theseflawsarebelieved beros version 5 specification [23] chooses the block ci-
toexistinnon-MITimplementationsoftheKerberospro- pher as DES, which is used in CBC mode, and allows
tocols as well. the checksum to be CRC-32, MD4, or MD5. None of
these checksums is keyed. This lack of keying enables
9.1. Realm hopping the cross-protocol attack from version 4 to version 5.
ForDESwithMD4(des-cbc-md4)andDESwithMD5
The MIT implementation of the Kerberos version 4 (des-cbc-md5),theIVoftheencryptionisablockofzeros.
KDC attempts to prevent client principals from transiting For DES with CRC-32 (des-cbc-crc), the IV is the key.
or “hopping” between realms, i.e., a client principal ac- The checksum is computed over the entire concatenated
cessing a service in a foreign realm must have its local plaintext, with the checksum field zeroed out. This frus-
realm directly share a key with the foreign realm. The tratesciphertextgenerationviachosen-plaintextmanipula-
KDC implementation does not enforce this policy by pre- tioniftheattackerhasnoknowledgeoftheconfounder;an
venting the issuance of a cross-realm ticket to a foreign adversary will find it difficult, if not impossible, to create
principal; it instead relies on the receiving KDC to deny an encryption oracle by manipulating version 5 tickets.
further tickets based on that cross-realm ticket. For ex- Fordes-cbc-md4anddes-cbc-md5,anattackercansim-
ample, if a client principal clienta@A obtains a ticket ply fabricate any desired confounder using the version 4
forkrbtgt.B@A,itmaysubsequentlyobtainaticketfor encryptionoracle,sincetheIVisknownandconstant. For
krbtgt.C@B. The KDC for the C realm is responsible des-cbc-crc, the attack is somewhat more difficult, since
for denying the client principal clienta@A further tick- the IV is the key and not known to the attacker. For this
ets in the C realm. For similar reasons, it is also possible particular attack, it is necessary to obtain the ciphertext
for that client to obtain a ticket for krbtgt.B@B. While block C corresponding to the desired confounder, possi-
0
the client from A may obtain the ticket krbtgt.B@B, blybythesamemethodthatcanbeusedfortheC attack
0
it will normally be unable to obtain further tickets in B on PCBC in version 4, i.e., by forcing the KDC to en-
using that ticket. crypt an initial P with the attacked key (which generally
0
Unfortunately, these restrictions are not sufficient to requires control of a realm sharing a key with the target
prevent an attacker from using the chosen-plaintext attack realm).
to attack the TGS principal in B, or, for that matter, any
cross-realm TGS principals in B. This flaw permits an at- 10. The evolution of Kerberos encryption
tacker to recursively compromise an entire authentication
network comprising numerous realms, even though tran- The original specification of Kerberos version 5, while
siting through multiple realms is normally not permitted it makes significant improvements on version 4, still con-
in Kerberos version 4. Hopping through realms is expen- tains some flaws. In particular, it attempts to provide
sive: O(cn)ticketsmustbeforgedtocompromisearealm authenticated encryption, but remains vulnerable to at-
n hops away. tacks based on encryption oracles. Work continues onKerberos encryption schemes; the proposed changes rem- format of
edy the cryptographic vulnerabilities in both version 4
{encrypt(k ,plaintext),HMAC(k ,plaintext)},
and RFC 1510, and eliminate the oracle-based attacks we e c
describe.
where encrypt is the encryption function, e.g., triple-DES
in CBC mode, or AES in CTS mode; HMAC is a keyed
10.1. Kerberos version 5
hash [26]; and plaintext is
Kerberos version 5 adds checksums to the encoded {confounder,data,pad}.
plaintext. This provides some protection against simple
attacks, but it is not sufficient to prevent the chosen- k e is a key used only for performing encryption, and k c
plaintextattackswedescribe. Givenanencryptionoracle, is a key only used for creating keyed hashes. Both keys
an attacker can simply fabricate a valid checksum as part are derived from the underlying key exchanged in the
of the desired plaintext. An unforgeable signature, e.g., a protocol.
keyedhashwhosecreationrequiresknowledgeofasecret, TheuseofHMACpreventsanattackerfromconstruct-
will thwart an attacker equipped with an encryption ora- ing a valid ciphertext without access to the signature key
cle, assuming that the attacker does not have a signature k c, thus precluding many chosen-plaintext attacks. This
oracle. feature of HMAC improves upon the weak scheme used
Version 5 alone would prevent an encryption oracle intheoriginalversion5protocol,whereanattackercould
by its use of random confounders. An attacker cannot easilyconstructavalidciphertextusinganencryptionora-
predict the ciphertext corresponding to a chosen plaintext cle. The updated protocol derives the keys k e and k c from
block, and is therefore unable to create an oracle. The the actual shared key via a one-way key derivation func-
MIT implementation’s sharing of version 4 and version 5 tion. The new encryption specification also recommends
keys enables the cross-protocol attack against version 5, using key derivation to produce separate keys for each
by allowing an attacker to use the encryption oracle of possible use of a shared key, thus restricting the actual
version 4 to forge ciphertexts for version 5. quantity and type of plaintext encrypted with each key.
The confounder in version 5 also prevents a cut-and- This practice makes chosen-plaintext attacks even more
paste attack against the TGS exchange. The version 5 difficult.
TGS exchange permits a client to submit arbitrary plain- BellareandNamprempre[7],aswellasKrawczyk[25],
text for the KDC to encrypt in a ticket, in the form of analyze the composition of encryption and authentication
the AuthorizationData field. If it were not for the con- primitives. Krawczyk determines that the “Encrypt-and-
founder, an attacker could submit the plaintext of a de- Authenticate” scheme (called “Encrypt-and-MAC plain-
sired forged ticket as AuthorizationData in a legitimate text” by Bellare and Namprempre) is insecure in the gen-
TGS request and obtain the desired ticket’s ciphertext as eral case. The independent encryption and HMAC of the
a substring of the actual ticket returned by the TGS [11]. revised Kerberos version 5 encryption scheme appears to
Others [9, 38] have previously noted the weaknesses of fall into this category, but could be better identified as an
encrypted checksums against cut-and-paste attacks. The “Encode-then-E&M”scheme,intowhichBellareetal.[6]
presence of a checksummed confounder in the ticket pre- classify the SSH encryption scheme.
vents an attacker from predicting the feedback block for Bellare et al. [6] recall that the SSH protocol’s pre-
theinitialciphertextblockoftheforgedticket. Ifthecon- dictable chained IVs make it insecure against a chosen-
founder were not checksummed with the plaintext, the at- plaintext attack. One of their proposed fixes adds random
tackwouldstillbepossible,asthereceivingservicewould padding as part of an encoding step prior to encrypting
discard the confounder without verifying its integrity. and MACing the plaintext, and uses randomized IVs for
each separate ciphertext packet. Kerberos version 5 uses
10.2. Upcoming revisions to Kerberos a similar strategy, though Kerberos doesn’t specify the
use of a keyed hash until the recent revision of the en-
The upcoming revision [34] to the Kerberos ver- cryption specification. Bellovin and Merritt [12] note that
sion 5 protocol specification repairs many of the flaws version 5’s random confounder is equivalent to a random
in RFC 1510. This revision moves the encryption speci- IV, though they criticize the use of the former.
fication [36] to a distinct document, which increases the The work of Bellare et al. on the SSH encryption
separationbetweenencryptionandprotocolrecommended scheme shows that the unmodified “Encode-then-E&M”
byBellovinandMerritt[12]. Ciphersstrongerthansingle- scheme is not sufficient if it has predictable IVs. While
DES, e.g., triple-DES or the Advanced Encryption Stan- Kerberos version 4 effectively has predictable (and con-
dard (AES) [32, 35], may now be used. The revised en- stant!) IVs, version 5’s use of random confounders pre-
cryptionspecificationrecommendsthataciphertextoutput ventsanattackerfrompredictingtherelationshipsbetweenplaintextandciphertext. Therevisionstotheversion5en- Jeff Schiller, and Ted Ts’o for useful discussions and ad-
cryption scheme [36] add a MAC, which further prevents vice. Steve Dorner brought to our attention a ciphertext-
various attacks. corrupting application bug that inspired us to discover the
attack. We thank Marshall Vale and the rest of the MIT
11. Conclusions Kerberos Development Team for their ongoing support.
The lack of authenticated encryption in Kerberos ver- References
sion4leadstoaveryseriousattack. Thisdeficiencyisone
of several errors in version 4. Though the existing ver- [1] M. Abadi and R. Needham. Prudent engineering practice
for cryptographic protocols. IEEE Transactions on
sion 5 specification (RFC 1510) is an improvement over
Software Engineering, 22(1):6–15, January 1996.
version 4, it too has vulnerabilities. Ongoing revisions to
[2] G. Bella and L. C. Paulson. Kerberos version IV:
version 5 remedy the existing flaws in RFC 1510.
Inductive analysis of the secrecy goals. In Proceedings
Protocol designers should clearly identify the role of
of the 5th European Symposium on Research in
encryptionintheirprotocols. Iftheprotocolrequiresnon-
Computer Security, pages 361–375. LNCS 1485,
malleable encryption, clearly state so in the specification, Springer-Verlag, 1998.
and ensure that the encryption scheme actually achieves [3] G. Bella and E. Riccobene. Formal analysis of the
this requirement. The use of unauthenticated encryption Kerberos authentication system. Journal of Universal
in version 4 violates the implicit requirement of nonmal- Computer Science, 3(12):1337–1381, 1997.
leability, with dramatic results. [4] M. Bellare, A. Desai, E. Jokipii, and P. Rogaway. A
concrete security treatment of symmetric encryption. In
Designers should abstract the use of encryption away
Proceedings of the 38th Symposium on Foundations of
from the layout of the protocol messages. The design-
Computer Science, pages 394–403. IEEE, 1997.
ers of version 4 erroneously assumed that the message
[5] M. Bellare, A. Desai, E. Jokipii, and P. Rogaway. A
layout itself would enhance the security properties of the
concrete security treatment of symmetric encryption.
encryption scheme. Such cross-dependencies complicate Available from http://www.cs.ucsd.edu/
analysisoftheprotocol,leadingtosecurityvulnerabilities. users/mihir/papers/sym-enc.html, 2000.
CBC and related cipher modes have weaknesses when [6] M. Bellare, T. Kohno, and C. Namprempre.
usedwithdeterministicIVs. Inparticular,ifafixedplain- Authenticated encryption in SSH: Provably fixing the
text encrypts to a fixed ciphertext, an attacker can build SSH binary packet protocol. In Proceedings of 9th ACM
anencryptionoracle. Evenifaprotocoldoesnotallowan Conference on Computer and Communications Security.
ACM, November 2002.
encryptionoracle,messageauthenticationschemesshould
[7] M. Bellare and C. Namprempre. Authenticated
be robust against encryption oracles. As we have shown,
encryption: Relations among notions and analysis of the
encrypted plaintext checksums are insufficient protection.
generic composition paradigm. In Advances in
Using a single key for multiple purposes allows weak-
Cryptology – ASIACRYPT 2000, pages 531–545.
nessesinonesystemtocompromiseanother,asillustrated LNCS 1976, Springer-Verlag, 2000.
by the cross-protocol attack. The revisions to version 5 [8] M. Bellare and C. Namprempre. Authenticated
specify using key derivation to produce different keys for encryption: Relations among notions and analysis of the
different cryptographic purposes. generic composition paradigm. Available from
Protocols have a longer life than their designers might http://www.cs.ucsd.edu/users/mihir/
papers/oem.html, 2000.
anticipate. Despite its age, and weaknesses related to its
[9] S. M. Bellovin. Problem areas for the IP security
age, e.g., its use of single-DES, Kerberos version 4 re-
protocols. In Proceedings of the Sixth USENIX UNIX
mainsinwidespreaduse. Evenpublishedcriticismsabout
Security Symposium. USENIX, July 1996.
thesecurityofversion4havenotsignificantlydiminished
[10] S. M. Bellovin. Cryptography and the internet. In
its use. It has taken the revelation of a cryptographic
Advances in Cryptology – CRYPTO ’98, pages 46–55.
flaw of this magnitude to encourage users to finally begin LNCS 1462, Springer-Verlag, 1998.
moving away from the protocol. [11] S. M. Bellovin and D. Atkins. Private communications,
1999.
[12] S. M. Bellovin and M. Merritt. Limitations of the
Acknowledgments
Kerberos authentication system. In USENIX Conference
Proceedings, pages 253–267, Dallas, TX, Winter 1991.
We thank Steve Bellovin, Mark Eichin, Radia Perl-
USENIX.
man, Amy Yu, and the anonymous referees for reading
[13] J. Black and H. Urtubia. Side-channel attacks on
and providing useful commentary on earlier versions of symmetric encryption schemes: The case for
this paper. We also thank Steve Bellovin, Matt Blaze, authenticated encryption. In Proceedings of the 11th
Love Ho¨rnquist-A˚strand, Jeff Hutzelman, Perry Metzger, USENIX Security Symposium. USENIX, August 2002.[14] M. Burrows, M. Abadi, and R. Needham. A logic of [29] J. H. Moore. Protocol failures in cryptosystems.
authentication. Proceedings of the Royal Society of Proceedings of the IEEE, 76(5):594–602, May 1988.
London, Series A, Mathematical and Physical Sciences, [30] National Institute of Standards and Technology. DES
426(1871):233–271, 1989. modes of operation. FIPS publication 81, U.S.
[15] cr_ciph.c. Source code of Kerberos version 4 library, Department of Commerce, December 1980.
MIT, 1986. [31] National Institute of Standards and Technology. Data
[16] cr_tkt.c. Source code of Kerberos version 4 library, encryption standard. FIPS publication 46-3, U.S.
MIT, 1985. Department of Commerce, October 1999.
[17] R. DeMillo and M. Merritt. Protocols for data security. [32] National Institute of Standards and Technology.
Computer, 16(2):39–50, February 1983. Advanced encryption standard. FIPS publication 197,
[18] D. E. Denning and G. M. Sacco. Timestamps in key
U.S. Department of Commerce, November 2001.
distribution protocols. Communications of the ACM,
[33] R. M. Needham and M. D. Schroeder. Using encryption
24(8):533–536, August 1981.
for authentication in large networks of computers.
[19] D. Dolev, C. Dwork, and M. Naor. Nonmalleable
Communications of the ACM, 21(12):993–999, December
cryptography. SIAM Journal on Computing,
1978.
30(2):391–437, 2000.
[34] C. Neuman, T. Yu, S. Hartman, and K. Raeburn. The
[20] N. Ferguson and B. Schneier. Practical Cryptography.
Kerberos network authentication service (v5). Internet
Wiley, 2003.
Draft draft-ietf-krb-wg-kerberos-
[21] A. M. Iley. Kerberos ivec attack. Web page, now
clarifications-04.txt, 2003.
defunct.
[22] A. Joux, G. Martinet, and F. Valette. Blockwise-adaptive [35] K. Raeburn. AES encryption for Kerberos 5. Internet
attackers. In Advances in Cryptology – CRYPTO 2002, Draft
pages 17–30. LNCS 2442, Springer-Verlag, 2002.
draft-raeburn-krb-rijndael-krb-05.txt,
[23] J. Kohl and C. Neuman. The Kerberos network 2003.
authentication service (v5). Internet Request for [36] K. Raeburn. Encryption and checksum specifications for
Comments 1510, Internet Engineering Task Force, 1993. Kerberos 5. Internet Draft
[24] Messages exchanged on the draft-ietf-krb-wg-crypto-06.txt, 2003.
krb-protocol@athena.mit.edu email list, April [37] J. G. Steiner, C. Neuman, and J. I. Schiller. Kerberos:
1989. An authentication service for open network systems. In
[25] H. Krawczyk. The order of encryption and authentication Proceedings of the USENIX Winter Conference, pages
for protecting communications (or: How secure is SSL?). 191–202, February 1988.
In Advances in Cryptology – CRYPTO 2001, pages [38] S.G.StubblebineandV.D.Gligor. Onmessageintegrity
310–331. LNCS 2139, Springer-Verlag, 2001. in cryptographic protocols. In Proceedings of the 1992
[26] H. Krawczyk, M. Bellare, and R. Canetti. HMAC: IEEE Computer Society Symposium on Research in
Keyed-hashing for message authentication. Internet Security and Privacy, pages 85–104. IEEE, May 1992.
Request for Comments 2104, Internet Engineering Task [39] S. Vaudenay. Security flaws induced by CBC padding –
Force, 1997. Applications to SSL, IPSEC, WTLS .... In Advances in
[27] G. Lowe. Some new attacks upon security protocols. In Cryptology – EUROCRYPT 2002, pages 534–545.
Proceedings of the 9th Computer Security Foundations LNCS 2332, Springer-Verlag, 2002.
Workshop. IEEE, 1996. [40] V. L. Voydock and S. T. Kent. Security mechanisms in
[28] S. P. Miller, B. C. Neuman, J. I. Schiller, and J. H.
high-level network protocols. Computing Surveys,
Saltzer. Kerberos authentication and authorization
15(2):135–171, June 1983.
system. Project Athena technical plan, section E.2.1,
Massachusetts Institute of Technology, 1987.