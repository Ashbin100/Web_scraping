A Broad View of the Ecosystem of
Socially Engineered Exploit Documents
Stevens Le Blond, Cédric Gilbert, Utkarsh Upadhyay, Manuel Gomez Rodriguez David Choffnes
Max Planck Institute for Software Systems Northeastern University
{stevens, cedricg, utkarshu, manuelgr}@mpi-sws.org choffnes@ccs.neu.edu
Abstract—Ourunderstandingofexploitdocumentsasavector In contrast with the approaches above, Anti-Virus (AV)
to deliver targeted malware is limited to a handful of studies aggregators acquire large numbers of suspicious samples via
done in collaboration with the Tibetans, Uyghurs, and political public web portals that allow anyone to scan files against
dissidents in the Middle East. In this measurement study, we multiple, different AV products. Aggregators leverage the fact
present a complementary methodology relying only on publicly
that a collection of AV products from different vendors often
available data to capture and analyze targeted attacks with both
detect complementary, partially overlapping sets of malware,
greater scale and depth. In particular, we detect exploit docu-
so their aggregation provides a useful service to improve
ments uploaded over one year to a large anti-virus aggregator
overall detection over any single AV product. Such aggrega-
(VirusTotal) and then mine the social engineering information
theyembedtoinfertheirlikelytargetsandcontextualinformation tors are popular, e.g., VirusTotal receives millions of weekly
of the attacks. We identify attacks against two ethnic groups submissions from all over the world [32]. Interestingly, AV
(Tibet and Uyghur) as well as 12 countries spanning America, aggregators can scan all file types supported by partnering
Asia, and Europe. We then analyze the exploit documents AV software: Although most submitted files are executables,
dynamicallyinsandboxestocorrelateandcomparetheexploited VirusTotalreceivesover12million(non-executable)document
vulnerabilities and malware families targeting different groups. submissions per year.
Finally,weusemachinelearningtoinfertheroleoftheuploaders
ofthesedocumentstoVirusTotal(i.e.,attacker,targetedvictim,or We focus here on exploit documents because they are the
third-party),whichenablestheirclassificationbasedonlyontheir
most common vector of targeted attacks identified by related
metadata, without any dynamic analysis. We make our datasets
work [11], [16], [17] and they are arguably more dangerous
available to the academic community.
than Office macros, which require additional user approval
and can be forcibly disabled by system administrators. While
I. INTRODUCTION
malicious Office macros are commonly used in large-scale,
Targetedattacksarelow-volume,sociallyengineeredcom- opportunisticattackssuchasthosedeliveringransomware[13],
munications that convince specific victims to install malware. they tend to be used less frequently in targeted attacks. For
By definition, these attacks are hard to capture, making it example,outofthehundredsofmaliciousdocumentsanalyzed
challenging to design effective countermeasures against them. by the related work only one embedded a malicious Office
Recently, several researchers started collaborating with the macro [17]. Finally, recent reports indicate that exploit docu-
Tibetans,Uyghurs,aswellaspoliticaldissidentsintheMiddle ments represent an important attack vector against a range of
East, to shed light on the threats faced by these groups targets including NGOs [14], news agencies [6], and military,
[11], [16], [17]. In particular, all these projects found that governmental and intelligence agencies [18], motivating the
modern targeted attacks often relied on exploit documents, need to study the corresponding ecosystem.
i.e., documents exploiting vulnerabilities in Microsoft Office
This paper presents a measurement study of the ecosystem
and Adobe Acrobat Reader on Microsoft Windows, to deliver
of exploit documents and in particular, their likely targets,
malware to their victims. A fundamental limitation of the
exploited vulnerabilities, embedded malware families, and
approach taken by previous work, however, is that it is labor-
uploaders, using only documents uploaded to VirusTotal. This
and time-intensive, limiting coverage to a few chosen groups.
approach allows us to scale our analysis to hundreds of
Forexample,eachoftheabovepapersrepresentedamulti-year
thousands of documents from tens of thousands of users, but
effort to build trust and to share suspicious samples acquired
poses substantial challenges such as reliably filtering benign
manually over substantial time periods.
and other types of malicious documents, clustering exploit
documents based on their targets, and inferring the likely
role of their uploaders. By addressing these challenges, we
identify a variety of targeted attacks not reported in previous
Permission to freely reproduce all or part of this paper for noncommercial work and perform a comparative analysis of their respective
purposes is granted provided that copies bear this notice and the full citation
characteristics in the wild. We specifically seek to answer the
on the first page. Reproduction for commercial purposes is strictly prohibited
following questions:
without the prior written consent of the Internet Society, the first-named author
(for reproduction of an entire paper only), and the author’s employer if the
paper was prepared within the scope of employment. • Do targeted groups upload exploit documents on
NDSS ’17, 26 February - 1 March 2017, San Diego, CA, USA
VirusTotal and if so, can we distinguish them from
Copyright 2017 Internet Society, ISBN 1-891562-46-0
the bulk of other submissions?
http://dx.doi.org/10.14722/ndss.2017.23250• Can we automate the detection and mining of exploit difficulttogeneralizeanyfindingsbasedonanalysisofattacks
documents to scale our analysis to hundreds of thou- targeted only at one group (e.g., Tibetans or Uyghurs). The
sands of samples? vast majority of samples exploit vulnerabilities reported two
or more years prior to our measurement period. Thus, these
• How do the attacks faced by different targeted groups
attacks often rely on victims using unpatched software.
compare with each other?
Third, we observe that the uploaders of exploit documents
• Is VirusTotal used by other actors (e.g., attackers and
on VirusTotal exhibit distinguishable behaviors that enable
researchers) and if so can we reliably classify and
automaticandreliableroleinference.Usingground-truthinfor-
quantify them?
mation from VirusTotal complemented with manual inference
for a subset of users, we train a machine-learning classifier
Toanswerthesequestions,wemustfirstaddressthreemain
that accurately predicts whether a user is an attacker, target,
challenges.First,wemustdeterminetheprovenanceofexploit
or third-party. We find that a semi-supervised algorithm based
documents uploaded on VirusTotal despite their acquisition
on label-propagation is able to achieve about 80% accuracy
through a third party. Although both the related work [1],
with few labeled seeds.
[15] and AV reports (e.g., [5], [8], [22], [28], [29], [30], [31])
offer/usemethodstoreliablyclusteralargenumberofmalware To summarize, our main contributions are as follows:
samples based on their behavior or family, target inference
requires a higher level of abstraction to cluster attacks based • A methodology to analyze targeted attacks relying on
ontheirtargets,independentoftheexploitedvulnerabilityand exploitdocumentswithoutrequiringdirectacquisition
malware family used. Second, we must distinguish exploit from the targeted groups.
documents from legitimate ones, determine the version of the
• Acomparativeanalysisofexploitdocumentstargeting
vulnerable reader, and extract the embedded files and URLs.
various groups uploaded to VirusTotal over one year.
Analyzing exploit documents in this way typically requires
a significant amount of manual intervention, which cannot • The inference of the roles of the uploaders of these
scale to hundred of thousands of documents. This is due to a exploit documents.
lackofspecializedtoolchainsandmethodologiesforanalyzing
• An interactive service to analyze exploit documents
exploit documents. Although traditional malware sandboxes
which we make available to the academic community
work well for executables, they tend to be agnostic of the
at https://slingshot.dedis.ch.
specificities of exploit documents such as the diversity of
software configurations in which exploits might trigger. Third, Finally,tomakeourresultsreproducibleandfosterresearch
because VirusTotal allows many different types of anonymous in this area, we release our datasets of exploit documents and
users, it is difficult to distinguish among victims, attackers, extracted malware, their CVEs, decoys’ coding, and malware
and third parities such as researchers or companies submitting tagging.
samples in bulk. For example, attackers and targeted victims
(targets) may be using VirusTotal to evade AV software and II. BACKGROUND
detect targeted attacks, respectively. Indeed, there is anecdotal
A. Terminology and Infection Process
evidence of attackers abusing VirusTotal to drive down the
detection rate of AV software [35]. Targets may also use We focus on documents exploiting vulnerabilities in Mi-
VirusTotal, for example, to scan document attachments before crosoft Office or Adobe Acrobat Reader. Such documents
opening them. Combining the analysis of exploit documents embed an exploit, a shellcode or gadgets’ addresses and
with the uploaders’ behavioral information can enable us to optionally,adecoydocumentandmalware(asdefinedbelow).
classify uploaders and to infer the context in which attacks
Exploit.Anexploitisamaliciousinputsubvertingthecontrol
took place.
or data plane of the vulnerable application [12].
Our key findings are as follows. We use social engineer-
Shellcode/gadgets’ addresses. The goal of an exploit docu-
ing information embedded in exploit documents, along with
mentistoexecutemalwareonthevictim’scomputer.Although
malware behavior, to identify hundreds of attacks against two
historically, the (shell)code responsible for malware execution
ethnic groups (Tibet and Uyghur) and 12 countries spanning
was injected into the vulnerable process’ address space, miti-
America (the US), Asia (India, Indonesia, Japan, Mongolia,
gations such as DEP now preclude code injection. Therefore,
Myanmar,Philippines,Russia,SouthKorea,Taiwan,Thailand,
modern attacks rely on legitimate code units mapped in the
and Vietnam), and Europe (France). The decoy documents
process’addressspace(gadgets)thatarelocated andexecuted
targeting these groups use a variety of techniques to allay
out-of-orderbyleveragingaddressesembeddedintotheexploit
the victim’s suspicion: They are often written in the victims’
document.
nativelanguages(and/orEnglish),frequentlyusecontentlikely
acquired from compromised hosts, cover a small number Decoy document. A decoy document is an optional, benign
of targeted topics, and tend to use fairly recently created document that is embedded into the exploit document, written
documents. to disk, and opened with the reader application after a suc-
cessful exploitation. As the purpose of a decoy is to conceal
Second, we find that attacks against different groups tend
the infection from the victim, attackers have an incentive to
to use disjoint malware families. Namely, 79% (219/277)
tailor decoys to their victims.
of families are found in only one country in our dataset;
further,malwarefoundinmultiplecountriestendtobelocated Malware. Finally, the malware is the malicious software’s
in a relatively confined region. This specialization makes it binary that is executed on the victim’s computer.
2Fig. 1: Exploit document infection process.
From the time a victim opens an exploit document to the defaultinMicrosoftOffice,respectively.Becauseeachofthese
installation of malware on their system, there is a chain of studies focused on a single group, they could not compare the
events that underpins a successful exploitation. We present exploit documents targeting different communities.
a sample infection process for a real exploit document in
Figure 1, obfuscating only the victims’ identity and content
C. Scope of this paper
of the decoy. The process begins with an exploit document
being delivered to the victim, e.g., via a malicious email ((cid:182)). This paper is a measurement study that composes existing
If the victim opens the attached document and her reader is toolsandtechniquestobuildanovelmethodologyenablingthe
compatible with the exploit, the exploit is triggered ((cid:183)). The analysis of exploit documents that embed socially engineered
shellcode or gadget then writes the decoy and/or malware to decoys. Though our methodology should be applicable to any
persistent storage ((cid:184)), opens the decoy with the reader ((cid:185)), dataset of documents, the analysis results presented in this
and executes the malware ((cid:186)). paperarelimitedtothedatainourstudy(documentsuploaded
toVirusTotal),whichintroducetwomainobservationalbiases.
First, despite VirusTotal’s popularity its coverage of targeted
B. Related work
attacks is limited to those users and organizations who upload
Drive-bydownloads.Severalstudiesfocusedonopportunistic suspicious files. Second, in addition to its partial coverage,
exploitationsofwebbrowsers(drive-bydownloads)[10],[20], VirusTotal’svisibilityislikelyskewedtowardsuserswhowork
[24], [26]. In 2005, Moshchuk et al. [20] crawled 18 million with non-classified material. As a result of these biases, our
URLstoidentifyspywareanddrive-bydownloads.Theyfound VirusTotal dataset offers a partial coverage of attacks where
that 13.4% of the crawled URLs led to spyware, and 5.9% to individualsandNGOsarelikelyover-represented.Despitethis
drive-by downloads. More recently, Provos et al. showed that limitation, we show that this dataset captures attacks against a
drive-by downloads represented the largest threat to average widerangeoftargetsincludingcorporationsandgovernmental
users and examined how exploit sites appeared to users in institutions located in 12 countries located in America, Asia,
search results and through syndicated advertisements [26]. and Europe. Finally, this paper focuses on the ecosystem of
Finally,Grieretal.[10]builtonProvosetal.byexaminingthe exploit documents with respects to their targets, exploited
emergenceofexploit-as-a-servicewherebyhostexploitationis vulnerabilities, malware families, and VirusTotal uploaders.
uncoupled from its monetization. In contrast with all these Generalization to different AV aggregators, malicious Office
works, we focus on low-volume, socially engineered exploit macros, and detailed analyses of exploitation and evasion
documents luring specific victims into installing malware. techniques (both for reader exploitation and role inference)
are the subject of future work (cf. Section VI).
Targeted malware. Recently, researchers mined malware
sandboxes available publicly to detect new malware families
[9].Theyfoundthatsuchsamples,includingtargetedmalware, III. METHODOLOGY
were sometimes submitted before being reported in the wild.
Inthissection,wedescribeourmethodologyforacquiring,
Our work is complementary and focuses on the analysis of
processing, and validating the VirusTotal dataset. Figure 2
exploit documents as an attack vector to deliver such targeted
summarizes our datasets, methods, and important statistics.
malware.
The input to our analysis is a large feed of documents
Targeted attacks. The three most related studies were done
from VirusTotal and a publicly available dataset of exploit
in collaboration with the Tibetans [11], Uyghurs [16], and documentsfromtheWorldUyghurCongress[16]((cid:182)).Weuse
political dissidents in the Middle East [17]. They revealed
theEnhancedMitigationExperienceToolkit(EMET)[19]ina
that attacks against these groups were performed via socially
varietyofcontrolledenvironmentstodetectexploitdocuments
engineered emails with malicious attachments. Exploit docu- ((cid:183)),thenuseanextractorthatseparatestheembeddedmalware
ments represented 81% (481/592) and 71% (799/1,116) of and decoys from the exploit documents ((cid:184)). Native speakers
the malicious attachments targeting the Tibetans [3] and the
manually annotate the extracted decoys to give contextual in-
Uyghurs [16], respectively. (Although exploit documents were formationabouttheattacks((cid:185)).Wetagtheextractedmalware
also employed against Middle East dissidents, they were not families using two enterprise-grade malware sandboxes ((cid:186)).
quantified in the related work.) The majority of the remain-
Finally, we infer and analyze the role of uploaders of exploit
ing malicious attachments comprised of executables attached documents ((cid:187)). (With the exception of Step (cid:185), all steps were
directly, or in an archive, and only one malicious attachment
fully automated.)
wasamacrodocument[17].Wepresumethatexecutablesand
macro documents were a minority because they are blocked The rest of this section describes all these steps in detail
by popular webmails (e.g., GMail) and they are disabled by except for (cid:187) which we defer to Section V.
3Fig.2:Ourdataacquisitionandprocessingworkflow.Eachboxdisplaysthedatasettypeandthenumberofcorrespondingentries
after each step.
A. Acquiring Suspicious Documents
TABLE I: Summary of our dataset. Time frame corresponds
Ouranalysisreliesontwocomplementarydatasets:Alarge to the acquisition period, Size to the volume of documents
dataset of suspicious documents uploaded to VirusTotal and a in terabytes, and Users and Countries to the number of
small dataset of exploit documents acquired directly from the unique uploaders and their countries. Finally, Extraction ((cid:62)1
World Uyghur Congress (WUC) [16] ((cid:182)). We used the WUC detection) refers to all the detected documents uploaded over
dataset as ground truth to validate that our analysis has no or one year and on which we performed our measurement study.
fewfalsenegativesandthatdecoysareindeedtailoredtotheir
Time frame Apr 2014 - Mar 2015
victims.
Size (TB) 13.8
VirusTotal. VirusTotal is the largest publicly available AV Users 255,926
Countries 210
aggregator at the time of writing. Upon submitting a file
Extraction ((cid:62)1 detection) 257,635
to VirusTotal, a user is provided with a list of scan results
from different AV software (71 at the time of this writing).
This functionality makes VirusTotal popular among victims of
targeted attacks as they generally have a low detection rate rate1 is very low for the uploaded samples (< 0.1%). We
by individual AV software. Behind the scenes, AV vendors then perform extraction on all documents detected by at least
who do not detect a file detected by others are given its one AV software over one year (257,635). We analyze their
payload, providing visibility into attacks that may otherwise decoys in Section IV-B, associated malware and CVEs in
go unnoticed by that specific vendor. SectionIV-C,andtheiruploadersinSectionV.Wesummarize
these statistics in Table I.
VirusTotal Intelligence API. To facilitate sharing with AV
World Uyghur Congress (WUC) dataset. We include a
vendors and other members of the security community, Virus-
public dataset of 143 exploit documents collected over four
Total implements a rich API providing registered users with
years by one WUC volunteer [16]. This dataset has been
access to the uploaded content and its meta-data. VirusTotal
extensively analyzed in the related work and constitutes a
gave us access to this API between April 2014 and March
ground truth to validate our methodology. Unlike VirusTotal,
2015. We used the following three API features to retrieve
this dataset is composed exclusively of exploit documents that
documents and their metadata.
have targeted the Uyghur ethnic group.
• Distribution. The distribution function gives access
to a live feed of VirusTotal uploads (in our case, all B. Detecting Exploit Documents
Office and PDF documents). We use this function to
The next step is to identify exploit documents for the
acquire our dataset of documents.
purpose of extracting their malware and decoys ((cid:183)). A key
• Report.Thereportfunctionreturnsthedetailedresults challengeinthisstepisthatthedynamicanalysistoolsweuse
of the AV scans and additional meta data such as the may exhibit false negatives resulting in files not being written
first upload date. We use this function to determine to disk by exploit documents. We address this by performing
the detection rate of our documents. detection in Virtual Machines (VMs) with multiple software
configurations and manually inspecting all discrepancies.
• Submissions. The submissions function returns a list
of submissions with for each submission, the inferred Dynamic analysis platform.Ourinitialanalysisrevealedthat
geolocation and the salted hash of the uploader’s most exploit documents target different versions of readers on
IP address. We use this function to determine the Microsoft Windows. Thus, to increase the attack surface and
uploader of an exploit document. diversity of our controlled environments, we created multiple
VMs, each of which uses Windows XP as a guest operating
Characteristics of the VirusTotal dataset. Our dataset con- system and one version of Microsoft Office or Adobe Acrobat
tains all Office and PDF documents (13.8 TB) uploaded Reader. We created eleven VM images for Office and 12 for
between April 2014 and March 2015. The corresponding Acrobat Reader: Office 2003 and 2007 (each one with and
uploaders were geolocated in 210 countries with 2,574 daily without Service Packs 0 − 3), and 2010 (with and without
users and 49,048 daily submissions on average. A concern is Service Packs 0−2), and Acrobat Reader VIII (0.0 and 1.0),
that VirusTotal may not catch a significant fraction of targeted
attacks. As we find in Section IV-A, VirusTotal false negative 1TheAVdetectionrateswerecollectedonthedayoftheupload.
4Office macros, we opened them with Office 2003 and auto-
TABLE II: Breakdown of the filtered data at each step of
matically captured the text contained in the message dialog.
the processing workflow. Office macro corresponds to Office
Underdefaultsecuritysettings,Officewarnstheuserthatdoc-
documents requesting user permission to activate macros,
uments containing macros can be dangerous. By determining
Cannot open to documents which could not be opened by any
whether the message text corresponded to a macro warning,
versions of our readers, Crashes to documents making at least
we identified 85,088 macro documents. In addition, macros
one reader version crash, Passwords to password protected
created using versions predating Office 2003 are deactivated
documents, False positives to potential AV false positives,
in recent Office versions (i.e., they do not trigger a dialog and
Neutralized corresponds to a subset of detected documents
cannotbeexecutedundernormalsecuritysettings).Tocapture
which had been neutralized, and Others to the remaining
thesemacros,werepeatedtheaboveprocedureaftermodifying
detected samples. Finally, Download and No executable or
Office’ssecuritysettingstoMedium.Doingsodetected44,444
decoycorrespondtoexploitdocumentsdownloadingfilesfrom
additional macro documents (129,532 in total).
the network and not embedding any executables or decoys,
respectively. Cannot open. Other documents could not be opened because
theywerecorrupted,hadthewrongfileextensionorformat.As
Steps Filtered categories # documents
for Office macros, problematic documents generate a message
(cid:183) Detection 257,635
dialog indicating that Office or Acrobat Reader cannot open
Office macros −129,532
the document. We identified 17,177 such documents which
Cannot open −17,177
Crashes −3,370 could not be opened using any of our eleven Office versions.
Passwords −1,001
Crashes. We observed 3,370 documents which made at least
False positives −45,342
one version of our readers terminate unexpectedly. While the
Neutralized −5,574
root causes of these crashes varied and could not easily be
Others −17,798
(cid:184) Extraction 37,841 determined, they could be due to, for example, legitimate
Downloads −32,387 documents triggering a reader bug, malicious documents ex-
No executable or decoy −1,639 ploiting a flaw in an unsupported reader version, or dysfunc-
(cid:185)-(cid:186) Analysis 3,815 tional exploit documents such as the ones we will discuss in
Section IV-A.
Password. 1,001 document were protected and could not be
IX (0.0, 1.0 2.0, 3.0, 4.0, and 5.0) X (0.0, 1.0, and 1.4), and opened without the correct password.
XI (0.0).
False positives. AV software may exhibit false positives due
Wechosethesevarietyofreaderversionstoexposeexploit to static signatures being triggered on legitimate samples or
documents to potentially vulnerable software, and used Win- dysfunctional ones that dynamic analysis does not detect.
dows XP because it has fewer exploit mitigation mechanisms Although the size of our dataset precludes a manual analysis,
than more recent Windows versions. We also automatically 45,342documentsinourdatasetweredetectedbyonlyoneor
scrolled down documents to trigger exploits that might not two AV vendors suggesting that they may be false positives.
be triggered by viewing only the first page. Our software was
Others and Neutralized. After filtering the above, disjoint
compiledforanx86architecture.Theanalysesbelowrequired
categories, we are left with 23,372 samples belonging to
over two years of total CPU time.
other categories. Manual inspection of the remaining samples,
Enhanced Mitigation Experience Toolkit (EMET). EMET revealed 5,574 samples embedding an executable binary but
enhances Microsoft Windows with modern mitigation tech- whichhadbeenneutralized.Inparticular,thedocumentopened
niques [19]. To detect exploit documents, we opened docu- normally in Microsoft Office but did not exhibit any mali-
mentsinacontrolledenvironmentwithEMETinstalled,parsed cious behavior. We believe that such cases might correspond
logs for successful mitigations, and manually investigated to crypting, whereby attackers repeatedly tweak a malicious
detections for which no files were extracted. Although EMET payload to reduce its detection rate by AV software. These
has limitations [4], [25], we found no evidence of evasion in neutralized samples illustrate the difficulty of classifying all
our dataset and also cross validated our results with ground samples uploaded to VirusTotal, since many of them contain
truth from the WUC dataset (Section III-D). malicious components that are not functional and thus cannot
be detected by dynamic analysis.
Filtering of malicious documents. To validate that our
methodology has no or few false negatives, we also quantified Downloaded and no executable or decoys. Finally, some
documentsthatweredetectedbyatleastoneAVbutthatwere documentsweredetectedbyEMETbutdidnotwriteanyfiles
not detected by EMET or for which no files were written to to the filesystem. 32,387 of these documents unsuccessfully
disk. To do so, we categorized the filtered documents that attempted to download files from the network and 1,639 did
werenotdetectedbyEMETintosixcategories:Officemacros, not embed any executable or documents.
Cannot open, reader Crashes, Password protected documents,
AV False Positives, and Neutralized (Table II). We further C. Analyzing decoys, malware and CVEs
categorized the documents that were detected by EMET but
This step consists of extracting the malware and decoys
for which no files were written to disk as Downloads and No
from the 37,841 exploit documents detected by EMET ((cid:184)),
Executable or decoy.
labeling their distinguishing characteristics ((cid:185)), and analyzing
Office Macros. To determine whether documents contained the dynamic behavior of their embedded malware ((cid:186)).
5Extraction system. To inform our analysis, we designed First, dynamic analysis can exhibit false negatives, pre-
and implemented a Windows driver (9,884 lines of C and venting us from extracting malware and decoys from exploit
assembly code) that records filesystem and network activities documents. We took steps to limit the impact of these false
performed by Microsoft Office and Acrobat Reader upon negatives, namely by systematically comparing our extraction
opening documents in a controlled environment. The use of results with EMET and manually accounted for all discrepan-
syscalls related to filesystem and/or networking API calls by cies (as described in Section IV). One reason we may fail to
these processes and their children is recorded by our driver, extract malware is when exploit documents target third-party
enabling us to recover the content of the files written to plugins (i.e., Flash) or versions of Office and Acrobat Reader
disk after a successful exploitation, and the IP addresses, that we do not support. We found that very few documents
hostnames, and URLs contacted by shellcodes or gadgets. used Flash (52 out of 843,483) and did not install it on
our platform. To reduce false negatives due to unsupported
Coding of decoys. We manually annotated (coded) the ex-
versions,weopenedalldocumentswithmanyreaderversions.
tracted decoys according to their languages, the countries they
For comparison, EMET detected 114 out of the 143 malicious
referto,ethnicgroupsanddates,whethertheytargetedspecific
documents (79.7%) from the WUC dataset. Out of the 29
individuals or organizations, and whether they were likely
documents that were not detected by EMET, 16 targeted Mac
exfiltrated from compromised systems and used as decoys in
OS X, nine affected a different reader version, two were
exploit documents targeting new, related victims (replayed).
password protected, and two were ciphered XLS documents
In contrast to replayed decoys, some decoys were empty or
in which we could not identify any exploits. We presume that
just contained a few words, e.g., “hello”, “wrong version”,
the absence of evasion is due to the complexity of concealing
or “passphrase”. We coded these decoys as empty or poor,
exploitationandthelackofwidespreadexploitationmitigation
respectively.
in the wild. Importantly, none of our analyses depends on the
In the first phase of coding, one researcher coded all lackofevasiontechniquesinthemalwareembeddedinexploit
documents.ThosewritteninalanguagedifferentfromEnglish documents.
were translated using a translation software. In the second
phase, volunteer native speakers independently coded the doc-
Second, our analysis of decoys and malware is limited to
uments written in Russian, Traditional Chinese, Uyghur, and
documents embedding these files as opposed to downloading
Vietnamese. Finally, we compared the sets of code, merged
them over the network. Despite this limitation, our analysis
the original notes with the volunteers’, and fixed minor dis-
revealed 3,815 exploit documents with embedded decoys or
crepancies (e.g., missing dates).
malware. The WUC dataset indicates that this approach was
Malwareanalysis.Wealsodynamicallyanalyzedthemalware preferable for attacks targeting the Uyghur community, as the
extracted from exploit documents in two malware sandboxes vastmajority(90.3%)ofexploitdocumentsembedmalwareor
specialized in the analysis of targeted malware (a FireEye decoys. One explanation for this behavior is that embedding
AX appliance and another one whose vendor wished to re- files offers the advantage of enabling the compromise of hosts
main anonymous). To the best of our knowledge, commercial even when they are not connected to the Internet.
malware sandboxes are the only solutions readily available to
analyze thousands of samples.
Finally, our decoy analysis is limited to exploit documents
We used two such sandboxes to tag the malware. The that embed intelligible information for analysis. Although
malwaresandboxesdeterminedthemalwarefamilyusingstatic decoysarenotfundamentaltothemalwareusedintheattacks,
(e.g.,YARArules)anddynamicsignatures(e.g.,fingerprinting in practice, they are essential to present the victim with a
of communications). document that is not suspicious. As a result, we expect most
targeted attacks to employ decoys that are relevant to the
Vulnerability analysis. We collaborated with a large AV
victim. The WUC dataset confirmed this hypothesis with 41
vendor to determine the CVE tags of the exploited reader
out of 59 documents with decoys (69%) pertaining to the
vulnerabilities. To do so, the vendor scanned all the exploit
Uyghur community. Out of the 18 remaining decoys, 12 were
documents that we detected and compared the resulting CVE
poororempty,twopertainedtoTibetorTaiwan,andwecould
withthemajorityofVirusTotaltags.IfthetwoCVEsmatched,
not classify the remaining four decoys (e.g., only pictures).
no further action was taken unless there was a doubt that the
exploit was a zero-day vulnerability. Samples for which the
CVE release date was posterior to the date of the upload on Ethical considerations.Theanalysisofdatathatmaycontain
VirusTotal were examined manually to determine the CVE’s privateinformationraisesethicalconcerns.Asoneofthegoals
correctness. Finally, if the AV’s scanner did not reveal any of VirusTotal is to promote security research, its users agree
CVE or if the CVE did not match, the sample was also to share their submissions with the security community. Our
analyzed manually. study does not collect any user’s personal information beyond
what is submitted to VirusTotal, nor does it expose users to
additional risks. The results we present in this study can be
D. Discussion
split into two categories: aggregate and anonymized. In most
Limitations. We have described our methodology to detect cases,aggregateresultsaresufficienthowever;itissometimes
exploitdocumentsandseparateandanalyzetheirmalwareand necessary to present results for individual users to validate
decoys. This methodology provides a rich dataset for analysis aggregates. In these cases, we anonymized the results so that
of exploit documents, but may be subject to the following it was not possible to identify users. This study was approved
limitations. by our IRB.
61
0.8
0.6
0.4
0.2
0
All P0 P1 P2 P3 P0 P1 P2 P3 P0 P1 P2
S S S S S S S S S S S
noitcarF
401 240 240 239 219 346 331 331 263 197 196 43
1
0.8 0.6
0.4
0.2
0
All 8.0.0 8.1.0 9.0.0 9.1.0 9.2.0 9.3.0 9.4.0 9.5.0 10.0. 10 0.1. 10 0.1.4 11.0.0
noitcarF
1
0.9
0.8
0.7
0.6
0.5
3858 3484 3795 3230 26 7 0 8 8 12 0.4
3474 3253 3233
0.3
0.2
0.1
0
0 1 2 3 4 5 6 7 8 9 10 11 12
Number of versions
Fig. 3: Fraction of exploit documents compatible with each
version and subversion of Microsoft Office (top) and Adobe
Acrobat Reader (bottom). For Office, the subversion corre-
spond to Service Packs (SPs). There is one bar group for each
reader version: Office 2003, 2007, and 2010, and Acrobat 8,
9, 10, and 11. Although exploits do not affect all readers’
versions, an exploit against a given version tends to affect
all its subversions.
IV. ANALYSISOFEXPLOITDOCUMENTS
In this section, we seek to answer the following questions
by analyzing documents submitted to VirusTotal:
• Can we reliably detect exploit documents? What is
the impact of reader versions? How many versions do
exploits generally affect?
• Can we leverage decoy documents to infer the likely
targets of attacks? If so, can we identify attack trends
in the VirusTotal dataset based on their targets?
• Do targeted attacks against different target groups
exhibit the same characteristics or do they differ
from each others? Do they use the same or different
malware?
• How does our observed malware coverage compares
with previous work focusing on single communities?
Previous work focuses on targeted groups [11], [16], [17]
or individual malware families [5], [8], [22], [28], [29], [30],
[31].Ouranalysisextendsthiscomplementaryworkbylinking
malware families with the decoy documents used for targeting
groups.
A. Extraction effectiveness
Before analyzing the decoys and malware embedded in
exploit documents, we first demonstrate the our extraction
process experiences few false negatives. To this end, we
dynamically analyze all the documents uploaded to VirusTotal
in February 2015 to identify exploit documents and validate
that we properly extract the decoys and malware written to
disk. Our goal is to scale extraction to the entire dataset
while minimizing the number of false negatives (i.e., exploit
documents from which we do not extract the corresponding
files). To do so, we test that (a) documents detected by
stnemucod
tiolpxe
fo
FDC
Acrobat
Office
Fig. 4: CDFs of the number of versions affected by Acrobat
and Office exploit documents. Few exploits are portable
across all reader versions.
the Enhanced Mitigation Experience Toolkit (EMET) were
also extracted and that (b) exploit documents detected by
EMET were also detected by at least one AV software.
These conditions would indicate that extraction has no or few
false negatives as compared to EMET detections and that, in
aggregate,AVsoftwarecanbeusedasanoraclefortheexploit
documents submitted to VirusTotal, respectively.
Impact of reader versions. Out of the documents submitted
for one month, EMET detected 4,259 unique exploit docu-
ments (401 Office and 3,858 PDF files). We found that an
exploit affecting a given reader’s version tends to affect many
subversions (Figure 3). This result indicates that knowing a
target’s reader version is sufficient for an attacker to achieve
a near-perfect trigger rate across all its subversions. At the
same time, we found that few exploits are portable across all
reader’s versions (Figure 4). While this result is solely based
onempiricalobservation,itisclearthatanyanalysistoolchain
should support many different reader versions.
Unextracted samples detected by EMET. Out of 4,259
documents detected by EMET, 29 did not write any files to
disk.Manualinspectionofthese29exploitdocumentsrevealed
that none of them were extraction false negatives.
• Crashes. There were six cases where exploit docu-
ments made the reader crash during exploitation.
• Experimental samples. In four cases, the document
merely executed a command such as calc.exe.
• Dysfunctional samples. In the remaining 19 cases, the
exploit relied on an absent property of the document
(e.g.,incorrectfilesize).Suchcasesledtoabug(e.g.,
aninfiniteloopinshellcodeorgadgets)thatprevented
exploitation.
AVdetectionofexploitdocuments.Allbutthreeofthe4,259
exploitdocumentsdetectedbyEMETweredetectedbyatleast
one AV software. This result indicates that, in aggregate, AV
software has very few false negatives for exploit documents
uploaded to VirusTotal.
Summaryofresults.Weshowedthatextractionhadnoorfew
false negatives as compared to EMET and that, in aggregate,
7AV software retroactively detected the vast majority of exploit
1
documents. In particular, we confirmed that all the exploit
0.9
documents that we could not extract were dysfunctional or
0.8
experimentalsamples,orcrashedbeforeperformingdiskwrite
0.7
operations, and all the extracted documents but three were
0.6
detected by at least one AV software. In the following, we
0.5
leverage these results by focusing our study on documents
0.4
uploaded over one year and detected by at least one AV
0.3
software. Doing so enables us to greatly reduce the number
0.2
of analyzed samples while keeping the number of extraction
0.1
false negatives to a minimum.
0
B. Social engineering
PI hn ilidi pa pin Me ys an m ar U S A Ti Tb het ai Il na dn Sod on ue ts hi a Korea Japa Rn ussi Ua yghu Tr aiw Via en tna
M
om ngolia
In this section, we characterize the decoys embedded in
exploit documents. In total, 2,447 (64%) out of the 3,815
exploit documents embedding files contained decoys. (Note
that we now focus on the subset of all detected files which
wrote files to disk.) 965 (39%) of them were empty or poor,
leaving us with 1,482 (60%) meaningful decoys.
Languages,ethnicgroups,andcountries.Themostcommon
languages in our dataset were English, Chinese, Uyghur, Viet-
namese, and Russian. In particular, 659 (44%) of our decoys
were written in English, 235 (15%) in Chinese, 179 (12%) in
Uyghur,140(9%)inVietnamese,68(4%)inRussian,and150
(10%)inanotherlanguage.Thedecoyssometimesalsoenabled
us to infer the likely targeted ethnic groups or countries. For
example, 237 (15%) and 115 (7%) decoys referred to the
Uyghur and Tibetan ethnic groups, respectively, and 145 (9%)
to Vietnam, 118 (7%) to the USA, 100 (6%) to Taiwan, 72
(4%) to India 51 (3%) to Russia, 50 (3%) to Japan, 38 (2%)
tothePhilippines,19(<2%)toSouthKorea,17toMyanmar,
14 to Mongolia, 9 to Thailand, and 7 to Indonesia. We show
the distribution of languages and dates for each of the main
groups in Figure 5. We see that these attacks tend to employ the mother tongue and official languages of ethnic groups
and countries, with the most common other language being
English.
Replayeddecoysandorganizationaltargeting.Asignificant
fraction of decoys pertaining to the Uyghur, Vietnam, and
Philippines were likely replayed, as we see in Figure 6. In
addition, we found that these groups with a high rate of
replayeddecoystendedtoexhibitorganizationaltargeting.For
example,outofthe237Uyghurdecoys,210(88%)referredto
the World Uyghur Congress (WUC) and were likely replayed.
Furthermore, all 38 Filipino decoys (19 of which replayed)
weremilitarydocumentsreferringtothenavyorarmedforces.
They included four lists of navy and air force personnel
(names,ranks,dateofbirths,andtelephonenumbers).Finally,
we additionally identified 12 decoys describing a research
project in which a French defense contractor was involved,
all of which were replayed. (We will cover these attacks in
details in Section V-F).
Dates of decoy documents. We found dates in 662 (44%) of
thedecoysinourdataset.Ifsuchdatesarepertinenttothede-
coydocument,wewouldexpectthatexploitdocumentswould
use ones with more recent dates to increase the likelihood of
a user opening the document.
To investigate this, we plotted the years found in decoy
documents for different regions in Figure 7. We find that
syoced
fo
noitcarF
Languages of decoys
Others
Others,Official
English
English,Official
Fig. 5: Distribution of languages employed in the decoys
targetingthevariousgroupsinourdataset.Foreachgroup,we
showthethefractionofdecoyswritteninEnglish,theOfficial
language of the group (when different from English), and
Other languages. Decoys tended to use the official language
of the groups they target.
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
Uygh Viur et Pn hia lipm pines InU dS oA nesi Ta aiwan Ti Mb oet ngoli Sa R ou uts hs ia Korea India Ja Mp ya an n m Ta hr ailand
syoced
fo
noitcarF
Replayed decoys
Not replayed
Replayed
Fig. 6: Fraction of the decoys that were likely acquired from
compromisedhostsandembeddedintoexploitdocuments(Re-
played). The majority of Uyghur, Vietnamese, and Filipino
decoys were replayed, indicating that these groups were
deeply compromised. All groups but Myanmar, Thailand,
and Japan had replayed decoys.
the documents they span several years with many attacks
referring to dates before 2012. The time of attack varied
substantially across groups, with attacks against groups under
Chinese influence (e.g., Taiwan, Uyghur, and Tibet) tending
to be older than those against Asian Pacific countries (e.g.,
Myanmar, Vietnam, and Thailand). For example, 80−85% of
attacksagainstVietnamandMyanmaroccurredin2013−2015.
Summary. Collectively, we find that exploit documents may
employ a variety of strategies to minimize suspicion from
victims. Namely, many use content in the victims’ native
language, (presumably stolen) content pertaining to specific
region or organization, and use relatively fresh content as op-
posed to older documents. While different exploit documents
use different subsets of these strategies, our analysis reveals a
81
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
M
ongol Vi ia etn Ma ym an Inm dar onesia Japan PI hn ilidi pa pin Te hs ailand Russia Tibe Ut yghur U SS
T
oaA i utw ha n Korea
syoced
fo
noitcarF
Years of decoys
Older
2013
2014
2015
Fig. 7: Distribution of the likely times of attacks for the
decoys embedding dating information. We show decoys from
2015-2013 as well as Older decoys. The timing for the
bulk of attacks greatly varied from one group to another.
All groups uploaded exploit documents containing decoys
referring to a least one year in the range of 2013-2015.
Fig. 8: Graph of malware families for each country where
two family nodes are linked if they target the same country
(different color for each region). In addition, we use gray
reasonably high level of sophistication for social engineering. links to indicate when the same malware family is used in
differentregions.Thenodecolorsandsizescorrespondtotheir
C. Malware and CVEs countries and the number of samples targeting it, respectively.
The malware families in our dataset tend to target one
In the following, we leverage decoys to study the charac-
main ethnic group or country.
teristics of attacks targeting different groups.
Malware families. Our malware sandboxes tagged the family
for91%ofthe3,958exploitdocumentsthatwrotemalwareto
disk. The most popular malware families in our dataset were submitted from each region. The figure shows that several
Miniduke [33], PlugX [22], Lurid [29], IXESHE [28], Taidoor malware families are targeted broadly across regions (e.g.,
[30],Zeus[34],FakeM [31],WMI [8],andElise[5].Miniduke PlugX, Mongall, Mirage, PoisonIvy) with no region seeing
was the most represented family in our dataset due to several a majority of samples, while others tend to focus on a small
different exploit documents embedding the same Miniduke number of regions (e.g., Lurid, FakeM, FakeSafe). We did not
executable; however, fewer than 1% of these samples were see any cases of exploit documents affecting every region in
used jointly with a decoy. This is in sharp contrast with other our dataset, indicating that even when distributed beyond a
abovefamilies,whereadecoywaswrittentodiskin41–100% single country, the reach of exploit documents is still quite
of the cases, indicating some targeting. In the case of Zeus, limited.
only 41% of all documents were used jointly with decoys.
The time distributions varied from one family to another.
This is likely because Zeus is a banking trojan, as we discuss
IXESHE, Taidoor, and FakeM have not been actively used
below. Excluding Zeus, all remaining families are commonly
since 2011-2012, whereas PlugX, WMI, and Elise have been
used for espionage and had a decoy in 79% of the cases or
used uniformly during the observation period. Interestingly,
more.
IXESHE, Taidoor and FakeM’s inactivity loosely correlates
Malware distribution. To show regional clustering of the with the publication of the corresponding AV reports (2012
countries in which malware families were found, we plot the for IXESHE [28] and Taidoor [30] and 2013 for FakeM [31]).
families using a graph (Figure 8). Each node represents a To the best of our knowledge, no comprehensive AV report
(family,country)pairanditssizeisproportionaltothenumber on PlugX has been published to date and the first AV report
of samples in our dataset. Then we use two types of edges: onElisewaspublishedin2015[5].Thus,ouranalysisreveals
colored ones represents links to other malware in the same thatmalwareauthorsareresponsivetoAVdetectionandadapt
country, and gray ones represent the same malware in other accordingly.
countries.Notethatmostedgesarecolored,meaningthatmost
Distribution of CVEs. Surprisingly, despite the diversity of
malware is found in only one country. Further, even when
the decoys and malware families, the exploit documents in
the same malware appears in multiple countries, most cases
our dataset used a relatively small number of vulnerabilities,
appearinasmallnumber.Thishasimplicationsforbothdirect
as seen in Figure 10. CVE-2012-0158 was by far the most
acquisition and AV reports (as we will discuss below).
common CVE in our dataset with 1,504 occurences. Recent
We now focus on the minority of malware samples im- CVEswereminoritarywith39sampleswithCVEsfrom2014.
pacting victims across multiple regions in Figure 9. For These results indicate that old vulnerabilities with patches
each malware family, the bar shows the fraction of samples available still constitute the bulk of the attacks. We did not
91
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
pandora ixeshe fake m proe mt ongall zegost pl wug mix gho fs at kes pa of ie sonivy mirage lurid page
syoced
fo
noitcarF USA
Russia
Asia Pacific G20
Asia Pacific
Chinese Influence
Fig.9:Distributionofregionswhereeachmalwarefamilywas
found, only for malware found in multiple countries and more
than 20 samples (13/282 families). Chinese Influence includes
Uyghur, Tibet, and Taiwan; Asia Pacific G20 includes India,
Indonesia, Japan, and South Korea; and Asia Pacific includes
Myanmar, the Philippines, Thailand, and Vietnam. We find
with the exception of PlugX, malware tends to be found in
oneortwomainregions;further,theprimaryregion(s)are
different across malware families. Thus, socially engineered
malware tends to have a limited set of targets.
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
Thaila Vn id et Pn hia lim ppin Me os ngo Mli ya an Inm dar onesia Japan India Russi Sa oT ui tb
h
et Korea Taiwan U S UA yghur
syoced
fo
noitcarF
gain access to all families. To make the matter worse, we find
that the distribution of families per targeted groups is skewed
with the top four common families representing just 18% of
all malware.
Summary, validation, and new results. We showed that
decoy documents often embedded sufficient contextual in-
formation to infer the targets of exploit documents. Once
coded,decoysenableamorecomprehensiveanalysisofexploit
documents by clustering attacks independent of their malware
family. Our second new result is that targeted malware is
highly specialized, meaning that a collaboration and/or AV
deployment would need to span many groups to over a good
coverage of its landscape. Third, we showed that the distri-
bution of malware families targeting individual groups was
skewed, further reducing the generalizability of AV reports.
V. ANALYSISOFUPLOADERS
Next, we infer and analyze the role of users who uploaded
exploit documents on VirusTotal using only meta-data. Role
inferenceisusefultocategorizeusers,studytheirrelationships,
and/or inform the analysis of their uploads. For example, it
couldenablecompaniessuchasVirusTotaltoidentifyattackers
abusing their services, or researchers working on targeted
attacks to prioritize the analysis of documents uploaded by
targeted victims. Importantly, role inference has the potential
of doing all this by relying only on meta-data, i.e., without
coding or dynamic analysis of the exploit documents or
malware. To the best of our knowledge, this paper is the first
Unknown attempt to rely on machine learning to systematically infer
Older the role of an AV aggregator’s users. We seek to answer the
2011 following questions.
2012
2013 • Can we accurately infer the role of VirusTotal users
2014 based solely on their meta-data? What is the distri-
bution of users with each role? What are the most
importantfeaturesthatcandifferentiatebetweenusers
in different categories?
A. Definitions
The goal of the analysis in this section is to infer whether
Fig. 10: Distribution of the CVEs’ release years for the ex- uploaders of exploit documents correspond to attackers, tar-
ploited reader vulnerabilies. 2014-2011 and Older correspond geted victims or third-parties. Although these roles may not
to CVEs released during the corresponding years and to older be the only interesting ones, we argue they are the most
CVEs, respectively, and Unknown to vulnerabilities that could general and that other roles would be variants of these. We
not be associated with a CVE. Most CVEs in our dataset willdescribethetechniquestoinfertheserolesinmoredetails
were released in 2012 and before and relied on unpatched in Section V-D.
readers to compromise users during the measurement
period. • Attacker.Anattackercorrespondstothesourceofan
exploit document.
• Targeted victim. A targeted victim is the destination
ofaexploitdocumentwithatargeteddecoy.Theyare
find evidence of zero-day exploits in our dataset.
referred to as targets in the ensuing discussion.
Limitations of direct acquisition and AV reports. The spe-
• Third party. A third is neither the source or destina-
cialization of targeted malware has important implications for
tionofanexploitdocument.Membersofthiscategory
generalizing results found via direct acquisition from targeted
typically upload many documents but these are rarely
groupsandAVreports.Inparticular,specializationcomplicates
exploit documents.
the discovery of targeted samples as acquiring them from one
group (e.g., Uyghur or Tibetans) is unlikely to reveal families Limitations. The ground truth for the roles of the uploaders
targetingothers,withtheexceptionofPlugX.Similarly,anAV wasonlyavailableforcompaniesandwehadtomanuallyinfer
deployment would need to span enough groups to potentially targets and attackers. As a result, the labeling of these two
10categories is likely imperfect. Despite this limitation, we will To build each user’s neighborhood features, we first con-
seethatourmachine-learningalgorithm(relyingonadifferent struct a directed co-hash graph. In this graph, each node
set of features) accurately classified users from each category. corresponds to a user that uploaded at least one of the exploit
documents. We form an edge from a user u to user v if u
B. Ground truth and manual inference uploaded a document which was later also uploaded by v.
We use the hash of the documents to identify such identical
VirusTotal shared with us the role of several premium
uploads. We refer to a user’s one hop neighborhood on this
accounts that belonged to third-parties, giving us ground truth
graph (including all edges contained within) it as the ego-
for that category. For the other categories (i.e., targets, and
network of the user. We extract the following neighborhood
attackers), we inferred the roles manually as follows.
features from this subgraph:
• Targets uploaded at least one extracted document
• Out-degree, in-degree and LCC. Attackers are ex-
with a targeted decoy, a plausible email attachment
pected to have a large out-degree since they are often
filename, as well as at least one benign document.
the first to upload an exploit document and then
• Attackers uploaded at least one extracted document they send the documents to others in the network.
sharingacommandandcontrolserverwithtargetsbut Hence, the in-degree can help identify the receivers
predating their uploads, and geolocated in a different (targets/researchers).TheLocalClusteringCoefficient
country. We manually inspected the uploads of the (LCC) (computed on an undirected version of the
corresponding users and kept only those who had graph) helps in identifying users which received ex-
uploaded experimental samples. ploit documents as part of wide spread attacks, i.e.,
whowerenotsingledoutandtargeted.Duetopaucity
The purpose of the ground truth and manual inference is of neighbors, these users are expected to have a high
to validate the roles inferred by machine learning. Although LCC.
machinelearningusesonlymeta-data,manualinferencelever-
ages all the data made available through coding and dynamic • Edges in, into and out of the ego network, Neigh-
analysis.Asaresult,researcherswithouttheresourcestocode bors’ out and in degree. We count the number of
or analyze all malicious documents can use role inference to edges in the ego network, the number of incoming
guide their analysis. edges from nodes outside the ego network to nodes
in the ego network and the number of outgoing edges
C. Features from nodes in the ego network to nodes outside the
ego network. This takes into account the features of
Our goal is identifying a set of user features such that the one hop network around the node. These features
userswithhighfeaturesimilarityplaythesameroleintheAV can help identify “cascades” which bring a exploit
aggregator(beitanattacker,atarget,orthird-party).Here,we document from an attacker, through a target to a
distinguish two types of features: user specific features and researcher. We also calculate the average, variance,
neighborhood features. minimum and maximum in-degree and out-degree
across the nodes in the co-hash ego network.
We build each user’s specific features using her own
uploadingactivity.Weconsiderthefollowingspecificfeatures: • Neighbors’ fraction of total and malicious files up-
loaded.Thissummarizestheactivityoftheneighbors
• Fractionofexploitdocumentsuploaded,totalnum-
ofnodes.Wecomputetheaverage,variance,minimum
ber of uploads. Attackers are expected to upload a
and maximum fraction of all and exploit documents
disproportionate fraction of exploit documents.
uploadedacrossthenodesintheco-hashegonetwork.
• Unique filenames vs unique hashes. For attackers The activity of neighbors can give hints about the
using VirusTotal as a crypting service, may upload nature of the current node.
fileswithdifferenthashesbutusingthesamefilename.
• Fraction of unique filenames used multiple times D. Semi-supervised light-weight inference
for documents with different detection rates. For
Wemanually,withthehelpofrolesprovidedbyVirusTotal,
attackersusingVirusTotalasacryptingservice,weex-
identified the role of 246 users, i.e., we labeled a few seed
pectthedetectionratesofexploitdocumentsuploaded
users, and filtered out users who did not upload extractable
consecutively over short time periods (e.g., hours) to
documents, which leaves 9,245 users. Given such a labeled
decreaseuntiltheyreachzero.Toavoidfalsepositives,
dataset, a natural approach would be to use a supervised
we only consider exploit documents sharing the same
learning method, such as logistic regression or support vector
filename.
machines (SVMs), to find a mapping between features and
• Maximum upload delay, average of the top 10%- labels and use this mapping to infer the role of the remaining
ile of upload delay. Upload delay is defined as the users. Unfortunately, since the number of labeled users is
interval between the first upload of a document (by several orders of magnitude smaller than the total number of
anyone) and the time when this user uploaded it users,suchamappingwouldnotgeneralizetotheoverallsetof
(identity being established using the hash). We expect (unlabeled) users. Instead, here, we resort to semi-supervised
this to be low for the attackers (close to zero) and learning [2], which leverages both labeled and unlabeled data
high for the targets and researchers who receive their to infer the role of all users. In particular, we use label
documents from the attackers. propagation [36], which works as follows.
111
TABLE III: Confusion matrix produced for the seed users (5-
0.9
fold cross validation). The most common error is users in
0.8
category Third-party being marked as Targets.
(cid:80) 0.7
(cid:80)
(cid:80) (cid:80) (cid:80)True Third-party Target Attacker 0.6 Inf. (cid:80)
0.5
Third-party 42 20 6
Target 10 125 3 0.4
Attacker 0 10 30 0.3
0.2
0.1
It first computes an affinity matrix W, which captures the
0
feature similarity between every pair of users (i,j). Then, 0 5 10 15 20 25 30 35 40
it infers each user’s role rˆ ∈ {1,...R} by leveraging the Number of neighbors
i
roles of the labeled users and assuming that users with higher
similarity will be more likely to have similar roles. Here, for
each node i, we can think of nodes j as the neighbors of i
in an underlying similarity graph if W > 0. The algorithm ij
consists of the following steps:
Semi-supervised role inference:
In. Bandwidth parameter σ, Tradeoff parameter α ∈
(0,1), and, features (i.e., x ) standardized to have
i
0 mean and 1 variance.
1. Construct affinity matrix W such that W =
ij exp(cid:0)
−||x −x
||2/2σ2(cid:1)
if i(cid:54)=j and 0 otherwise.
i j
2. Construct matrix S = D−1/2WD−1/2, where D
(cid:80) is a diagonal matrix with D = W .
ii j ij
3. Construct F0 =Y such that Y =1 if user i has
ij
been manually labelled as r =j and 0 otherwise.
i
4. IterateFt+1 =αSFt+(1−α)Y untilconvergence.
Out. If lim Ft =F∗, then rˆ =argmax F∗.
t→∞ i j ij
We can think of each column Ft in the matrix Ft as the
i
amount of evidence that supports each potential role for user
i. In the third step, W is normalized symmetrically to ensure
the convergence of the algorithm. During each iteration of
the fourth step, each user tradeoffs between the information
she receives from her neighbors (first term) and their initial
information (second term) by means of the parameter α. In
ourexperiments,forscalabilityreasons,webuildakNNgraph
from W, instead of using the entire (dense) affinity matrix
W, as proposed elsewhere [37], and use the open source
implementation of the algorithm in scikit-learn, a well-
known machine learning library [23]. For the kNN graph,
we set the number of neighbors to k = 18 by 5-fold cross-
validation on the set of seed users, which leads to the best
performanceintermsofF1score[27],asshowninFigure11.
We see that the performance hits a plateau and stays stable
after k =18.
TableIVcomparestheperformanceofoursemi-supervised
light-weight inference method to two baseline methods: (i) a
random classifier that assigns a class to each sample propor-
tionallytothedistributionoftheclassesintheseedset,and(ii)
k-means,anunsupervisedmethodthatdoesnotusedthelabels
oftheseedusers[21].Ourmethodisthebestperformeracross
allclasses,consistentlybeatingthesecondbestbyaverylarge
margin.
The confusion matrix for the set of seed uses is shown in
erocs
1F
Attacker
Target
Third-party
Fig. 11: Impact of the neighborhood size k on performance
of the inference algorithm. The F1 score was calculated over
5-fold cross-validation [7]. The vertical red line indicates the
k chosen for the analysis here. The performance (F1 scores)
becomes stable after k =18 neighbours.
TABLE IV: Comparing the performance (using the F1 score)
of a random classifier and the classifier chosen after cross-
validation. Label propagation outperforms the random
classifier and the k-means classifier by a large margin for
all categories.
Category Random k-means Semi-supervised
classifier classifier classifier
Third-party 0.28 0.61 0.70
Target 0.56 0.70 0.85
Attacker 0.16 0.00 0.76
Table III. The targets are easy to classify while the third-party
category is difficult to distinguish from targets. The overall
accuracyofclassificationwas80.0%,comparedtothebaseline
accuracy of 33.3% for random assignment and of 61.3% for
k-means based classification.
E. Roles of users
Distribution of Roles.Next,wediscussinferenceonallusers
in our dataset. The distribution of users is shown in Table VI.
As expected, there are many more targets identified in the
dataset than other categories and relatively few third-parties
when compared to the fraction of attackers in the seed set.
This is because the third-parties often show features that are
similar to those of targets and it is difficult to dis-entangle
them completely.
Important features. After the inference was done, we in-
vestigated which features were most helpful in discriminating
the different classes. Since label-propagation itself does not
provide us with a measure of importance of each feature,
we train several supervised learning methods using the user
featuresandlabelsinferredusingoursemi-supervisedmethod.
Then,weusethecorrespondingfeatureweightsgivenbythese
supervised methods as the proxy of their true importance.
Then we selected the features that the classifiers deemed
the most important for each class. The features selected by
different classifiers are shown in Table V.
12TABLEV:Mostimportantfeaturesforeachcategorychosenbydifferentclassifiers.Theserevealtheunderlyingcharacteristic
behavior of users in each category (see Section V-E).
Category Decision Tree Decision Tree Extra Tree
(Depth=1) (Depth=10) (Depth=10)
Third-party infected files infected files unique filenames/unique hashes
max upload delay infected files
Target total files avg. num. of infected files uploaded by the ego net out degree
var. in num. of infected files uploaded by the net max upload delay
Attacker unique files/unique hashes edges into ego net edges into ego net
unique files/unique hashes unique files/unique hashes
More surprisingly, we also identified eight likely attackers
TABLE VI: Distribution of roles of users in the seed set,
who uploaded only malicious documents. Three of them were
which was manually labelled, and the inferred labels using
geolocated in France, two in Mainland China, two in Hong
the algorithm described in section V-D.
Kong, and one in the UK. In total, these attackers uploaded
Category Seed set Inferred 14 triggered documents, nine with the replayed decoy, and
Third-party 68 717 five with empty of poor decoys. All empty/poor decoys were
Target 138 7,148 uploaded after June 13.
Attacker 40 1,380
Interestingly, two triggered documents uploaded by the
Total 246 9,245
attackers dropped calc.exe. We assume that these uploads
were final detection tests for the exploit and shellcode prior
to launching the attacks. In one case, the attacker uploaded
For the third-party category, the feature infected files
two documents embedding calc.exe and no decoy in less than
(which is highly correlated to the total number of files up-
ten minutes. Five hours later, the same attacker uploaded
loaded) helps distinguish them from other users. For the
a document with the replayed decoy and embedded mal-
targets, the differentiating features are average number of
warewhichconnectedtosophos.skypetm.com.tw.Aroundthree
infected files uploaded by their ego network. This is because
hours later, one of the targets uploaded an identical document
the neighborhood of the targets is usually devoid of sources
on VirusTotal.
which upload a large number of infected files, i.e. researchers
or heavy handed attackers. Attackers are relatively easily We also see in Figure 12 that three C2s were used over
identified if they upload more than one file with the same the course of this campaign. The first C2 was used by the
filename but with different content (i.e. hash). Hence, the first five samples and the second one by all of the remaining
featureuniquefiles/uniquehashesisabletoidentifythem.The onesbutone.ThisphenomenonmaycorrespondC2rotationto
importance of edges into ego net in identifying attackers also evadenetworkdefenseshowever,itcouldalsobeanartifactof
suggests that these attackers may be connected to targets who our partial coverage of this campaign. Despite the last upload
suffer coordinated attacks. from a victim having occurred in May, the fact that attackers
continued to upload related documents in June suggests that
the campaign may have continued during that period.
F. Case study: French Defense contractor
Finally, there was one researcher geolocated in India
Next, we attempt to paint a holistic picture of an attack
with a premium VirusTotal account. This researcher uploaded
campaign against a French defense contractor by combining
only one triggered file with a different hash than those that
role inference, malware, and decoys. This type of postmortem
had been uploaded previously. The malware connected to
analysis can inform how attacks are developed and evolve
mca.av.store.tw and other C2s and contained the replayed
over time. Unlike the role analysis, we leverage all available
decoy. As we see in Figure 12, this researcher uploaded this
indicators including Command and Control (C2), malware
document in November 2014, long after the other participants
family, content of decoys, and benign documents.
involved in this attack.
Ourdatasetofferedsomecoverageofthecampaignagainst
Summary, confirmations, and new results. We have pre-
thedefensecontractorbetweenAprilandNovember2014.This
sented a role inference algorithm which is able to achieve a
campaign involved 12 participants that we verified manually:
reasonable accuracy over the dataset with a very small set
three targeted victims, eight attackers, and one researcher. We
of labeled seed users. We also verify that the features which
show the relationships between these participants, VirusTotal,
emergeasimportantaftertheinferenceareindeedthefeatures
and the C2s in Figure 12.
we would expect would classify the users. We are able to
As expected, the three targeted victims involved in this classify 9,245 users after manually labeling only 246 users,
campaign were geolocated in France and uploaded both be- i.e. a ∼4000% reduction in amount of work needed for 80%
nign and triggered documents. In total, they uploaded three accuracy. Hence, role inference stands to aid researchers by
triggered documents and 27 benign documents (most of them reducing the amount of manual work they will need to do
written in French). The three triggered documents uploaded to find “interesting” users in the dataset. As we see in the
by the victims contained the same replayed decoy discussed confusion matrix (Table III), it is difficult to differentiate be-
in Section IV. tween third-parties and targets. We speculate that third-parties
13Fig. 12: Case study of the defense contractor. The horizontal line represents the timeline of uploads on VirusTotal by the
participants involved in this campaign. We show the role of these participants (i.e., Targeted Victim, Attacker, and Researcher),
their relationships, and the relationships between their uploads and C2s. Several attackers participated in this campaign and
their uploads were intertwined with those of the victims. The researcher uploaded last.
are difficult to identify since their behaviour subsumes the the email channels, or disabled by system administrators. The
behavior of targets and researchers. To resolve this ambiguity comparative analysis between exploit and macro documents
andtoimprovetheperformanceofthealgorithm,wewillneed will be the subject of future work.
tocomeupwithbetterapproachestoautomaticallyclassifythe
Evasion techniques. Both the mitigation of readers’ exploita-
roles of users. It is possible that including more information
tionandinferenceofuploaders’rolescanbeevaded.Although
(i.e. geo-location or IP addresses of users) can aid in role
it is possible to evade EMET, we did not find evidence
inference significantly.
of evasion in Section III-D, presumably due to the lack of
widespread exploit mitigations in the wild. Finally, we did not
VI. DISCUSSIONANDFUTUREWORK
attempt to make our role inference techniques robust against
We presented a methodology for analyzing exploit doc- evasion by attackers or privacy-conscious users. We leave the
uments without relying on direct acquisition from targeted analysis of such evasion techniques as future work.
groups. Importantly, although we used public tools to acquire
and detect targeted samples (VirusTotal and EMET, respec-
VII. CONCLUSION
tively), our approach does not depend on any specific tool.
For example, third parties such as targeted groups could adopt WeshowedthatAVaggregatorsconstitutearich,untapped
our approach to analyze internal document attachments, as we sourceofinformationtostudytargetedattacks.Wepresenteda
have shown with the WUC dataset. Similarly, EMET could novelmethodologyrelyingonpubliclyavailabletoolsandser-
be replaced or complemented with additional mechanisms to vices for detecting exploit documents submitted to VirusTotal
detect novel exploitation techniques. Below, we discuss some for one year. We leveraged EMET in a multiple of controlled
on-going and future work enabled by this paper. environments to reliably detect exploitation of the Office and
Adobe Acrobat readers. We then mined the social engineering
Crowd-assisted detection. Common defenses deployed in
information embedded into decoy documents to identifying
email channels do not effectively block exploit documents.
hundreds of attacks against two ethnic groups (Tibet and
While the reason is not clear, we suspect it is due to a
Uyghur) and 12 countries spanning America (the US), Asia
combination of email providers using too few AV software,
(India, Indonesia, Japan, Mongolia, Myanmar, Philippines,
the lack of static signatures for exploit documents in the wild,
Russia, South Korea, Taiwan, Thailand, and Vietnam), and
and/or attackers specifically evading them. Independent of the
Europe (France). We additionally enriched our dataset with
reasons, the poor efficacy of existing defenses motivates the
threat intelligence data to perform a comparative analysis of
deployment of more robust email defenses. We are currently
the malware families used against these groups and showed
experimentingwithaChromeextensionthatuploadsdocument
thatsociallyengineeredmalwaretendstobehighlyspecialized
attachments to our analysis service and shows the detection
for specific regions and groups, and that the exploits often use
results in the GMail interface. In the background, these docu-
known vulnerabilities that rely on unpatched software (instead
ments are processed by our complete toolchain to help inform
of zero-days). Finally, we showed that we could reliably and
users of the threats they are facing. Our beta deployment
automaticallyclassifytheuploadersoftheseexploitdocuments
with Tibetan, Uyghur, and journalist users already detected
using machine learning. It is our opinion that the dearth of
hundreds of attacks. By combining automated and manual
academic research on targeted attacks is mainly due to the
detection,wehopetoachieveavirtuouscirclewherebyattacks
difficulty of acquiring datasets and we hope that this study
missed by EMET might be identified by users (e.g., because
will act as a catalyst for the community to pursue additional
ofpoorsocialengineering),enablingustoimprovemitigation.
research on that topic. To this end, we release our datasets
Office macros. We focused on exploit documents because to researchers upon request and make our analysis system
they are arguably more dangerous than macro documents available as a service so others can reproduce and extend the
which require additional user approval, can be blocked in results of this paper.
14ACKNOWLEDGMENTS [15] C. Kruegel, E. Kirda, P. M. Comparetti, U. Bayer, and C. Hlauschek,
“Scalable, behavior-based malware clustering,” in Proceedings of the
Thispaperisoneofthemostcollaborativeeffortsinitiated 16th Annual Network and Distributed System Security Symposium
by the authors. We are particularly grateful to VirusTotal, (NDSS2009),SanDiego,CA,2009.
the EMET developers, our translators, and vendors of AV [16] S.LeBlond,A.Uritesc,C.Gilbert,Z.L.Chua,P.Saxena,andE.Kirda,
software and malware sandboxes. We also thank the anony- “A look at targeted attacks through the lense of an ngo,” in USENIX
Security,2014.
mous reviewers and our shepherd, Dongyan Xu, for their
[17] W. R. Marczak, J. Scott-Railton, M. Marquis-Boire, and V. Paxson,
helpfulfeedback.ThisworkwassupportedbytheMaxPlanck
“Whengovernmentshackopponents:Alookatactorsandtechnology,”
Society and the European Research Council (ERC) under the in Proceedings of the 23rd USENIX Security Symposium, San Diego,
imPACT Synergy Grant No. 610150. Finally, we thank the CA,August2014.
Decentralized/DistributedSystems(DEDIS)groupatEPFLfor [18] Microsoft,“PLATINUM:TargetedattacksinSouthandSoutheastAsia,”
hosting our services. https://www.microsoft.com/en-us/download/details.aspx?id=51956.
[19] ——, “Enhanced Mitigation Experience Toolkit,” 2015,
http://www.microsoft.com/en-us/download/details.aspx?id=46366.
REFERENCES [20] E. Moshchuk, T. Bragin, S. D. Gribble, and H. M. Levy, “A crawler-
based study of spyware on the web,” in Proceedings of the Annual
[1] M. Bailey, J. Andersen, Z. Morleymao, and F. Jahanian, “Automated NetworkandDistributedSystemSecuritySymposium(NDSS2006),San
classification and analysis of internet malware,” in Proceedings of Diego,CA,2006.
Recent Advances in Intrusion Detection (RAID 2007), Queensland, [21] K. P. Murphy, Machine learning: a probabilistic perspective. MIT
Australia,2007. press,2012.
[2] O.Chapelle,B.Schölkopf,andA.Zien,Eds.,Semi-SupervisedLearn- [22] R. D. Paz, “PlugX: New Tool For a Not So New Campaign,”
ing. Cambridge,MA:MITPress,2006. http://blog.trendmicro.com/trendlabs-security-intelligence/plugx-new-
[3] Citizen Lab, “Malware indicators,” tool-for-a-not-so-new-campaign/.
https://raw.githubusercontent.com/citizenlab/malware- [23] F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion,
indicators/master/file-indicators.csv. O.Grisel,M.Blondel,P.Prettenhofer,R.Weiss,V.Dubourg,J.Vander-
[4] J. DeMott, “Bypassing EMET 4.1,” Bromium, Tech. Rep., February plas,A.Passos,D.Cournapeau,M.Brucher,M.Perrot,andE.Duch-
2014,http://labs.bromium.com/2014/02/24/bypassing-emet-4-1/. esnay,“Scikit-learn:MachinelearninginPython,”JournalofMachine
LearningResearch,vol.12,pp.2825–2830,2011.
[5] R. Falcone, J. Grunzweig, J. Miller-Osborn,
and R. Olson, “Operation Lotus Blossom,” [24] M. Polychronakis, P. Mavrommatis, and N. Provos, “Ghost turns
https://www.paloaltonetworks.com/resources/research/unit42-operation- zombie:Exploringthelifecycleofweb-basedmalware,”in1stUsenix
lotus-blossom.html. WorkshoponLarge-scaleExploitsandEmergentThreats,2008.
[6] FireEye, “The EPS Awakens - Part 2,” [25] A. Portnoy, “Bypassing All of the Things,”
https://www.fireeye.com/blog/threat-research/2015/12/the-eps-awakens- 2013, https://www.exodusintel.com/files/Aaron_Portnoy-
part-two.html. Bypassing_All_Of_The_Things.pdf.
[7] G.FormanandM.Scholz,“Apples-to-applesincross-validationstud- [26] N.Provos,P.Mavrommatis,M.Abu,R.F.Monrose,G.Inc,N.Provos,
ies: Pitfalls in classifier performance measurement,” SIGKDD Explor. P.Mavrommatis,M.Abu,andR.F.Monrose,“Allyouriframespoint
Newsl.,vol.12,no.1,pp.49–57,Nov.2010. tous,”in17thUSENIXSecuritySymposium(USENIXSecurity’08),vol.
2008,SanDiego,CA.
[8] L. Galang, “WMI Abused for Malware Operations,”
http://blog.trendmicro.com/trendlabs-security-intelligence/windows- [27] C.J.V.Rijsbergen,InformationRetrieval,2nded. Newton,MA,USA:
wmi-abused-for-malware-operations/. Butterworth-Heinemann,1979.
[9] M. Graziano, D. Canali, L. Bilge, A. Lanzi, and D. Balzarotti, [28] D.Sancho,J.delaTorre,M.Bakuei,N.Villeneuve,andR.McArdle,
“Needles in a haystack: Mining information from public dynamic “TakingaBiteOutofIXESHE,”http://blog.trendmicro.com/trendlabs-
analysis sandboxes for malware intelligence,” in 24th USENIX security-intelligence/taking-a-bite-out-of-ixeshe/.
Security Symposium (USENIX Security 15). Washington, D.C.: [29] D. Sancho and N. Villeneuve, “Trend Micro Exposes LURID
USENIX Association, Aug. 2015, pp. 1057–1072. [Online]. Avail- APT,” http://blog.trendmicro.com/trendlabs-security-intelligence/trend-
able: https://www.usenix.org/conference/usenixsecurity15/technical- micro-exposes-lurid-apt/.
sessions/presentation/graziano [30] T. M. R. Team, “The Taidoor Campaign: An in-depth
[10] C. Grier, L. Ballard, J. Caballero, N. Chachra, C. J. Dietrich, analysis),” http://www.trendmicro.com/cloud-content/us/pdfs/security-
K. Levchenko, P. Mavrommatis, D. Mccoy, A. Pitsillidis, N. Provos, intelligence/white-papers/wp_the_taidoor_campaign.pdf.
M. Zubair, R. Moheeb, A. Rajab, C. Rossow, K. Thomas, V. Paxson, [31] N.Villeneuve,“HidinginPlainSight:TheFAKEMRemoteAccessTro-
S. Savage, and G. M. Voelker, “Manufacturing compromise: The jan,” http://blog.trendmicro.com/trendlabs-security-intelligence/hiding-
emergence of exploit-as-a-service,” in Proceedings of the 2012 ACM in-plain-sight-the-fakem-remote-access-trojan/.
ConferenceonComputerandCommunicationsSecurity(CCS,pp.171–
[32] VirusTotal, “Virustotal file statistics,”
179.
https://www.virustotal.com/en/statistics/.
[11] S. Hardy, M. Crete-Nishihata, K. Kleemola, A. Senft, B. Sonne,
[33] Wikipedia, “The miniduke attacks are back in force,”
G. Wiseman, and P. Gill, “Targeted threat index: Characterizing and
http://www.kaspersky.com/about/news/virus/2014/The-Miniduke-
quantifyingpolitically-motivatedtargetedmalware,”in Proceedingsof
attacks-are-back-in-force.
the23rdUSENIXSecuritySymposium,SanDiego,CA,August2014.
[34] ——,“Zeus(Malware),”https://en.wikipedia.org/wiki/Zeus_(malware).
[12] H. Hu, S. Shinde, S. Adrian, Z. L. Chua, P. Saxena, and Z. Liang,
[35] WIRED,“Agooglesitemeanttoprotectyouishelpinghackersattack
“Data-Oriented Programming: On the Expressiveness of Non-Control
DataAttacks,”inIEEESymposiumonSecurityandPrivacy(Oakland you,”http://www.wired.com/2014/09/how-hackers-use-virustotal/.
2016),SanJose,CA,2016. [36] D.Zhou,O.Bousquet,T.N.L.,J.Weston,andB.Schölkopf,“Learning
with local and global consistency,” Advances in neural information
[13] A.Kharraz,S.Arshad,C.Mulliner,W.Robertson,andE.Kirda,“UN-
processingsystems,vol.16,no.16,pp.321–328,2004.
VEIL:ALarge-Scale,AutomatedApproachtoDetectingRansomware,”
in 25th USENIX Security Symposium (USENIX Security’16), Austin, [37] X. Zhu, Semi-supervised learning with graphs. CMU PhD Thesis,
TX,2016. 2005.
[14] K. Kleemola, M. Crete-Nishihata, and J. Scott-Railton, “Tibetan
uprising day malware attacks,” https://citizenlab.org/2015/03/tibetan-
uprising-day-malware-attacks/.
15