Dissecting Tor Bridges: a Security Evaluation of
Their Private and Public Infrastructures
Srdjan Matic∗†, Carmela Troncoso†, Juan Caballero†
†IMDEA Software Institute ∗Universita degli Studi di Milano
{srdjan.matic, carmela.troncoso, juan.caballero}@imdea.org
Abstract—BridgesareonionroutersintheTorNetworkwhose Research related to Tor bridges has focused on designing
IPaddressesarenotpublic.Sofar,noglobalsecurityanalysisof securePTs[1],[21],[24],[40],[45],andproposingtechniques
Torbridgeshasbeenperformed.Leveragingpublicdatasources, to discover the IP address of bridges [15], [20]. However,
andtwoknownTorissues,weperformthefirstsystematicstudy to date there has been no security analysis of the bridge
onthesecurityoftheTorbridgesinfrastructure.Ourstudycovers
infrastructureasawhole.Inthisworkwesetouttoperformthe
both the public infrastructure available to all Tor users, and the
firstsystematicstudyoftheTorbridgeinfrastructurefromase-
previously unreported private infrastructure, comprising private
curitypointofview.Westudyboththeinfrastructureofpublic
nodes for the exclusive use of those who know their existence.
bridges,i.e.,bridgesthatvolunteersprovidetobeusedbyany
Our analysis of the public infrastructure is twofold. First,
Toruser,andprivatebridges,i.e.,bridgesfortheexclusiveuse
we examine the security implications of the public data in the
of individuals who know about their existence. While public
CollecTor service, identifying several pieces of data that may
bridgesareknowntotheTorNetwork,andreportconfiguration
be detrimental for the security of bridges. Then, we measure
andusageinformationtobridgeauthorities,privatebridgesdo
security relevant properties of public bridges. Our results show
thatthe55%ofpublicbridgesthatcarryclientsarevulnerableto not report such data and thus their population and properties
aggressiveblocking;that90%ofbridgeclientsusedefaultbridges remainunknown.Asfarasweknow,thisisthefirstworkthat
that are trivial to identify; that the concurrent deployment of reports on Tor’s private bridge infrastructure.
PluggableTransportsinbridgesreducesthesecurityofthemost
securetransports;andthatrunningnon-Torservicesinthesame Public Infrastructure Analysis. To study public bridges, we
host as a bridge may harm its anonymity. leverage CollecTor [25], a public Tor service that enables
access to fine-grained longitudinal data reported by public
To study the private infrastructure, we use an approach to
bridges (among other Tor nodes). The goal of our analysis
discover694privatebridgesontheInternetandanoveltechnique
to track bridges across IP changes. We are first to measure the of the public infrastructure is twofold. First, we aim at un-
sizeoftheprivatebridgepopulation(35%discoveredbridgesare derstanding whether any of the published data can harm the
private)andtoreportexistenceofinfrastructuresthatuseprivate security of the public bridge infrastructure. We find out that
proxiestoforwardtraffictobackendbridgesorrelays.Weusea usage statistics in CollecTor can be used to rank bridges by
novelclusteringapproachtoanalyzethedifferentinfrastructures importance, e.g., by the number of clients from a specific
using proxies and bridges, examining its hosting and security country, or the amount of traffic carried for a particularly
properties. We provide an extensive discussion on the security
strong PT, which in turn allows an adversary to evaluate how
implications of our findings.
well her blocking works and to identify targets. Furthermore,
we find that the publication of which OR port a bridge uses
I. INTRODUCTION to communicate with bridge authorities can be leveraged to
The Tor Network [35] offers protection against censor- optimizeascan-basedsearchforIPaddressesofpublicbridges
ship[37],surveillance,andtrafficmonitoring[12],[23],byus- and to select specific ports to scan to find a target bridge.
ing encryption and hiding communication patterns by routing Our findings, already reported to the Tor project, have lead
traffic through several onion routers (ORs). Tor keeps secret CollecTormaintainerstostartsanitizingtheORportdata[16].
theIPaddressesofafractionoftheentryORs,calledbridges,
Second,weaimatmeasuringsecurity-relevantpropertiesof
so that it is not trivial to block traffic destined to the Tor publicbridges.Weanalyzethepopulationsizeanditsstability,
Network. To increase protection, bridges deploy Pluggable findingthatonly45%ofpublicbridgescarryusertraffic.These
Transports (PTs) [30], which disguise Tor traffic so that it bridges are long-lived and stable: their median lifetime is 4
is difficult to recognize through deep packet inspection [7], months, and they rarely change IP address. While stability
[39] or active probing approaches that connect to the bridge is good to increase bridge usage, it also means an adversary
mimicking a Tor user [41], [44]. that discovers a bridge can block it for long periods of time
without side-effects. We also observe that default bridges,
whose IP addresses can be obtained from the Tor Browser
Permission to freely reproduce all or part of this paper for noncommercial
Bundlesupportover90%ofbridgeusers,essentiallydefeating
purposes is granted provided that copies bear this notice and the full citation
on the first page. Reproduction for commercial purposes is strictly prohibited the very purpose of bridges. This holds in countries where
without the prior written consent of the Internet Society, the first-named author censorship is known to happen such as Iran or Syria, raising
(for reproduction of an entire paper only), and the author’s employer if the the issue that a censor can at any point, e.g., in response to
paper was prepared within the scope of employment.
an event like the recent coup in Turkey, disconnect the vast
NDSS ’17, 26 February - 1 March 2017, San Diego, CA, USA
Copyright 2017 Internet Society, ISBN 1-891562-46-0 majority of bridge users in the country. Finally, we analyze
http://dx.doi.org/10.14722/ndss.2017.23345PT deployment, finding that 77% of public bridges only offer II. OVERVIEW
the easy-to-detect vanilla Tor and another 15% offer PTs with
We now present an overview of the Tor Network, focused
conflicting security properties (e.g., with and without active
on the components more relevant to our work. Then, in
probingprotection).Thelatterenablesanadversarytoidentify
Section II-B, we describe open issues in Tor that an adversary
thebridgethroughtheweakerPTanddisablethestrongerPTs
can leverage to discover the IPs of hosts running bridges.
by blocking the bridge’s IP.
PrivateInfrastructureAnalysis.Tostudyprivatebridges,not A. The Tor Network
present in CollecTor or other Tor services, we first leverage
The core element of the Tor Network are Onion Routers
twoknownTorissues[4],[38]tofindtheirIPaddressesusing
(ORs),alsoknownasrelays,whichareessentiallyroutersthat
Internet-wide scans. This means that our study of the private
forward encrypted data. A user that wants to anonymously
infrastructureisopportunistic;fixingtheTorissuesweleverage
access an Internet service runs the Tor software on its client
may prevent future replication of our measurements. Rather
host. This software builds a circuit of connections over three
than launching our own scans, which could interfere with the
ORs,throughwhichtrafficisforwardedbetweentheclienthost
Tor Network, we show how scan search engines [3], [18] can
and Internet services. This circuit guarantees that the traffic
beleveragedtolaunchlarge-scalediscoveryoftheIPaddresses
is encrypted until it exits the circuit and that none of the
of bridges, with no investment in scanning infrastructure.
relays knows both the origin and the destination of the traffic.
We follow an approach to discover bridges that uses scan Some of the ORs act as directory authorities, storing contact
search engines to find candidate IP addresses that may run information for all ORs currently part of the Tor Network.
an OR; connects to them to confirm their OR role; and uses Directory authorities can be queried by clients to find relays
CollecTor data to filter out relays and classify discovered when building circuits.
bridges as public or private. Without launching any scan, our
Each OR is uniquely identified in the Tor Network by its
approachdiscovers694privatebridges,anddeanonymizesthe
fingerprint, which is the 20-byte SHA1 hash of its public key.
IP address of 35% of public bridges with clients, and 23%
ORs listen on a dedicated OR port for incoming connections
of all active public bridges, in April 2016. Of all discovered
using the vanilla Tor protocol [2]. The OR port is by default
bridges,65%arepublicand35%areprivate. Wealsopropose
set to 0 [33], i.e., a freshly installed OR will not accept
a novel technique to track known bridges across IP address
connections. To use the OR as a relay or bridge, the owner
changes. This technique leverages additional non-Tor services
needs to explicitly set the OR port in the configuration file to
(e.g., SSH) running on bridge hosts, and can be used even if a particular port, or to auto to choose a random OR port.
the two Tor issues we leverage are fixed by the Tor project.
Bridges. Since the IP addresses of all Tor relays can be
Intheprocessofdiscoveringbridges’IPs,wealsouncover
obtainedatanypointoftimefromthedirectoryauthorities,the
645 private proxies, i.e., private IP addresses that forward
TorNetworkintroducedanewORtypecalledbridge.Bridges
traffic to a backend bridge or relay, and through which users
are essentially relays that act always as first hop in a circuit,
canalsoentertheTorNetwork.Asfarasweknow,wearefirst
and whose IP addresses are not publicly advertised.
toreportontheexistenceofsuchprivateproxies.Animportant
security implication is that discovery of a private bridge or Pluggable Transports. An alternative way to prevent access
proxy enables an adversary to flag IP addresses connecting to to the Tor Network is blocking any traffic that looks like Tor
it as members of the owner organization, or the owner itself, communication, regardless of its destination. This is possible
and to geographically locate them. due to distinguishing features of vanilla Tor that are easy to
Westudytheinfrastructuresbuiltusingproxiesandbridges detect (detailed in Section II-B). After censors started deploy-
using a novel clustering approach to group ORs owned by ing deep packet inspection techniques to detect such features,
the same entity based on their configuration and IP addresses. the Tor Network introduced Pluggable Transports (PTs) [30].
We observe 3 prevalent cluster types: (I) a line of 2 up to A PT is just a wrapper for the Tor protocol that transforms
178proxiesonnearbyIPaddressesallforwardingtothesame the Tor traffic flowing between clients and bridges. Over time
backend OR; (II) a simplified version, with a single proxy multiplePTshavebeenproposedandthemostrecentprotocols
forwarding to one backend OR; and (III) a set of bridges include features such as reply protection, which guarantees
with no proxies, where bridges are either all public or all thatthebridgewillallowconnectionsanddatatransmits,only
private. In both Type I and Type II clusters, the backend OR fromusersthatpreviouslyauthenticated.PluggableTransports
is typically a public bridge or a relay (but rarely a private either imitate popular protocols (e.g., fte [5]), encapsulate Tor
bridge), and in 77% of these clusters the backend is in the trafficusingpopularprotocolslikeTLS(e.g.,meek[8]),orare
same autonomous system (AS) as the proxies. In other words, designed to look like random streams (e.g., obfs3 [28]). PTs
clusterownersseemtocontributeapublicbridgeorrelaytothe may also implement reply protection against active probing
TorNetwork,butusenearbyIPaddressestorunprivateproxies (e.g.,obfs4[1],ScrambleSuit[42]),inwhichcasetheyrequire
for their exclusive use. However, in general these proxies do users to know a shared secret before replying. A bridge can
not contribute much IP address diversity as they are hosted in offer multiple PTs, each running on its own PT port.
the same AS and typically in nearby IP addresses. In 93% of
Bridge Distribution. To use a bridge, Tor clients need to
Type III clusters, all bridges are located in the same AS, thus
obtain its endpoint information, i.e., the IP address and port
also raising concerns on lack of IP diversity.
wherethebridgelistensforconnections.Additionally,theuser
may need some extra information (e.g., the secret when using
PTs with reply protection). Since it must not be possible
for an adversary to find out the IP address of all bridges,
2BridgeDB Bridge Authority Censored Service to users that request a bridge from BridgeDB. Endpoint infor-
mation of private bridges is distributed using private channels
2
descr. shared between the operator running the private bridges and
the people using them.
7
3
B. Known Tor Issues
1
4 Relay
InthisSectionwedescribetwoknownToropenissuesthat
we leverage to discover IP addresses of bridges.
5
Bridge
6 Vanilla Tor Certificates. The vanilla Tor protocol com-
Relay
prises two phases. First, the client and the bridge perform
a TLS handshake to agree on a shared key. Then, the two
PT Tor parties exchange Tor messages encrypted with that shared
key. In principle, using a TLS handshake should make the
Network
vanilla Tor traffic look like TLS. In practice, the certifi-
Tor
cate chain sent by the bridge to the client during the TLS
Client
handshake is easily distinguishable, enabling to identify Tor
Fig.1. Bridgedistributionworkflow:(cid:182)uponinstallationthebridgesendsits handshakes among all TLS handshakes. In particular, the
descriptorswithcontactinformationtotheBridgeAuthoritythat(cid:183)assignsthe certificate chain contains a single certificate where the sub-
bridgetoBridgeDB;(cid:184)theuserrequestsabridgefromBridgeDBthroughan
ject and the issuer differ and their common names have
uncensoredchannelsuchasemail;(cid:185)BridgeDBsendsthecontactinformation
for the bridge; (cid:186) the client connects to the bridge using a PT; (cid:187) and the an easy to identify pattern: SubjectCN=www.[random].com;
bridge builds a circuit through the Tor Network. At this point, (cid:188) the client IssuerCN=www.[random].net, where [random] are base32-
cancommunicatetothecensoredservicethroughTor. encodedrandomstringsoflengthbetween8and20characters.
While the certificate is changed every 2 hours, this pattern is
always maintained. This issue is known by the Tor Project
their endpoint information needs to be carefully distributed to since at least October 2012, when a ticket was open to revise
clients. There exist two classes of bridges: public and private. the certificates used by Tor [26]. However, the conclusion was
Public bridges can be used by any Tor client. They upload that efforts to make vanilla Tor indistinguishable from TLS
theirendpointinformationtoTor’sBridgeAuthority(orbridge were superseded by the introduction of Pluggable Transports,
directory authority), which maintains a list of available public and the issue was left as “wontfix” [26]. This decision should
bridges in the Tor Network. Endpoint information for public be ascribed mainly to the choice of not changing code in core
bridges is distributed to users by the BridgeDB service, which partsofTortoavoidintroducingnewbugsandsecurityissues.
periodically receives it from the Bridge Authority. BridgeDB Furthermore, developers believed that PTs were deployed
supportstwodifferentdistributionchannels.Userscanvisitits widelyenoughforbeingconsideredthestateoftheartsolution
website1 or send it an email request2. In both cases, users can for users needing to bypass censorship.
specify the type of transport they want and whether they need
Open OR port in Bridges. The second known open issue is
a bridge that supports IPv6. Figure 1 depicts the distribution
that bridges always have an OR port open that offers vanilla
workflow for a public bridge.
Tor,evenwhentheydonotadvertisevanillaTorasatransport,
The distribution algorithm adopted by BridgeDB aims
butonlyadvertisestrongerPTs.Thus,bridgesofferingPTswill
at preventing the listing of a significant fraction of public
open one port per PT plus an additional one for the OR port.
bridges [17]: it only distributes a few bridges to each re-
This issue is also known since at least November 2012, when
questing IP address or email account, it restricts distribution
a ticket was open for it [29]. In September 2015, the ticket
to a subset of the bridge pool that changes over time, and it
priority was increased as it was considered the next major
limitsemailrequeststoaddressesfromspecificmailproviders
defense against bridge enumeration. But, it was also stated
(Gmail, Yahoo, RiseUp).
that the fix may require up to a month of work, as it requires
Tofacilitatetheuseofbridgeswithouthavingtogothrough changes to the Bridge Authority and BridgeDB, as well as
the BridgeDB distribution channels, the Tor software ships examiningmultipletoolsthatassumebridgeshaveanORport.
with a list of default bridges for different transports. The IP
addresses of these bridges are trivial to obtain, since they III. PUBLICDATASOURCES
are hardcoded in the Tor Browser Bundle configuration files We leverage two types of publicly available services as
– effectively making them relays from the point of view of sourcesofdataforanalyzingthesecurityofTorbridges.Onthe
an adversary. Thus, these bridges can be easily blocked by onehandweusedatapublishedbytheTorprojectthroughthe
adversaries.WhentheTorProjectdetectsblockingonadefault CollecTorservice[25],whichprovidesfine-grainedconfigura-
bridge, the bridge is replaced by a new default. tion information and usage statistics about individual bridges
In contrast, private bridges do not share their endpoint and relays over time. On the other hand, we use data obtained
information with the Bridge Authority and thus are opaque from scan search engines, which provide information about
to the Tor Project maintainers. Since they do not upload their services offered on machines connected to the Internet.
descriptors on the Bridge Authority, they are not advertised
A. CollecTor
1https://bridges.torproject.org/ CollecTorisaserviceofferedbytheTorNetworkthatperi-
2bridges@torproject.org odicallycollectsdatafromTorrelays,publicbridges,andother
3Tor services, and makes it available online [25]. In contrast to them to the nearest multiple of 8. Still, we can use them to
other Tor services that provide aggregated information on the rankbridgesaccordingtodifferentcriteriathatmayberelevant
wholeTorNetwork(e.g.,TorMetrics[36]),CollecTorprovides for an adversary.
information at the finer granularity of individual ORs (bridges
NetworkStatusConsensuses.Thesefilescontaininformation
or relays). In this paper we only consider data published since
on which relays are available in the Tor Network, their status,
July 2012, when CollecTor started to include statistics on
and their endpoint information (IP address and OR port), so
Pluggable Transports, until April 30th 2016.
that they can be chosen by clients. We use these consensus
CollecTor currently publishes 16 types of files. Files for files to differentiate relays from bridges.
bridges and relays have the same structure, but there are some
differences with respect to the published information [32]. In
particular,toavoideasyidentificationofbridges,theirsensitive B. Scan Search Engines
data is sanitized prior to online publication. The sanitiza- ScansearchenginesindexdatafromInternet-widescanson
tion process includes the following 5 steps: (i) replacing the anumberoftargetports.Eachportisscannedusingapopular
bridge’s fingerprint with its SHA1 hash that we call sanitized protocol on the port, e.g., TLS on 443/tcp or SSH on 22/tcp.
fingerprint,(ii)removingmostcryptographicinformation,(iii) We use scan search engines to identify IP addresses on the
removing bridge contact information, (iv) removing PT ports, Internet that serve certificates matching a specific Tor pattern.
and (v) replacing the bridge’s IP address with a format- We use two different scan search engines, described below.
preserving sanitized version that we call AIP. This AIP is of
the form 10.x.x.x, where x.x.x are the 3 most significant bytes Shodan [18]. Scans over 200 ports using different protocols
of the hash SHA256(IP || fingerprint || secret); where “secret” (e.g., TLS, SSH, HTTP, SMTP). When a supported protocol
is a 31-byte random string that changes once per month that is identified on an IP, it indexes the service’s text description
is used to compute the AIP of all bridges during that month. (and the server certificate for TLS-based services). Among
the scanned ports, 19 are scanned using a TLS handshake,
Next, we describe the 4 files we use in this paper: bridge
which we can use for identifying IP addresses running Tor
server descriptors, network statuses, and extra-info descriptors
bridges (see Section IV-B). Once we identify a bridge, we
for studying public bridges; and network status consensuses
query Shodan about data related to other services running in
for identifying relays and filter them from our results.
different ports of the same machine (e.g., SSH, HTTPS), in
BridgeServerDescriptors.Thesedescriptorsareproducedby order to discover additional bridge IP addresses.
bridges and sent to the Bridge Authority. CollecTor publishes
Censys [3]. Scans a smaller number of ports than Shodan
asanitizedversioncontaininginformationsuchasthebridge’s
using TLS (only 6) but more regularly, typically on a weekly
nickname (“Unnamed” by default), sanitized fingerprint, OR
basis. Similar to Shodan, for these 6 ports, Censys collects
port, and AIP. They may also contain contact information
TLS handshake data, including the server’s certificate, and it
of the bridge operator. Unsanitized bridge server descriptors
alsopublishestherawscandatainadditiontoallowingqueries
can also be obtained from bridges’ themselves (if their IP is
on the indexed information. We download the raw data from
known), by connecting to their OR port. Descriptors obtained
Censys and process it locally to identify IP addresses that run
directly from the bridge contain its fingerprint (rather than its
ORs and have their OR port in one of the 6 scanned ports.
sanitizedfingerprint),therealIPaddress(ratherthantheAIP),
and the bridge contact information (if provided).
IV. SECURITYANALYSISDESCRIPTION
Bridge Network Statuses. These files are produced by the
Inthissectionwedescribewhatpropertieswemeasureand
Bridge Authority and capture which public bridges are avail-
the methodology used to perform those measurements. First,
able and their current status, so they can be distributed to
we introduce the measurements on public bridges performed
users by BridgeDB. While some of their data is also available
using CollecTor data (Section IV-A). Then, we detail the
in bridge server descriptors (e.g., nickname, AIP, OR port),
approach we use to identify private bridges and proxies,
bridgenetworkstatusesdonotcontainthesanitizedfingerprint,
(Section IV-B).
but instead include the bridge uptime and the flags it has been
assignedbyTor’sauthorities(e.g.,Running,High-Bandwidth).
We use bridge network statuses to measure the bridge popula- A. Public Bridges Analysis
tion and its stability. In particular we use the Running flag to
We use the data provided by CollecTor to measure char-
determine if a bridge is active, and thus distributed to users.
acteristics of the Tor public bridge population. Beyond under-
This flag is assigned to a bridge if and only if the Bridge
standing the demographics of the public bridges, our goal is
Authority was able to reach the OR port using the vanilla Tor
toperformanin-depthanalysisintohowthefine-grained(i.e.,
protocol in the last 45 minutes [32].
per-bridge) publicly available data in CollecTor may impact
Bridge Extra-Info Descriptors. These files are sent to the the security of public bridges. One of the goals is to identify
Bridge Authority by the bridges approximately once a day data that may need to be removed or to be sanitized prior to
(every 18h by default according to [32]). These files contain its publication. We evaluate the following 5 security-relevant
the nickname and sanitized fingerprint, the PTs supported by properties:
the bridge and usage statistics (number of IPv4 and IPv6 con-
(1) Bridge Population. We measure the number of bridges in
nections, number of unique IP addresses that have connected
theTorNetworkinordertounderstandhowlargeistheattack
from a country, and number of unique IP addresses that have
surface that an adversary needs to target for enumerating all
connected using each PT). Statistics are sanitized by rounding
bridges.
4(2) Bridge Stability. We measure how stable bridges are in associated to Tor certificates described in Section II-B, then
termsoflifetimeandIPaddresschangesinordertounderstand it can be concluded that the IP address serving the certificate
the vulnerability of bridges to aggressive blocking policies. correspondstoaTorOR(oraproxytoaTorOR).Tomaximize
the number of bridges identified with a limited scan budget,
(3) Pluggable Transport Deployment. We measure the de-
we leverage the OR port distribution that can be computed
ployment of PTs over time in order to understand how long it
from CollecTor’s data and focus on the top OR ports.
takes to deploy a new PT and whether bridges offer multiple
PTs with conflicting security properties. SinceInternet-widescanscanbeexpensivetoperform,and
to avoid disrupting the Tor Network, we choose to substitute
(4) OR Port Distribution. We measure the frequency with active scanning by queries to the Censys [3] and Shodan [18]
which bridges use specific OR ports to evaluate how valuable scan search engines. Note that an adversary could similarly
this information is for an adversary that leverages the issues leverage such engines to minimize her scanning investment.
explained in II-B for discovering private bridges and proxies
Step 2 – Filtering relays. The previous step produces a
and for deanonymizing the IP address of public bridges.
set of IP addresses running ORs (or proxies) at the time of
(5) Bridge Importance. We rank bridges in terms of number the scan. Some of these IP addresses could correspond to Tor
of clients supported for different countries and PTs, showing relays, which use the same kind of certificates as bridges. We
that not all bridges are equally important. While some are usetheNetworkStatusConsensusesfromCollecTortoclassify
rarely used, others represent vital elements in terms of the IPsasrelays.AnyIPaddressthatdoesnotcorrespondtoaTor
number of clients that connect to them, or the PTs they offer. relay is a discovered IP address, i.e., running a Tor bridge (or
Beyond improving our understanding of public bridges usage, proxy) at the time of the scan.
we want to raise attention to how useful such rankings could Step 3 – Verifying IP addresses. Next, our approach con-
be for an adversary. For instance, to evaluate how effective nects to the discovered IP address on the scanned OR port
her bridge enumeration is for a given goal (e.g., “are all the using the vanilla Tor protocol to try to download a bridge
bridges offering a particular transport identified?” or “are the descriptor. If a descriptor is successfully downloaded, we say
top bridges for a country identified?”), or to target selected that the IP address is verified, i.e., still running a bridge (or
bridges, e.g., unblocked ones that are hard to identify because a proxy). Furthermore, while Tor certificates are so distinct
they run stronger PTs (e.g., obfs4, or ScrambleSuit). that we have not observed false positives from the regular
To rank bridges, we extract usage statistics from Collec- expression used in Step 1, this step guarantees that there are
Tor’s extra-info descriptors. These are published periodically nofalsepositivessinceaverifiedIPaddressspeaksthevanilla
as introduced in Section III, which means that rankings could Tor protocol.
reflect accurate real-time information and, even though they Step 4 – Identifying private proxies. To identify private
are sanitized by rounding to multiples of 8, they still allow to proxies our approach compares the verified IP address from
order bridges in terms of number of clients they serve. where a descriptorwas collected in Step 3 withthe IP address
that appears in the content of the descriptor. A discrepancy
B. Private Bridges and Proxies Analysis betweenbothIPaddressesindicatesthattheverifiedIPaddress
corresponds to a proxy that forwards traffic to a backend OR,
The goal of our analysis is to gain a better understanding
to whom the descriptor belongs, running on the IP address
of the characteristics of the private bridge infrastructure in the
leaked inside the descriptor. If no discrepancy is found, the
Tor Network, e.g., population size, configuration, and hosting.
verified IP address corresponds to a bridge.
Inparticularforprivateproxies,whichareunknowntotheTor
project3, we measure the following properties: the type of OR Step 5 – Classifying fingerprints. A downloaded descriptor
backend (i.e., relay, or public / private bridge) they forward contains the bridge unsanitized fingerprint, which can be
traffic to, their configuration with respect to the backend (e.g., hashed to obtain the sanitized fingerprint. We then search
line of proxies to one backend, one proxy per backend), the the sanitized fingerprint in CollecTor. If found, the descriptor
ASes in which they are located, and whether the proxy ASes belongs to a public bridge, otherwise it belongs to a private
are the same as the backend ASes. bridge. For public bridges, the mapping of an IP address to
a specific bridge (i.e., sanitized fingerprint) provides access to
Since private bridges and proxies do not appear in Col-
all its historical data in CollecTor.
lecTor, studying them first requires to discover them on the
Internet. We first describe our approach to identify hosts Discovery through non-Tor Services. Once a bridge is
running private bridges and proxies, and then the clustering identified,itispossibletoenumerateotherservicesofferedon
method we use to better understand their infrastructures. thehostbyperformingaverticalscanonitsIPaddressseeking
for open ports. Those additional services may provide unique
Discovering Private Bridges and Proxies. We use a 5-step
identifiers (UIDs) such as SSH keys or TLS certificates that
process to discover private bridges and proxies that leverages
may enable discovering other bridges from the same owners,
the open issues described in Section II-B.
ortrackingthebridgeacrossIPchanges.Theverticalscancan
Step 1 – Finding candidate IP addresses. The first step be replaced by querying for the IP address in Shodan, since it
consists on performing Internet-wide scans on a selected set already scans an IP on over 200 ports with popular protocols.
of ports, starting a TLS handshake on each IP:port pair, and Once UIDs are available, periodic queries to Shodan using
collectingtheTLScertificatewhenthehandshakesucceeds.If those UIDs can be used to find new IP addresses where the
thecertificatecollectedfromanIPaddressmatchesthepattern UIDs have been observed. Once a candidate IP appears, Steps
2–5abovecanbeapplied.ForpublicbridgestheORportfrom
3ThisfactwasconfirmedinaprivateconversationwithTordevelopers
5where to try to download the descriptor can be obtained from 18k
16k CollecTor. For private bridges we first test the OR port of the
14k
bridge from where the UID was original found, in case it has 12k
not changed. Otherwise, Shodan is queried for open ports on 10k
the candidate IP address with a TLS certificate matching the 8k
6k
Tor pattern. If that also fails, a vertical scan can be performed
4k
on the candidate IP (using TLS or the Tor protocol).
2k
0
Clustering. To better analyze our results, we cluster public Jul'12 Jan'13 Jul'13 Jan'14 Jul'14 Jan'15 Jul'15 Jan'16
Months
bridges, private bridges, and proxies into groups belonging
to the same organization. Such clustering enables us to study
thecharacteristicsofbridge/proxyinfrastructuresinuse.More
precisely, we cluster tuples of (verifiedIP, port, descriptor)
where verifiedIP and port correspond to the Internet endpoint
from where the descriptor was downloaded. Our clustering
uses 5 Boolean similarity features between tuples:
(1) Same fingerprint. Tuples with descriptors containing the
same fingerprint come from the same bridge, regardless if
collected from different verified IP addresses, and thus are
similar.
(2) Similar nicknames. Nicknames are chosen by the bridge
owner. Hence, we consider similar tuples with descriptors
containing resembling non-generic nicknames. That is, two
tuplesaresimilarifthenicknamesareidenticalandnotgeneric
(“Unnamed”, “default”, “anonymous”, “ididntedittheconfig”,
“ididedittheconfig”), or if they have the same prefix of length
5 or more characters that is not generic (“torat”, “relay”,
“ec2bridger”4), e.g., mybridge3, mybridge4.
(3) Same contact information. The contact information is
a free-text string selected by the bridge owner that often
contains an email address, but may have other content. We
consider similar tuples with descriptors with identical, non-
empty, contact information.
(4) Similar verified IP address. This feature captures that
similarly configured bridges on nearby IP addresses likely
belong to the same owner. Tuples whose verifiedIP is in the
same/24subnetandforwhichthedescriptorscontainidentical
valuesfor5fields(orport,socksport,dirport,Torversion,OS)
are similar.
(5) Similar IP address in descriptor. Tuples whose IP in the
descriptor is the same or that the IP is in the same /24 subnet
and for which the descriptors contain identical values for 5
fields (orport, socksport, dirport, Tor version, OS) are similar.
Twotupleswithatleastoneoftheabovefeaturesreturning
similar are placed in the same cluster. For each cluster,
we obtain statistics such as the number of fingerprints, IP
addresses, private bridges, public bridges, and proxies. We
also compute statistics on the hosting ASes used in the cluster
and study cluster ownership based on the contact information
optionally available in the descriptors of the cluster’s bridges.
V. PUBLICBRIDGESANALYSIS
In this section we analyze the data published by CollecTor
about public bridges regarding features that may impact the
Tor bridge infrastructure security.
4ThisgenericprefixisduetothenowdeprecatedTorCloudimage[31].
stnirpregnfi
#
active
"ki" bridges
inactive
active with clients
TorMetrics estim.
Fig. 2. Number of active (bottom bar in green), inactive (top bar in red),
andKi(middlebarinyellow)sanitizedfingerprintsovertime.Thetwolines
correspondtothemonthlyaveragenumberofbridgesreportedbyTorMetrics
(blackline)andthenumberofbridgeswithclients(bluelinewithcircles).
A. Bridge Population
WeuseCollecTortocomputethenumberofpublicbridges
in the Tor Network. We uniquely identify public bridges
and relays by their sanitized fingerprint, assuming that ORs
change fingerprint infrequently (an assumption we validate in
Section VI-A).
We split the sanitized fingerprints in CollecTor into active
if they appear at least once with the Running flag (explained
in Section III-A) in a bridge network status in a month,
and inactive otherwise. Figure 2 shows the evolution over
time of the number of active (green bar) and inactive (red
bar) sanitized fingerprints in the Tor Network. The bridge
populationsignificantlyvariesovertime:itsteadilygrowsfrom
2.8K active public bridges in July 2012 up to a maximum
of 12.7K in July 2014, and starts declining in January 2015
falling to 5.3K by April 2016. We have had discussions with
members of the Tor project about this recent decline in bridge
population, but the reason remains unclear.
Theyellowmiddlebarrepresentsaclusterof3bridgesrun
by the same organization, that we call by their nickname, Ki,
whichchangefingerprintuptoonceanhour(butkeeptheirIP
addresses stable, see Section VI). The Ki cluster produced a
fewdozenfingerprintsinJuly2012,jumpedtoafewhundreds
in December 2012 and to a few thousands in February 2014.
In March 2016, those 3 bridges are responsible for 32% of all
fingerprints,correspondingto7%oftheactivefingerprintsand
68% of the inactive fingerprints, as most of their fingerprints
do not live long enough to obtain the Running flag. After
discountingthoseextraneousfingerprints,thenumberofactive
fingerprints in April 2016 is slightly over 5K.
The figure also shows two lines representing the monthly
averagenumberofbridgesreportedbyTorMetrics[36](black);
and the number of active bridges with at least one client (blue
with circles). These two values are very close to each other,
though not the same. The blue line represents less than 50%
of the active bridges in a month, indicating that more than
half of the active bridges do not serve users. We examine this
discrepancy in the next subsection.
We use both the number of active bridges (bottom green
bar) and the number of active bridges with at least one client
(blue line) as different baselines for other measurements.
B. Bridge Stability
InthissectionweuseCollecTortostudyhowstablepublic
bridges are by first measuring their lifetime (i.e., for how long
61 0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
0 2 4 8 10 12 14 16 18 20 24 26 28
Months
segdirb
fo
noitcarF
X: 750 1 Y: 0.9968 0.9
0.8
0.7
0.6
0.5
0.4
X: 116
0.3 Y: 0.5138
0.2
with at least 1 client 0.1
0 with or without clients 1 5 10 15 20 25 30 35 40 45 50
IP addresses
Fig. 3. CDF of bridge lifetime over time (Jul’12 - Apr’16) for all active
bridges(redsolid),andbridgesthathavehadatleastoneclient(bluedotted).
they are active) and then how often their IP address changes
over their lifetime.
BridgeLifetime.Wedefinethelifetimeofabridgeasthetime
windowwhenthebridgewasactive,i.e.,thetimedifference,in
days, between the last and first time a descriptor for an active
bridge becomes available in CollecTor. Figure 3 captures the
CDF of the bridges’ lifetime in our study period for all active
bridges(redsolidline)andforbridgeswithclients(bluedotted
line). We see that 67% of the active bridges live for less than
one day, and thus are unlikely to be used by clients. This
explains the difference between the bridges with clients and
the active bridges in Figure 2. However, bridges that are used
by clients are quite stable. Their median lifetime is 116 days
(roughly 4 months) and 25% of them live over one year.
Bridge IP Changes. Next, we evaluate how often public
bridges change IP address. As explained in Section III-A,
bridges’ IP addresses are replaced in CollecTor with its AIP
forprivacyreasons.Yet,theAIPconstructionalgorithm,which
every month assigns new AIPs to bridges associated to the
monthly secret, allows to compute the number of IP changes.
It suffices with counting the number of AIPs assigned to a
bridge’sfingerprintandsubtractthenumberofmonthchanges
in its lifetime.
Figure4showstheCDFforthenumberofIPaddressesfor
all active bridges (blue line with circles) and for bridges with
at least one client (red line with crosses). The figure shows
that 67% of the active bridges have a single stable IP. This
number grows for bridges with clients where 84% of bridges
never change IP address, and 90% had at most one IP address
change.
These results show that 55% of the bridges IPs are short-
lived and thus these bridges do not carry users. On the other
hand, bridges that do carry users are quite stable. They live
for roughly 4 months and 84% of them never change IP
address.Theseresultshaveimportantimplicationsforacensor:
they show that current policies that remove blocks for bridge
IP addresses every 25 hours [7] are extremely polite and
adversaries could be performing a more aggressive blocking
(up to months), without the risk of creating too many false
positives.
C. Pluggable Transports Deployment
We now examine PT deployment across time and bridges.
Figure 5 depicts the number of active public bridges, in
segdirb
fo
noitcarF
X: 3 X: 10 Y: 91.57 Y: 94.62 X: 50
X: 10 Y:96.74
X: 3 Y: 89.6 Y: 80.6
with at least 1 client
all active fingerprints
Fig.4. CDFofnumberofbridgeIPaddressesforallactivebridges(bottom)
andforbridgeswithatleastoneclient(top).
105
104
103
102
10
0
Jul'12 Jan'13 Jul'13 Jan'14 Jul'14 Jan'15 Jul'15 Jan'16
Months
stnirpregnfi
#
meek fte obfs2 obfs3 obfs4 scramblesuit vanilla
Fig.5. Numberofactivefingerprintsofferingeachtransportovertime(note
they-axislogarithmicscale).
logarithmicscale,offeringeachtransportovertime.Itindicates
that the most popular transport is vanilla Tor. Although its
popularity has started to slowly decrease, it is still offered
by 77% of all bridges in April 2016. The timeline shows
how the deployment of obfs4 coincides with the decline of
the deprecated obfs2 [34]. It also shows that after a PT is
introduced, it takes between 4 months and one year to reach
a stable number of 1K–2K bridges offering it. Surprisingly,
deployment of different PTs does not improve beyond that
stability point, an issue that we examine next.
vanilla
fte
obfs2 obfs3 obfs4 meek ssuit
Bridges
(cid:88) - - - - - - 6,213(77.1%)
- - - (cid:88) (cid:88) - (cid:88) 524(6.5%)
- - - (cid:88) - - - 510(6.3%)
- (cid:88) - (cid:88) (cid:88) - (cid:88) 353(4.4%)
- - - (cid:88) (cid:88) - - 242(3.0%)
- - - (cid:88) - - (cid:88) 129(1.6%)
- - - - (cid:88) - - 117(1.4%)
- - (cid:88) (cid:88) - - - 72(0.9%)
- - (cid:88) (cid:88) (cid:88) - - 27(0.3%)
- - - - - - (cid:88) 22(0.3%)
- (cid:88) - (cid:88) (cid:88) - - 20(0.2%)
- (cid:88) - - - - (cid:88) 6(<0.1%)
- - (cid:88) - - - - 5(<0.1%)
- (cid:88) - - - - - 4(<0.1%)
- - - - - (cid:88) - 3(<0.1%)
- (cid:88) - - (cid:88) - - 2(<0.1%)
TABLEI. MOSTFREQUENTTRANSPORTCOMBINATIONSINAPRIL
2016.COMBINATIONSOFFEREDBYASINGLEBRIDGEORBYINACTIVE
BRIDGESARENOTINCLUDED.
A bridge can offer multiple transports. Table I shows the
most popular transport combinations in April 2016. Rows in
gray highlight that a single transport is offered. Surprisingly,
77% of the bridges only offer vanilla Tor, a transport that is
trivial to identify through traffic analysis. The 1K–2K bridges
offeringobfs3,obfs4,andScrambleSuit(ssuit)respondstothe
deployment of multiple transports on the same bridges.
7The combination of PTs with different security properties 16k
14k raisesseveralsecurityconcerns,sincethesecurityofthebridge
12k
is only as strong as its weakest link. First, an adversary de-
10k
tectingtheweakesttransportandblockingtheIPdisablesalso
8k
strongertransportsforfree,e.g.,forthenearly100bridgesthat 6k
offer obfs3 or obfs4 in combination with obfs2, which is dep-
4k
recated and trivial to identify through traffic analysis. Second, 2k
it allows an adversary to confirm a bridge, even in presence 0
Jul'12 Jan'13 Jul'13 Jan'14 Jul'14 Jan'15 Jul'15 Jan'16
of transports that implement reply protection. For example, Months
for the most popular combination obfs3+obfs4+ScrambleSuit,
offered by 524 bridges, an adversary can confirm a bridge,
e.g., identified through traffic analysis [39], through a vertical
scan using obfs3 on the candidate IP address.
D. OR Port Distribution
In this section we use CollecTor to find the most common
OR ports employed by public bridges. If an adversary knows
thatthemajorityofbridgesarerunningonafewORportsshe
can use them as targets for deanonymization via Internet-wide
scanning, as described in Section IV-B.
First,westudythestabilityofabridge’sORport,i.e.,how
oftenbridgeschangetheirORport.Wefindthat99%ofactive
fingerprints never change their OR port during their lifetime.
Next,westudytheORportdistribution.Duringourobser-
vationperiod,bridgesused7,985differentORports.However,
we observe that four ports (443/tcp, 8443/tcp, 444/tcp, and
9001/tcp) are chosen much more often than the rest, while all
other OR ports are used only by a small subset of bridges.
Figure 6 reports the OR port usage over time. The top
linecorrespondstothetotalnumberofactivefingerprints.The
dashed (blue) line directly below corresponds to the top 4 OR
ports aggregated. Each solid line below corresponds to one of
the top 4 OR ports. On average, the top 4 OR ports are used
by82%ofthefingerprintsobservedeachmonth,althoughthis
fraction has decreased from 95% in March 2013 to 82% in
April2016.Themostcommonportis443.Weconjecturethat
its popularity is due to two main reasons: it is the default
HTTPS (HTTP over TLS) port, which makes it less likely
for TLS-looking vanilla Tor traffic to stand out, and it is a
port typically open in firewalls so it can be reached by most
users.Weassumethatforsimilarreasons8443,thealternative
HTTPS port, is the second most popular port. The third most
popular port, 9001, is the standard Tor port.
Port444isaspecialcasesinceinprincipleisassociatedto
theSimpleNetworkPagingProtocol(SNPP),anotsopopular
protocol. However, according to CollecTor data, roughly 3K
active fingerprints are using it on April 2016. The reason
for this is that this OR port is used by the Ki bridges that
change fingerprint often, as introduced in Section V-A. Those
Ki bridges artificially inflate the usage of this OR port, a
behavior that does not manifest on other OR ports.
In summary, the OR port distribution shows that an ad-
versary could deanonymize 71% of all active public bridges
by scanning 3 OR ports (443, 8443, 9001) and 82% if we
consider the Top 4 with the anomalous 444. While 443 usage
has declined over time, the top 4 OR ports usage closely
follows the total active bridges, thus OR port diversity does
not seem to be improving over time.
After we reported our findings to the Tor project, they
opened a ticket to sanitize the OR port in CollecTor [16] so
stnirpregnfi
evitca
#
443 444
9001
8443
Top-4
all Running
Fig.6. Top4ORportsusedbyactivepublicbridgesovertime.Thetopdotted
linerepresentsallactivepublicbridges;thedashedlinebelowcorrespondsthe
Top-4ORportstogether;andeachsolidlinerepresentsoneORport.
CC Used Top 20 Total
Brid. Clients (Default) Default
cn 712 4,265 45.6% (44.0%) [14] 44.3% [18]
ir 941 26,479 86.6% (86.1%) [16] 86.1% [18]
sy 74 449 76.9% (68.0%) [14] 69.2% [17]
uk 943 16,723 84.1% (84.0%) [17] 84.0% [19]
us 1,496 17,911 58.7% (56.7%) [ 6] 56.9% [11]
All 2,213 301,009 91.71% (91.4%) [17] 91.4% [23]
TABLEII. BRIDGEIMPORTANCEPERCOUNTRY(APR’16)
that our experiments cannot be replicated.
E. Bridge Importance
As introduced in Section III-A, not all bridges are equally
importantandCollecTorcanbeusedtorankbridgesaccording
to different metrics. We now evaluate two example scenarios:
rankingbridgesbycountryusageandbyPTusage.Thesetwo
rankings are very relevant to, for instance, a censor that wants
to know how many (or which) bridges have to be blocked
to minimize the likelihood of users connecting outside the
country; or to block a strong PT that it cannot be identified
through traffic analysis or active probing. For our evaluation
weselect5countries:threewhereInternetcensorshipisknown
tooccur[9]:China(cn),Iran(ir)andSyria(sy);andtwowhere
monitoring is a real threat: United Kingdom (uk) and United
States (us) [12], [23].
Ranking per Country. Table II summarizes the ranking
per country for April 2016. For each country it shows the
country code, the number of bridges that received at least
one connection from users located inside the country, the
average number of clients per day served by those bridges,
the percentage of these clients served by the Top 20 bridges,
with the fraction served by default bridges5 in parentheses,
and the total traffic carried by default bridges. For the last
twocolumnsthenumberofdefaultbridgesisshowninsquare
brackets. The All row at the bottom corresponds to statistics
for all bridges in CollecTor regardless of user location.
TheTop20bridgestatisticsshowthatafewbridgeshandle
the majority of clients. The Top 20 support more than 91% of
traffic for the full Tor Network, and more than 75% for all
countries except China and the US, where clients are better
spread among available bridges. The Top 20 is dominated by
default bridges. In fact, the Top 14 bridges in the full Tor
Network, and also in all countries except the US, are default
5WeusethedefaultbridgesavailableintheTorBrowser5.5.5distribution.
8PT Used Top 20 Total RK Port Clients BRs Ranking per Country
Brid. Clients (Default) Default ( % ) [Default] cn ir sy uk us
vanilla 1,967 14,939 5.6% ( 0.0%) [ 0] 1.2% [21] 1 6666 23.805% 1 [1] 2 5 6 1 1
obfs2 13 158 100.0% (25.8%) [ 1] 25.8% [ 1] 2 42506 14.096% 1 [1] 6 3 4 3 -
obfs3 898 63,088 92.0% (90.8%) [ 4] 90.8% [ 4] 3 60906 13.877% 1 [1] 7 4 3 2 -
obfs4 792 204,095 95.4% (94.7%) [11] 94.7% [11] 4 63848 13.730% 2 [2] 5 6 5 4 4
ssuit 467 4,483 52.4% (46.3%) [ 1] 46.3% [ 1] 5 44445 9.485% 1 [1] 8 2 2 5 2
meek 4 22,685 100.0% (∼100%) [ 3] ∼100% [ 3] 6 8008 7.173% 1 [1] 4 54 - 6 -
TABLEIII. BRIDGEIMPORTANCEPERPT(APR’16). 7 29001 5.027% 2 [1] 10 1 1 7 3
8 9002 2.827% 2 [1] 1 7 8 8 -
9 1512 1.206% 1 [1] 3 8 14 9 125
10 9001 0.263% 309 [6] 19 9 7 10 5
11 29309 0.045% 1 [0] 36 10 - 42 10
bridges. Thus, we can conclude that default bridges carry the 12 27134 0.041% 1 [0] 15 13 18 12 16
vast majority of clients in the Tor Network. 13 20506 0.040% 1 [0] 59 19 19 11 7
14 12497 0.040% 1 [0] 57 14 - 42 9
Thisdominantchoiceofdefaultbridges,whicharetrivialto
15 59760 0.039% 1 [0] 18 19 - 33 11
deanonymizethroughtheconfigurationfilesshippedintheTor
16 60841 0.039% 1 [0] 49 15 - 50 16
Browser Bundle, means that in the majority of cases clients 17 53885 0.038% 1 [0] 15 36 - 50 14
route their traffic through known bridges, thus defeating the 18 14769 0.035% 1 [0] 38 61 - 11 6
very purpose of bridges. 19 34678 0.033% 1 [0] 37 12 - 66 8
20 19924 0.032% 1 [0] 12 19 - 19 14
Ranking per PT. Table III summarizes the ranking per PT TABLEIV. ORPORTRANKINGFORMOSTUSEDBRIDGES(APR’16).
for April 2016. Its structure is the same as that for Table II.
The results indicate that while vanilla Tor is the most widely
deployed transport, most clients opt for more recent PTs such
as obfs4, obfs3, and meek. ScrambleSuit (ssuit) is not very Therankingpercountryshowsthat,eventhoughingeneral
popular and, as expected [34], obfs2 has almost completely default bridges dominate in all countries, the popular non-
stopped being used. default bridges can significantly vary across countries. For
example, in Syria the globally popular bridges have little
WeobservethattheTop20bridgeshandlealmosttheentire
overlap with the popular ones in that country. This suggests
userbaseforobfs4,obfs3,andmeek.Thevastmajority(90%–
that a state-level adversary can use CollecTor to compute a
100%)ofclientsusingthese3transportsarecarriedbydefault
ranking of, currently unblocked, OR ports that she should
bridges. The Top 20 bridges do not dominate vanilla Tor and
target next through Internet-wide scanning to maximize the
ScrambleSuit,likelyrelatedtonodefaultbridgebeingmarked
blocked population in her country.
as offering vanilla Tor in the Tor client configuration files and
only one offering ScrambleSuit. Still, the lone default bridge Another observation (not shown in Table IV) is that all
offering ScrambleSuit carries over 46% of the clients using Top 20 non-default bridges incur in the problem flagged in
that transport. Section V-C of offering multiple PTs with different security
properties.
OR Port Distribution per Country. In Section V-D we have
studiedtheglobalrankingofORportsandhaveshownthatthe
top 3 OR ports are used by 71% of all public bridges. Here,
VI. PRIVATEBRIDGESANDPROXIESANALYSIS
we analyze whether the top bridges by number of clients also In this section we analyze private bridges and proxies in
follow that distribution. theTorNetwork.SectionVI-Apresentstheresultsofapplying
the bridge discovery approach described in Section IV-B on
Table IV contains the Top 20 OR ports by percentage of
theTorNetworkduringApril2016.Then,inSectionVI-Bwe
clients served in the full Tor Network. For each OR port it
analyze the discovered bridge/proxy infrastructures.
reportstherank,thepercentageofclientssupportedbybridges
using that OR port, the number of bridges using that OR port
(and how many are default bridges in square brackets), and A. Discovering Private Bridges & Proxies
therankingoftheORportwhenonlyconsideringconnections
Since we do not run our own scans, we can only apply the
from a particular country.
bridge discovery to 7 out of the top 10 OR ports, which are
ThetableshowsthatthechoiceofORportamongpopular scannedbyeitherCensysorShodanusingTLSinApril2016.
bridges does not resemble the distribution of OR ports in the Table V summarizes our results. For each OR port we report:
overall bridge population. The Top 6 OR ports correspond the number of scans available on that port in April 2016, the
exclusivelytodefaultbridges.ThefirstORportsintheTop10 source of the scanning data (either Censys or Shodan), the
globaldistributionappearatrank8(9002)andrank10(9001). first and last scan dates, the date when verification started,
In both cases, the majority of the clients served on those ports the number of discovered bridge IP addresses, i.e., those
correspondtodefaultbridges,e.g.,forport9001thepercentage where scan data shows a certificate matching the Tor pattern
of clients served by the 303 non-default bridges is negligible. and that are not relays, the number of verified IP addresses
From that point, we see that the most popular bridges run in (and fingerprints in parentheses) from which we were able to
random high ports. These results suggest that owners of non- downloadabridgedescriptor,andthesplitofverifiedIPs(and
defaultpopularbridgesarecarefultosettheORportselection fingerprints) into public bridges, private bridges, and private
to random, but those of less popular bridges are not as careful proxies. Note that we distinguish public and private bridges
in this respect. through fingerprints, but proxies by IP address, as proxies are
9Port Scans Source Scan Dates Verif. Date Disc. Verified Public Private Proxy
443 9 Censys 04/04–04/28 04/08 2,448 1,315 (1,122) 897 (860) 263 (262) 164
993 2 Censys 04/20–04/27 04/21 19 16 (13) 11 (11) 3 (2) 2
995 3 Censys 04/15–04/29 04/23 14 14 (13) 10 (10) 3 (3) 1
444 1 Shodan 04/19–04/19 04/19 14 12 (101) 8 (97) 1 (4) 4
8443 1 Shodan 04/21–04/21 04/22 191 156 (149) 148 (148) 1 (1) 7
9001 1 Shodan 04/17–04/17 04/18 2,001 1047 (587) 165 (166) 415 (421) 468
9002 1 Shodan 04/23–04/23 04/23 23 19 (5) 1 (1) 4 (4) 14
All 17 All 04/04–04/29 04/08 4,684 2,554 (1,986) 1,239 (1,292) 684 (694) 645
TABLEV. BRIDGEDISCOVERYINAPRIL2016
not Tor ORs and have no fingerprint. The last row shows the Scanning those UIDs in Shodan on May 18 provides us
aggregate results for all ports. with2,248candidateIPs,ofwhichonly248returnadescriptor.
After filtering out relays and already known IPs, we found 9
Overall, we discover 694 private bridges and 645 private
newbridgeIPaddressesthatwerenotobservedinApril2016.
proxies, which do not appear in CollecTor. Additionally, we
For example, one is located in Amazon EC2 and corresponds
deanonymizetheIPaddressof1,292publicbridges.According
to a bridge that was running on another IP in April 2016, but
to CollecTor data, these correspond to 35% of public bridges
likely changed IP because the EC2 instance was restarted, as
with clients (23% of all active public bridges) in April 2016,
EC2 assigns VM IP addresses from a shared pool.
excludingKibridges.Onthe7ORportsexamined,thebridge
populationcomprises65%publicand35%privatebridges,i.e., Fingerprint Stability Validation. The discovery of bridges,
one in three bridges is private. whichprovidesuswithaccesstotheirunsanitizeddescriptors,
There exist several reasons why we do not deanonymize allows us to validate the assumption that OR fingerprints
a larger fraction of public bridges in CollecTor. First, we rarely change, and thus are indeed good bridge identifiers. We
can only deanonymize bridges on the 7 OR ports scanned periodically (roughly once a day until June 3rd, 2016) try to
by Censys or Shodan. Second, for most ports we only have download a descriptor from verified IP addresses. Then, we
one scan in the second half of the month. Hence, we cannot measurethefrequencyoffingerprintchangesinthedescriptors
discover short-lived bridges active only in the first half of the for bridge (i.e., non-proxy) IPs found in April 2016.
month.Furthermore,wehaveshownthat55%ofactivebridges Overall, 94.1% of the bridge IP addresses did not change
are short-lived; thus, while they may appear as candidate IPs, fingerprint, 5.5% changed fingerprint once, and 0.4% changed
we may not be able to confirm them because they no longer fingerprint multiple times. The bridges with multiple fin-
live when we try to download a descriptor from them. gerprint changes include the 3 Ki bridges, which present a
We note that the aggregated results differ slightly from the differentfingerprinteverytimeweconnecttothem(onacloser
sumofallrowsfortworeasons.First,afewproxieshavemore look we find that they change fingerprint roughly every hour).
than one OR port open and thus their IPs are counted in more Furthermore, we observe that over 70% of the IP addresses
than one row. In addition, a few IP addresses were observed withfingerprintchangesbelongto2clustersofprivatebridges
hosting a proxy at some point in the month and hosting a each using multiple nearby IP addresses. These IPs change
bridge at other times. Also, note that the number of verified fingerprint on the same dates, so it is possible that bridges in
fingerprintsforport444issignificantlylargerthanthenumber each cluster were reassigned IP addresses on those dates.
ofverifiedIPs.Thisisbecause6oftheseIPs(3proxiesand3 Thesenumbersconfirmthatthevastmajorityofbridgesdo
publicbridges)belongtotheKiclusterthatchangesfingerprint
notchangefingerprintovertime.Thus,bridgefingerprints(and
periodically. sanitized fingerprints in CollecTor) can be used as identifiers.
Discovery through non-Tor Services. Next, we evaluate if Hosting. The discovered proxies are hosted in 166 ASes, the
additionalservicesrunningonbridgehostscanbeleveragedto private bridges in 139, and the public bridges in 385. The top
track bridges across IP address changes. For this, we assume 10 ASes for both bridges and proxies are dominated by the
an adversary discovered a bridge by any means, (e.g., the ASes used by the top clusters we find in the next Section. For
approach in Section VI-B, querying BridgeDB, or adding a bridges, the top 10 ASes comprise: 5 popular cloud hosting
middle OR in the Tor Network [15]), but the open OR port providers, 2 broadband residential ISPs, and 3 large ISPs that
issue we leverage has been solved by the Tor project. provide multiple services. While overall there seems to be
First, we measure the percentage of bridges in Table V enough IP diversity among the bridge population, in the next
with additional ports open (beyond the OR port). For this, we section we show that individual clusters exhibit less diversity.
queryeachverifiedIPaddressatShodan. Overall,621(24%)
Contact Information.Bridgedescriptorsmaycontaincontact
of the 2,554 verified IPs offer at least one additional service
information that could reveal ownership. We find 267 email
(beyond the OR port) and 10% more than one. In total, we
addresses in the descriptors collected from the 1,986 public
observe 101 additional ports. These numbers indicate that it is
and private bridges. Of those, 69 have a domain name from
notuncommontorunotherservicesonaTorbridge.Themost
a public email service provider (e.g., Gmail, Yahoo), and thus
common additional services are SSH on ports 22 and 2222,
cannot be easily used to establish ownership. The other 198
Web services on ports 80 and 443, and RPC port mapper on
email addresses contain 191 domain names, of which 175
111. As unique identifiers (UIDs), we use SSH keys on ports
return a valid mail server IP address through a DNS MX
22 and 2222 and certificate serial numbers on 443.
query,therestwediscardasinvalid.Those175domainsappear
10IPs Bridges
# Type All Proxy Pub. Priv. ASNs Contact
Backend 1 I public 179 178 1 0 1,1,(cid:55) (cid:88)
2 III private 164 0 0 164 0,1,(cid:55) (cid:88)
3 I relay 72 71 0 0 1,1,(cid:88) -
4 III private 63 0 0 63 0,1,(cid:55) -
5 III public 53 0 53 0 0,16,(cid:55) (cid:88)
Proxy TABLEVI. STATISTICSONTOP5CLUSTERS.
relay (37 clusters) or a public bridge (7 clusters). A similar
Client
trend applies to Type II clusters. In all Type I clusters all
proxiesintheclusterarehostedinthesameAS,andareoften
Type-I Type-II Type-III located in nearby and even consecutive IP addresses. In 77%
of Type I and Type II clusters, the proxies and the backend
Fig.7. Thethreemostcommonclustertypes. areinthesameAS.Thecaseswhereproxiesandbackendsare
in different ASes could indicate organizations free-riding on
publicORstoperhapsavoidconfiguringtheirownbridge.We
in descriptors from 307 bridges: 187 public and 120 private. observe only 3 Type I clusters with private backend indicating
Thisindicatesthat,contrarytowhatcouldbeexpected,private that, since proxy IPs are already private, there is no benefit on
bridges often provide contact information that may reveal the a private backend.
organizations behind the bridge. This enables an adversary to
In Type I and Type II clusters, proxies seem to be used by
identify Tor clients connecting to the bridge as members of
owners of public bridges and relays to keep a few IPs (only
that organization.
one for Type II) private for their own use. Those proxies do
not provide much IP diversity; once a proxy is known, an
B. Bridge/Proxy Infrastructures adversary could scan the nearby IP addresses to find other
WeclusterbridgesandproxiesasdescribedinSectionIV-B proxies and the backend. Furthermore, when the backend is a
to better understand how they are used. Out of 41,359 tuples relay, an adversary could scan IP ranges hosting relays to try
(verifiedIP, port, descriptor), collected by connecting period- to find proxies forwarding to it. It is also important to note
ically to the 2,554 verified IP addresses, we obtain 1,343 thatwhenthebackendisarelayonlyvanillaTorissupported,
clusters, of which 75% are singletons, i.e., contain a single as relays do not run PTs.
bridge and no proxies. Type III clusters most often comprise public bridges (69
We identify 5 cluster types, as well as mixed clusters with clusters) but can also have private bridges (19 clusters). In
subclusters of those types. The 3 most common cluster types 93% of Type III clusters all bridges are in the same AS. This
are shown in Figure 7. Type I corresponds to a line of proxies indicatesthatonceanownerhasestablishedarelationshipwith
(from 2 up to 178) that all forward to the same backend. Type a hosting provider, it is easier to install multiple bridges on
II is a Type I cluster with a single proxy. For both types, the that provider. Still, there are a few Type III clusters with good
backend can be a private bridge, a public bridge, or a relay. diversity. For example, the cluster at Rank 5 has 53 public
Type III is a cluster of multiple bridges belonging to the same bridges on 16 ASes. We observe that some Type III public
owner, without proxies. Type III clusters can have only public clusters belong to organizations that also contribute relays to
bridges or only private bridges. theTorNetwork.Anotherpublicclusterbelongstoacomputer
security company.
Not shown in Figure 7 are the rarer Type IV and Type V.
Type IV corresponds to the same bridge running on multiple The mixed clusters show that our clustering can capture
IPs at the same point in time. This differs from a bridge multiple infrastructures from the same owner. An example of
changing IP over time where we would observe the same a mixed cluster is the Ki cluster, which comprises a Type
fingerprint at different IPs on different days. This cluster I subcluster with 2 proxies forwarding to a public bridge,
type could be a result of cloning an image with an installed another Type II subcluster with one proxy forwarding to one
bridge on multiple VMs. Type V corresponds to a proxy load- public bridge, and a singleton subcluster with a public bridge.
balancing across multiple backend IPs. In most cases, the Both bridges and proxies in the cluster keep their IP address
backend IPs host the same bridge (fingerprint), which runs stable, but bridges change fingerprint hourly.
on a Windows host. This is similar to a fast-flux network We conclude that proxies are not generally used for load-
where residential hosts run bridges, and the proxy provides balancing across multiple backend ORs as there are only 10
IP stability to access them. Type V clusters compared to 185 Type I and Type II clusters.
We develop a set of rules to automatically classify non- Proxies do not seem to be used for OR port diversity either.
singletonclusters.Theclusterclassificationoutputs:47clusters We observe only 13 proxy IPs forwarding on multiple ports.
as Type I (37 relay, 7 public, 3 private); 138 as Type II (94 Of those, 10 belong to 2 clusters where the same backend IP
relay, 29 public, 15 private); 88 as Type III (69 public, 19 runs two different bridges on different ports and a proxy port
private);43asTypeIV;10asTypeV;and16asmixedclusters forwards always to the same backend OR port.
containing at least two subclusters of other types.
TopClusters.TableVIprovidesdetailsfortheTop5clusters.
Type I clusters most often have proxies forwarding to a Foreachcluster,itshowstherankbynumberofIPaddresses;
11thetype;thetotalnumberofIPaddresses;thenumberofproxy 2015 [29], the fix has not happened yet, as it requires changes
IP addresses; the number of public and private bridges (by to the Bridge Authority, BridgeDB, and multiple other tools
fingerprint); the hosting as a (x,y,flag) tuple with number of thatassumebridgeshaveanORport.Ourquantificationofthe
autonomoussystemnumbers(ASNs)forproxyIPs(x),bridge impact of this bug highlights the importance of quickly fixing
IPs (y), and whether those ASNs are the same ((cid:88)) or not ((cid:55)); vulnerabilities. We hope our work will provide a push to fix
and if the bridges in the cluster contain contact information. this bug and possibly to find an entity that sponsors the fix.
While the bug is fixed, possible stopgap fixes include
VII. SECURITYDISCUSSIONOFFINDINGS
allowing only known IPs (e.g., Bridge Authority) to connect
In this section we recapitulate the findings described to the OR port and improving OR port diversity. The latter
throughoutthepaperanddiscusstheirimplicationwithrespect is critical because closing the OR port by default does not
to the security and privacy of Tor’s bridge population. solve the problem that it would remain open for the 77%
bridgesofferingvanillaTor,whichwouldstillbevulnerableto
A. Security Implications of Scan Search Engines scanning attacks. Non-default important bridges, i.e., carrying
While the use of Internet-wide scanning for discovering a significant number of users, seem to already be randomizing
bridges was known [4], [38], our work illustrates how the theORportbysettingittoautointheirconfiguration,likely
availability of scan search engines, which index data collected due to the expertise of their owners. This forces an attacker
from Internet-wide scans, greatly lowers the attack cost in to scan many ports before finding a significant fraction of
terms of scanning infrastructure. Thus, the security of systems bridges. However, we have shown that 71% of public bridges
that require hiding components, e.g., Tor bridges, should be use 3 OR ports. Thus, it is critical to educate less expert users
designed with this threat in mind. on the importance of setting the OR port to auto in their
bridge configuration. Bridge configuration tutorials that still
By leveraging search engines, an adversary that follows
use a fixed OR port, e.g. [27], should be fixed.
our approach can discover, with no investment in scanning
infrastructure, 35% of public bridges with clients, 23% of WemuststressthatclosingtheORportdoesnoteliminate
active public bridges, and hundreds of private bridges and the threat of discovering bridges through additional non-Tor
proxies. The discovered public bridges support 95% of all services coexisting on a bridge’s host, nor other security risks
clients and include 90% of the bridges offering obfs4 and uncovered by our analysis that we discuss in the following
obfs3.Incontrast,otherbridgeenumerationattacks,e.g.,using sections.
a middle node or performing clever queries to the Bridge
B. Security Implications of CollecTor Data
Authority [15], achieve lower coverage, are much slower, and
may require setting up an OR. Furthermore, we have shown Whilecollectingfine-graineddataabouttheTorNetworkis
a novel technique to leverage scan search engines to discover fundamentalfortheTorprojectmaintainers,makingitpublicly
Tor bridges by examining non-Tor services running on bridge available through services like CollecTor requires an analysis
hosts.Thoseservicesmayprovideuniqueidentifiers(e.g.,SSH of the benefit versus privacy trade-off to understand the risks.
keys)thatmay revealotherbridgesfrom thesameownersand Oneofourgoalswasanalyzingifthefine-grained,per-bridge,
enable tracking a bridge across IP changes. data provided by CollecTor, as opposed to aggregate statistics
Fromtheperspectiveofresourceusage,ourwholeprocess- provided by Tor Metrics, could be harmful to the security of
ing runs on a single host, with no demanding requirements in public bridges. Here we discuss our findings.
terms of CPU and memory. The main bottleneck is the time
ORPorts.ThemostconcerningdatainCollecTorwefoundis
needed to download the Censys scan, which typically exceeds
theavailabilityofORports.KnowingtheORportofallpublic
100 GB and takes around 24 hours. The reason we download
bridgeshelpstooptimizethediscoveryofbridgesbyfocusing
therawscandata,ratherthanqueryingCensysdirectly,isthat
Internet-wide scans on the most popular OR ports, which are
the Censys administrators seem to be filtering Tor certificates
usedbytheoverwhelmingmajorityofbridges.Furthermore,as
from the indexed (but not the raw) data. Downloading the
discussed in Section V-E, an adversary can search for the OR
smallerCollecTorfilescanbedoneinparallelwiththeCensys
port of a bridge of interest (e.g., one supporting most users in
download. Beyond the data download, it takes 8-12 hours to
a censored country or providing strong PTs) and then perform
process the Censys data, query Shodan, and connect to each
anInternet-widescanonthatORporttodeanonymizeit.After
discoveredIPusingvanillaTor.Thus,ourprocessingcurrently
we sent a draft of this work to the Tor project, CollecTor
incurs a delay of one and a half days between a bridge is
has started sanitizing the OR port in a similar way as they
scanned and we connect to it.
anonymizebridgeIPs[16].Suchsanitizationpreventsmapping
We note that current Internet-wide scanning approaches ananonymizedORportinCollecTortoarealport,preventing
focus on IPv4 addresses. Bridges running exclusively on IPv6 the two issues above.
addresses are difficult to identify through such scanning due
Fingerprints. A second piece of data extremely valuable for
to limited scan coverage. While such bridges can only be
our work was the availability of the bridge sanitized finger-
accessedbyclientssupportingIPv6,recentOSessupportIPv6
print.ItallowedustolinkinformationfromdifferentCollecTor
off-the-shelf. Thus, a possible defense against our techniques
filesandgatherlongitudinalinformationonindividualbridges.
is to transition a fraction of bridges to IPv6.
Having a unique bridge identifier is fundamental to the granu-
Closing the OR Port.HavingtheORportopeninallbridges larityofCollecTor.Thus,itdoesnotseemeasytoremovethem
enables bridge enumeration through Internet-wide scanning. andinsteadraisesthequestionofwhetherCollecTorshouldbe
Closing the OR port has been queued for fixing since Novem- a service only available to Tor maintainers. Another issue is
ber 2012. While its priority was increased in September that once the fingerprint of a public bridge is known, it can
12be hashed to find the specific bridge in CollecTor enabling The current PT deployment strategy in which bridge owners
near-real-time access to bridge’s data (e.g., PTs offered, IP decide independently which PTs to offer from the complete
changes),aswellaslongitudinalstatisticsonthewholebridge pool of PTs is not optimal. There is a need for a faster way
lifetime. This could be addressed by adding a secret to the to remove PTs known to be unsafe (e.g., vanilla, obfs2). This
fingerprint sanitization. However, this would prevent bridge couldbeachievedbyaddingautomaticupdatestoTor,enabling
owners to check CollecTor statistics on their own bridges. centralizeddecisiononwhichPTsshouldnolongerbeoffered
and faster distribution of updates to disable them. In general,
UsageStatistics.Roundingusagecountersisasimplemethod
automatic updates would more quickly close the vulnerability
to protect individual users while enabling statistics collec-
window for any already fixed security issue. Since adding
tion. Recent developments on privacy-preserving collection
automatic updates may take time, the Tor software could in
of statistics [6], [13] improve this protection and enable a
the mean time be configured to offer the strongest PT (e.g.,
wider range of statistics collection. Yet, these methods are
obfs4) by default and to warn the user if two transports with
not sufficient to prevent an adversary from ranking bridges
conflicting security properties are about to be offered.
according to their usage. We have shown that such rankings
havetwosecurityimplications.First,theyenableanadversary
D. Security Implications of Uncovering Private Infrastructure
to evaluate how successful is her blocking, not only at the
global Tor Network level, but more worryingly for specific Discovery of private bridges and proxies is arguably more
countriesandPTs.Second,theyallowanadversarytoidentify worrisome than deanonymization of the IP address of public
valuable (yet unblocked) bridges to target. Therefore, we bridges. Their discovery allows an adversary to learn that IP
believe that further research on privacy-preserving publishing addresses connecting to them correspond to Tor users that are
of aggregated statistics is needed. members of the owner organization, and to use their IPs to
geographically locate the users. This is particularly dangerous
as private bridges and proxies may be run precisely by or-
C. Security Implications of Bridge Properties
ganizations trying to avoid such identification. One positive
In this Section we discuss implications of the bridge
aspect is that since private bridges do not report to the Bridge
properties we learned through the analysis of CollecTor data.
Authority, nor are explored by any Tor-related service, it may
be much easier to disable their OR port. This would prevent
BridgeStability.Wefoundthatpublicbridgescanbecoarsely
private bridges from appearing in scan search engines, and if
classified in 55% volatile and 45% stable, where only stable
they exclusively use strong PTs (e.g., obfs4), would thwart
bridges carry client traffic. Volatile bridges are short-lived
attempts of scanning to find them.
and may be due to bridges installed on machines not always
connected to the Internet, or by users testing how to run a We have uncovered that multiple organizations are using
bridge. Stable bridges are long-lived (median lifetime of 4 private proxies as cheap replacements for private bridges.
months) and rarely change IP address. Stability means once a However, proxies are always in the same AS, which in 77%
userobtainsthebridgeinformationfromBridgeDBitcanuseit type I and II clusters is also the same AS hosting the backend
for a long time. On the other hand, it also implies that current OR. Once a proxy is discovered, it is possible to scan nearby
adversary blocking policies, e.g., the GFC removing blocks IPaddressestofindotherproxiesandthebackend.Inthecase
for bridge IP addresses every 25 hours [7], are extremely ofbackendrelays,whoseIPaddressesareknown,anadversary
polite. Once an adversary finds a stable bridge, it can perform canperformlocalizedscansaroundrelayIPaddressestolocate
more aggressive blocking (up to months) or adaptive, by proxies. In those cases, using as backend a public bridge with
reconnecting to a bridge every day to check it is still active a random OR port is preferable to a relay.
and the block should be renewed.
Proxies also have non-security implications for the Tor
Use of Default Bridges. Our study of bridge importance Network. First, they add an extra hop in addition to the 3-
reveals that default bridges carry over 90% of bridge users. hop Tor circuit, which if the proxy lays across the Internet
Default bridges enable out-of-the-box use of Tor software, from the bridge increases the, already high, latency of Tor
without the need to request bridges from BridgeDB. While circuits.Second,proxiesaffecttheusagestatisticsinCollecTor
censors may not be continuously blocking default bridges as connections from multiple clients, potentially in different
(otherwisetheywouldnotcarryclientsoncensoredcountries), countries, are all counted as connections from the proxy IP
their massive usage enables easy disconnection of the bridges address by the backend OR.
user base in response to events. Our measurements show that
such blocking would disconnect nearly 90% of bridge clients VIII. RELATEDWORK
in countries like Iran and Syria. Additionally, the fact that Tor The academic community has paid quite some attention to
users are educated to use the software out-of-the-box casts Tor bridges A first line of research related to this work deals
doubtsabouttheirabilitytofindalternativebridgeswhensuch with the proposal of PTs to avoid traffic analysis attacks [5],
blocking happens. [21], [40], [45], and their detection [39]. The latter work stud-
iesthedetectabilityoffivepopularPTs.Theirresultsshowthat
PT Deployment. We observe that 77% of public bridges only
a determined adversary can reliably detect communications
offer vanilla Tor and another 15% mix PTs with conflicting
with bridges with a low false positive rate.
security properties (e.g., with and without reply protection),
reducing the protection to that of the least safe transport. In A second line of work arises in response to censors using
general, the goal should be that bridges do not offer weak activeprobingtoconfirmthatsuspiciousnodesarebridges[7].
transports (e.g., vanilla) or deprecated ones (e.g., obfs2), but This work also shows that the censors’ systems operate in
only PTs considered safe and without conflicting properties. real time, are able to detect servers using five circumvention
13protocols and are regularly updated. Houmansadr et al. [10] X. CONCLUSION
show that PTs that mimic other protocols, e.g., [21], [40], are
In this work we provide the first systematic security
particularly sensitive to active probing since they only mimic
analysis of the Tor bridge infrastructure. Our opportunistic
partofthecommunication.Defensesagainstactiveprobingare
measurements, made possible by taking advantage of two
basedonPTsthatonlyreplyuponbeingproventhattheclient
known Tor issues, allow us to discover thousands of bridges
knows a long-lived secret [1], [45] or a short-lived key [24].
which we have used to gain understanding about the security
A third relevant research line is dedicated to the discovery properties of the bridge population. In particular we uncover
of bridges. McLachlan and Hopper [20] showed that it is the use of private proxy-based infrastructures likely to obtain
possible to deanonymize bridge operators when bridges run IP diversity to access the Tor Network. We also study the
in clients. In case bridges are dedicated servers, Ling et impact on security of publicly available information such as
al [15] provide both active attacks where the adversary di- thatprovidedbyCollecTororscansearchengines.Ourresults
rectly interacts with the bridge distributor, and passive attacks have implications for the Tor project, since they indicate that
where she sets up a relay and enumerates bridges (i.e., non the two issues we leveraged need to be solved as soon as
relay nodes) that connect to it. The work on Internet-wide possible, and that the information offered by CollecTor may
scanning by Durumeric et al. [4] showed that the pattern in need to be reduced; but also beyond, since we confirm that
Tor certificates could be used to identify bridges, a property the information made available by public scan search engines
that we leverage to realize our measurement of the Tor bridge should be taken into account when designing covert services.
infrastructure. We show how to optimize enumeration by
leveragingdatainCollecTorandtheavailabilityofscansearch
ACKNOWLEDGMENTS
enginestominimizeinvestmentinscanninginfrastructure.We
also present an alternative discovery technique based on non- The authors would like to thank the Tor Project for
Tor services bridges may also run, which is related to works their feedback. In particular, we are very thankful to Karsten
leveraging leaks on scan search repositories to deanonymize LoesingforpromptlylaunchingafixtoanonymizeORportsin
hidden services [19]. CollecTorandtoStevenMurdochforusefuldiscussionsabout
bridges’ORports.WewouldalsoliketothankJohnMatherly
A fourth research line proposes defenses based on decoy
and the Shodan project for their help.
routing, where modified routers can be signaled to act as cir-
cumvention proxies [11], [14], [22]. These solutions increase This research was partially supported by the Regional
the cost of blocking at the expense of modifying the routing GovernmentofMadridthroughtheN-GREENSSoftware-CM
infrastructure, an orthogonal problem to the one in this paper S2013/ICE-2731 project, by the Spanish Government through
where we study the security of currently deployed defenses. the DEDETIS Grant TIN2015-7013-R, and by the Euro-
pean Commission through the H2020-ICT-2015 NEXTLEAP
Finally, Winter et al. [43] propose a tool to identify sybils
project (GA 688722). All opinions, findings and conclusions,
in the Tor Network, i.e., relays owned by the same group, by
or recommendations expressed herein are those of the authors
studying configuration and uptime similarity. Our clustering
and do not necessarily reflect the views of the sponsors.
has a similar goal as their nearest neighbor ranking and can
beappliedtorelaydescriptorsaswell,withtheadvantagethat
it does not require an input OR to compare with. REFERENCES
[1] Y.Angel. obfs4(theobfourscator),2014. https://github.com/Yawning/
obfs4/blob/master/doc/obfs4-spec.txt.
[2] R. Dingledine and N. Mathewson. Tor protocol specification. https:
IX. ETHICALCONSIDERATIONS //gitweb.torproject.org/torspec.git/tree/tor-spec.txt.
[3] Z.Durumeric,D.Adrian,A.Mirian,M.Bailey,andJ.A.Halderman.A
Our measurements only leverage known limitations of
SearchEngineBackedbyInternet-WideScanning.InACMConference
the Tor Network, and only use leaks present in publicly onComputerandCommunicationsSecurity,2015.
accessible repositories such as Shodan, Censys or CollecTor. [4] Z.Durumeric,E.Wustrow,andJ.A.Halderman. ZMap:FastInternet-
We purposefully avoid adding relays or bridges into the Tor wide Scanning and Its Security Applications. In USENIX Security
Network, as well as exploiting any software vulnerability. We Symposium,2013.
have no access to any traffic that is not ours, and hence we [5] K. P. Dyer, S. E. Coull, T. Ristenpart, and T. Shrimpton. Protocol
cannotthreatentheprivacyofanyToruser.However,thedata MisidentificationMadeEasywithFormat-TransformingEncryption. In
ACMConferenceonComputerandCommunicationsSecurity,2013.
we collect contains the IP addresses and contact information
[6] T. Elahi, G. Danezis, and I. Goldberg. PrivEx: Private collection of
of public and private bridges that must be kept private to
traffic statistics for anonymous communication networks. In ACM
preserve the security provided by the Tor Network. Thus, we
ConferenceonComputerandCommunicationsSecurity,2014.
donotdiscloseanybridge/proxyIPaddresses,noranypersonal
[7] R.Ensafi,D.Fifield,P.Winter,N.Feamster,N.Weaver,andV.Paxson.
information we may learn about its owners, but only provide Examining How the Great Firewall Discovers Hidden Circumvention
aggregate data to illustrate important steps and findings. Servers. InACMInternetMeasurementConference,2015.
This work has been approved by ethics review board of [8] D. Fifield, C. Lan, R. Hynes, P. Wegmann, and V. Paxson. Blocking-
Resistant Communication through Domain Fronting. In Privacy En-
our institution, which has mandated that due to its sensitive
hancingTechnologiesSymposium,2015.
nature the data must be protected with diligence, must not be
[9] FreedomHouse. FreedomontheNet,2015. https://freedomhouse.org/
disclosed to third parties, and must be deleted when the paper
report/freedom-net/freedom-net-2015.
is published. We sent a copy of the submitted draft to the Tor
[10] A. Houmansadr, C. Brubaker, and V. Shmatikov. The Parrot Is
project.Theyhavealreadystartedtakingmeasures[16]topre-
Dead: Observing Unobservable Network Communications. In IEEE
vent bridge targeting based on CollecTor public information. SymposiumonSecurityandPrivacy,2013.
14[11] A. Houmansadr, E. L. Wong, and V. Shmatikov. No direction home: [39] L. Wang, K. P. Dyer, A. Akella, T. Ristenpart, and T. Shrimpton.
The true cost of routing around decoys. In Network and Distributed Seeing through Network-Protocol Obfuscation. In ACM Conference
SystemSecuritySymposium,2014. onComputerandCommunicationsSecurity,2015.
[12] James Ball. NSA’s PRISM surveillance program: how it works and [40] Z. Weinberg, J. Wang, V. Yegneswaran, L. Briesemeister, S. Cheung,
whatitcando,2013. http://www.theguardian.com/world/2013/jun/08/ F.Wang,andD.Boneh. StegoTorus:aCamouflageProxyfortheTor
nsa-prism-server-collection-facebook-google. AnonymitySystem. InACMConferenceonComputerandCommuni-
cationsSecurity,2012.
[13] R.JansenandA.Johnson. Safelymeasuringtor. InACMConference
onComputerandCommunicationsSecurity,2016. [41] T.Wilde. Knockknockknockin’onbridges’doors,2012. https://blog.
torproject.org/blog/knock-knock-knockin-bridges-doors.
[14] J.Karlin,D.Ellard,A.W.Jackson,C.E.Jones,G.Lauer,D.Mankins,
and W. T. Strayer. Decoy routing: Toward unblockable internet com- [42] P. Winter. Scramblesuit protocol specification, 2013. https://gitweb.
munication. InUSENIXWorkshoponFreeandOpenCommunications torproject.org/user/phw/scramblesuit.git/tree/doc/scramblesuit-spec.txt.
ontheInternet,2011. [43] P. Winter, R. Ensafi, K. Loesing, and N. Feamster. Identifying
[15] Z.Ling,J.Luo,W.Yu,M.Yang,andX.Fu. ExtensiveAnalysisand and characterizing Sybils in the Tor network. In USENIX Security
Large-Scale Empirical Evaluation of Tor Bridge Discovery. In IEEE Symposium,2016.
INFOCOM,2012. [44] P.WinterandS.Lindskog.HowtheGreatFirewallofChinaisBlocking
[16] K. Loesing. Sanitize TCP ports in bridge descriptors. https://trac. Tor.InUSENIXFreeandOpenCommunicationsontheInternet,2012.
torproject.org/projects/tor/ticket/19317. [45] P.Winter,T.Pulls,andJ.Fuss. ScrambleSuit:aPolymorphicNetwork
[17] K.LoesingandN.Mathewson. BridgeDBspecification. https://gitweb. Protocol to Circumvent Censorship. In ACM Workshop on Privacy in
torproject.org/torspec.git/tree/bridgedb-spec.txt. theElectronicSociety,2013.
[18] J.Matherly. Shodan,2013. https://www.shodan.io/.
[19] S. Matic, P. Kotzias, and J. Caballero. Caronte: Detecting Location
Leaks for Deanonymizing Tor Hidden Services. In ACM Conference
onComputerandCommunicationsSecurity,2015.
[20] J.McLachlanandN.Hopper. OntheRisksofServingWheneveryou
Surf: Vulnerabilities in Tor’s Blocking Resistance Design. In ACM
WorkshoponPrivacyintheElectronicSociety,2009.
[21] H. M. Moghaddam, B. Li, M. Derakhshani, and I. Goldberg. Skype-
Morph:ProtocolObfuscationforTorBridges. InACMConferenceon
ComputerandCommunicationsSecurity,2012.
[22] M. Schuchard, J. Geddes, C. Thompson, and N. Hopper. Routing
AroundDecoys.InACMConferenceonComputerandCommunications
Security,2012.
[23] K. Shubber. A simple guide to GCHQ’s internet surveillance pro-
grammeTempora,2013.http://www.wired.co.uk/news/archive/2013-06/
24/gchq-tempora-101.
[24] R. Smits, D. Jain, S. Pidcock, I. Goldberg, and U. Hengartner.
BridgeSPA: Improving Tor Bridges with Single Packet Authorization.
InACMWorkshoponPrivacyintheElectronicSociety,2011.
[25] TorProject. CollecTor. https://collector.torproject.org/.
[26] TorProject.Evaluate,possiblyrevise,andthenimplementideasforTLS
certificate normalization. https://trac.torproject.org/projects/tor/ticket/
7145.
[27] Tor Project. Guide to run an obfs4 bridge. https://trac.torproject.org/
projects/tor/wiki/doc/PluggableTransports/obfs4proxy.
[28] Tor Project. obfs3 (the threebfuscator). https://gitweb.torproject.org/
pluggable-transports/obfsproxy.git/tree/doc/obfs3/obfs3-protocol-spec.
txt.
[29] Tor Project. Obfsbridges should be able to “disable” their ORPort.
https://trac.torproject.org/projects/tor/ticket/7349.
[30] Tor Project. Pluggable transports. https://www.torproject.org/docs/
pluggable-transports.html.en.
[31] TorProject.TorCloud:TorbridgesintheAmazoncloud.https://cloud.
torproject.org/.
[32] TorProject. Tordirectoryprotocol,version3. https://gitweb.torproject.
org/torspec.git/tree/dir-spec.txt.
[33] Tor Project. Tor Manual. https://www.torproject.org/docs/tor-manual.
html.en.
[34] Tor Project. On recent and upcoming developments in
Pluggable Transports, 2014. https://blog.torproject.org/blog/
recent-and-upcoming-developments-pluggable-transports.
[35] TorProject,2016. https://www.torproject.org/.
[36] TorProject. TorMetrics,2016. https://metrics.torproject.org/.
[37] M. C. Tschantz, S. Afroz, D. Fifield, and V. Paxon. SoK: Towards
Grounding Censorship Circumvention in Empiriscism. In IEEE Sym-
posiumonSecurity&Privacy,2016.
[38] V. Tsyrklevich. Internet-wide scanning for bridges. https://lists.
torproject.org/pipermail/tor-dev/2014-December/007957.html.
15