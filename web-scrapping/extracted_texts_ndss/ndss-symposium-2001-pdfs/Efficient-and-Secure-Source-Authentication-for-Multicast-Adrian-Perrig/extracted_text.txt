Efficient and Secure Source Authentication for Multicast
AdrianPerrig
(cid:0)(cid:2) (cid:1)
Ran Canetti
(cid:3)
Dawn Song
(cid:0)
J. D.Tygar
(cid:0)
(cid:0)
UCBerkeley,
(cid:1)
Digital Fountain,
(cid:3)
IBMT.J.Watson
(cid:4)
perrig,dawnsong,tygar@cs.berkeley.edu,canetti@watson.ibm.com
(cid:5)
Abstract cure unicast communication. See [9] for a taxonomy of
multicastsecurityconcernsand somesolutions. Amajor
concernissourceauthentication,orallowingareceiverto
Oneofthemainchallengesofsecuringmulticastcom- ensurethatthereceiveddataisauthentic(i.e.,itoriginates
municationissourceauthentication,orenablingreceivers with the source and was not modified on the way), even
of multicast data to verify that the received data origi- when none of the other receivers of the data is trusted.
nated with the claimed source and was not modified en- Providing source authentication for multicast communi-
route. The problem becomes more complex in common cationisthefocusofthiswork.
settingswhereotherreceiversofthedataarenottrusted, Simply deployingthe standard point-to-point authenti-
andwherelostpacketsarenotretransmitted. cation mechanism (i.e appending a message authentica-
Several source authentication schemes for multicast tion code to each packet, computed using a shared key)
havebeensuggestedinthepast,butnoneoftheseschemes doesnotprovidesourceauthenticationinthecaseofmul-
issatisfactorilyefficientinallprominentparameters. We ticast. Theproblemisthatanyreceiverthathastheshared
recentlyproposedaveryefficientscheme,TESLA,thatis key can forge data and impersonate the sender. Conse-
based on initial loose time synchronization between the quently,itisnaturaltolookforsolutionsbasedonasym-
sender and the receivers, followed by delayed release of metric cryptography to prevent this attack, namely digi-
keysbythesender. tal signature schemes. Indeed, signing each data packet
This paper proposes several substantial modifications providesgoodsourceauthentication;however,ithashigh
andimprovementstoTESLA.Onemodificationallowsre- overhead, both in terms of time to sign and verify, and
ceiverstoauthenticatemostpacketsassoonastheyarrive in terms of bandwidth. Several schemes were proposed
(whereasTESLArequiresbufferingpacketsatthereceiver that mitigate this overhead by amortizing a single signa-
side, and provides delayed authentication only). Other tureoverseveralpackets,e.g.[14,33,29].However,none
modifications improve the scalability of the scheme, re- of these schemes is fully satisfactory in terms of band-
duce the spaceoverhead for multipleinstances, increase width and processing time, especially in a setting where
itsresistancetodenial-of-serviceattacks,andmore. thetransmissionislossyandsomedatapacketsmaynever
arrive. Even though some schemes amortize a digital
signature overmultiple data packets, a seriousdenial-of-
1 Introduction serviceattackisusuallypossiblewhereanattackerfloods
the receiver with bogus packets supposedly containing a
WiththegrowthandcommercializationoftheInternet,
strongsignature. Sincesignatureverificationiscomputa-
simultaneous transmission of data to multiple receivers
tionallyexpensive,thereceiverisoverwhelmedverifying
becomes a prevalentmode of communication. Often the
thesignatures.
transmitted data is streamed and has considerable band-
Another approach to providing source authentication
width. Toavoidhavingtosendthedataseparatelytoeach
uses only symmetric cryptography, more specifically on
receiver, several multicast routing protocols have been
message authentication codes (MACs), and is based on
proposedanddeployed,typicallyintheIPlayer. (Exam-
delayeddisclosure ofkeysbythesender. Thistechnique
plesinclude[12,13,23,16,6]). Theunderlyingprinciple
was firstusedbyCheung [11] in thecontextof authenti-
of multicastcommunication is that each datapacket sent
catingcommunicationamongrouters. Itwasthenusedin
fromthesourcereachesanumberofreceivers.
theGuy Fawkesprotocol [1]forinteractiveunicastcom-
Securingmulticastcommunicationintroducesanumber
munication. In the context of multicast streamed data it
ofdifficultiesthatarenotencounteredwhentryingtose-was proposed by several authors [8, 4, 5, 25]. In partic-
ular,theTESLAschemedescribedin[25]waspresented
to the reliable multicast transport (RMT) working group
[26]oftheIETFandthesecuremulticast(SMuG)work-
ing group [30] of the IRTF and was favorably received.
TESLA is particularly well suited to provide the source
authenticationfunctionalityfortheMESPheader[10],or
fortheALCprotocolproposedbytheRMT[19]. Conse-
quently, an Internet-Draft describing the scheme was re-
centlywritten[24].
ThemainideaofTESLA,istohavethesenderattachto
eachpacketaMACcomputedusingakey (cid:6) knownonly
to itself. The receiver buffers the received packet with-
outbeingabletoauthenticateit. Ifthepacketisreceived
toolate,itisdiscarded.Ashortwhilelater,thesenderdis-
closes (cid:6)
a method for achieving the same functionality (i.e.,
differentreceiverscanauthenticatethepacketsatdif-
ferent delays) with a more moderate increase in the
overheadperpacket.
3. InTESLAthesenderneedstoperformauthenticated
timesynchronizationindividuallywitheachreceiver.
This may not scale well, especially in cases where
manyreceiverswish tojointhemulticastgroup and
synchronize with the sender at the same time. This
is so, since each synchronization involves a costly
public-keyoperation.Weproposeamethodthatuses
only asingle public-keyoperation pertime-unit, re-
gardlessofthenumberoftimesynchronizationsper-
formedduringthistimeunit. Thisreducesthecostof
synchronizing with a receiverto practically the cost
andthereceiverisabletoauthenticatethepacket.
ofsettingupasimple,unauthenticatedconnection.
Consequently, a single MAC per packet suffices to pro-
videsourceauthentication,providedthatthereceiverhas 4. We also explore time synchronization issues in
synchronizeditsclockwiththesenderaheadoftime. greater depth and describe direct and indirect time
Thisideaseemsquiteattractiveatfirst. However,ithas synchronization. Fortheformermethod,thereceiver
several shortcomings. This work points to these short- synchronizesitstimedirectlywiththesender,inthe
comings and proposes methods to overcome them. Our latter method both the sender and receiver synchro-
description isbased mostly onTESLA, although the im- nizetheirtimewithatimesynchronizationserver.
provementsapplytotheotherschemesaswell. Wesketch
Forbothcases,wegiveadetailedanalysisonhowto
someofthesepoints:
choosethekeydisclosuredelay,a crucialparameter
1. In TESLA the receiver has to buffer packets, until forTESLA.
the sender discloses the corresponding key, and un-
5. TESLA assumes that all members have joined the
til the receiver authenticates the packets. This may
group and have synchronized with the sender be-
delay delivering the information to the application,
foreanytransmissionstarts. Inreality,receiversmay
maycausestorageproblems,andalsogeneratesvul-
wish to join after the transmission has started; fur-
nerability to denial-of-service (DoS) attacks on the
thermore,receiversmaywishtoreceivethetransmis-
receiver(byfloodingitwithboguspackets).Wepro-
sionimmediately,andperformthetimesynchroniza-
pose a method that allows receivers to authenticate
tiononlylater. Weproposemethodsthatenableboth
most packets immediately upon arrival, thus reduc-
functionalities. Thatis,ourmethodsallowareceiver
ing the need for buffering at the receiver side and
tojoinin“onthefly”toanongoingsession;theyalso
inparticularreducesthesusceptibilitytothistypeof
allowreceiverstosynchronizeatalatertimeandau-
DoSattacks.
thenticatepacketsonlythen.
This improvement comes at the price of one extra
hash per packet, plus some buffering at the sender
Organization Section2reviewsTESLA,providingfur-
side. We believe that buffering at the sender side is
therdetailsthanin[25]. Section3containstheimprove-
oftenmorereasonableandacceptablethanbuffering
ments and extensions proposed in this paper. Section 4
atthereceiverside. Inparticular,itisnotsusceptible
provides further discussion on the security of the im-
tothistypeofDoSattacks.
provedscheme,withemphasisonresistancetodenial-of-
Wealsoproposeothermethodstoalleviatethistype serviceattacks.
ofDoSattacks. Thesemethodsworkevenwhenthe
receiverbufferspacketsasinTESLA. 2 AnOverviewof TESLA
2. When operating in an environment with heteroge- ThesecuritypropertyTESLAguaranteesisthatthere-
nous network delay times for different receivers, ceiver never accepts
TESLA authenticates each packet using multiple
keys, wherethe differentkeyshavedifferentdisclo-
suredelaytimes.Thisresultsinlargeroverhead,both
in processing time and in bandwidth. We propose
(cid:7)(cid:9) (cid:8) as an authentic message unless
(cid:7)(cid:9) (cid:8) was actually sent by the sender. Note that TESLA
doesnotprovidenon-repudiation,thatis,thereceivercan-
notconvinceathirdpartythatthestreamarrivedfromthe
claimedsource.TESLAisefficientandhasalowspaceoverheadmainly
becauseitisbasedonsymmetric-keycryptography.Since
source authentication is an inherently asymmetric prop-
erty(all thereceiverscanverifytheauthenticitybut they
cannot produce an authentic data packet), we use a de-
layed disclosure of keys to achieve this property. Simi-
larly, the data authentication is delayed as well. In prac-
tice,theauthenticationdelayisontheorderofoneround-
trip-time(RTT).
TESLAhasthefollowingproperties. First,ithasalow
computationoverhead,which istypicallyonlyone MAC
function computation per packet, for both sender and re-
ceiver. TESLAalsohasalowper-packetcommunication
overhead, which is about 20 bytes per packet. In addi-
tion, TESLAtolerates arbitrary packetloss. Each packet
that is receivedin time can be authenticated. Except for
aninitial time synchronization, it hasonly unidirectional
data flow from the sender to the receiver. No acknowl-
edgments or other messages are necessary. This implies
that the sender’s stream authentication overhead is inde-
pendentofthenumberofreceivers,henceTESLAisvery
scalable.TESLAcanbeusedbothinthenetworklayeror
intheapplicationlayer. Thedelayedauthentication,how-
ever, requires buffering of packets until authentication is
completed.
For TESLA to be secure, the sender and the receiver
need to be loosely time synchronized, which means that
the synchronization does not need to be precise, but the
receiver needs to know an upper bound on the sender’s
time.
2.1 SenderSetup
Inourmodel,asenderdistributesastreamofdatacom-
posed of message chunks (cid:10)(cid:11) (cid:7)(cid:9) (cid:8)(cid:13) (cid:12) . Generally, the sender
sendseachmessagechunk (cid:7)(cid:14) (cid:8) inonenetworkpacket (cid:15)(cid:16) (cid:8) .
Many multicast distribution protocols do not retransmit
lost packets. The goal is therefore that the receiver can
authenticateeachmessagechunk (cid:7) (cid:8) separately.
For the purpose of TESLA, the sender splits the time
intoevenintervals (cid:17) (cid:8) . Wedenotethedurationofeachtime
intervalwith (cid:18) (cid:8)(cid:20)(cid:19)(cid:22) (cid:21) ,andthestartingtimeoftheinterval (cid:17) (cid:8) is
(cid:18) (cid:8) . Trivially,wehave (cid:18) (cid:8)(cid:24) (cid:23) (cid:18)(cid:26) (cid:25)(cid:28) (cid:27)(cid:30) (cid:29) (cid:31)(cid:28) (cid:18) (cid:8)!(cid:19)(cid:22) (cid:21) . Ineachinterval,
thesendermaysendzeroormultiplepackets.
Beforesendingthefirstmessage,thesenderdetermines
thesendingduration(possiblyinfinite),theintervaldura-
tion, and the number N of keys of the key chain. This
key chain is analogous to the one-way chain introduced
by Lamport [18], and the S/KEY authentication scheme
[15]. Thesender picks the last key "$ # of the key chain
randomly and pre-computes the entire key chain using a
pseudo-random function F, which is by definition a one-
way function. Each element of the chain is defined as
" (cid:8)% (cid:23)’ &) ( " (cid:8)(cid:20)*(cid:28) +- , . Each key can be derived from " # as
" (cid:8). (cid:23)/ & #1 02 (cid:8) ( " #3 , , where &1 45 ( (cid:6) ,6 (cid:23)/ &1 4 07 + (8 &) ( (cid:6) ,(cid:2) , and
& (cid:25) ( (cid:6) ,9 (cid:23) (cid:6) . Each key of the key chain corresponds to
oneinterval,i.e., "
4
isactiveininterval (cid:17)
4
.
Since we do not want to use the same key multiple
timesindifferentcryptographicoperations,weuseasec-
ond pseudo-random function F’ to derive the key which
is used to compute the MAC of messages in each inter-
val(wewillexplainthealgorithmindetaillater). Hence,
"; :(cid:8) (cid:23)< & : ( " (cid:8)8 , . Figure 1 depicts this key derivation. We
proposetouseHMACinconjunctionwithacryptograph-
ically secure hash function for the pseudo-random func-
tion[2]. Forexample,apossibilityistousethefollowing:
&) (> =2 ,3 (cid:23) HMAC (? =(cid:28) @(cid:2) A5 , and &B :C (? =(cid:26) ,D (cid:23) HMAC (> =(cid:24) @F EG , , where
A and E are8-bitintegers. Notethatthefirstargumentof
the MAC function is the keyand the second argumentis
thedata.
2.2 BootstrappinganewReceiver
TESLArequiresaninitiallyauthenticateddatapacketto
bootstrapa newreceiver. This authenticationisachieved
withadigitalsignaturescheme,suchasRSA[28],orDSA
[32].
Weconsidertwooptionsforsynchronizingthetime,di-
rect and indirect synchronization. We improve the time
synchronization from our original work and describe the
details in section 3.3. Whichever time synchronization
mechanism is used, the receiver only needs to know an
upperboundonthesendertime.
The initial authenticated packet contains the following
informationaboutthetimeintervalsandkeychain:
H The beginning time of a specific interval (cid:18)
4
, along
withitsid
H
(cid:17)
4
Theintervalduration
H
(cid:18)(cid:26) (cid:8)!(cid:19)(cid:22) (cid:21)
Keydisclosuredelay I (unitisinterval)
H Acommitmenttothekeychain " (cid:8) ( (cid:29)K JM L1 NO I where
L isthecurrentintervalindex)
2.3 SendingAuthenticatedPackets
Each keyofthe keychain isused inone timeinterval.
Howevermanymessagesaresentineachinterval,thekey
whichcorrespondstothatintervalisusedtocomputethe
MAC of all those messages. This allows the sender to
sendpacketsatanyrateandtoadaptthesendingratedy-
namically.Thekeyremainssecretford-1futureintervals.
Packets sent in interval (cid:17)
4
can hence disclose key "
4
0(cid:26) P .
Assoon asthereceiversreceivethatkey,theycanverify
theauthenticityofthepacketssentininterval (cid:17)
4
0Q P .
The construction of packet (cid:15)
4
sent in interval (cid:17) (cid:8) is:
(cid:10)(cid:22) (cid:7)
4D R
MAC ( "; :(cid:8) @ (cid:7)
4
,
R
" (cid:8)> 0(cid:26) P (cid:12) .Figure1showsthekeychainconstructionandtheMAC
key derivation. If the disclosure delay is 2 intervals, the
packet (cid:15)
4
*Q S sentininterval (cid:17)T (cid:8)!*7 U discloseskey "$ (cid:8) . From
thiskey,thereceivercanalsorecover "$ (cid:8)? 07 + andverifythe
MACof (cid:15)
4
,incase (cid:15)
4
*7 V islost.
2.4 ReceiverTasks
Since the security of TESLA depends on keys that re-
main secret until a pre-determined time period, the re-
ceiver must verify for each packet that the key, which is
used to compute the MAC of that packet, is not yet dis-
closed by the sender. Otherwise, an attacker could have
changed the message data and re-computed the MAC.
This motivatesthe security condition, which the receiver
mustverifyforeachpacketitreceives.
Security condition: A packet arrivedsafely, if the re-
ceiverisassuredthatthesendercannotyetbeinthetime
intervalinwhichthecorrespondingkeyisdisclosed.
Theintuitionisthatifapacketsatisfiesthesecuritycon-
dition,thennoattackercouldhavealtereditintransit,be-
causethecorrespondingMACkeyisnotyetdisclosed. In
casethesecurityconditionisnotvalid,thereceivermust
drop that packet, because the authenticity is not assured
anymore.Wewouldliketoemphasizethatthesecurityof
thisschemedoesnotrelyonanyassumptionsonnetwork
propagationdelay. Theoriginalpapersketchesasecurity
proof[25].
We now explain how the authentication with TESLA
works with a concrete example. When the receiver re-
ceives packet (cid:15)
4
sent in interval (cid:17) (cid:8) at local time WY X , it
computes an upper bound on the sender’s clock W
4
(we
describe in section 3.3 how to compute this). To evalu-
atethesecuritycondition,thereceivercomputesthehigh-
est interval = the sender could possibly be in, which is
=Z (cid:23)\ [] ( W
4
N^ (cid:18) (cid:25) ,(cid:2) _ (cid:18)Q (cid:8)!(cid:19)(cid:22) (cid:21)C ‘ . The receiver now verifies that
= Ja (cid:17)- (cid:8)(cid:26) (cid:27)b I (where (cid:17)T (cid:8) istheintervalindex),whichmeans
thatthesendermustnothavebeenintheintervalinwhich
the key " (cid:8) is disclosed, hence no attacker can possibly
knowthatkeyandspoofthemessagecontents.
The receiver cannot, however, verify the authentic-
ity of the message yet. Instead, it stores the triplet
( (cid:17) (cid:8)Y @ (cid:7)
4
@ MAC ( " :(cid:8) @ (cid:7)
4
,(cid:2) , to verify the authenticity later
when it knows "; :(cid:8) . Two possibilities exist on how to
handletheunauthenticated messagechunk (cid:7)
4
. Thefirst
possibilityisto hand (cid:7)
4
totheapplication, and notifyit
througha callback mechanismassoonas (cid:7)
4
isverified.
Thesecondpossibilityistobuffer (cid:7)
4
untiltheauthentic-
itycanbecheckedandpassittotheapplicationassoonas
(cid:7)
4
isauthenticated.
Ifthepacketcontainsadisclosedkey "$ (cid:8)> 0(cid:26) P ,regardless
of whether the security condition is verified or not, the
receiver checks whether it can use " (cid:8)> 0(cid:26) P to authenticate
previous packets. Clearly, if it has received " (cid:8)> 0(cid:26) P
ously, it does not have any work to do. Otherwise, let
usassumethatthelastkeyvalueinthereconstructedkey
chainis
previ-
"$ c . Thereceiververifiesif "d (cid:8)? 0Q P islegitimateby
verifying that "$ c (cid:23)e & (cid:8)> 0(cid:26) PF 0(cid:26) c ( "$ (cid:8)> 0(cid:26) P , . Ifthat conditionis
correct,thereceiverupdatesthekeychain. Foreachnew
key "$ f ,itcomputes "g :f (cid:23)h & : ( "$ f , whichmightallowit
toverifytheauthenticityofpreviouslyreceivedpackets.
It is clearthat this system can tolerate arbitrary packet
loss,becausethereceivercanverifytheauthenticityofall
received packets that satisfy the security condition even-
tually.
3 OurExtensions
WeextendTESLAinanumberofwaystomakeitmore
efficient and practical. First, we present a new method
tosupportimmediateauthentication,meaningthatthere-
ceivercanauthenticatepacketsassoonastheyarrive.
Second, we propose optimizations concerning key
chains. In particular, for applications that use multiple
authenticationchainswithdifferentdisclosuredelays,we
present a new algorithm that reduces the communication
overhead.
Finally, we give discussions on the time synchroniza-
tionissuesandderiveatightlowerboundonthekeydis-
closuredelay,whichmakestheschememuchmorepracti-
cal. Next,weremoveascalabilitylimitationofthesimple
time synchronization protocol. Furthermore, we discuss
how a receiver can authenticate received packets even if
it isnottime synchronized at themoment inwhich it re-
ceivesthepacket.
3.1 ImmediateAuthentication
AdrawbackoftheoriginalTESLAprotocolisthatthe
receiverneedstobufferpacketsduringonedisclosurede-
lay before it can authenticate them. This might not be
practicalforcertainapplicationsifthereceiverscannotaf-
fordmuchbufferspaceandburstytrafficmightcausethe
receiverstodroppacketsduetoinsufficientbufferspace.
Moreover, as we show later in section 4.2, the require-
mentof receiverbufferingintroduces a vulnerabilityto a
denial-of-service attack. To solvethese problems caused
by receiver-buffering, we propose a new method to sup-
port immediate authentication,which allowsthe receiver
toauthenticatepacketsassoonastheyarrive.
The basic observation of this method is that we can
replace receiver buffering with sender buffering. If the
sender can buffer packets during one disclosure delay,
then it could store the hash value of the data of a later
packet in an earlier packet and hence as soon as the ear-
lierpacketisauthenticated, thedatainthelaterpacketis
authenticatedthroughthehashvalueaswell.
In the new scheme, the sender buffers packets for thePSfragreplacements
MAC
time
wy
wD
x? z| {
(cid:129)5 (cid:138)(cid:139)(cid:130)(cid:140)(cid:132)(cid:135)
(cid:128)x? z| {
(cid:144) x? z| {
ik j
(cid:134)(cid:142)(cid:141)n m(cid:2) (cid:136)
(cid:129)(cid:131) (cid:130)(cid:133)(cid:132)(cid:135) (cid:134)C
ik
(cid:136)
j8 ln m
wy
w
x
(cid:129)
(cid:128)x
(cid:144) x
ik
(cid:138)(cid:130)(cid:140)(cid:132)(cid:135)
j8 lp o
(cid:134)8 (cid:136)
(cid:129)(cid:131) (cid:130)(cid:133)(cid:132)(cid:135) (cid:134)!ln m(cid:2) (cid:136)
wy
wD
(cid:144)
x!}(cid:26) {
(cid:129)5 (cid:138)!(cid:130)(cid:133)(cid:132)(cid:127)
(cid:128)x!}(cid:26) {
x!}(cid:26) {
ik j8 lp
(cid:134)(cid:20)l(cid:131)
q
(cid:129)(cid:131)
mY (cid:136)
(cid:130)(cid:133)(cid:132)(cid:135)
ik
(cid:134)!lp
j8 ls
o(cid:137)
rt
(cid:136)
ik
wy x!}(cid:127) ~
(cid:129)5 (cid:138)!(cid:130)(cid:133)(cid:132)(cid:127)
w (cid:128)x!}(cid:127) ~
(cid:144) x!}(cid:127) ~
ik j8 lpj8 lp u
(cid:134)(cid:20)l5
v
o(cid:143)
(cid:129)(cid:131)
(cid:136)
(cid:130)(cid:133)(cid:132)(cid:135) (cid:134)!lp q(cid:137) (cid:136)
Figure1: TESLAkeychainandthederivedMACkeys
duration of one disclosure delay. For simplicity of illus-
tration, we assume that the sender sends out a constant
number (cid:145) of packets per time interval. To construct the
packet for the message chunk (cid:7)
4
in time interval (cid:18) (cid:8) ,
the sender appends the hash value of the message chunk
(cid:7)
4
*7 cT P to (cid:7)
4
andthencomputestheMACvaluealsoover
(cid:146)
( (cid:7)
4
*7 cT P , with the key "$ (cid:8) . Figure 2 illustrates how
the packet (cid:15)
4
is constructed by appending
(cid:146)
( (cid:7)
4
*7 cT P , ,
MAC ( "$ (cid:8) @ (cid:7)
4 R
(cid:146) ( (cid:7)
4
*7 cT P ,Y , ,alongwiththedisclosedkey
"$ (cid:8)> 0(cid:26) P . (Notethatthe
R
standsformessageconcatenation).
Whenthepacket (cid:15)
4
*7 cT P arrivesatthereceiverwhichdis-
closes the key "$ (cid:8) it allows authentication of packet (cid:15)
4
sentininterval (cid:17) (cid:8) . (cid:15)
4
carriesahashofthedata (cid:7)
4
*(cid:24) cT P in
(cid:15)
4
*7 cT P . If (cid:15)
4
isauthentic, (cid:146) ( (cid:7)
4
*7 cT P(cid:22) , isalsoauthenticand
therefore the data (cid:7)
4
*(cid:24) cT P is immediately authenticated.
Also note that if (cid:15)
4
is lost or dropped due to violation
of the security condition, (cid:15)
4
*7 cT P
PSfragreplacements
will not be immediately
authenticatedandcanstillbeauthenticatedlaterusingthe
MACvalue.
(cid:147)(cid:149) (cid:148)
MAC
(cid:152)(cid:154) (cid:153)> (cid:147) (cid:148)(cid:2) (cid:155)(cid:127) (cid:156)Y (cid:157)- (cid:158)
(cid:150)y (cid:151)
MAC
¢ (cid:148)
(cid:159) (cid:151)(cid:142)£ (cid:157)
(cid:153)? (cid:159)(cid:149) (cid:160)(cid:151)(cid:13) ¡] ¢ (cid:148) (cid:158)
(cid:147)
(cid:152)(cid:154)
(cid:148)(cid:143)
(cid:153)>
(cid:155)(cid:135)
(cid:147)
(cid:156)(cid:2) (cid:157)
(cid:148)(cid:2) (cid:155)| ⁄¥ (cid:156)Y (cid:157)G (cid:158)
¢ (cid:148)(cid:143) (cid:155)(cid:135) (cid:156)(cid:2) (cid:157)
MAC (cid:153)? (cid:159)(cid:149) (cid:160)(cid:155)(cid:135)(cid:151) (cid:157) ¡] ¢ (cid:148)(cid:143) (cid:155)(cid:135) (cid:156)(cid:2) (cid:157) (cid:158)
Figure 2: Immediate authentication packet exam-
ple. ƒ
4
(cid:23)
(cid:146)
( (cid:7)
4
*7 cT P(cid:22) ,
R
(cid:7)
4
and
(cid:146)
( (cid:7)
4
*7 U(cid:143) cT PG ,
R
(cid:7)
4
*7 cT P
ƒ
4
*7 cT P (cid:23)
multiple future packets to a packet, similar to the EMSS
scheme[25].
3.2 ConcurrentTESLAinstances
In this section, we present a space optimization tech-
nique in the case the sender uses multiple TESLA in-
stancesforonestream.
Choosing thedisclosure delay involvesa tradeoff. Re-
ceiverswithalownetworkdelaywelcomeshortkeydis-
closuredelaysbecausethattranslatesintoashortauthenti-
cationdelay.Unfortunately,receiverswithalongnetwork
delay could notoperatewith a shortdisclosure delay be-
cause most of the packets will violate the security con-
dition and hence cannot be authenticated. Conversely, a
longdisclosuredelaywouldsuitthelongdelayreceivers,
butcausesunnecessarilylongauthenticationdelayforthe
receiverswithshortnetworkdelay. Thesolutionistouse
multipleinstancesofTESLAwithdifferentdisclosurede-
lays simultaneously, and each receiver can decide which
disclosuredelay,andhence,whichinstancetouse.Asim-
pleapproachtouseconcurrentTESLAinstancesistotreat
each TESLA instanceindependently,with one keychain
per instance. The problem for this approach is that each
extraTESLAinstancealsocausesextraspaceoverheadin
eachpacket. Ifeachinstancerequires20bytesperpacket
(80bitforkeydisclosureand80bitfortheMACvalue),
using three instances results in 60 bytes space overhead
perpacket. Wepresentanewoptimizationwhichreduces
. thespaceoverheadofconcurrentinstances.
Themainideaisthatinsteadofusingoneindependent
If each packet can only carry the hash of one other key chain per TESLA instance, we could use the same
packet, it is clear that the sending rate needs to remain key chain but a different key schedule for all instances.
constant. Alsoitisclearthatifapacketislost,thecorre- Thebasicschemeworksasfollows.AllTESLAinstances
spondingpacketcannotbeimmediatelyauthenticated. To forastreamsharethesametimeintervaldurationandthe
achieve flexibility for dynamic sending rate and robust- same keychain. Each key
nesstopacketloss,thesendercanaddthehashvaluesof
" (cid:8) in the keychain is associ-
atedwiththecorrespondingtimeinterval (cid:18) (cid:8) ,and " (cid:8) willbe disclosed in (cid:18) (cid:8) .1 Assume that the sender uses § in-
stancesofTESLA,whichwedenotewith ¤ +(cid:16) 'F '- ' ¤ f . Each
TESLA instance ¤F “ has a different disclosure delay In “ ,
anditwillhaveaMACkeyschedulederivedfromthekey
schedule shifted by In “ time intervals from the key dis-
closure schedule. Let " “ (cid:8)!*(cid:24) P(cid:137) « denote the MAC key used
by instance ‹ in time interval (cid:18)Q (cid:8) . We derive " “ (cid:8)!*(cid:24) P « as
" “ (cid:8)!*(cid:24) P « (cid:23) HMAC ( " (cid:8)(cid:20)*(cid:24) P(cid:137) «2 @ ‹ , . NotethatweuseHMACas
apseudo-randomfunction,whichisthesamekeyderiva-
tionconstructionasweuseinTESLA(seesection2.1and
figure1). Infact,thekeysofthefirstinstancearederived
withthesamepseudo-randomfunctionastheTESLApro-
tocolthatusesonlyoneinstance. Thereasonforgenerat-
ingalldifferent, independentkeysforeachinstanceisto
preventanattackwhereanattackermovestheMACvalue
of an instance to another instance, which might allow it
to claim that data was sent in a different interval. Our
approachofgeneratingindependentkeyspreventsthisat-
tack. Thus to compute the MAC value in packet (cid:15)
4
in
time interval (cid:18)Q (cid:8) , the sender computesone MACvalueof
themessagechunk (cid:7)
4
perinstanceandappendtheMAC
values to (cid:7)
4
. In particular, for the instance ¤ “ with dis-
closuredelay I “ , thesenderwillnowusethekey " “ (cid:8)!*(cid:24) P «
asmentionedabovefortheMACcomputation.
Figure3showsanexamplewithtwoTESLAinstances,
one with a key disclosure time of two intervals and the
other of four intervals. The lowest line of keys shows
the key disclosure schedule, i.e. which key is disclosed
in which time interval. The middle and top line of keys
shows the key schedule of the first and second instance
respectively,i.e. whichkeyisusedtocompute theMAC
forthepacketsinthegiventimeintervalforthegivenin-
stance. Usingthistechnique,thesenderwillonlyneedto
discloseonekeychainnomatterhowmanyinstancesare
usedconcurrently. Ifeachdisclosedkeyis EG A byteslong,
then for a streamwith › concurrent instances, this tech-
nique will save EG A(cid:127) ( ›fi N EG , bytes per packet, which is a
drasticsavinginparticularforsmallpackets.
3.3 TimeSynchronizationIssues
Loosetimesynchronizationisanimportantcomponent
in TESLA. Although sophisticated time synchronization
protocolsexist,theyusuallyrequireconsiderablemanage-
ment overhead. Furthermore, they generally have a high
complexity and achieve properties that TESLA does not
require. Anexampleisthenetworktime protocol(NTP)
by Mills [21]. Bishop performs a detailed security anal-
ysis of NTP [7]. For these reasons, we outline a simple
andsecuretimesynchronizationprotocolthatsufficesthe
humblerequirementsofTESLA.
1Notethatthiskeyscheduleisdifferentfromthepreviousschedule
describedinsection2.1,wherekey
(cid:150)y (cid:151)
wasusedtocomputetheMAC
ininterval fl (cid:151) andwasdisclosedininterval fl (cid:155) (cid:151) (cid:157)
The time synchronization requirement that secures
TESLA against an active attacker is that the receiver
knows an upper bound of the difference between the
sender’s local time and the receiver’slocal time,
.
(cid:176) . For
simplicity, we assume the clock drift of both sender and
receiverarenegligible,otherwisetheywillsimplyresyn-
chronize periodically. We denote the real difference be-
tweenthesenderandthereceiver’stimewith – .Hencefor
loosesynchronization,thereceiverdoesnotneedknow –
butonlysome (cid:176) thatisguaranteedtobegreaterorequal
to – . To compute (cid:176) , we can use either a direct or an in-
directtimesynchronizationmethod. Inthefollowing,we
firstdiscussasimpleprotocolfordirecttimesynchroniza-
tion,andnextwediscusshowtodoindirecttimesynchro-
nization.
DirectTimeSynchronization
In direct time synchronization, the receiver performs an
explicit time synchronization with the sender. This ap-
proach has the advantage that no extra infrastructure is
needed to perform the time synchronization. We design
a simpletwo-phase protocolthatsatisfies theTESLA re-
quirements.
Intheprotocol,thereceiverfirstrecordsitslocalsend-
ingtime W] † andsendsatimesynchronizationrequestcon-
taining a nonce to the sender. Upon receiving the time
synchronization request, the sender records its local re-
ceiving time WY ‡ and sends the receivera signed response
packetcontaining WY ‡ andthenonce.
·¶
•M
(cid:181)‚
(cid:181)‚
•6
·¿
„
„
”(cid:16)
(cid:10)(cid:11)
»(cid:135)
(cid:192)
…(cid:22) ‰T (cid:190)
(cid:190)p …(cid:11) `5 (cid:190)s ´(cid:131) ˆ(cid:143) ˜(cid:140)¯˘ (cid:190)
W ‡ @
”(cid:16) »(cid:135) …(cid:22) ‰T (cid:190)
(cid:12)(cid:11) ˙D ¨n˚ (cid:201)
Figure4showsasampletimesynchronizationbetween
the receiver and the sender. Upon receiving the signed
response,thereceiverchecksthevalidityofthesignature
andthematchingofthenonceandcomputes (cid:176) (cid:23) WY ‡¸ NB W] † .
It is easy to see that the (cid:176) computed this way satisfies
the requirement that (cid:176)˝ (cid:204)< – . Because
( WY ‡(cid:30) Nb W VF , (cid:27) ( W V N6 W] † ,
(cid:176) (cid:23) WY ‡(cid:30) Nb W] † (cid:23)
, WY ‡O N6 W V(cid:154) (cid:23) – , and W V Nb W] † is the
networkdelayforsendingtherequestfromthereceiverto
the sender which is greater or equal to A , hence (cid:176)˝ (cid:204)˛ – .
An interesting point is that the network delay of the re-
sponse packet and the delay caused by the computation
of the digital signature do not influence (cid:176) at all. Since
onlytheinitialtimestampmatters,itisimportantthatthe
sender immediatelystores the arrivaltime W ‡ of the time
synchronizationrequestpacket. Thesubsequentprocess-
ingandpropagationdelaydoesnotmatter.
Becausethedigitalsignatureoperationiscomputation-
ally expensive, we need to be careful about denial-of-
service attacks where an attacker floods the sender withPSfragreplacements
MAC
MAC key instance 2
MAC key instance 1
Disclosed keys
time
wy
(cid:144) x?
x?
z|
z|
{
{ wy x
(cid:144) x
wy
(cid:144)
x!}(cid:26)
x!}(cid:26) {
{ wy
(cid:144)
x!}(cid:127)
x!}(cid:127) ~
~
MAC
MAC
—
—
~
x!}(cid:135)
{
x!}(cid:26)
ˇ
{
—
—
~
x!}(cid:135)
{
x!}(cid:127)
(cid:209)
~
—
—
~
x!}(cid:127)
{
x!}(cid:135)
(cid:210)
ˇ
—
—
~
x!}(cid:135)
{
x!}(cid:135)
(cid:211)
(cid:209)
—
—
—
(cid:144)
~
x!}(cid:127)
{
x!}(cid:127)
x!}(cid:135)
x!}(cid:135) ˇ
(cid:212)
(cid:210)
ˇ
—
—
—
(cid:144)
~
x!}(cid:135)
{
x!}(cid:135)
x!}(cid:135)
x!}(cid:135) ˇ
(cid:213)
(cid:211)
(cid:209)
PSfragreplacements
MAC
MAC
MAC
Figure3: MultipleTESLAinstanceskeychainoptimization.
timesynchronizationrequests. Section4.1addressesthis
issue.
Receiver time Sender time
RTT
W †
W V
W
WY
W]
+
‡
U
Figure 4: The receiver synchronizes its time
withthesender.
IndirectTimeSynchronization
In indirect time synchronization, both thesender and the
receiverssynchronizetheirtimewithatimereferenceand
hencethesenderandthereceivercanreachimplicittime
synchronization. Thisapproachisfavorableespeciallyin
cases where the application needs time synchronization
with a time reference anyhow. Let (cid:176)(cid:149) ‡n (cid:214)(cid:9) (cid:27)
R(cid:215)
‡n (cid:214)
R
denote
themeasuredupperboundofthedifferenceofthesender’s
timeandthetimereference’stimewith
R(cid:215)
‡n (cid:214)
R
asthemax-
imum error, and let (cid:176)(cid:216) (cid:214)(cid:28) †(cid:217) (cid:27)
R(cid:215)
(cid:214)(cid:28) †
R
denote the measured
upperboundofthedifferenceofthetimereference’stime
andthereceiver’stimewith
R(cid:215)
(cid:214)(cid:24) †
R
asthemaximumerror.
Thus the receiver could reach an implicit time synchro-
nizationwiththesenderas
R(cid:215)
(cid:214)(cid:28) †
R
(cid:176) (cid:23) (cid:176) ‡n (cid:214) (cid:27)b (cid:176) (cid:214)(cid:24) † (cid:27)
R(cid:215)
‡n (cid:214)
R
(cid:27)
with
(cid:215)
(cid:23)
R(cid:215)
‡n (cid:214)
R
(cid:27)
R(cid:215)
(cid:214)(cid:24) †
R
tain its time synchronization with the time reference, the
time interval and key chain information outlined in sec-
tion 2.2, along with the sender’smaximum synchroniza-
tionerror
asthemaximumerror.
In settings where the receiveris already time synchro-
nizedwiththetimereference,thereceiverdoesnotneedto
sendanyinformationtothesender. Thesenderjustneeds
toperiodicallybroadcastdigitallysignedpacketsthatcon-
(cid:215)
‡n (cid:214) . Anewreceivercanstartauthenticatingthe
datastreamrightafteritreceivesoneofthesignedadver-
tisements.Thisisparticularlyusefulinthecaseofsatellite
broadcast.
DelayedTimeSynchronization
Anotherinterestingrelaxationofthetimesynchronization
requirementisthat,ifweassumethatthereceiver’sclock
driftisnegligibleduringaperiodoftime,thenthereceiver
canreceivethedatastreamfromthesenderbeforedoinga
time synchronizationand authenticatethe datalater after
a time synchronization. The receiveronly needs to store
thearrivaltimeofeachpacket,sothatitcanevaluatethe
securityconditionafteritperformedthetimesynchroniza-
tion. This is highlyuseful for manyapplications, for ex-
amplearoutercanuseTESLAtoauthenticateitracemes-
sages [3], and the victim can authenticate the routers’ IP
markingsafterwardswhenitwantstotraceanattackerby
performinganapproximatetimesynchronizationwiththe
router[31].
3.4 DeterminingtheKeyDisclosureDelay
AnimportantparametertodetermineforTESLAisthe
keydisclosuredelay I . Ashortdisclosuredelaywillcause
packetstoviolatethesecurityconditionandcausepacket
drop,whilealongdisclosuredelaycausesalongauthen-
tication delay. Note that although the choice of the dis-
closure delay does not affect the security of the system,
itisanimportantperformancefactor. We describeanew
method on how to choose a good disclosure delay I . In
particular,weshowasfollowsthatifRTTisareasonable
upper bound on the round trip time between the receiver
andthesender,thenincaseofusingdirecttimesynchro-
nization,wecanchoose I (cid:23)Z (cid:218)
·
(cid:18)(cid:219) (cid:18) _ (cid:18) (cid:8)(cid:20)(cid:19)(cid:22) (cid:21)> (cid:220) (cid:27) E ,where (cid:18) (cid:8)!(cid:19)(cid:22) (cid:21)istheintervalduration. Incase ofindirect timesynchro-
nization,wecanchoose I (cid:23)(cid:221) (cid:218)] ( ƒ) ‡5 †˘ (cid:27)
(cid:215)
,(cid:143) _ (cid:18) (cid:8)!(cid:19)(cid:22) (cid:21)> (cid:220) (cid:27) E ,where
(cid:215)
isthesumofboththesenderandreceivertimesynchro-
nization error, and ƒ ‡n † is a reasonable upper bound on
thenetworkdelayofapackettravelingfromthesenderto
thereceiver.
Considerapacket (cid:15)(cid:16) (cid:8) thatisconstructedusingtheMAC
key "g :
4
intimeinterval (cid:17)
4
whichwillbedisclosed I time
intervalslater. Thepacket (cid:15) (cid:8) arrivesatthereceiveratits
localtime W † (cid:8) . Hencethesecurityconditionisthat
[
W
†
(cid:8) (cid:27)6
(cid:18)Q
(cid:176)(cid:222)
(cid:8)(cid:20)(cid:19)(cid:22)
N.
(cid:21)
(cid:18)(cid:26) (cid:25)
‘(cid:219) NM (cid:17)
4
J6 I @ (1)
where (cid:18) (cid:25) isthebeginningtimeofthe A thtimeintervaland
(cid:18)Q (cid:8)(cid:20)(cid:19)s (cid:21) isthetimeintervalduration. Assumepacket (cid:15)(cid:16) (cid:8) was
sentatthesender’slocaltime W ‡ (cid:8) . Hence
(cid:17)
4(cid:149) (cid:223)
(cid:18) (cid:8)!(cid:19)(cid:22) (cid:21) (cid:27)¶ (cid:18)(cid:26) (cid:25)(cid:224) (cid:27)¶ (cid:18) (cid:8)(cid:20)(cid:19)s (cid:21)
W ‡ (cid:8) Jb (cid:18)
4
(cid:27)(cid:216) (cid:18)Q (cid:8)(cid:20)(cid:19)(cid:22) (cid:21) (cid:23)
. We denote the average network
delaytimefromthesendertothereceiverwith ƒ) ‡n † and
the average network delay time from the receiver to the
senderis ƒ(cid:149) †7 ‡ ,andhence
·
(cid:18)(cid:219) (cid:18) (cid:23) ƒ(cid:149) †7 ‡Æ (cid:27)(cid:217) ƒ) ‡n † '
Incaseofadirecttimesynchronization,usingthesame
notation as in section 3.3,
ƒ(cid:149) †7 ‡ @ W † (cid:8) (cid:27)^ –(cid:216) N6 W ‡ (cid:8) ' (cid:23) ƒ) ‡n †
(cid:176) (cid:23) –% (cid:27) ( W V N(cid:226) W] † ,
'
(cid:23) –% (cid:27)
, and hence we can derive at
the end that a tight bound for I to satisfy the equation 1 is I (cid:23)\ (cid:218) · (cid:18)(cid:219) (cid:18) _ (cid:18)Q (cid:8)!(cid:19)(cid:22) (cid:21) (cid:220) (cid:27) E , which allows most of pack-
ets to satisfy the security condition and still the receiver
wouldnotneedtowaitmuchextralongerthannecessary
to authenticate the packets. Similarly in case of an indi-
recttimesynchronization, we canderivethatagood I is
I (cid:23)(cid:221) (cid:218)] ( ƒ(cid:149) ‡n †(cid:30) (cid:27)
(cid:215)
,(cid:143) _ (cid:18) (cid:8)(cid:20)(cid:19)s (cid:21)> (cid:220) (cid:27) Ep '
sender does not keep per-receiver state or perform per-
receiver operations. In the case of direct time synchro-
nization, a DoS attack is possible, since the sender is re-
quiredtodigitallysigneachnonceincludedinatimesyn-
chronization request. An attacker can perform a DoS by
floodingthesenderwithrequests.
This response packet needs to be authenticated with a
digitalsignaturescheme,suchasRSA[28],orDSA[32].
Since public-key signature algorithms are computation-
allyexpensive,thesigningoftheresponsepacketcanbe-
come a performance bottleneck for the sender. A simple
trick can alleviate this situation. The sender can aggre-
gate multiple requests, compute and sign a Merkle hash
treethatisgeneratedfromalltherequester’snonces[20].
Figure 5 shows how such a hash tree is constructed. If
4 Security Discussion and Robustness to
DoS
Our original paper did not address denial-of-service
(DoS)attacksonTESLA.InanIPmulticastenvironment,
however,DoSisaconsiderablethreatandrequirescareful
consideration. We discuss potential security problems in
thissectionandshowhowtostrengthenTESLAtothwart
them.Inparticular,weshowthatthereisnoDoSattackon
thesenderifthereceiversperformindirecttimesynchro-
nization. Incaseofdirecttimesynchronization,weshow
howtomitigateDoSattacksonthesender.Althoughthere
are some potential DoS attacks on the receiver side, we
showthatTESLAdoesnotaddanyadditionalvulnerabil-
itytoDoSattacksifthereceiverhasareasonableamount
ofbufferspace,otherwisewedescribeschemesthatalle-
viatetheexposuretoDoS.
4.1 DoSAttackontheSender
A DoS attack on the sender is not possible if TESLA
is used with indirect time synchronization, because the
ª(cid:216) (cid:228) isthe rootofthe hashtree, ª(cid:216) (cid:228) would beincluded in
the signed part of the response packet instead of the re-
ceiver’s nonce ªÆ (cid:229) . To verify the digital signature of the
responsepacket,eachreceiverwouldreconstructthehash
tree. Since it does not know the other receiver’s nonces
thatarepartofthehashtree,thesenderwouldincludethe
nodes of the tree necessary to reconstruct the root node.
Fortheexampleinfigure5,thepacketreturnedtoreceiver
Awouldinclude ª% (cid:230) and (cid:146) X P . ReceiverAcanreconstruct
therootnode (cid:146)) (cid:231) P fromthesevaluesanditsownnonce ª% (cid:231) as follows: (cid:146)(cid:149) (cid:231) P. (cid:23) (cid:146) ( (cid:146) ( ª% (cid:231) @ ª% (cid:230) ,k @ (cid:146) X P(cid:11) , . Note that the
number ofnodesreturnedin theresponsepacketis loga-
rithmic in the number of receiverswhose request arrived
inthesametimeinterval.Assuminga50msintervaltime
(thesenderwouldneedtocomputeatmost20signatures
persecond)andassumingthat1,000,000receiverswanted
tosynchronizetheirtimeinthatinterval,thereturnpacket
would only need to contain 20 hash nodes or 200 bytes,
assumingan80bithashfunction. Anycryptographically
securehashfunctioncanbeusedfor
(cid:146)
(? =(cid:28) @Y Ł(cid:135) ,
PSfragreplacements
MAC
MAC
MAC
,forexample
MD5[27],SHA-1[17],orRIPEMD-160.
(cid:236) Ø
(cid:152)1 Øk Œ
(cid:236)(cid:219)
(cid:152)1
Œ
Ø (cid:157)
(cid:236) º
(cid:152)1 º (cid:157)
(cid:236) (cid:157)
Figure 5: Hash tree over receiver nonces. Node
(cid:146)
(
ª% (cid:231)
@
ª% (cid:230)
,
(cid:146)) (cid:231)T (cid:230)
(cid:23)
.
(cid:146)(cid:149) (cid:231)
P1 (cid:23)
(cid:146)
(
(cid:146)) (cid:231)T (cid:230)
@
(cid:146)
X PG , .
4.2 DoSAttackontheReceiver
Inthissection,wediscusstwoDoSattacksontheclient.
Sinceweassumetheattackercouldhavefullcontrolofthenetwork,someDoSattackssuchasdelayordroppackets
arealwayspossible. Delaypacketscouldcausepacketsto
violatethesecurityconditionandhencenottobeauthen-
ticated. Ontheotherhand,speedinguppacketsdoesnot
do anything at all. The receiver even benefits from this
sinceshemightbeabletouseachainwithashortdisclo-
suredelaythatshecouldnotuseotherwise. Wecanshow
that replay packets cannot do much harm either. First, a
duplicatedpacketisonlyacceptedbythereceiverwithina
shorttimeperiod,sincethesecurityconditiondropspack-
etsiftheyarereplayedwithalongdelay. Secondwecan
preventthereplayattackbyaddingasequencenumberto
eachpacketandbyincludingthesequencenumberinthe
MAC.TheTESLAprotocolinthenetworklayerorinthe
applicationlayerwillfilteroutduplicatepackets.
In the rest of the subsection, we discuss some more
complicatedDoSattacksandshowhowtomitigateorpre-
venttheattacks. Firstwediscussafloodingattackwhich
fillsupthereceiverbuffers. Secondwediscussanattack
thattriestowastethereceiver’scomputationresourcesby
unnecessarilyre-computingthekeychain.
DoSonthePacketBuffer
An powerful attack is to flood the multicast group with
bogustraffic.Thisattackisseriousbecausecurrentmulti-
castprotocolsdonotenforcesendingaccesscontrol.2 The
solutionweproposeinvolvesaweakbutefficientandim-
mediateauthenticationmethodthatofferssomeprotection
againstafloodingattack.
First if the receiver has a certain size buffer, we show
thatfloodingcannotdomuchharm. Becausethescheme
only requires the receiver to buffer packets for the dura-
tion of one disclosure delay until the authenticity of the
packets can be verified, hence the buffer size only needs
tobethemultiplicationofthenetworkbandwidthandthe
disclosure delay time. Assuming that the receiver has
a EF A Mbps network connection and a (cid:237) A5 A ms disclosure
delay, the required buffer size is around (cid:238)s (cid:239) A kB, which
should in general not be a major concern with today’s
workstations. Assuming (cid:237) EG (cid:240) byte network packets, the
computationoverheadtoauthenticatethepacketsisonthe
orderof EG (cid:240)p æp A HMACcomputationspersecond. Sincethe
opensslHMAC-MD5implementationprocessesontheor-
derof E(cid:11) (cid:240)s A(cid:127) @(cid:2) Ap A5 A (cid:237) E(cid:11) (cid:240) -byteblockspersecondona (cid:237) Ap A
because thereceiverwould droppacketsdue to alack of
bufferspace.3
Anobvioussolutionistodistributeasharedsecretkey
toallreceiversandtoaddaMACtoeachpacketwiththe
sharedsecretkey.Thisenablesareceivertoquicklyverify
thepacket,butitallowsanattackerwhoknowsthekeyto
floodtheclientsanyhow.
Anotherapproachistousethekeychainasaweakau-
thentication method. Briscoe presents a related method
for immediate authentication [8]. The receiver pre-
authenticates the packet by verifying that the disclosed
keyreallyispartofthekeychain. Basedonthedisclosed
key,thereceivercanalsoimmediatelyderivethetimein-
tervalofthepacketandalsoimmediatelyverifythesecu-
ritycondition.Bothchecksareefficientanddonotrequire
anyadditionalspace overheadinthepacket. Anattacker
wouldneedtoreceiveapacketfromthesender,extractthe
disclosedkey,andusethatkeytofloodthereceivers.For-
tunately,thefloodingtimeperiodofeachkeyislimitedto
oneintervalduration.
Yetanothersolutionistousetheimmediateauthentica-
tion wepropose in section3.1. Inthis case, themessage
doesnotneedtobeaddedtoaqueueifitisimmediately
authenticated.
Inpractice,thereceiverallocatesaqueueforeachtime
interval to buffer incoming packets until they can be au-
thenticated. Ifthereceiverhastoolittlememorytobuffer
all incoming traffic during the disclosure delay, it needs
to decide on a drop or replacement policy in case of a
full buffer. Dropping all packets of a particular interval
oncethebufferisfullisapoorpolicy,becauseanattacker
might insert the spoofed traffic only early in each time
interval, causing the receivers to buffer mostly spoofed
packets. Ideally, the receiveruses a random replacement
policyonce the bufferis full. For eachincoming packet,
thereceiverpicksapacketwithinthebuffertoreplace.
DoSontheKeyChain
AnotherDoSattackisspecifictohowtheTESLAreceiver
reconstructsthekeychain. Ifanattackercouldfoolare-
ceiver to believethat a packet was sent out far in the fu-
ture,andthereceiverwouldtrytoverifythekeydisclosed
inthepacketbyapplyingthepseudo-randomfunctionun-
MHz til the last committed key chain value. This attack can
Pentium III Linux workstation, the estimated processor
beeasilypreventedbycheckingthatthepacketintervalis
overheadforTESLAauthenticationisontheorderof1%
less or equal the latest intervalthat the sender canpossi-
oftheCPUtime.
blybein. Foranincomingpacketsentininterval
Secondif thereceiver’sbuffersizeis notlargeenough
ascomputedabove,floodingcouldresultinaDoSattack
2Source-SpecificMulticast(SSM)isanewmulticastprotocol,anda
newIETFworkinggroupwasformedinAugust2000[22]. SSMtends
toaddressthisproblembyenforcingthatonlyonelegitimatesendercan
sendtothemulticastgroup.
(cid:17)
4
,the
receiver can verify if the interval (cid:17)
4
is not in the future,
i.e. ifthesendercanalreadybeinthatinterval. Thever-
3Wedonotconsiderthefloodingattackfromanetworkperspective
(wherefloodingcancauselinkcongestionandresultsindroppinglegit-
imatetraffic)becauseanynetworkprotocolissusceptibletothisattack.ification condition is that (cid:17)
4
J [] ( W (cid:8) N6 (cid:18)(cid:26) (cid:25) ,(cid:2) _ (cid:18) (cid:8)!(cid:19)(cid:22) (cid:21) ‘ , where
W (cid:8) isanupperboundonthesender’stimethatthereceiver
computesatthearrivalofthepacket.
5 Related Work
Researchers have proposed signing data packets to
achieve source authentication. Since a digital signature
achieves non-repudiation, a signature is much stronger
than just authentication. As we mentioned in the intro-
duction,thecommunicationandcomputationoverheadof
currentsignatureschemesismoreexpensivethanschemes
that are based on symmetric cryptography. We will re-
view only the schemes that provide source authentica-
tion and not the schemes providing non-repudiation, i.e.
[14,29,33,25].
The earliest related work is by Cheung [11]. He pro-
poses a scheme akin to the basic TESLA protocol to au-
thenticate link-staterouting updatesbetween routers. He
assumesthatalltheroutersinanetworkaretimesynchro-
nizedupto (cid:242)
(cid:215)
,anddoesnotconsiderthecaseofhetero-
geneousreceivers.
Anderson et al. [1] present the Guy Fawkes protocol
whichprovidesmessageauthenticationbetweentwopar-
ties. Theirprotocolhasthedrawbackthatitcannottoler-
ate packet loss. They propose two methods to guarantee
thatthe keysare notrevealedtoosoon. Thefirstmethod
isthatthesenderandreceiverareinlockstep,i.e. there-
ceiver acknowledges every packet before the sender can
sendthenextpacket.Thisseverelylimitsthesendingrate
anddoesnotscaletoalargenumberofreceivers.Thesec-
ondmethodtosecuretheirschemeistotime-stampeach
packetatatime-stampingservice,whichintroducesaddi-
tionalcomplexityandoverhead.
Canettietal.proposetouse (cid:6) differentkeystoauthen-
ticate every message with (cid:6) different MAC’s for sender
authentication[9]. Everyreceiverknows › keysandcan
henceverify › MAC’s. Thekeysaredistributed insuch
a waythatnocoalitionof § receiverscanforgea packet
for a specific receiver. The communication overhead for
this scheme is considerable, since every message carries
(cid:6) MAC’s. Theservermustalsocompute (cid:6) MACsbefore
a packetissent, which makesitmoreexpensivethan the
schemewepresentinthispaper.Furthermore,thesecurity
oftheirschemedependsontheassumptionthatatmosta
boundednumber(whichisontheorderof (cid:6)
authenticate data streams sent within a group [4]. Their
scheme requires that the sender receivesan acknowledg-
mentpacketfromeachreceiverbeforeitcansendthenext
packet. This prevents scalability to a large group. The
advantageisthattheirprotocoldoesnotrelyontimesyn-
chronization.
Unfortunately,theirprotocolisvulnerabletoaman-in-
the-middle attack. To illustrate the attack, we briefly re-
viewtheprotocolforonesenderandonereceiver(adapted
tousethesamenotationasweestablishedinthispaper):
)ofreceivers
collude.
Briscoe proposes the FLAMeS protocol that is similar
totheCheung[11]andpartofthebasicTESLAprotocol.
Bergadano, Cavalino, and Crispo present an authentica-
tionprotocolformulticast[5]. Theirprotocolissimilarto
Cheung[11]andtopartsofthebasicTESLAprotocol.
Bergadano, Cavagnino, and Crispo, propose a proto-
col similar to the Guy Fawkes protocol to individually
(cid:243)t
ı(cid:14)
(cid:243)t
ı(cid:14)
(cid:244)<
(cid:244)(cid:221)
(cid:244)<
(cid:244)(cid:221)
ı6
(cid:243)h
ı6
(cid:243)h
(cid:246)-
(cid:246)-
(cid:246)-
(cid:246)-
(cid:159))
ı˘
(cid:159))
ı
(cid:243)ł
(cid:254)
(cid:243)
⁄
¡
¡
(cid:247)
(cid:147)(cid:217)
(cid:254)
(cid:147)(cid:217)
¡Y ø
ıł
ıł
(cid:236)
(cid:255)D
(cid:255)D
¡(cid:143) œ
(cid:153)? (cid:159))
(cid:153)? (cid:159))
(cid:159))
ı˘
ı
(cid:243)ł
(cid:254)
⁄
(cid:247)
¡
¡
¡Y
ı(cid:219)
ı
ø (cid:236)$
(cid:254) (cid:158)
⁄ (cid:158)
¡
¡
ß-
(cid:159))
(cid:159))
(cid:252)
¨n(cid:253)
ıł
ı˘
(cid:201)
(cid:247)
(cid:254)
¡] ø (cid:236) ¡Y œ (cid:159)) ıł (cid:247) ¡] ø (cid:236)) ßF (cid:252)
¨n
(cid:0)
(cid:201)
Intheirscheme,bothA(thesender)andB(thereceiver)
pre-computeakeychain, " (cid:1) (cid:8) and " (cid:3) D (cid:2) (cid:8) ,respectively. In
the followingattack, B intends to authenticate data from
A,butwewillshowthattheattacker (cid:17) canforgealldata.
The attacker (cid:17) captures all messages from B and it can
pretendtoBthatallthemessagescomefromA.ToA,the
attacker (cid:17) justpretendstobeitself.
(cid:243)(cid:226)
(cid:4)
(cid:153)?
(cid:244) (cid:5)
ı
1
(cid:4)
ı(cid:14)
1
(cid:4)
ı(cid:14)
(cid:158)
(cid:153)? (cid:4)
(cid:244)(cid:221)
(cid:244)
(cid:8)
(cid:244)(cid:221)
(cid:244)
(cid:8)
(cid:244)
ı (cid:158)
ı(cid:217)
B
(cid:4)
ı(cid:217)
B
(cid:4)
(cid:243)h
(cid:246)-
(cid:246)-
(cid:246)-
(cid:246)-
(cid:246)-
(cid:246)-
(cid:159))
(cid:159)
(cid:6)
ı
(cid:159)
(cid:6)
ıy
ı
(cid:243)ł
k
(cid:4)
(cid:254)
(cid:4)
⁄
(cid:160)(cid:254)
(cid:247) (cid:236) (cid:159))¡Y ø ¡(cid:2) œ
(cid:247) (cid:236) (cid:159)¡Y ø ¡(cid:143) œ
(cid:6)
(cid:147)(cid:9) ıy (cid:255)D (cid:153)? (cid:159))¡
(cid:254)
(cid:147)(cid:9) ıy (cid:255)D (cid:153)? (cid:159))¡
(cid:147)(cid:9) ıy (cid:255)D (cid:153)? (cid:159))¡
(cid:243)ł (cid:247) ¡Y
(cid:137) (cid:247) ¡Y ø
(cid:4)
(cid:254) ıı ¡
ıł ⁄ ıy¡
ı(cid:219) (cid:254) ı¡
ø
(cid:236)$
(cid:236)$ ßF
ßF (cid:252)
(cid:254) (cid:159))(cid:158) ¡
(cid:159))⁄ (cid:158) ¡
(cid:160) (cid:159))(cid:158)(cid:254) ¡
(cid:252)
¨n
(cid:7)
¨n(cid:253)
(cid:201)
ı
ı
ıł
(cid:201)
(cid:247)
(cid:254)
(cid:247)
¡]
¡]
ø
ø
(cid:236)
(cid:236)
¡(cid:143)
¡(cid:143)
œ
œ
(cid:159))
(cid:159))
ı
ıł
(cid:247)
(cid:247)
¡Y
¡Y
ø
ø
(cid:236)$
(cid:236)$
ß-
ß-
(cid:252)
(cid:252)
¨n
(cid:0)
¨n
(cid:0)
(cid:201)
(cid:201)
Notethattheattacker (cid:17) canforgethecontentofthemes-
sage (cid:1) + senttoB,becauseitknowsthekey "g (cid:17)T (cid:25) . Theat-
tacker (cid:17) canforgetheentiresubsequent messagestream,
withoutBnoticing.
Another attack is that an eavesdropper that records a
message exchange between A (sender) and B (receiver)
can impersonate either A or B as a receiver to another
senderC.Thisattackcanbeseriousifthesenderperforms
accesscontrolbasedontheinitialsignaturepacketandthe
revealed key chain. The attack is simple, the eavesdrop-
per only needs to replay the initial signatures and all the
disclosedkeyscollected.
6 Conclusions
In this paper, we have presented an extension to our
TESLA scheme which provides a solution to the source
authentication problem under the assumption that thesender and receiver are loosely time synchronized. The
basic TESLA protocol has the following salient proper-
ties:
H Low computation overhead. On the order of one
MAC function computation per packet for both
senderandreceiver.
H Low communication overhead. Required is as lit-
tle as one MAC value per packet. Periodically, the
senderalsoneedstosendoutthesecretkeys.
H Perfect loss robustness. If a packet arrives in time,
thereceivercanverifyitsauthenticityeventually(as
longasitreceiveslaterpackets).
Theextensionsweproposeinthispaperfeature:
H ThebasicTESLAscheme providesdelayedauthen-
tication. Withadditionalinformationinapacket,we
show in this paper how we can provide immediate
authentication.
H We reduce the communication overhead when mul-
tiple TESLA instances with different authentication
delaysareusedconcurrently.
H We deriveatightlowerbound onthedisclosurede-
lay.
H
[6] N.BhaskarandI.Kouvelas. Source-specificprotocolin-
dependentmulticast. InternetDraft,InternetEngineering
TaskForce,Mar.2000. Workinprogress.
[7] M.Bishop. ASecurityAnalysisoftheNTPProtocolVer-
sion 2. In Sixth Annual Computer Security Applications
Conference,November1990.
[8] B. Briscoe. FLAMeS: Fast, Loss-Tolerant Authen-
tication of Multicast Streams. Technical report,
BT Research, 2000. http://www.labs.bt.com/
people/briscorj/papers.html.
[9] R.Canetti,J.Garay,G.Itkis,D.Micciancio,M.Naor,and
B.Pinkas. Multicastsecurity:Ataxonomyandsomeeffi-
cientconstructions. InInfocom’99,1999.
[10] R.Canetti,P.Rohatgi,andP.-C.Cheng.Multicastdatase-
curitytransformations:Requirements,considerations,and
prominent choices. Internet draft, Internet Engineering
TaskForce,2000. draft-data-transforms.txt.
[11] S. Cheung. An efficient message authentication scheme
forlinkstaterouting. In13thAnnualComputerSecurity
ApplicationsConference,1997.
[12] S.E. Deering. Host extensionsforIPmulticasting. Re-
quest forComments (Standard) 1112, Internet Engineer-
ingTaskForce,Aug.1989.
[13] D.Estrin,D.Farinacci,A.Helmy,D.Thaler,S.Deering,
M.Handley,V.Jacobson,C.Liu,P.Sharma,andL.Wei.
Protocol independent multicast-sparse mode (PIM-SM):
protocol specification. Request for Comments (Experi-
mental)2362,InternetEngineeringTaskForce,June1998.
[14] R.GennaroandP.Rohatgi. HowtoSignDigitalStreams.
Technicalreport,IBMT.J.WatsonResearchCenter,1997.
Hardenthesenderandthereceiveragainstdenial-of-
[15] N.Haller.TheS/KEYone-timepasswordsystem.Request
serviceattacks. forComments(Informational)1760,InternetEngineering
TaskForce,Feb.1995.
7 Acknowledgments [16] M.Handley,H.Holbrook,andI.Kouvelas. Protocolinde-
pendentmulticast-sparsemode(pim-sm):Protocolspec-
We would like to thank Radia Perlman for the discus- ification (revised). Internet Draft, Internet Engineering
sionsonDoSattacks. WearealsogratefultoBobBriscoe TaskForce,July2000. Workinprogress.
forhelpfuldiscussionsandfeedback. [17] U.S.Laboratory).Securehashstandard.FederalInforma-
tion Processing Standards Publication FIPS PUB 180-1.
References http://csrc.nist.gov/fips/fip180-1.txt
(ascii), http://csrc.nist.gov/fips/
[1] R. J. Anderson, F. Bergadano, B. Crispo, J.-H. Lee, fip180-1.ps(postscript),Apr.1995.
C. Manifavas, and R. M. Needham. A new family [18] L.Lamport. Passwordauthenticationwithinsecurecom-
of authentication protocols. Operating Systems Review, munication. Commun.ACM,24(11),Nov.1981.
32(4):9–20,October1998. [19] M.Luby,J.Gemmell,L.Vicisano,L.Rizzo,J.Crowcroft,
[2] M.Bellare,R.Canetti,andH.Krawczyk.HMAC:Keyed- andB.Lueckenhoff.Asynchronouslayeredcoding.amas-
hashingformessageauthentication. InternetRequestfor sivelyscalablereliablemulticastprotocol. Internetdraft,
Comment RFC 2104, Internet Engineering Task Force, InternetEngineeringTaskForce,July2000.draft-ietf-rmt-
Feb.1997. pi-alc-01.txt.
[3] S. Bellovin. The icmp traceback message. http:// [20] R. Merkle. Protocols for public key cryptosystems. In
www.research.att.com/˜smb,2000. 1980IEEESymposiumonSecurityandPrivacy,1980.
[4] F. Bergadano, D. Cavagnino, and B. Crispo. Chained [21] D.L.Mills. NetworkTimeProtocol(Version3)Specifi-
streamauthentication. InSelectedAreasinCryptography cation,ImplementationandAnalysis.InternetRequestfor
2000,Waterloo,Canada,August2000. Atalkdescribing Comments,March1992. RFC1305.
thisschemewasgivenatIBMWatsoninAugust1998. [22] S.-S. Multicast. http://www.ietf.org/html.
[5] F.Bergadano,D.Cavalino,andB.Crispo. Individualsin- charters/ssm-charter.html.
glesourceauthentication onthe mbone. In ICME2000, [23] R.Perlman,C.Lee, T.Ballardie, J.Crowcroft, Z.Wang,
Aug2000. AtalkcontainingthisworkwasgivenatIBM T.Maufer,C.Diot,J.Thoo,andM.Green. Simplemulti-
Watson,August1998. cast:Adesignforsimple,low-overheadmulticast.InternetDraft,InternetEngineeringTaskForce,Mar.1999. Work
inprogress.
[24] A.Perrig,R.Canetti,B.Briscoe,J.Tygar,andD.X.Song.
TESLA:MulticastSourceAuthenticationTransform. In-
ternetDraft,InternetEngineeringTaskForce,July2000.
Workinprogress.
[25] A.Perrig,R.Canetti,J.Tygar,andD.X.Song. Efficient
authenticationandsigningofmulticaststreamsoverlossy
channels. In IEEE Symposium on Security and Privacy,
May2000.
[26] Reliable Multicast Transport (RMT). http://www.
ietf.org/html.charters/rmt-charter.
html.
[27] R.L.Rivest.TheMD5message-digestalgorithm.Internet
RequestforComments,Apr.1992. RFC1321.
[28] R.L.Rivest,A.Shamir,andL.M.Adleman.Amethodfor
obtainingdigitalsignaturesandpublic-keycryptosystems.
Commun.ACM,21(2):120–126,1978.
[29] P.Rohatgi. Acompactandfasthybridsignaturescheme
formulticast packet authentication. In6thACMConfer-
enceonComputerandCommunicationsSecurity,Novem-
ber1999.
[30] Secure Multicast Group (SMuG). http://www.
ipmulticast.com/community/smug/.
[31] D. X. Song and A. Perrig. Advanced and authenticatd
marking schemes for ip traceback. Technical Report
UCB/CSD-00-1107.,UCBerkeley,July2000.
[32] U. S. National Institute of Standards and Technology
(NIST). DigitalSignatureStandard(DSS),FederalRegis-
ter56. FIPSPUB186,Aug.1991.
[33] C. K.Wongand S. S.Lam. Digital signatures forflows
andmulticasts. InProc.IEEEICNP‘98,1998.