An Algebraic Approach to IP Traceback
Drew Dean MattFranklin
(cid:0)
AdamStubblefield†
Xerox PARC U.C.Davis RiceUniversity
ddean@parc.xerox.com franklin@cs.ucdavis.edu astubble@rice.edu
Abstract
We present a newsolution to the problem of determin-
ing the path a packet traversed over the Internet (called
thetracebackproblem)duringadenialof serviceattack.
Previoussolutionstothisproblemhavesufferedfromcom-
binatorial explosion, and are unable to scale to realisti-
cally sized networks. This paper reframes the traceback
problemasapolynomialreconstructionproblemanduses
techniques from algebraic coding theory to provide ro-
bustmethodsoftransmissionandreconstruction. Wealso
present an implementation of one promising parameteri-
zation that is efficient, backwards compatible,and incre-
mentallydeployable.
1. Introduction
A denial of service attack is designed to preventlegit-
imate access to a resource. In the context of the Inter-
net, an attacker can “flood” a victim’s connection with
random packets to prevent legitimate packets from get-
tingthrough.TheseInternetdenialofserviceattackshave
becomemoreprevalentrecentlyduetotheirnearuntrace-
abilityandrelativeeaseofexecution[8]. Also,theavail-
ability of tools such as Stacheldraht [10] and TFN [11]
greatlysimplifythetaskofcoordinatinghundredsoreven
thousandsofcompromisedhoststoattackasingletarget.
These attacks are so difficult to trace because the only
hintavictimhasastothesourceofagivenpacketisthe
sourceaddress,whichcanbeeasilyforged1. Also,many
attacks arelaunched fromcompromised systems so find-
ingthesourceoftheattacker’spacketsmaynotleadtothe
attacker. Disregarding the problem of finding the person
responsible for the attack, if a victim was able to deter-
mine the path of the attacking packets in near real-time, (cid:1)
itwould bemuch easierto quicklystoptheattack. Even
finding out partial path information would be useful be-
causeattackscouldbethrottledatfarrouters.
This paper presents a new scheme for providing this
tracebackdatabyhavingrouters embedinformationran-
domlyintopackets. Thisissimilartothetechniqueused
bySavage,etal[19],withthemajordifferencebeingthat
our schemesarebasedonalgebraictechniques. Thishas
theadvantageofprovidingaschemethatoffersmoreflex-
ibility in design and more powerful techniques that can
be used to filter out attacker generated noise and sepa-
ratemultiplepaths.Ourschemessharesimilarbackwards
compatibility and incremental deployment properties to
thepreviouswork.
Morespecifically,ourschemeencodespathinformation
aspointsonpolynomials. Wethenusealgebraicmethods
duetoGuruswamiandSudan[13]forreconstructingthese
polynomialsatthevictim. Thisappearstobeapowerful
new approach to the IP traceback problem. We predict
thatourbasicframeworkwillleadtousefulvariationsand
alternativesinthenearfuture.
The rest of the paper is organized as follows: Section
2discussesrelatedwork, Section3contains anoverview
of the problem and our assumptions, Section 4 presents
ourapproachforalgebraicallycodingpaths,Section5dis-
cussestheissueofencodingthisdatainIP packets,Sec-
tion6containsananalysisofourproposedscheme, Sec-
tion7discussesfuturework,andSection8concludes.
2. RelatedWork
The idea of randomly encoding traceback data in IP
packets was first presented by Savage, et al [19]. They
proposed a scheme in which adjacent routers would ran-
domlyinsertadjacentedgeinformationintotheIDfieldof
packets. Their key insight was that traceback data could
be spread across multiple packets because a large num-
WorkdonewhileemployedatXeroxPARC berofpacketswasexpected. Theyalsoincludeadistance
†WorkdoneduringasummerinternshipatXeroxPARC fieldwhichallowsavictimtodeterminethedistancethat
1Ingressfilteringishelpingtomitigatethisproblembypreventing
a particular edge is from the host. This prevents spoof-
apacketfromleavingabordernetworkwithoutasourceaddressfrom
ing of edges from closer than the nearest attacker. The
thebordernetwork[12].Attackershavegottenaroundthisbychoosing
legitimatebordernetworkaddressesatrandom. biggestdisadvantagesofthisschemeisthecombinatorialexplosionduring theedge identificationstep and the few 8. It is difficult to change the marking algorithm used
feasible parameterizations. The work of Song and Per- byrouters
rigprovidesamoreindepthanalysisofthefaultsofthis
9. Itiseasytochangethereconstructionalgorithmused
scheme[21].
byvictims
There have been two other notable proposals for IP
traceback since the original proposal. Bellovin has pro- Wewillfocusdiscussionhereontheselasttwoassump-
posedhavingrouterscreateadditionalICMPpacketswith tions. The reasoning behind the others is well covered
tracebackinformationatrandomandapublickeyinfras- bySavage’spaper[19]. Changingthe algorithm usedby
tructure to verify the source of these packets [5]. Song routerstomarkpacketswouldrequireahardwarechange
andPerrighaveanimprovedpacketmarkingschemethat in deployed routers. This presents severe problems in
copes with multiple attackers [21]. Unfortunately, this termsofcost,deployability,andaccessasarouterwould
scheme requires that all victims have a current map of needtobetakenofflinewhileanewpieceofhardwarewas
all upstream routers to all attackers (although Song and inserted. Ontheotherhand,thereconstructionalgorithm
Perrig describe how such maps can be maintained). Ad- will almost certainly be implemented in software, which
ditionally,itisnotincrementallydeployableasitrequires is (relatively) easily modified. Also, because the recon-
allroutersontheattackpathtoparticipate(althoughSong structoronlyneedstoberunningduringanattack,taking
andPerrig note thatitalso sufficesfortheupstreammap itofflineforupgradesisnotdetrimental.
toindicatewhichroutersareparticipating). These last two assumptions motivate us to look for a
WereferthereadertoSavage’spaperforadiscussionof scheme which has acceptable performance at the present
othermethodstodetectandpreventIPspoofinganddenial as well as an ability to improve in the future with only
ofserviceattacks. changesinthereconstructionstep.Wethereforehavecho-
The algebraictechniques we apply were originally de- senanalgebraicapproachrootedincodingtheory,namely
velopedfor thefields ofcoding theory[13] and machine that of polynomial evaluation. Over the past few years,
learning[3]. Foranoverviewofalgebraiccodingtheory, techniqueshaverepeatedlybecomemorepowerfulinthis
wereferthereadertothesurveybySudan[23]orthebook field and we have no reason to suspect this will change
byBerlekamp[7]. inthenearfuture. Currenttechniquesalreadyallowusto
separatemultiplepathsandfilteroutnoisewithacceptable
3. Overview boundingconditions[3,23,13].
ThispaperaddresseswhatSavage,etalcalltheapprox- 4. AlgebraicCodingof Paths
imate traceback problem. That is, we would like to re-
coverallpathsfromattackertovictim, butwewillallow We will now present a series of schemes that use an
forpathstohaveinvalidprefixes.Forexample,forthenet- algebraic approach for encoding traceback information.
workshowninFigure1,thetruepathfromtheattackerA All of these schemes are based on the principal of re-
1
tothevictimV isR R R . Wewillallowourtechniqueto constructing a polynomial in a prime field. The basic
4 2 1
also produce paths of the form R R R R R because the idea is that for any polynomial f
2 6 4 2 1
truepathisasuffixoftherecoveredpath.
Our family of algebraic schemes was motivated by
many of the same assumptions as used in previous work
withtwonotableadditions(numbers8and9).
1. Attackersareabletosendanypacket
2. Multipleattackerscanacttogether
3. Attackersareawareofthetracebackscheme
4. Attackersmustsendatleastthousandsofpackets
5. Routesbetweenhostsareingeneralstable,butpack-
etscanbereorderedorlost
6. Routerscannotdomuchper-packetcomputation
7. Routersarenotcompromised,butnotallroutershave
toparticipate
(cid:2)
x
(cid:3)
of degree d in the
prime fieldGF
(cid:2)
p
(cid:3)
, wecanrecover f
(cid:2)
x
(cid:3)
given f
(cid:2)
x
(cid:3)
eval-
uated at
(cid:2)
d
(cid:4)
1
(cid:3)
unique points. Let A 1
(cid:5)
A 2
(cid:5)(cid:7) (cid:6)(cid:8) (cid:6)(cid:7) (cid:6)(cid:9) (cid:5)
A be n
the 32-bit IP addresses of the routers on path P. Let
f P
(cid:2)
x
(cid:3)(cid:11) (cid:10)
A xn 1
(cid:12)
1
(cid:4)
A xn 2
(cid:12)
2
(cid:4) (cid:6)(cid:7) (cid:6)(cid:8) (cid:6) (cid:4)
A n
(cid:12)
x 1
(cid:4)
A . We asso- n
ciateapacketidx withthe jthpacket.Wethensomehow j
evaluate f
P
(cid:2)
x
j
(cid:3)
asthepackettravelsalongthepath,accu-
mulating the result of the computation in a running total
alongtheway. Whenenoughpacketsfromthesamepath
reachthedestination,then f canbereconstructedbyin- P
terpolation. Theinterpolationcalculationmightbeasim-
plesetoflinearequations,ifallofthepacketsreceivedat
thedestinationtraveledthesamepath. Otherwise,wewill
needtoemploymoresophisticatedinterpolationstrategies
thatsucceedeveninthepresenceofincorrectdataordata
frommultiplepaths[6,24,13].
A naive way to evaluate f
P
(cid:2)
w
(cid:3)
would be to have the
jth router add A wn
j
(cid:12)
j into an accumulator that kept the
runningtotal. Unfortunately,thiswouldrequirethateachR(cid:13)
3(cid:13)
R(cid:13)
1(cid:13)
(cid:13)
R(cid:13) R(cid:13)
4(cid:13) 5(cid:13)
R(cid:13)
2(cid:13)
(cid:14)
R(cid:13)
6(cid:13)
(cid:15)
R(cid:13)
7(cid:13)
V(cid:13)
(cid:16)
A(cid:13)
(cid:17)
A(cid:13)
1(cid:13)
(cid:17)
A(cid:13)
2(cid:13)
(cid:17)
3(cid:13)
(cid:13)
A(cid:13)
(cid:17)
4(cid:13)
Figure1.Ourexamplenetwork.
router know its position in the path and the total length
of the path. We could eliminatethe need for each router
to knowthe total length of the path (while still requiring
eachroutertoknowitspositioninthepath)byreordering the coefficients of f : A P 1 (cid:4) A w 2 (cid:4) A w2 3 (cid:4) (cid:6)(cid:7) (cid:6)(cid:7) (cid:6) (cid:4) A wn n (cid:12) 1.
However,wecandoevenbetterbystickingwithourorig-
inal ordering, and using an alternative means of com-
puting the polynomial. Specifically, to compute f P
(cid:2)
w
(cid:3)
,
each router A multiplies the amount in the accumulator
j
by w, adds A , and returns the result to the accumulator,
j
and passes the packet on to the next router in the path
(Horner’s rule [14]). For example,
(cid:2)(cid:7) (cid:2)(cid:8) (cid:2)(cid:7) (cid:2)
0
(cid:18)
w
(cid:3)(cid:19) (cid:4)
A 1
(cid:3)
w
(cid:4)
A
2
(cid:3)
w
(cid:4)
A
3
(cid:3)
w
(cid:4)
A
4
(cid:10)
A w3
1
(cid:4)
A w2
2
(cid:4)
A w
3
(cid:4)
A . Notice
4
thattherouterdoesn’tneedtoknowthetotallengthofthe
pathoritspositioninthepathforthiscomputationof f .
P
We will use this polynomial evaluation trick for all of
ouralgebraicschemes. Whatwillvaryis(a)whetherwe
usepolynomialsthatcapturetheentirepathorjustafrag-
mentofthepath,and(b)whethereveryrouterwillpartic-
ipate deterministically or non-deterministically to outwit
amaliciousattacker.
4.1.FullPathEncoding
Thesimplestschemethatusesthisalgebraictechnique
encodes an entire path. At the beginning of a path, let
FullPath 0
(cid:20)
j
(cid:10)
0. Each router i on the path calculates
FullPath
i
(cid:20)
j
(cid:10)
(cid:2)
FullPath
i
(cid:12)
1
(cid:20)
j
(cid:18)
x
j
(cid:4)
A
i
(cid:3)
mod pwherex is
j
arandomvaluepassedineachpacket,A istherouter’sIP
i
address and p is the smallest prime larger than 232
(cid:21)
1.
The value FullPath
i
(cid:20)
is then be passed in the packet,
j
along with x , to the next router. At the packet’s des- j
tination FullPath will equal
(cid:2)
A xn n
(cid:12)
1
(cid:4)
A n
(cid:12)
xn 1
(cid:12)
2
(cid:4)(cid:22) (cid:18)(cid:8) (cid:18)(cid:7) (cid:18)(cid:23) (cid:4)
A x
2
(cid:4)
A
1
(cid:3)
thefollowingmatrixequationoverGF
mod p, whichcanbereconstructedbysolving
(cid:2)
p
(cid:3)
: (cid:24)(cid:25)
(cid:25)
(cid:25)
(cid:26)
1 x x2
1 1
(cid:6)(cid:7) (cid:6)(cid:8) (cid:6)
xn
(cid:12)
1
1
1 x x2 2 2
(cid:6)(cid:7) (cid:6)(cid:8) (cid:6)
xn
(cid:12)
1 2 . . . . . . . . . ... . . .
1 x x2 n n
(cid:6)(cid:7) (cid:6)(cid:8) (cid:6)
xn
(cid:12)
1 n
(cid:27)(cid:29)
(cid:30)
(cid:28)
(cid:28)
(cid:28)
(cid:24)(cid:25)
(cid:25)
(cid:25)
(cid:26)
A
1
A 2 . . .
A n
(cid:27)(cid:29)
(cid:30)
(cid:28)
(cid:28)
(cid:28)
(cid:10)
(cid:24)(cid:25)
(cid:25)
(cid:25)
(cid:26)
FullPath
n
(cid:20)
1
FullPath n
(cid:20)
2 . . .
FullPath n
(cid:20)
3
(cid:27)(cid:29)
(cid:30)
(cid:28)
(cid:28)
(cid:28)
Aslongasallofthex’saredistinct,thematrixisaVan-
i
dermonde matrix (and thushas full rank)and is solvable
in
(cid:31)
(cid:2)
n2
(cid:3)
fieldoperations[17].
Assuming that we get a unique x in each packet, we
j
can recovera path of length d with only d packets. The
downside, however, is that this scheme would require
log
2
(cid:2)
p
(cid:3) (cid:4)" !
log
2
(cid:2)
d
(cid:3)$ #
bits per packet (the first term is the
encodingoftherunningFullPathandthesecondtermis
theencodingofthex ’s). Evenformodestmaximumpath
j
lengthsof16,thespacerequired(36bits)farexceedsthe
numberofbitsavailabletousinanIPheader.
We can trade off bits-needed for packets-needed by
splitting a router’s IP address into c chunks and adding !
log
2
(cid:2)
c
(cid:3)$ #
bits to indicate which chunk was represented
in a given packet. We could also reduce the order of
the field, p, to the smallest prime larger than 2
%
32
&
c
’
. If
we chose to split the 32 bit IP address into 4 chunks we
wouldneedlog
2
(cid:2)
257
(cid:3)( (cid:4)
log
2
(cid:2)
16
(cid:3)( (cid:4)
log
2
(cid:2)
4
(cid:3)) (cid:10)
15bitsper
packet and 4d packets. While this is an improvement,
a better technique would be to have each router add all
of its chunks into each packet. So, instead of spreading
its c chunks among c packets by adding one coefficient
to the polynomial, each router would add c coefficients
to the polynomial in each packet. That is, each router
would update FullPath c times, substituting each chunk
of their IP address in order. The destination could then
trivially reconstruct the IP addresses by interpolating torecover f˜ P
(cid:2)
x
(cid:3)* (cid:10)
A 1
(cid:20)
1
(cid:4)
A 1
(cid:20)
x 2
(cid:4) (cid:6)(cid:8) (cid:6)(cid:7) (cid:6) (cid:4)
A 1
(cid:20)
xk k
(cid:12)
1
(cid:4)
A 2
(cid:20)
xk 1 (cid:6)(cid:7) (cid:6)(cid:8) (cid:6) (cid:4)
(cid:4)
A n
(cid:20)
xnk k
(cid:12)
1, where A j
(cid:20)
1
(cid:5)
A j
(cid:20)
2
(cid:5)(cid:7) (cid:6)(cid:8) (cid:6)(cid:7) (cid:6)(cid:9) (cid:5)
A j
(cid:20)
are the succes- k
sivechunksofA . Forc j
(cid:10)
4,thistechniquerequiresonly
log
2
(cid:2)
257
(cid:3)( (cid:4)
log
2
(cid:2)
16
(cid:3)+ (cid:10)
13bitsand4d packets. Thissec-
ondtechniqueisthusclearlybetter. InSection6weusea
slightlydifferentchunkingstrategybasedontheChinese
RemainderTheorem[2].
4.2.RandomFullPathEncoding
The astute reader has probably noticed a serious flaw
in the above schemes; we require FullPath
0
(cid:20)
j
(cid:10)
0. This
impliesthatthereissomewayforaroutertoknowthatit
is the “first” participating router on a particular path. In
the current Internet architecture there is no reliable way
for a router to have this information. We must therefore
extendourschemetomitigatethisproblem.
Inourrevisedschemearouterfirstflipsaweightedcoin.
Ifitcameuptailstherouterwouldassumeitwasnotthe
firstrouterandsimplyfollowtheFullPathalgorithmpre-
sentedabove,addingitsIPaddress(orIPaddresschunk)
data. On the other hand, if the coin came up heads, the
routerwouldassume itwasthe firstrouterandrandomly
chooseax touseforthepath. Wewillrefertothisstate
j
as“markingmode.”
Atthedestination,wewouldreceiveanumberofdiffer-
entpolynomials,allrepresentingsuffixesofthefullpath.
In our example network, packets from A could contain
1
R R R , R R , or R . From now on, we’ll refer to each
4 2 1 2 1 1
of these path suffixes as “virtual paths”, because alge-
braically they are indistinguishable from full paths. Dis-
criminatingthesevirtualpathswouldbearealnightmare
if we were not able to leverage the power of our alge-
braic approach. It turns out that recovering these paths is the well studied problem of reconstructing mixed al-
gebraicfunctions[3]. We canthereforesimplyappeal to
the current best algorithm for solving this problem. In
thefuture,asbetteralgorithmsareavailabletheycouldbe
implementedatthedestinationwithoutchanginganything
ontherouters.
ThealgorithmwewilluseinouranalysisisduetoGu-
ruswami and Sudan [13]. If we have N total packets, it
allowsustorecoverallvirtualpathsoflengthdforwhich
we have at least
,
N
(cid:2)
d
(cid:21)
1
(cid:3)
packets. For example, if
weassumethatwe analyze10
(cid:5)
000packetsatatime and
want to recoverall virtual paths of length 17 or less, we
would need to ensure that we receive 400 packets from
each virtual path. Generally, we would need to expect
packets from a router at distance d with a probability of
nolessthan
,
N
(cid:2)
d
(cid:21)
1
(cid:3)(cid:7) -
N. Sincetheprobabilityofget-
ting a packet from a router D hops away is p
(cid:2)
1
(cid:21)
p
(cid:3)
D
(cid:12)
1,
where p is the probability that a router is in marking
mode, we come up with the inequality p
(cid:2)
1
(cid:21)
p
(cid:3)
D
(cid:12)
1 ,
.
N
(cid:2)
d
(cid:21)
1
(cid:3)(cid:8) -
d so this becomes p
N. Wewouldliketorecoverpathsoflength
(cid:2)
1
(cid:21)
p
(cid:3)
d
(cid:12)
1
.
,
N
(cid:2)
d
(cid:21)
1
(cid:3)(cid:7) -
N. Unfor-
tunately, this inequality has only negativeand imaginary
solutionsforanyofthevaluesofN anddthatinterestus.
To remedythisproblem, wechangeourmarkingstrat-
egyslightly. Whenevera router receivesa packet, itstill
flips a weighted coin. But now, instead of simply going
intomarkingmodeforonepacketwhenthecoincomesup
heads,therouterwillstayinmarkingmodeforthenextt
packetsitreceives. Theroutershoulddothiscoinflipfor
eachpairofinterfacesandnotasaglobalstate. Ourgoal
now is not to recoverall virtual paths in one run, but in-
steadtorecoveronlyafewpathsperrun. Toaccomplish
thisweshouldchooset
(cid:10)0 /
Nd
(cid:4)
e wheree isafactorde-
signedtoallowsmalloverlapsinroutersonthesamepath
bothbeinginmarkingmode. Ourtestshaveshownthate
canbesmallcomparedto
/
Nd.
Toanalyzethisschemewesimulatedthousandsofruns
of 10
(cid:5)
000 packets each through a paths of length 48,
which we feel is a reasonable upper bound on expected
path lengths. The results ofthese tests show thatthe op-
timumchoicefor pinthisscenarioisaround10
(cid:12)
5. Even
with an “optimum” probability,we findthat we must re-
ceive more than 100
(cid:5)
000 packets in order to reconstruct
evenmoremoderatelength35virtualpaths.
An even bigger problem than the number of packets
needed to reconstruct these paths is that attackers can
cause more false paths than true paths to be received at
thevictim. Thisisduetothefacttheourchoiceofasmall
p creates large number of packets in which no router on
the packet’s path is in marking mode. The attacker can
thusinsertanypathinformationhewishesintosuchpack-
ets. Becausetheattackercangenerallyfindoutthepathto
hisvictim(usingtraceroute,forexample)hecancompute
FullPath 0
(cid:20)
j
(cid:10) (cid:2)
FakePath j
-
xn j
(cid:21)
A xn n
(cid:12)
1 j
(cid:21) (cid:6)(cid:7) (cid:6)(cid:8) (cid:6) (cid:21)
A 0
(cid:3)
modp.
This choicewillcausethevictimtoreceiveFullPath
j
(cid:10)
FakePath . When trying to reconstruct paths, the vic-
j
timwillhavenoindicationastowhichpathsarerealand
whichpathsarefaked. Twosolutionstothisproblemare
to increase p or to store a hop count in the packet that
eachparticipatingrouterwouldincrement. Increasingthe
probabilitymakesitevenhardertoreceivelongpaths,so
we do not think that is a viable option. Adding a hop
countwouldpreventanattackerfromforgingvirtualpaths
thatarecloserthanitsactualdistancefromthevictimbut
would require
!
log
2
(cid:2)
d
(cid:3)1 #
more bits in the packet. While
eitherofthesesolutionsmaybeappropriateinsomesitua-
tions,wefeelthattheschemepresentedinthenextsection
isabetteralternative.
4.3.RandomPartialPathEncoding
Ourfinalschemeisa furthergeneralizationoftheran-
domfullpathencodingmethod. Weaddanotherparame-
ter,
2
,thatrepresents themaximum lengthofanencodedBitsperpacket PolynomialDegree BitsforAccumulator BitsforRandomness !
32
-
c
#
(cid:2)
2(cid:19) (cid:4)
1
(cid:3) (cid:21)
1
!
32
-
c
#
log
2
(cid:2)
!
32
-
c
#
(cid:2)
2+ (cid:4)
1
(cid:3)(cid:7) (cid:3)
19 3 16 2
15 5 11 3
12 7 8 3
11 11 6 4
10 13 5 4
9 15 4 4
Table1.ParameterizationsofRandomPartialPathEncoding(allassume
23 (cid:10)
1)
path.Thevalueof
2
issetbythemarkingrouteranddecre-
mented by eachparticipating routerwho adds in their IP
information. When the value reaches 0, no more routers
add in their information. For example, in the full path
encodingscheme
24 (cid:10)
¥ ,while
23 (cid:10)
1wouldrepresenten-
codingofedgesbetweenrouters.
Thepurposeforthischangeistodecreasethemaximum
d used in thereconstruction bound(
/
N
2
for 0
56 27 5
¥ )
in order to reduce the number of packets needed out of
a given set or packets to recover a route. Of course we
do not get anything for free; this adds
!
log
2
(cid:2)
2) (cid:4)
1
(cid:3)$ #
bits
to the packets. On the other hand, we now have p
(cid:2)
1
(cid:21)
p
(cid:3)
x
(cid:12)
1
. ,
N
(cid:2)
!
32
-
c
#
(cid:2)
2+ (cid:4)
1
(cid:3) (cid:21)
1
(cid:3)8 -
N which does have so-
lutions that are interesting to us. Table 1 shows some of
theseinterestingcombinations.
Ofcourse,if
2
islessthanthetruepathlength,thenre-
constructionfindsarbitrarysubsequencesofthepath(not
justsuffixesasinFullPathencoding). Thereconstructor
stillhassomeworktodotocombinethesesubsequences
properly. Thusreconstructioninthisschemehasanalge-
braicstepfollowedbyacombinatorialstep.
Insection6,wewillbelookingattheparameterization
where
2(cid:11) (cid:10)
1and d
(cid:10)
wehaveconcludedthatstoringdatainanIPoptionisnot
feasible.
5.2.AdditionalPackets
InsteadoftryingtoaddourpathdatatotheexistingIP
packets,wecouldinsteadsendthedataoutofbandusing
a new protocol that would encapsulate our data. While
thismayhavelimitedusesforspecialcases(suchasdeal-
ingwithIPfragments),ageneralsolutionbasedoninsert-
ingadditionalpacketsrequiresameansofauthenticating
thesepackets.Thisisbecause,presumably,thenumberof
insertedpacketsismanyordersofmagnitudelessthanthe
numberofpacketsinsertedbytheattacker. Thus,because
weassumethatanattackercaninsertanypacketintothe
network, the victim can be deluged with fake traceback
packets,preventinganyinformationtobegainedfromthe
legitimatepackets.
5.3.TheIPHeader
Our lastsource ofbits isthe IP header. There are sev-
eralfieldsintheheaderthatmaybeexploitedforbits,with
5. Thisencodesedgesbetweenad-
varying tradeoffs. As shown in Figure 2, we have found
jacentparticipatingroutersatacostof15bitsperpacket.
25bitsthatmightpossiblybeused,althoughwethinkthat
Inthenextsection,wewilldiscusswheretofitthe15bits
a subset of these bits would better meet our goal of pre-
ofinformationinanIPpacket.
servingbackwardscompatibility.
5. EncodingPathData
5.3.1.TheTOSField
We now need a way to store our traceback data in IP
packets.Wewilltrytomaximizethenumberofbitsavail- Thetypeofservicefield isan8bitfieldintheIPheader
abletouswhilepreserving(forthemostpart)backwards that is currently used to allow hosts a way to give hints
compatibility. to routers as to what kind of route is important for par-
ticular packets (maximized throughput or minimized de-
5.1.IPoptions lay, for example) [1]. This field has been little used in
thepast,and,insomelimitedexperiments,wehavefound
AnIPoptionseemslikethemostreasonablealternative thatsettingthisfieldarbitrarilymakesnomeasurabledif-
forstoringourpathinformation. Unfortunately,mostcur- ference in packet delivery. There is a proposed Internet
rent routers are unable to handle packets with options in standard [15] that would change the TOSfield to a “dif-
hardware[4]. Eveniffutureroutershadthisability,there ferentiatedservicesfield.”EventheproposedDSfieldhas
areanumberofproblemsassociatedwiththisapproachas twounusedbits,however,therearealreadyotherproposed
presented by Savage, et al [19]. For all of these reasons usesforthesebits(e.g.[18]).Version(cid:13) H. Length(cid:13) Type of Service (8-bit)(cid:13) Total Length(cid:13)
Fragment ID (16-bit)(cid:13) (1-bit)(cid:13) Flags(cid:13) Fragment Offset(cid:13)
Time to Live(cid:13) Protocol(cid:13) Header Checksum(cid:13)
9
Source IP Address(cid:13)
:
Destination IP Address(cid:13)
Figure2.TheIPHeader. Darkenedareasrepresentunderutilizedbits.
5.3.2.TheIDField
The ID field is a 16 bit field used by IP to permit recon-
struction of fragments. Naive tampering with this field
breaksfragmentreassembly. Sincelessthan0
(cid:6)
space of algebraic alternatives to Savage’s design. We
have chosen a particular parameterization to implement
forthepurposeofanalysis,butwenotethatourchoiceis
certainly notthe only practical alternativeand under dif-
25%ofall
ferent assumptions and design criteria would not be the
Internet trafficis fragments [22], we think that overload-
idealchoice.
ingthisfieldisappropriate. Amorein-depthdiscussionof
Wewilluse15bitsoutoftheIDfieldoftheIPheaderto
theissuesrelated to itsoverloadingcanbefoundin Sav-
storeourdata. Asmentionedabove,thischoicebreaksIP
age’swork[19].
fragmentation,butduetotheprevalenceofMTUpathdis-
coveryandthedeclineoffragmentationingeneralwefeel
5.3.3.TheUnusedFragmentFlag thisisanacceptabletradeoff.Aproposedwork-aroundto
allow fragmentation by using additionalpacketshas also
Thereisanunusedbitinthefragmentflagsfieldthatcur-
beenproposed[19].
rentInternetstandardsrequiretobezero. Wehavefound
AsshowninFigure3,11bitsareusedasanaccumula-
that setting this bit to one has no effect on current im-
tor,3bitsareusedasrandomdata,andonebitisusedfor
plementations,withtheexceptionthatwhenreceivingthe
signaling. This means that all arithmetic in the accumu- packet, some systems will think it is a fragment. The
latorwillbedoneinGF packet is still successfully delivered however, because it
lookstothosesystemsasthoughitisfragment1of1.
OurSelection
Asshownin Figure3, we choseto use15bitsoutofthe
IDfield. Sinceweneededmorethan9bits,wehadtouse
at least part ofthe ID field and using only partof the ID
fieldandpartofanotherfieldwouldnothaveprovidedus
withanybenefits.
5.4.IPv6
Since IPv6 does not have nearly as many backwards
compatibility issues as IPv4, the logical place to put
tracebackinformationisahop-by-hopoptionintheIPv6
header [9]. However, schemes such as those presented
herearestillvaluablebecausetheyuseafixednumberof
bits per packet thereby avoiding the generation of frag-
ments.
6. Analysis
A major advantage of our approach is the amount of
flexibilityavailableinchoosingascheme. Thereisarich
(cid:2)
2039
(cid:3)
(2039isthelargestprime 5
211). The signaling bit will allow a router to tell the
next router that it should add its values into the accumu-
lator. That router will also reset the signaling bit. This
correspondstorandompartialpathencodingwith
2; (cid:10)
1.
Eachroutermustprecomputethree11bitchunksbased
on its 32 bit IP address, Z. Let z 1
(cid:10)
Z mod 2027, z 2
(cid:10)
Z mod 2029, and z 3
(cid:10)
Z mod 2039. Since 2027, 2029,
and 2039 are all prime and 2027
(cid:18)
2029
(cid:18)
2039
.
232, we
willbeabletoreconstructthevalueofZ byinvokingthe
ChineseRemainderTheorem[2].
With a probability of 1
-
25, a router will set the 3 ran-
dom bits (let’s call this value x), set the accumulator to i
z x2
3 i
(cid:4)
z x
2 i
(cid:4)
z mod2039,andsetthesignalbit. Therest
1
ofthetimeitwillchecktoseeifthesignalbitisset. Ifso,
itwillincorporateitsvalues(y ,y ,andy )usingHorner’s
1 2 3
rule and clear the signal bit, thus completing the calcu-
lation of z x5
3 i
(cid:4)
z x4
2 i
(cid:4)
z x3
1 i
(cid:4)
y x2
3 i
(cid:4)
y x
2 i
(cid:4)
y mod 2039.
1
ThisprocedureispresentedinpseudocodeinFigure4.
6.1.PacketsNeeded
Thereceiverseesthevaluesofevaluateddegree5poly-
nomials; z x5
3 i
(cid:4)
z x4
2 i
(cid:4)
z x3
1 i
(cid:4)
y x2
3 i
(cid:4)
y x
2 i
(cid:4)
y , for exam-
1
ple. OurgoalistorecovertheIPaddressesoftheroutersIP Version(cid:13) Header Length(cid:13) Type of Service (TOS)(cid:13) Total Length(cid:13)
(4-bit)(cid:13) (4-bit)(cid:13) (8-bit)(cid:13) (16-bit)(cid:13)
Fragment ID(cid:13) Flags(cid:13) Fragment Offset(cid:13)
(16-bit)(cid:13) (3-bit)(cid:13) (13-bit)(cid:13)
Time to Live (TTL)(cid:13) Protocol(cid:13) Header Checksum(cid:13)
(8-bit)(cid:13) (8-bit)(cid:13) (16-bit)(cid:13)
Source IP Address(cid:13)
(32-bit)(cid:13)
Destination IP Address(cid:13)
(32-bit)(cid:13)
Accumulator(cid:13)
<
Random(cid:13)
Flag(cid:13)
Data(cid:13)
(11-bit)(cid:13) (1)(cid:13)
(3-bit)(cid:13)
Figure3.Wechoosetouse15bitsfromtheIPheader
(ZandY inourexample)fromthisdata.Usingthemethod
of [13], we will need to have
(cid:2)
1
-
25
(cid:3)
(cid:2)
1
(cid:21)
1
-
25
(cid:3)
d
(cid:12)
1 /
.
5N
-
N to recoveredges distance d away from us if we
analyzeNpacketsatatime. Therefore,N mustbegreater
than 5
-
(cid:2)(cid:7) (cid:2)
1
-
25
(cid:3)
(cid:2)
1
(cid:21)
1
-
25
(cid:3)
d
(cid:12)
1
(cid:3)
2 for us to expect to get
edges distance d away. Figure 5 shows the number of
packetsneededfordifferentvaluesofd.
In our simulations, we were able to recover paths of
length25over98%ofthetimebyanalyzing20
(cid:5)
siderably.
Weonlyneedtohaveourdegree5polynomialevaluated
at6pointsinordertorecoverit, sowewilltreattheran-
domvalue6as0and7as1. Thisshouldnotcauseusany
troubleaslongasallroutersagreeonthechange,because
thecouponcollector’sproblemtellsusthatwewouldex-
pect to get all 6 values in far fewer packets than are re-
quiredbyourmultiplepathreconstructor.Eventhesmall-
000pack- est routers should be able to precompute and store the 6
etsatonce,whichagreeswithouranalyticresult.Inrecent possiblevaluesthatwouldneedtobeinsertedwhenthey
denialofserviceattacks,Yahooreportedreceivingover1 areinmarkingmode(thesevaluesrequireonly12bytesof
gigabyte of data per second2. Even if every packet was storage). Ifwearestoringthesevaluesalready,weshould
of the largest possible size, Yahoo would have received also include an extra multiplication by the random value
morethanenoughpacketsinunder2seconds. Werealize because that is the first thing that the next router would
thatmostsitesdonothavethebandwidthofYahoo,butwe havetocompute. Atthevictimwewould,ofcourse,have
stillthinkthatmostsiteswouldbeabletorecoverinterest- todividebytherandomvalueforallpacketsthatstillhave
ingpathsinfarlessthanaminute. Wealsonotethatour their signal bit set. This reduces the work needed at the
scheme will be able to take advantage of any new algo- second router to, at most, 2random number generations,
rithmfordecodingReed-Solomoncodestoimprovethese 2compares,2shifts,5addsandareductionmodulo2039.
resultswithoutanyroutermodifications. Ifmorethanone It is worth noting that this could easily be accomplished
path is present in the data, the Guruswami-Sudan algo- usingcombinationallogicinanASICorcustomchip. For
rithmmightnotfindallthepathsfromasinglesampleof largerroutersitwouldprobablymakesensetoprecompute
20,000packets. Repeatingthereconstructionondifferent alookuptablewithallpossiblesecondhopvalues.
samplesmightbeneeded. Tryingtofindallpathsfroma We implemented this scheme under FreeBSD 4.0 on a
singlesamplewouldrequireanincreaseinthesamplesize Pentium II running at 333 MHz. Using RC4 [20] as the
thatwasquadraticinthenumberofpaths. random number generator, the scheme executed in less
than 50 clocks per packet. When routing packets across
6.2.RouterPerformance a 100 Mbit/sec Ethernet, there was no measurable dif-
ferenceinthroughputbetweenthemodifiedandunmodi-
At the baseline, this scheme is already rather efficient
fiedkernels(morethan95Mbit/secworthofpacketswere
forrouters,requiringonlynormalALUoperations, com-
routedinbothcases).
pares,andarandomnumbergenerator. Wecan,however,
use some precomputation to improve this situation con- 6.3.ReconstructionPerformance
2http://abcnews.go.com/sections/tech/ The reconstruction algorithm due to Guruswami and
DailyNews/yahoo000209.html Sudan [13] can be implemented in a number of ways.Ateachrouter:
letZ
(cid:10)
therouter’sIPaddress
letz 1
(cid:10)
Zmod2027
letz 2
(cid:10)
Zmod2029
letz
3
(cid:10)
Zmod2039
foreachpacket p
letrbearandomnumberfrom
=
0
(cid:6)>(cid:6)
1
(cid:3)
ifr
5
(cid:2)
1
-
25
(cid:3)
then
letxbearandomintegerfrom
=
0
(cid:6)?(cid:6)
7
(cid:3)
set p
(cid:6)
accumulator
(cid:10)
(cid:2)
z x2 3
(cid:4)
z x 2
(cid:4)
z 1
(cid:3)
mod2039
set p
(cid:6)
flag
(cid:10)
1
set p
(cid:6)
random
(cid:10)
x
else
if p
(cid:6)
flagthen
set p
(cid:6)
accumulator
(cid:10)
(cid:2)
p
(cid:6)
accumulator
(cid:18)
p
(cid:6)
x
(cid:3)( (cid:4)
z 3
set p
(cid:6)
accumulator
(cid:10)
(cid:2)
p
(cid:6)
accumulator
(cid:18)
p
(cid:6)
x
(cid:3)( (cid:4)
z 2
set p
(cid:6)
accumulator
(cid:10)
(cid:2)
p
(cid:6)
accumulator
(cid:18)
p
(cid:6)
x
(cid:3)( (cid:4)
z 1
set p
(cid:6)
accumulator
(cid:10)
p
(cid:6)
accumulatormod2039
set p
(cid:6)
flag
(cid:10)
0
Figure4.Markingalgorithmexecutedbyeachrouter
Themoststraightforwardimplementationwouldtaketime (cid:31)
(cid:2)
n15
(cid:3)
torecoveralledgesforwhichwereceivedatleast /
5noutofnpackets. However,thisdropstoO
(cid:2)
n3
(cid:3)
time
byrequiringonlyslightlymore packets:
,
5n
(cid:2)
1
(cid:4)
d
(cid:3)
out
of n, for any d
@
1. By scaling d appropriately, this
allows us to trade off computation time (and memory)
for accuracy. A recent algorithmic breakthrough by Ol-
shevskyandShokrollahiwouldreduceourreconstruction
time even further, to O
(cid:2)
n2
A
5
(cid:3)
[16]. Moreover, this new
algorithm is highly parallelizable (to up to O
(cid:2)
n
(cid:3)
proces-
sors), which suggests that distributing the reconstruction
taskmightspeedthingsupevenmore.
These reconstruction times compare quite favorably in
themultipleattackerscenariototheO
(cid:2)
m8
(cid:3)
routes of packetsfrom those attackers farther away. Our
schemealsosuffersfromthisproblem,butnotasseverely
because of the built in noise filtering of the Guruswami-
Sudan multiple path reconstruction algorithm. We think
thatsimplybycomparingthefrequencyatwhichanedge
ismarkedtotheexpectedmarkingprobabilityoftheedge,
wecandetectfalseedgescloserthantheattacker,solong
as the nearest attacker is at least a few hops away. This
techniquehasworkedwellinoursimulations.
Our schemes could also make use of the HMAC tech-
niquesdiscussedbySongandPerrigtoensurethatedges
are not faked, but this would require us to either use ad-
ditionalspaceinthepacketstostorethehashorloseour
timerequired incrementaldeploymentproperties[21]. Ifwedecidedto
by Savage [19], where m is the number of routers at a make one of these tradeoffs, our scheme should be com-
givendistancefromthevictim. parablysecureagainstmultipleattackers.
6.4.ResistancetoAttack
While this metric is the most important in evaluating
7. Future Work
atracebackschemeitisalsothemostdifficulttoanalyze.
Ourschemeseemstoberesistanttoallofthesameattacks
as the scheme proposed by Savage, et al and even with
current algorithms for filtering mixed data can deal with Oneimportantopenproblemistofindbettervariations
multiple attackers more robustly. One major difference of our Random Full Path tracing schemes. Perhaps an
between these schemes is our decision not to include an approachbasedonalgebraicgeometriccodes[13]would
explicithopcountwhichallowsSavage’sschemetodeny be successful. We have been unable to find a variation
anattackertheabilitytoinsertpacketscloserthanhisdis- that immediately improves on combinatorial approaches
tancetothevictim. Wewouldnotethatthisonlyprevents inallsituations,butitseemsintuitivelyplausiblethatone
theinsertionofedgescloserthantheclosestattacker. An should exist. More generally, it would be interesting to
attack on this would be to havemultiple attackers at dif- morecarefullyexploreresourceandsecuritytradeoffsfor
ferent distances and use the close attackers to “hide” the moreofthemanyparameterizationsofourmethods.N
80000
70000
60000
50000
40000
30000
20000
10000
d
10 20 30 40
Figure5.Numberofpacketsneededtorecoverdifferentlengthpaths
8. Conclusions [7] E.R.Berlekamp. AlgebraicCodingTheory. AegeanPark
Press,1984.
We have presented a new algebraic approach for pro-
[8] CERT coordination center denial of service attacks.
vidingtracebackinformationinIPpackets.Ourapproach
http://www.cert.org/tech_tips/denial_
isbasedonmathematicaltechniquesthatwerefirstdevel- of_service.html,Feb.1999.
oped for problems related to error correcting codes and [9] S. Deering and R. Hinden. Internet protocol, version 6
machine learning. Our best scheme has improved ro- (IPv6)specification. RFC2474,Dec.1995.
bustnessoverpreviouscombinatorialapproaches,bothfor [10] D.Dittrich. The“stacheldraht”distributeddenialofser-
noise elimination and multiple-path reconstruction. An- vice attack tool. http://staff.washington.
other key advantage of our schemes is that they will au- edu/dittrich/misc/stacheldraht.
analysis.txt,Dec.1999.
tomaticallybenefitfromanyimprovementintheunderly-
[11] D.Dittrich.The”TribeFloodNetwork”distributeddenial
ingmathematicaltechniques,forwhichprogresshasbeen
ofserviceattacktool.http://staff.washington.
steadyinrecentyears.
edu/dittrich/misc/tfn.analysis,Oct.1999.
[12] P.FergusonandD.Senie. Networkingressfiltering: De-
Acknowledgments
featingdenialofserviceattackswhichemploy IPsource
addressspoofing. RFC2267,Jan.1998.
WewouldliketothankDavidGoldbergandDanBoneh
[13] V.GuruswamiandM.Sudan.ImproveddecodingofReed-
forhelpfuldiscussions.WewouldalsoliketothankDawn
Solomon andalgebraic-geometriccodes. IEEETransac-
Song,AdrianPerrig,andtheanonymousrefereesforhelp-
tionsonInformationTheory,45:1757–1767,1999.
fulcommentsonanearlierversionofthispaper.
[14] D.E.Knuth. TheArtofComputerProgramming,Vol.2:
SeminumericalAlgorithms. Addison-Wesley,1998.
References [15] K.Nichols,S.Blake, F.Baker, andD.Black. Definition
oftheDifferentiatedServicesfield(DSfield)intheIPv4
[1] P.Almquist. Typeofserviceintheinternetprotocolsuite.
andIPv6headers. RFC2474,Dec.1998.
RFC1349,July1992.
[16] V.OlshevskyandM.A.Shokrollahi. Adisplacementap-
[2] J.A.AndersonandJ.M.Bell. NumberTheorywithAp-
proachtoefficientdecodingofalgebraic-geometriccodes.
plications. PrenticeHall,1996.
In31stAnnualACMSymposiumonTheoryofComputa-
[3] S. Ar, R. J. Lipton, R. Rubinfeld, and M. Sudan. Re-
tion,pages235–244,Atlanta,Georgia,May1999.ACM.
constructing algebraic functions from mixed data. In
[17] W. H. Press, B. P. Flannery, S. A. Teukolsky, and W. T.
33rdAnnualSymposiumonFoundationsofComputerSci-
Vetterling. NumericalRecipes inFORTRAN:TheArt of
ence, pages 503–512, Pittsburgh, Pennsylvania, 24–27
ScientificComputing. CambridgeUniversityPress,1992.
Oct.1992.IEEE.
[4] S.M.Bellovin. PersonalCommunications,May2000. [18] K. Ramakrishnan and S. Floyd. A proposal to add Ex-
[5] S. M. Bellovin. ICMP traceback messages. http: plicit Congestion Notification (ECN) to IP. RFC 2481,
//search.ietf.org/internet-drafts/ Jan.1999.
draft-bellovin-itrace-00.txt,Mar.2000. [19] S.Savage,D.Wetherall,A.Karlin,andT.Anderson.Prac-
[6] E.BerlekampandL.Welch. Errorcorrectionofalgebraic ticalnetworksupportforIPtraceback. In2000ACMSIG-
blockcodes. UnitedStatesPatent4,490,811,Dec.86. COMMConference,Aug.2000.[20] B.Schneier. AppliedCryptography,SecondEdition. John
WileyandSons,1996.
[21] D. Song and A. Perrig. Advanced and authenticated
marking schemes for IP traceback. Technical Report
UCB/CSD-00-1107, University of California, Berkeley,
June2000.
[22] I. Stoica and H. Zhang. Providing guaranteed services
withoutper flow management. InACMSIGCOMM’99,
pages81–94,Cambridge,MA,1999.
[23] M.Sudan. Algorithmicissuesincodingtheory. In17th
Conference on Foundations of Software Technology and
TheoreticalComputerScience,Kharagpur,India,1997.
[24] M.Sudan. DecodingofReedSolomoncodesbeyondthe
error-correctionbound.JournalofComplexity,13(1):180–
193,Mar.1997.