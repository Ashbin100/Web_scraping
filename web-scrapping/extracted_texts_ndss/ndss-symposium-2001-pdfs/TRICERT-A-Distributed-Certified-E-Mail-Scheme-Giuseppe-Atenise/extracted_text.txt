TRICERT: A Distributed Certified E-Mail Scheme
GiuseppeAteniese BrenodeMedeiros Michael T.Goodrich
Departmentof ComputerScience
TheJohns Hopkins University
E-mail:
(cid:0)
ateniese,breno,goodrich (cid:1) @cs.jhu.edu
Abstract he/sheeverpurchasedsuchanitem. Thus,iftwomutu-
allyuntrustedpartieswishtoengageinanexchangeof
anelectronicitemforitsreceipttheywillneedtofollow
Inthispaperwepresentprotocolsfordistributedcertifiede-mail, aseriesofprotocolstepsthatmakeitimpossible-orat
whichuseencryptiontoensurebothconfidentialityandfairness. As
leasttoohardorexpensive-tomisbehave.
withotherprotocolsforcertifiede-mail,oursachievefairnessbyplac-
One example of fair exchange service is certified e-
ingtrustonanexternalentity,referredtoastheTrustedThirdParty
(TTP).TheTTPcanbecomeabottleneck, however, andweexplore mail delivery,in which the recipient gets the mail con-
scenariosthatsupportadistributedTTP,inthecontextofbothoff-line tentifandonlyifthemailoriginatorreceivesaproof-of-
andonlineprotocols. WithseveralserversdividingtheTTPrespon-
receiptfromtherecipient.Theproof-of-receiptisgener-
sibilities,thelevelofconfidenceplacedinindividualserverscanbe
allyasignaturethatcanbeusedtotracethetransaction
reducedwithoutcompromisingtheTTP’soveralltrust.
andcertifiesthemailcontent. Thisisdifferentfromthe
Keywords: Secure E-commerce, Fair Exchange, Certified E-mail,
traditional certified mail protocol operated by the U.S.
Semi-trustedTTP.
Postal Service, where the recipient’s signature is only
a proof that “the recipient has indeed received an item
from the sender”. In particular, there is no guarantee
1 Introduction
thataspecificmailcontentwassent. Onlydateoftrans-
missionandpersonsinvolvedarecertified.
Considerably valuable data - commercial, medical,
Online protocols employ a trusted third party (TTP)
educationalandscientific-istodaystoredinelectronic
whichactsasadeliverychannel. Bothpartiessendtheir
format in computer databases. The commercialization
items to the TTP which checks for their integrity, en-
ofthis information, aswell asotherelectronic itemsof
suresthevalidityandfairnessoftheexchange,andfor-
intrinsicvalue-suchassoftwarecode,forinstance-via
wardstheitemstotheintendedreceivers. Inthispaper,
internets(ortheInternet)isadevelopmentofgreateco-
wepresentefficientcertifiede-mailprotocolsthatmake
nomical and technological impact, allowingcompanies
use ofa trusted third party but ina optimistic way, i.e.,
tooperatewithgreaterefficiencyandincreasethevalue
the TTP is involved only in case of dispute, which is
oftheirproducts, andfacilitatingfasterdevelopmentof
expectedtobearareevent.
medicalandscientificinnovations. Thefactthatthisin-
WeexplorenewtrustmodelsbydistributingtheTTP’s
formationisintrinsicallyvaluablethenhasimplications
role to several entities having different levels of trust.
astohowitmustbetransmittedorexchanged.Inthereal
We, finally, describe hybrid protocols that combine the
world,whenwepurchasesomething,areceiptisissued
strengths of both optimistic and online approaches and
simultaneously with our receivingthe product. Several
acoresystemthatimplementsthem. Ourprotocolscan
protocols have been devised which theoretically allow
be easily extended and employed to exchange generic
simultaneousexchangeofelectronicitemsbetweentwo
electronicitems.
computers. However, most of them demand too much
computationalpowerand/orcommunicationbandwidth
2 Digital certifiede-mail
to be implemented. The lack of simultaneity in elec-
tronic transactions creates an issue involving fairness: A certified e-mail service should therefore use cryp-
If the purchaser issues the receipt before obtaining the tographic tools to provide proof that a particular mes-
product he may be denied that product later on, while sagewasdeliveredbetweentwopartiesatacertaintime.
charged nevertheless for it. Symmetrically, the pur- Moreover, we desire certified e-mail schemes that are
chaser may refuse to pay for a product it has received fast, fair, and simple. We believe that such schemes
beforeissuinga receipt, claimingthat thereis noproof shouldminimallyprovide:(cid:2)
Fairness: No party should be able to interrupt or
corrupttheprotocoltoforceanoutcometohis/her
advantage.Inanyinstanceoftheprotocol,itshould
terminatewitheitherpartyhavingobtainedthede-
sired information, or with neither one acquiring
anythinguseful.
(cid:2)
Monotonicity: Eachexchangeofinformationdur-
ingtheprotocolshouldaddvaliditytothefinalout-
come. Thatis,theprotocolshouldnotrequireany
messages, certificates, or signatures to be revoked
to guarantee a proper termination of the protocol.
This is important, because if revocation in needed
toensurefairness,thentheverificationofthevalid-
ity of the protocol outcome becomes a bottleneck
asitrequiresTTP’sactiveparticipation.
(cid:2)
TTP invisibility: A TTP is visible if the end re-
sultofanexchangemakesitobviousthattheTTP
participatedduringtheprotocol.
(cid:2)
Non-repudiation of receipt: The recipient of the
messageshouldnotbeabletodenyhavingreceived
themessageifindeedthemessagewasdelivered.
(cid:2)
Non-repudiationoforigin:Thesendershouldnot
beabletodenyhavingsentthemessage.
(cid:2)
Confidentiality: In case the exchange is deemed
confidential, the protocol should not need to dis-
close the message contents to any other party ex-
cept for sender and recipient. In particular, other
trustedorsemi-trustedpartiesactingasintermedi-
aries should not be able to read the contents of a
confidentiale-mail.
(cid:2)
Realistictrustmodels: Thetrustmodelshouldbe
based on realistic assumptions the users are com-
fortable with. A system that places less trust in
outsidepartiesismorelikelytobeaccepted.
(cid:2)
Efficiency: The protocol should not involve ex-
cessive computational or communication costs. It
shouldletitselftoreasonablyfastimplementations.
(cid:2)
allowaTTP(whichisneededasanarbitratortoensure
fairness)toseethecontentsoftheexchange,atleastin
theexceptionalcasesinwhichthereisadisputeandac-
tive arbitration by the third party is needed. While our
protocolalsorequirestheexistenceofatrustedarbitra-
tor, the arbitration can be performed without violating
theconfidentialityoftheexchange. Indeed,e-mailmes-
sages can be certified without revealing their contents
to thirdparties. Suchconfidentialitycouldactually im-
provetheusageofacommercialcertifiede-mailservice,
asusers mightwish thatprivateinformationnotbeuti-
lizedbythirdpartiesforcommercialorotherpurposes.
Thisdesirewouldevenbetrueforathirdpartythatisa
majorcorporation,whichpeopletrusttoperformtrans-
mission,storage,ordisputeresolution,butdonottrustto
keep confidential information private. In fact, such de-
siresareevenwrittenintolawinmanyEuropeancoun-
tries.
Inthe nextsection, we reviewexistingprotocolsand
compare them with our own according to the criteria
above.
3 Relatedwork
The certified e-mail problem is related to the more
generic cryptographic problem of fair exchange. The
classicsolutiontothisproblem(e.g.,see[18])involves
the gradual exchange of information between the two
parties. Evenet al.[10]introducedtherandomizedap-
proach where two parties exchange items one bit at a
time. At some point, eitherparty can use a brute-force
algorithmtocompletetheexchange;hence,thescheme
graduallyconvergestoonethatachievesaprobabilistic
notion of fairness, albeit with a large number of com-
municationrounds. Likewise,thisclassicapproachim-
plicitlyassumesthatthetwopartieshaveequalcompu-
tational power, which is unrealistic. Ben-Or et al. [5]
giveanalternategradualapproach. Intheirscheme,the
partiesgraduallyreleaseinformationthatincrementally
increases the probability that a fair exchange is valid,
withthisprobabilitygoingto
Timeliness: Roughly speaking, timeliness guar-
antees that both parties will achieve their desired
items in the exchange within finite time or that at
least one party has the ability to decide to abort
the normal operation of the protocol and adopt a
schemeforprotocolresolutionthatcanbeexecuted
inafinite,eventuallyshort,periodoftime.
Westressthepointthatacertifiede-mailsystemmust
assureconfidentiality. Mostoftheprotocolsforfairex-
change of electronic items proposed so far do not pro-
vide any level of confidentiality, in the sense that they
(cid:3)
aftermanyrounds.Thus,
whileitreducestheneedforequalcomputationalpower
between theparties,this schemeisstill expensivefrom
acommunicationpointofview.
Because of the high communication costs of gradual
exchange schemes, more recent work has focused on
the use of TTPs to make fair exchange more efficient.
Asokan et al. [1, 2] describe very efficient optimistic
protocolsforthefairexchangeproblem. Whenapplied
to certified e-mail, their (asynchronous) scheme [2] re-
sults in five messages being sent when there is no dis-
pute. Theprotocolin[2],however,isnotstrictlymono-
tonic: Inordertoachievecompletefairness,somemes-
sagesmighthavetoberevokedbytheTTP.Theprotocolin [1] is expensiveas it makesuse of verifiableescrow tifiede-mail. Theirschemerequiresonlyfourmessages
protocols implemented via a cut and choose method. to be sent, which is obviously optimal for online pro-
However,itprovidestimelytermination assuming only tocols requiring a proof-of-receipt from the recipient.
resilientchannels. Even so, their scheme does not achieve confidentiality
Noticethat,certifiede-mailisasymmetric,i.e.,there- fromtheTTP.
cipientcansendbackareceiptonlyafterhehasreceived SchneierandRiordan[17]presenttwoprotocols,one
the message in some form (possibly even encrypted), online and the other optimistic, where the TTP is a se-
whereas the fair exchange involves simultaneous ex- cure archiving message database. (The authors present
changeoftwoitems. Thisdifferencemaybecrucialand theTTPasapublicpublishinglocation,whichmightbe
canbeexploitedinordertofindmoreefficientsolutions implementedasasecuredatabaseserver.)Intheironline
thanthoseforfairexchange. Manyexistingapproaches protocol,thesender,Alice,sendsanencryptedmessage
address specifically the certified e-mail problem rather to the recipient, Bob. Bob, then, replies with a dated,
thanthemoregenericfairexchangeproblem. signedrequestforthedecryptionkey. Then,thesender
The Internet service www.certifiedmail.com submitsthekeytotheTTP,fromwhereBobcanretrieve
provides certified e-mail using its server as a TTP. It it. Alice’sproof-of-receiptconsistsofthesignedrequest
is an online service where the TTP acts as transmis- fromBobandthedatabaserecordkeptwiththeTTP.In
sion mediumfor both the message and its receipt. The theoptimisticversionoftheirprotocol, Alicesendsthe
scheme is very simple: The sender sends the message decryption key directly to Bob, and Bob sends Alice a
to the TTP which informs the recipient that a message receipt of the key. If Bob doesn’t reply, then the pro-
forhimhasarrived. Therecipientauthenticateshimself tocolrevertstotheonline version. Their optimisticap-
with a password and, then, reads the message. Finally, proachimpliesavisibleTTP,astheformofthereceipt
theTTPsendsasignedreceipttothesenderthatthere- fromBobisdifferentdependingonwhethertheprotocol
cipient has indeed received and read the message. Al- worked optimistically or not. Moreover, the TTP must
thoughsimpleandefficient,theschemerequiresanon- bedirectlyinvolvedinanysecondaryadjudicationasit
lineTTPforeverytransaction,itdoesnotprovidecon- must provide, in the case involving dispute resolution,
fidentiality, and it does not actually give the sender a an additional signed proof-of-mailing with each query
receipt signed by the recipient, as the receipt is signed ordeposit.
bytheTTPonly.
3.1 PriorworkonDegreeofTrust
There are several published protocols specialized for
certifiede-mail, aswell. Zhouand Gollmann[21] give
Franklin and Reiter [11] introduce the notion of a
anonlinecertifiede-mailprotocol,whichinvolvestrans-
semi-trusted third party for the fair exchange problem.
ferring the message from the sender though a series
Their protocolisonlineasitrequirestheTTPtobein-
of TTPs, delivering the message, collecting the receipt
volvedinanytransaction. TheTTPcansometimesfail
from the recipient and routing it back to the message
or misbehave but it cannot conspire with either of the
originator. Theyalsoprovideaversionoftheirprotocol
parties involved in the exchange. Their model is actu-
where the recipient signs a hash of the message before allymorerestrictive,itisassumedthatatmostoneparty
he can read it. The trusted party in their protocol con-
misbehaves. Ifthesender cheats, for instance, then the
sists of replicated servers. This means that each server
recipientandthetrustedthirdpartymustbebothhonest.
must be trusted in order for the protocol to work prop-
This also implies that if the TTP misbehaves then, by
erly. One single compromised server would invalidate
definition,theothertwopartiesarehonestand,inprin-
theentirescheme. ciple, theycouldsimplyexchange theiritemsbythem-
Bahreman and and Tygar [3] present an elegant on-
selves.
linestrategythatusessixmessages.Intheirscheme,the
sender sends the message to the TTP, which returns a 4 Ourresults
proof ofmailing. TheTTP,then, encrypts themessage
andsendsittotheintendedrecipient,whosignstheci- Inthispaperweproposeaschemefordistributedcer-
phertextandreturnsthesignaturetotheTTP.Finally,the tifiede-mail,whichwecallTRICERT.Ourmainmotiva-
TTPsendsthereceipttothesender,andthedeciphering tionistofindamodelforcertifiede-mailthatwouldal-
keytotherecipient. Noticethat,thereceiptissignedby lowforefficientandeasy-to-implementschemes.There
therecipient, howeverthis systemassumes thattheon- aremanyefficientprotocolsforcertifiede-mailbutvery
lineTTPisfullytrusted. Moreover,confidentialityfrom few are practical. Efficiencyis generally interpreted in
theTTPisnotdiscussed. theoreticaltermsbutveryrarelyitisconsideredfroma
Dengetal.[7]alsoprovideanonlineprotocolforcer- practical point of view. In fact, the only protocols for
certified e-mailimplemented and operational so far areSig
Alice
Alice
(cid:4)(cid:6) (cid:5)(cid:8) (cid:7)(cid:10) (cid:9)(cid:11)(cid:9)(cid:12)(cid:8) (cid:13) (cid:14)
Sig
Bob (cid:18)
(cid:4)(cid:6) (cid:5)(cid:8)
(cid:19)
(cid:7)(cid:16) (cid:15)(cid:17) (cid:9)(cid:11)(cid:9)(cid:12)(cid:8) (cid:13)
(cid:14)
Bob
Three-messageoptimisticprotocol
Figure1: Sequenceofmessagesintheoptimisticexchange.
those online, i.e., that require a TTP to be involvedfor
eachexchange.
TRICERT is a hybrid protocol that combines the
strengths and overcome the disadvantages of both op-
timisticandonlineapproaches.
The TRICERT scheme scales. We introduce the
notion of postal agents ( (cid:5)(cid:8) (cid:20) s), which are distributed
servers acting on behalf of the TTP, with each (cid:5)(cid:8) (cid:20) re-
quiring minimal trust in itself. The (cid:5)(cid:8) (cid:20) s are online
but they do not resolve disputes, which are still han-
dled by the TTP. The protocol is monotonic, in that
each party cannot revoke a message after it has been
sent(likephysicalcertifiedmail)andmakesuseof“off-
the-shelf”cryptographictechnology,suchasdigitalsig-
natures and public-keycryptography. Additionally, the
protocol provides TTP’s invisibility, and achieves con-
fidentiality from both the TTP and the (cid:5)(cid:8) (cid:20)
tion 6). In the optimistic approach, the protocol ter-
minatessuccessfullywithoutinterventionofthetrusted
party ifsender andrecipientboth acthonestly. Onlyin
case of dispute, the TTP is involved. The general idea
is as follows ([16]): The initiator, Alice, first encrypts
a message
s, which
are able to verify the validity of a proof-of-receipt and
proof-of-originwithoutknowingthee-mailcontent.
WeextendedthemodelofFranklinandReiter[11]as
thePAsaresemi-trusted,inthesensethattheycanfailor
misbehave,butinadditiontheycanconspirewitheither
ofthepartiesinvolvedintheexchange.
BeforewedescribeTRICERT,weshow,inSection5,
that three messages are sufficientto perform optimistic
certified e-mail, which is actually one message below
thelower-boundfortheonlinecase. Thisthree-message
optimisticprotocolishardlynovelanddoesnotconsti-
tutethecontributionofthispaper. Infact,welaterdis-
coveredthatthegeneralideabehinditisdescribedina
USpatentbyMicali[16]. Nevertheless,wewillextend
itandshowhowtomakeitmorepracticalinSections5
and6. Inparticular,weaddtimestampsandlifetimepa-
rametersandshowhowtodistributethetrustoftheTTP
viathresholdcryptographictechniques.
5 A simple optimisticprotocol
Before we discuss issues of distributing the trusted
party,weintroduceasimpleoptimisticprotocolthatwe
willuseassub-protocolinourimplementation(seeSec-
(cid:19)
with thepublic-keyoftherecipient, Bob.
The result, P
Bob
(cid:4)
(cid:19)
(cid:13) , is further encrypted under TTP’s
public-key, achieving (cid:21)(cid:23) (cid:22) P
TTP
(cid:4) P
Bob
(cid:4)
(cid:19)
(cid:13)(cid:24) (cid:13) , and finally
sent to Bob. Bob, then, issuesa receipt bysendingAl-
icehissignatureon
(cid:21)
.Uponverifyingthereceipt,Alice
sendsBobthemessage
(cid:19)
. IfAlicedoesnotreply,Bob
sends
(cid:21)
and his signature on it to the TTP which will
thenrecoverP
Bob
(cid:4)
(cid:19)
(cid:13) andgiveittoBob,whileforward-
ing Bob’sreceipt toAlice. Sincethe messagewas first
encrypted with Bob’s public-key, the confidentiality of
thetransactionisguaranteedeveninthisspecialcase.
Thisprotocolisextremelysimple. However,weneed
toslightlymodifyitinordertoachievetimelytermina-
tion. Inparticular,atime limitmustbeincorporatedin
the protocol otherwise Bob might never reply or might
decide toresolvetheprotocolwiththeTTPaftera cer-
tain amountoftimethatmay beunacceptabletoAlice.
In the next section, we describe the actual protocol we
haveincludedintooursystemimplementation.
5.1 ProtocolDescription
Alicewishestosendamessage
(cid:19)
toBob,andwantsa
signedreceiptback. Aliceproducesanidentificationto-
kenforherself,containinghernameande-mailaddress
for responses, and other identifying information (such
asapublic-keycertificate). WerefertothisbyId . The
A
generation of this token involvesno secrets and can be
done by anyentity from publicly available information
aboutAlice. Infact,Alicealsogenerates(orretrieves)a
similartokenforBob(Id )andfortheTTP(Id ).
B TTP
Theidentificationtokenswillbecombinedwithother
parameters, such as a timestamp, a nonce
(cid:25)(cid:27) (cid:26)
(a ran-
dom number), and a time limit in a protocol header
( (cid:5)(cid:8) (cid:7) ). Notice that, in this protocol, both timestamps
and nonces are needed to prevent replay attacks. Theheader also should contain other pertinent information
about the protocol, such as the encryption, authentica-
tionandsignaturealgorithmsused. Thus,wehave:
(cid:5)(cid:8) (cid:7) (cid:22)(cid:29) (cid:28) Id A (cid:9)(cid:30)(cid:9) Id B (cid:9)(cid:11)(cid:9) Id TTP (cid:9)(cid:30)(cid:9) protocoldescriptors (cid:31)!
where (cid:9)(cid:30)(cid:9) denotes the concatenation operation. Alice,
then, encrypts
(cid:19)
with Bob’s public-key and concate-
nates the result with (cid:5)(cid:8) (cid:7) , which is subsequently en-
crypted under TTP’s public-key. The resulting cipher-
textis:
(cid:12) (cid:22) P
TTP
(cid:4)" (cid:5)(cid:8) (cid:7)(cid:10) (cid:9)(cid:30)(cid:9) P
Bob
(cid:4)
(cid:19)
(cid:13)# (cid:13)% $
Alice concatenates the above with the protocol
header, signs it and sends the resulting signature
Sig
Alice
(cid:4)(cid:6) (cid:5)(cid:8) (cid:7)(cid:10) (cid:9)(cid:11)(cid:9)(cid:12)(cid:8) (cid:13) toBob1.
Bobreceivesthemessage,and,from (cid:5)(cid:8) (cid:7) ,hegetsrel-
evant information to properly generate a receipt. Bob
can discard the message or he may decide to read the
content, which implies a receipt must be sent to Alice.
ThereceiptisasignatureofBob,Sig
Bob
(cid:4)(cid:6) (cid:5)(cid:8) (cid:7)(cid:16) (cid:15)(cid:17) (cid:9)(cid:11)(cid:9)(cid:12)(cid:8) (cid:13) ,stat-
ingthathehasindeedreceivedamessageencryptedas
specified in (cid:5)(cid:8) (cid:7) . The new protocol header (cid:5)(cid:8) (cid:7)(cid:16) (cid:15) con-
tainsanewtimestampandthespecificationsofthesig-
naturealgorithm. Italsoincludestheold (cid:5)(cid:8) (cid:7) andindi-
catesthatthesignedmessageisindeedareceipt. Upon
receivingBob’sreceipt,Alicereleasesthemessage
(cid:19)
.
Thesequenceofprotocolmessagescanbeseeninfig-
ure1.
Theonlyplacewheretheprotocolcanbeinterrupted
with an unfair outcome is after the transmission of the
second message, when Alice has Bob’s signature but
Bobcannot yetread the message. IfindeedAlice does
notsend Bobthe third message, Bob contactstheTTP,
forwardingthecontentsofthemessagesinthefirsttwo
steps.TheTTPdecrypts (cid:12) ,checkstheprotocolheaders,
andthenverifiesBob’sreceipt. Ifalliscorrect,itgives
BobthemessageP
Bob
(cid:4)
(cid:19)
(cid:13) andforwardthereceipttoAl-
ice(incaseBobdidn’tsendthesecondmessagebefore
complaining).
Notice that, Bob is signing encrypted information
whichconstitutesastatementtothefactthathereceived
themessage. Thisismadeexplicitinthereceiptbythe
concatenation of the protocol header (cid:5)(cid:8) (cid:7)(cid:16) (cid:15) with the en-
cryptedmessage. SinceBobcantakestepstoensurere-
coveryofthemessagecontents,hecannotrepudiatehis
signedreceiptonthesolebasisthatthemessagereceived
wasencryptedandunintelligible. Theverificationofthe
receiptcanbedonebyencryptingtwicethemessage
(cid:19)
1ThenotationSigAlice &(cid:6) ’(
in order to compute
impliesthatthesignedplaintextisalso
available,eitherbecausethesignatureschemeallowsformessagere-
coveryorbecausetheplaintextisattachedtothesignature.
(cid:12) and then checking Bob’s signa-
tureviapublicverificationalgorithmsspecifiedin (cid:5)(cid:8) (cid:7)(cid:16) (cid:15) .
Alice must also providethesigned messageof the first
stepoftheprotocol.
Intheactualimplementation,themessageinthethird
stepisconcatenatedwithanotherprotocolheaderinor-
der to allow the recipient to properly link this protocol
step with the two previous ones. Notice that, if con-
fidentiality was not desired, the encryption with Bob’s
public-keycouldbeavoidedwithoutcompromisingthe
otherguaranteesoftheprotocol.
6 TRICERT
As already mentioned, the model introduced by
FranklinandReiter[11]foronlinefairexchangeisquite
restrictive. Their protocol cannot be easily adapted for
certified e-mail, mainly for two reasons: It is assumed
thatatmostonepartyfailsormisbehaves,andthateach
party knowsthe one-wayhashvalue ofthe item that is
expectedintheexchange.Theseareunrealisticassump-
tions in our environment. Nevertheless, the TTP need
notbefullytrustedandthisisappealingforprotocolson
largenetworks.Thecostsofrealizingandmaintaininga
semi-trusted serveraremuch lowerthan thoseincurred
forafully-trustedthirdparty. However,theTTPcannot
conspirewitheitherofthecommunicatingparties.
Weproposeahybridschemethatachievesthebenefits
oftheoptimisticandonlineprotocols. Inourmodel,we
consider a highly-secure and fully-trustedserver(TTP)
andseverallow-costsemi-trustedservers,whichwere-
fertoasAgents. Inafairexchangescheme,theAgents
aredirectlyinvolvedintheexchangebuttheycanmisbe-
haveorsimplycrash,inwhichcasetheTTPisinvoked
in order to handle this exceptional case. Our protocol
distributes responsibilities so that the TTP need not be
highly available, thus lowering the communication de-
mand on it. The Agents are semi-trusted servers act-
ingasintermediarybetweenthetwopartiesinvolvedin
the exchange. This increases the availability of the en-
tire system at a lower cost. Most importantly, in our
model,theAgentsareallowedtoconspirewitheitherof
themainparties.
In the next Section, we describe our hybrid protocol
specialized for certified e-mail. The Agent server in-
volvediscalledPostalAgent( (cid:5)(cid:8) (cid:20) )andisinitiallycho-
senbythemessageoriginator. Becauseofthis,wesim-
plifyourmodelandmakeitmorepracticalbyassuming
that (cid:5)(cid:8) (cid:20) willnotconspirewiththerecipientofthemes-
sage.
6.1 ProtocolDescription
TheTRICERTschemestartswithAlicerecruitingthe
postalagent( (cid:5)(cid:8) (cid:20) )tointermediatetheinterchangeinher)
(cid:22) Sig
Alice
(cid:4) PH (cid:9)(cid:30)(cid:9)(cid:12)(cid:8) (cid:13) P
Bob
(cid:4)
(cid:19)
(cid:13)
)
Sig
PA
(cid:4) PH’
*
(cid:22)
(cid:9)(cid:30)(cid:9)(cid:12)(cid:8) (cid:13)
Sig
Bob
(cid:4) PH”
*
(cid:9)(cid:11)(cid:9)(cid:12)(cid:8) (cid:13)
Alice PA Bob
Here +- , P
TTP
. PH /0/ P
Bob
.2 14 35 3
P
Bob
(cid:4)
(cid:19)
(cid:13)
Figure2: TRICERTscheme–protocol1
behalf. She gives (cid:5)(cid:8) (cid:20) the message
(cid:19)
encrypted with
Bob’spublic-key(P
Bob
(cid:4)
(cid:19)
(cid:13) ).Thentheprotocolproceeds
with an optimistic exchange between (cid:5)(cid:8) (cid:20) and Bob. At
the end, (cid:5)(cid:8) (cid:20) forwards Bob’s receipt to Alice. We also
assumethatthecommunicationisperformedthrough
privateandauthenticatedchannels.
We have two versions of our protocol. The first ver-
sionrequiresfivemessagestobecompletedandthesec-
ondoneonlyfour,whichisoptimal.
Protocol1. Thefive-messageversionworksasfollows:
Alice encrypts the message
(cid:19)
first with Bob’s public-
key, and concatenates the protocol header (cid:5)(cid:8) (cid:7) to the
ciphertext. She then encrypts the result under TTP’s
public-key and signs it. The signature is sent to (cid:5)(cid:8) (cid:20)
alongwithP
Bob
(cid:4)
(cid:19)
(cid:13) . Optionally,Alicecouldask (cid:5)(cid:8) (cid:20) to
provideherwithaproof-of-mailing(areceiptfrom (cid:5)(cid:8) (cid:20) )
inreplytoherfirstmessage. Next (cid:5)(cid:8) (cid:20) andBobperform
anoptimisticexchange. Specifically, (cid:5)(cid:8) (cid:20) sendsBobthe
request from Alice along with its own commitment to
the transaction in form of a signature. Bob checks the
signatures and sends the receipt to (cid:5)(cid:8) (cid:20) which replies
with the encrypted message P
Bob
(cid:4)
(cid:19)
(cid:13) while forwarding
the receipt to Alice. Themessage flowdiagram canbe
seeninfigure2.
(cid:5)(cid:8) (cid:20) canfailorconspirewithAlice.Bobcancomplain
withtheTTPifhedoesnotreceivethelastmessagefrom
(cid:5)(cid:8) (cid:20) , inwhichcase, heforwardstotheTTPthecontent
of the first message received from (cid:5)(cid:8) (cid:20) and his receipt.
Asintheoptimisticprotocol,theTTPperformsthenec-
essary checks, sends P
Bob
(cid:4)
(cid:19)
(cid:13) to Bob and, finally, for-
wardsBob’sreceipttoAlice. ThesignatureofAlice,
)
constitutestheproof-of-origin.Moreover,eachprotocol
header, such as
,
(cid:5)(cid:8) (cid:7) , must include the identities of all
partiesinvolved.Inparticular,itmustincludetheidenti-
tiesofAlice, (cid:5)(cid:8) (cid:20) andBob,aswellastheTTP’sidentity
in case of multiple TTPs. In addition, (cid:5)(cid:8) (cid:7) mustbe in-
cludedintheencryptionunderTTP’spublic-key. Allis
donetopreventsubtlereplayattacks. Forinstance,Bob
couldclaimthattheencryptedmessage
(cid:19)
hadbeensent
tohimbyacolludingpartner. TheTTPwouldthende-
cryptthemessageforBobandforwardBob’sreceiptto
the cheater, who would conveniently(for Bob) dispose
of it. As before, a time limit must be included in the
protocolheaders,whichimpliesthatBobcannotrecover
the message after that specified time. Since a proof-
of-origin is useless without the corresponding message
body, Alice’s liability immediately ends after the time
limitifBobhasnotrecoveredthemessage(andprovided
Alicewiththereceipt).
Protocol 2. The second version of TRICERT is very
similar toProtocol1butitrequiresonlyfourmessages
whichisoptimalforonlineprotocols. Ourprotocolim-
proves over existing solutions as the postal agent can
misbehave or fail and, in particular, conspire with the
message originator. This is achieved as follows: Al-
ice recruits a postal agent (cid:5)(cid:8) (cid:20) to act as intermediary.
Shesendsthesignature
)
inProtocol1directlytoBob
along with P
Bob
(cid:4)
(cid:19)
(cid:13) but encrypted under (cid:5)(cid:8) (cid:20) ’s public-
key. Bob checks the signature and generates a receipt.
Noticethat,Bobcannotreadthemessage
(cid:19)
sinceithas
beenencryptedforthepostalagent. Alice’smessageis
then forwarded to (cid:5)(cid:8) (cid:20) by Bob, along with the receipt.)
(cid:22) Sig
Alice
(cid:4) PH (cid:9)(cid:11)(cid:9)(cid:12)(cid:8) (cid:13) 67 (cid:22) P
PA
(cid:4) P
Bob
*
(cid:22)
(cid:4)
(cid:19)
(cid:13)# (cid:13)
Sig
Bob
(cid:4) PH’
*
(cid:9)(cid:11)(cid:9)(cid:12)8 6(cid:9)(cid:11)(cid:9) (cid:13)
)
Alice PA Bob
Here +- , P
TTP
. PH /0/ P
Bob
.2 14 35 3
P
Bob
(cid:4)
(cid:19)
(cid:13)
Figure3: TRICERTscheme–protocol2
If the receipt is valid, it is sent to Alice by (cid:5)(cid:8) (cid:20) which
also forwardsP
Bob
(cid:4)
(cid:19)
(cid:13) to Bob. In case ofdispute, Bob
contactstheTTPasusual. Fordetails,seefigure3.
Animportantpointtonoticeisthatinthisversionof
the protocol Bob should sign both (cid:12) and 6 in the sec-
ond protocolmessage. Observethat in thefirstversion
with five messages, Bob only needs to complain to the
TTPifthe (cid:5)(cid:8) (cid:20) isnotforthcoming,anunlikelyevent;in
particular,inthatsettingifthe (cid:5)(cid:8) (cid:20) ishonestitisnotpos-
sible for Alice to cheat, as the contents of hermessage
can beverifiedfor consistencybythe (cid:5)(cid:8) (cid:20)9 $ Howeverin
thisfourmessageversionAlicesendsBobthecontents
directly,andBobcannotverifythat (cid:12) and 6 arelinked
in anyway. Thus if Bob signed only (cid:12) he would have
to rely on the TTP to solve any further disputes, as he
doesnot trust the (cid:5)(cid:8) (cid:20) to discard his signatureafter Al-
ice’s dishonesty has been verified. The entire role of
the (cid:5)(cid:8) (cid:20) would thus be a redundant one. On the other
hand,bysigningboth (cid:12) and 6: Bobsafeguardshimself
againstanydishonestyonAlice’spart. Theverification
algorithmismodifiedtocomputeboth (cid:12) and 6 fromthe
privatemessageP
Bob
(cid:4)
(cid:19)
(cid:13) andtochecktheirconsistency
as well as Bob’s signature on them; and thus Bob will
have to resort to the TTP only if the (cid:5)(cid:8) (cid:20) misbehaves,
exactlyasinthefirstprotocolversion.
Although this version ofTRICERT is more efficient,
we decided to implement the five-message protocol.
There are reasons for this, strictly related to practical
concerns. First, we believe Bob should have a signa-
turefrom (cid:5)(cid:8) (cid:20) beforeissuingthereceipt. Thissignature
constitutesacommitment of (cid:5)(cid:8) (cid:20) to thetransactionand
helpsBobcollectingevidencesthatcanbeusefulincase
ofdispute. Second, (cid:5)(cid:8) (cid:20) maynotbewillingtoactonAl-
ice’sbehalfatsomepoint. Forinstance, (cid:5)(cid:8) (cid:20)
thecase, thenAliceand
maycharge
AliceforitsservicebutAlicemayrefusetopay.Ifthisis
(cid:5)(cid:8) (cid:20) shouldfirstnegotiatepay-
menttermsand theninvolveBobin theexchange,asit
may happen in Protocol 1. In Protocol 2, (cid:5)(cid:8) (cid:20) may de-
cide not to terminate the protocol, after Bob generated
andforwardedthereceipt,becauseofissueswithAlice,
requiringBobtocomplainwiththeTTP.
Remark1 Our trust model assumes that Alice, the
sender, trusts (cid:5)(cid:8) (cid:20) which cannot conspire with Bob by
providing him the message without collecting the re-
ceipt.WebelievethisisaplausibleassumptionsinceAl-
iceinitiatesthetransaction,freelychoosing (cid:5)(cid:8) (cid:20) . Within
a business model, a contract can be set in which the
agent agrees to provide its services to Alice. Bob, on
theotherhand,whiletrustingtheTTP(asdoallparties),
doesnotneedtoplacetrustin (cid:5)(cid:8) (cid:20) chosenbyAlice.
An extension of the original TRICERT schemes is
possible, in order to eliminate Alice’s need to trust the
postal agent. Alice can select several agents and send
each the signature
)
along with a distinct share of the
ciphertextP
Bob
(cid:4)
(cid:19)
(cid:13) . Eachpostalagentwouldthentrans-
fer
)
anditsowncommitmentstoBobinexchangefor
thereceipt.Ifthereceiptisvalid,eachagentwouldsend
its own share to Bob. Bob can retrieve the ciphertext
P
Bob
(cid:4)
(cid:19)
(cid:13) bypoolingtogetheralltheshares. Thisisdone
via simple secret sharing schemes. If Bob does not re-
ceive all the shares or the message is not the one ex-
pected,hecancomplainwiththeTTP.Bobwouldstillbe
protected against any of the agents cheating, while Al-
icewouldhavetheguaranteethatBobcouldnotretrieve
anythingusefulunlessalltheagentsshehiredconspire
withBob.
Thesharescanbemadebyxoringtheciphertextwith
random numbers with the same bitlength. For three
agents, Alice would generate two random numbers
;= <
and
;? >
. Then, she would send to the first agent:
)
(cid:22)Sig
Alice
(cid:4) PH (cid:9)(cid:11)(cid:9)(cid:12)(cid:8) (cid:13) (cid:24) ;A @B (cid:22) P
Bob
(cid:4)
(cid:19)
(cid:13)D C ; < C ; > . The sec-
ond agent would receive
)
and
;E <
and the third one,
)
and
;? >
. If the receipt is valid, Bob receives the shares
; @ , ;= < , ;F > ,andthencomputestheciphertextP
Bob
; @ C ;E < C ;? >
(cid:4)
(cid:19)
(cid:13) (cid:22)
. Itisenoughthatatleastonepostalagentis
honestinordertoprotectAlicefromcolludingattacks.
Remark2 During the receipt verification process, Al-
ice provides the message
(cid:19)
which is then encrypted
by the verifier twice to achieve the value (cid:12) (cid:22)
P
TTP
(cid:4) PH (cid:9)(cid:30)(cid:9) P
Bob
(cid:4)
(cid:19)
(cid:13)# (cid:13) . Once (cid:12) is computed, the verifier
checksthesignatureofBobthatconstitutestheproof-of-
receipt.ThisverificationisalsoperformedbyBobwhen
hereceivesP
Bob
(cid:4)
(cid:19)
(cid:13) from (cid:5)(cid:8) (cid:20) inordertocheckthatthe
message he is reading is the same contained in the re-
ceipt
*
. If the message is different, then Bob contacts
theTTPtosolvethedispute. Thisimpliesthatthepub-
licencryptionalgorithmsP
B
(cid:4)H GI(cid:13) P
TTP
(cid:4)H GI(cid:13) shouldbedeter-
ministic. If they are randomized, then Alice must also
providetherandomparametersusedduringtheencryp-
tionphase.
Weadoptedadifferent,morepractical,technique. We
employed a Message Authentication Code (MAC) to
construct a heuristically secure encryption scheme. A
practical construction for a MAC function is described
in Bellaire et al. (see [4]), called HMAC. Then, one
wouldencrypt
(cid:19)
asfollows:
E JL
(cid:19)
K (cid:9)(cid:11)(cid:9) HMAC M (cid:4)
(cid:19)
(cid:13)O N
where E J is a symmetric encryption algorithm, such
asDES in CBC mode, and P and Q are random session
keys. Thekeys P and Q canbe encrypted using public-
keycryptography,forinstance:
P
Bob
(cid:4) P Q(cid:9)(cid:30)(cid:9) (cid:13)
where P
Bob
(cid:4)H GI(cid:13) is deterministic, such as plain-RSA.
Hence,Alicerevealstherandomsessionkeystothever-
ifier during the verification process. Notice that, this
encryption method provides also protection against the
adaptivechosen ciphertextattack, althoughthis protec-
tionisonlyheuristic.
Remark3 Our protocols reduce the demand on the
fully-trusted party, which needs only to be involved in
case of disputes. This situation can be even improved
by using threshold cryptosystems [8, 9] instead of tra-
ditional public-key cryptography. The idea is to have
(cid:25)
TTPs instead of a single one and encrypt messages
such that only
R8 ST (cid:25)
or more TTPs can decrypt them.
In a threshold cryptosystem, the secret key is shared
amongtheparticipantsusinga
R
-out-of-
(cid:25)
secretsharing
scheme. Once the message is encrypted, each partici-
pant takes as input the ciphertext and his share and re-
turnsasoutputtheoriginalplaintext. Ifatleast
R
ipants follow the decryption protocol, then the original
messageisrecoveredsuccessfully.
TRICERTcanbeeasilymodifiedtosupportmultiple
TTPsbyjustselectingtheencryptionfunction
partic-
(cid:5)V UW UY X: (cid:4)# G(cid:13)
as a threshold cryptosystem. This applies also to the
optimisticprotocolinSection5.
6.2 Motivation
Comparedwithonlineprotocols,TRICERTisclearly
preferableasitrequiresfourmessages,whichisoptimal
foronlineschemes,anditscalesbetterasitmakesuseof
low-costsemi-trustedthirdparty,thepostalagents,that
canmisbehaveorfail.
While simple and elegant, the protocol described in
Section 5.1, based on [16], has some disadvantages. It
places a too largeburden onBob. We believeBob is a
passiveparticipantthatreceivesmessagesfrom,perhaps
unknown,untrustedsendersandshouldn’tbesoheavily
responsibleofhandlingdisputesbyinteractingwiththe
TTP. OnceBob sendshis receipt, there isnoguarantee
thathewillreceivethemessagefromAlice.So,Bobhas
to wait for some unspecified amount of time and still
must contact the TTP before the time limit. Bob does
this for anymessagehereceives; averyunpleasantsit-
uationthathasnotcounterpartintherealworld. More-
over, the communication channel between Bob and the
TTPmustbereliable,i.e.,alwaysoperationalandwith-
out delays, otherwise fairness may not be ensured for
Bob as the time limit could expire before he can reach
theTTP.
Theprotocolin[1]assumesonlyresilientchannels.A
resilient channelwill eventuallydelivera message sent
throughit. Thetimelapseincurredattheconclusionof
the delivery process may be arbitrarily long, yet finite.
However, the protocol in [1] requires the TTP to keep
state and it is quite expensive compared to other solu-
tions.
Our approach mitigates the above issues without re-
quiringtheTTPtokeepstate(theTTPdoesnotstoreany
value). WestillrequireareliablechannelbetweenBob
and the TTP, however the number of disputes is dras-
tically reduced since we expect the postal agent to act
honestlymoreoftenthanatotallyuntrustedsender. Our
protocolsmay increase Bob’swillingnessofparticipat-
ingbyprovidinghissignature;Bobwillonlybesigning
receipts for requests originating from certified agents,
rather than from unknown senders. Bob has a further
incentive: the duration of his interchange with (cid:5)(cid:8) (cid:20) is
likely short (in terms of seconds, in our implementa-
tion). Thisbecause (cid:5)(cid:8) (cid:20) isanonlineserveralwaysavail-
ablewhereasAlice,thesender,maynotreplypromptly,
puttingBobatrisk.Figure4: ThemainGUIframe
7 System implementation morerobustly.
Theuserinterfaceshould ideally bea standaloneap-
Thefirstimplementationdecisionwaswhichplatform
plication, with capabilities of web browsing (including
to use. Efficiency was only one of the concerns to be
SSL connections). In our case, however, we borrowed
addressed. As in the case of online systems, we had
thesamewebserversrunningthepostalagents.
to develop both the agent (server) application and the
Thetrustedpartyisclearlythesecuritycriticalserver.
user interface (client application). We wanted our sys-
We didnotruna daemononthis machine. Instead, we
tem highly usable and able to support severalauthenti-
designatedourselvesserviceoperators. Therequestsare
cation methods (e.g., PGP-type or X.509 certificates).
logged into the trusted server, and the operator imme-
An important restriction on the platform type is that
diately prompt for assistance. The trusted server itself
it should be able to incorporate existing, freely avail-
is a machine dedicated to this service during our test-
ablecryptographiclibraries. WeemployedOpenSSLto
ingphase(a800MHzpentiumIII,256MBRAMLinux
provideSSLcapabilities(http://www.openssl.-
box) that is protected by a firewall and unavailable for
org/) and a modified Gnu GPG library (http://-
remotelogin.
www.gnupg.org)tosignandencryptmessages.
The client GUI is extremely simple as shown in the
The client application provides a user interface
screenshot. After pointing it to the secure site, Alice,
through a SSL-enabled web server. The postal agent
the sender, is prompted for an ID and password. The
servers are currently implemented on two Linux ma-
leftmosttopbutton,labeled“Resources”,ifpressedwill
chines running the Apache web server (http://-
popupawindowfromwhereAlicecanspecifythefiles
www.apache.org/) with the module mod ssl en-
containinginformationsuchascertificatesandkeys,and
abled which allows for SSL secure connections
also enter bookmarks to web directories from where
(http://www.mod ssl.org/). Daemons running
usercertificates/public-keyscanbedownloaded.Alice’s
in these computers performed all the agents’ transac-
owncertificatesaredisplayedinthetopleftlistwindow.
tionsautomatically.WeexperimentedwithJavaservlets
Similarly,thecertificatesandIdsofthepostalagentsare
forthedaemonsinsteadofCGI/binsincethewebserver
shown in the lower left list window. Alice can specify
can satisfy a client request through a single process al-
the name of the recipient in the field labeled “Receiver
lowingto handlemore transactions simultaneously andIdentification”, and, by pressing the “Fetch certificate” [7] R.H.Deng,L.Gong,A.A.Lazar,andW.Wang. Prac-
button,downloadthecorrespondingcertificatewhichis tical protocols for certified electronic e-mail. Journal
displayed in the middle left list window. While we ex- of Network and Systems Management, (4(3)):279–297,
pect that most messages will consist only of attached 1996.
[8] Y.Desmedt.Societyandgrouporientedcryptography:A
files,asimpletextcomposerisalsoincludedforconve-
newconcept. InAdvancesinCryptology–CRYPTO’87,
nienceatthebottomright. Bypressingthe“Send/Exit”
pages120–127,1987.
button, Alice sends the encrypted request to the postal [9] Y.DesmedtandY.Frankel. Thresholdcryptosystems. In
agent. AdvancesinCryptology–CRYPTO’89,pages307–315,
Thereceiver,Bob,willreceiveasecureURLtopoint 1989.
to. Thenusinga SSL-enabledbrowser,heprovidesthe [10] S. Even, O. Goldreich, and A. Lempel. A randomized
protocolforsigningcontracts. Comm.ACM,28(6):637–
receiptandreceivesbackthemessagepromptly.
647,1985.
We found that the system performed satisfactory un-
[11] M.FranklinandM.Reiter. Fairexchangewithasemi-
der the simulating conditions. We plan to extend it by
trusted third party. In Proc. ACMConference on Com-
implementingtheversionwithmultipleTTPs.
puterandCommunicationsSecurity,1997.
[12] R. Gennaro, S. Jarecki, H. Krawczyk, and T. Rabin.
8 Conclusion Securedistributedkey generation fordiscrete-log based
cryptosystems. InProceedingsofEurocrypt’99,1999.
Inthispaper,wepresentedpracticalprotocolsforcer- [13] O. Goldreich. A protocol for sending certified mail.
tified e-mail. We introduced a hybrid approach which Technical report, Computer Science Department, Tech-
combinesthestrengthsofbothonlineandoptimisticap- nion,Haifa,Israel,1982.
[14] S.KetchpelandH.Garc´ıa-Molina. Makingtrustexplicit
proachesandallowsforeffectivescalabilitybydistribut-
indistributedcommercetransactions. InProceedingsof
ingresponsibilitiestolow-costsemi-trustedservers.Our
the International Conference on Distributed Computing
protocolsaresimpleandefficient. Theyarticulatereal-
Systems,1996.
isticandflexibletrustmodelsthatcouldbeemployedto [15] M.Luby,S.Micali,andC.Rackoff. Howtosimultane-
createattractive,usablecertifiede-mailsystems. ously exchange a secret bit by flipping asymmetrically
biasedcoin. InProceedingsofthe
9 Acknowledgements
Theauthorsgratefullyacknowledgethecommentsof
MichaelSteiner,whichgreatlyimprovedapreviousver-
sion of this paper. The first author would like to thank
SilvioMicaliforilluminatingdiscussionsoncertifiede-
mailprotocols.
References
[1] N.Asokan,V.Shoup,andM.Waidner.Optimisticfairex-
changeofdigitalsignatures. TechnicalReportRZ2973,
IBMResearch,1997.
[2] N. Asokan, V. Shoup, and M. Waidner. Asynchronous
protocolsforoptimisticfairexchange. InProceedingsof
the IEEE Symposium on Research in Security and Pri-
vacy, pages86–99.IEEEComputer SocietyPress, May
1998.
[3] A. Bahreman and J. D. Tygar. Certified electronic
mail. InProceedingsofSymposiumonNetworkandDis-
tributed Systems Security, pages 3–19. Internet Society,
Feb.1994.
[4] M.Bellare, R.Canetti, and H.Krawczyk. Keying hash
functionsformessageauthentication. pages1–15.
[5] M. Ben-Or, O. Goldreich, S. Micali, and R. Rivest. A
fairprotocolforsigningcontracts. IEEETransactionson
InformationTheory,IT-36(1):40–46,1990.
[6] M. Blum. Coin flipping by telephone – a protocol
for solving impossible problems. In Digest of papers
fromCompconSpring1982,pages22–25,133–137.Feb.
1982.
ZF [ thIEEESymposium
onFoundationsofComputerScience,pages11–21,1984.
[16] S. Micali. Simultaneous electronic transactions.
TechnicalReport566420,http://www.delphion.com/cgi-
bin/viewpat.cmd/US566420 ,1997.
[17] J.RiordanandB.Schneier. Acertifiede-mailprotocol.
13thAnnualComputerSecurityApplicationsConference,
pages100–106,Dec.1998.
[18] B. Schneier. Applied Cryptography: Protocols, Algo-
rithms,andSourceCodeinC. JohnWiley&Sons,Inc.,
1996.
[19] B. Schneier and C. Hall. An improved e-mail security
protocol.In13thAnnualComputerSecurityApplications
Conference,pages232–238.ACMPress,Dec.1997.
[20] T. Tedrick. Fair exchange of secrets. In G. R. Blak-
leyandD.C.Chaum,editors,ProceedingsofCrypto’84,
pages434–438.Springer, 1985. LectureNotesinCom-
puterScienceNo.196.
[21] J.ZhouandD.Gollmann. Certifiedelectronicmail. In
Computer Security – ESORICS’96 Proceedings, pages
55–61.SpringerVerlag,1996.