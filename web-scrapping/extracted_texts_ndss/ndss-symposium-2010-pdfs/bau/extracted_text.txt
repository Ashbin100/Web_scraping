A Security Evaluation of DNSSEC with NSEC3
JasonBau JohnMitchell
StanfordUniversity StanfordUniversity
Stanford,CA,USA Stanford,CA,USA
jbau@stanford.edu mitchell@cs.stanford.edu
Abstract serversthatresultedintheredirectionofpopularwebsitesto
attacksitesforcustomersoftheseISPs[17]. Thoughinitial
softwarepatcheswereissuedwhichmadecache-poisoning
DomainNameSystemSecurityExtensions(DNSSEC)with
attacks much less likely to succeed, DNSSEC is proposed
Hashed Authenticated Denial of Existence (NSEC3) is a
as a long-term solution to DNS data integrity [16] against
protocol slated for adoption by important parts of the
cache-poisoningaswellasin-path“man-in-the-middle”at-
DNS hierarchy, including the root zone, as a solution to
tackers. AsofAugust2009,theoperatorsofthe.org,.com,
DNS security vulnerabilities such as “cache-poisoning”
and .net Top Level Domains (TLDs) as well as the oper-
attacks. We study the security goals and operation of
ators of the DNS root zone have all announced plans to
DNSSEC/NSEC3 and use Murϕ, a finite-state enumera-
deploy DNSSEC/NSEC3 on their servers. Given so much
tiontool, toanalyzeits securityguaranteesand shortcom-
currentinterestinDNSSEC/NSEC3,wefeelitworthwhile
ings. By checking DNSSEC/NSEC3 security properties in
to perform a thorough security analysis of the protocol in
the presence of a network attacker, we uncover several
orderto understanditscharacteristicguaranteesand short-
weaknesses in the DNSSEC protocol, including incorrect
comings.
temporal dependencies in the DNSSEC signature attesta-
tion chain and NSEC3 options that allow a forged name In this paper, we review standard DNS and Kaminsky-
to be inserted into a DNSSEC domain. We demonstrate style cache-poisoning attacks. We then examine the se-
the exploitability of the NSEC3 vulnerability by a browser curity goals and limitations of DNSSEC/NSEC3, explain
cookie-stealing attack on a realistic laboratory DNSSEC itsoperations,andconsideritseffectivenessagainstcache-
domain. Weofferimplementationandconfigurationadvice poisoning. We perform finite-state model checking of the
whichminimizetheexploitabilityoftheuncoveredvulnera- DNSSEC/NSEC3protocolagainstsafetyinvariantsderived
bilities. Afterre-incorporatingtheadvisedrepairsintothe from its stated security goals. By identifying the parts
MurϕDNSSECmodel,wedemonstratetheupdatedproto- of DNSSEC packet content possessing cryptographic in-
colnolongercontainsvulnerabilitiesexploitablewithinour tegrity, we define the capabilities of network attackers ex-
threatmodel. ecuting a man-in-the-middle attack on DNSSEC packets.
Ourmodelexposesseveralprotocolvulnerabilities,suchas
incorrecttemporaldependenciesinthesignatureattestation
chainandNSEC3optionsthatallowforgednameinsertion
1 Introduction
intoaDNSSECdomain. Todemonstratetheseriousnessof
theNSEC3vulnerability,weimplementedanactualattack
on a realistic laboratory DNSSEC domain, exploiting the
Domain Name System Security Extensions, or DNSSEC
vulnerabilitytostealuserbrowsercookies. Wealsoincor-
[4, 5, 6], with Hashed Authenticated Denial-of-Existence
porate protocol configuration repairs into the Murϕ model
(NSEC3)[7]isasecuritystandardforDNSthathasbeenin
and verify that there are no longer exploitable vulnerabili-
developmentsinceatleast1999[1]. Briefly,DNSSECadds
ties. Finally, we provide recommendations to domain op-
cryptographic signatures to standard DNS records to pro-
erators, DNSSEC software implementors, and website de-
vide origin authentication and cryptographic integrity, but
signers that minimize the exploitability of the discovered
notsecrecyorimprovedavailability,forthoserecords. Re-
vulnerabilities.
cently, DNS security has garnered quite a lot of interest,
due to the highly publicized DNS “cache-poisoning” vul- During the process of writing up this work, a presenta-
nerability discovered by Dan Kaminsky [14, 21], and sev- tion was given by Daniel Bernstein at WOOT ’09 [11] re-
eral actual exploits of this vulnerabilities on ISP-run DNS garding DNSSEC vulnerabilities. While Bernstein pointsVulnerabilityFound PreventAt PreventionAdvice Section
ResourceRecordremainsvalidinlocalresolver ResolverSoftware Resolver software sets RR TTL to depend 4.5.1
cacheafterexpirationofsignaturesorkey onallsignaturesinattestationchaintotrust
rollover(revocation)higherinattestationchain anchor
Resolver software periodically re-acquires
zone keys to re-validate cached attestation
chains
RFC PropagatechangestoRFC
Gluerecordsmaybeforgedtodirectnext DomainOperator Useallsecuredelegations 5.1.1
recursivequerytoattackDNSserver ResolverSoftware Ifforgeryissuspected, querysupposedau-
thoritative zone to obtain signed version of
gluerecords.(Evenifnoactionistaken,this
vulnerabilitycannotresultinacceptanceof
forgedRRasfinalqueryanswer)
NSEC3opt-outmaybeusedtoprependfalsified DomainOperator Do not set NSEC3 opt-out flag 5.1.3
ownernameindomain,resultinginvulnerability
tocookie-theftandpharming WebsiteDesigner Do not use overly coarse cookie “domain”
setting
Replay of still valid A+RRSIG after IP-address DomainOperator Do not relinquish IP-address until all 5.1.4
move(Bernstein[11]) A+RRSIGshaveexpired
NSEC3saltisineffectual DomainOperator Do not use salt. Increase number of hash 5.4
iterations.
Inter-operation with standard-DNS child zones DomainOperator AdoptionofDNSSEC;Donotinteroperate 5.1.2
means insecure answer returned by DNSSEC re- DNSSECwithDNS
solver
Lackofuser-interfaceindicatorofsecurevs. UserSoftware ProvideDNSsecurityindicators 3.1.2
insecureDNSSECqueryresultexposesend-user RFC Disallow insecure answers from DNSSEC
toexploitableinsecureDNSSECqueryresult resolversonceDNSSECadoptionrampsup
Networkattackercanarbitrarilymanipulate ResolverSoftware Donottrustheaderbits. Resolvervalidates 5.3.1
DNSSECreplyheaderandstatusbits reply only using internal state and signed
RRs.
ISP Cannot trust remote server’s DNSSEC val-
idation. Must request all DNSSEC RRs to
validateatlocalresolver.
Network attacker can arbitrarily add / subtract / ResolverSoftware Build attested cache for answering user 5.3.1
mangleRRsinDNSSECreply queriesusingonlyauthoritativesignedRRs
containedinDNSSECreplies.
Table1.SummaryofContributions
out possible vulnerabilities in DNSSEC, our work goes ysis. In fact, our entire work assumes unforgeable crypto-
farther expose the mechanisms behind the vulnerabilities graphic signatures in order to study attacks possible even
and thereby provide configuration/operation advice which with adequate cryptography, orthogonally complementing
eliminate exposure to attacks. For the replay vulnerabil- Bernstein’s thoughts on breaking DNSSEC cryptography.
itycausedbysignature-expirationmismanagementreported A summary of the contributions of this work, in terms of
byBernstein,weprovidesimpleoperationalguidelinesthat vulnerabilities discovered and attack prevention advice, is
preventpossibleattacks. Hismainoverlapwithourworkis listedinTable1.
the relatively minor observation of forgeable glue NS and
ArecordswithinDNSSECresponsepackets. WhileBern- Theremainderofthispaperisorganizedasfollows.Section
stein correctly concludes this forgery raises security con- 2reviewsstandardDNSandcache-poisoningattacks. Sec-
cerns, we explain why this forgery does not actually add tion 3 gives an overview of the security limitations, goals,
anycapabilitiesforthenetworkattackerandthusdoesnot andmechanismsofDNSSEC/NSEC3anddemonstratesits
create additional exploitable attacks. Also, we found and effectiveness against cache-poisoning. Section 4 presents
experimentally confirmed an attack using NSEC3 opt-out, ourfinite-statemodelofDNSSEC/NSEC3,thenetworkat-
overlooked by Bernstein, the does not require cryptoanal- tacker model, and also the inconsistency in DNSSEC at-
testationchaintemporaldependenciesthatwefound. Sec-DNS DNSSEC
RFC Relevance RFC Relevance
1034,1035 DNSDefinition 4033,4034,4035 DNSSECDefinition(NSEC)
2671 EDNS0 longer packets (used by 5155 NSEC3Definition
DNSSEC)
3833 ThreatanalysisofDNS 4641 DNSSECoperationalguidlines
2845 TSIGChannelSecurity 2535 DNSSECinitialproposal(AD,CDheader
bits)
2931 SIG(0)ChannelSecurity 3757 KeySigningKeys(KSKs)andZoneSign-
ingKeys(ZSKs)
Table2.RelevantDNSandDNSSECRFCs
tion 5 presents the rest of the uncovered vulnerabilities as oftheDNShierarchy.
wellastherepairswhichcausemodel-checkingcompletion
A DNS zone is named by zero or more labels, e.g. “ex-
without vulnerabilities. Section 6 details our experiment
ample.com.” and consists of a set of RRs over which the
confirmingtheexploitabilityofthediscoveredNSEC3vul-
zone is authoritative. The concept of authority is best
nerabilities. Finally, Section 7 presents our vulnerability-
illustrated by example. For instance, a zone is authori-
minimizationadviceandconcludes.
tative for all RRs whose owner name is the zone name
– the .com zone is authoritative over the NS and MX
2 Background: DNSProtocol records for .com. A zone server is also authoritative over
RRs where 1) the owner name contain the zone name
as a suffix and 2) no “longer suffix” of the RR’s owner
2.1 DNSBasics name is also a authoritative zone. For example, the ex-
ample.com zone is usually authoritative over the A record
forwww.example.com.,exceptwhenwww.example.comis
We first review the relevant background information on configured as its own zone, (possibly to support a domain
DNS.Table2liststherelevantRFCsdefiningDNS.DNSis namesuchaswww1.www.example.com).
a hierarchical distributed database that translates alphanu-
meric domain names, such as www1.example.com, into In addition to authoritative RRs, a zone may also store
(most commonly) IPv4 and IPv6 addresses. DNS lookups gluerecordsthataidindelegation. GluerecordsareRRs,
are ubiquitous as they must be performed before any net- typically A and NS, under the authority of child zones
work resource, such as a website or a mail server, is ac- but copied to parent zones for the purpose of “gluing” to-
cessed by its alphanumeric domain name. The domain gether a delegation. For instance, the .com server may
namesmaybethoughtofasdatabasekeysthatareusedto storeboththetheNSrecordforexample.com,withavalue
lookupavarietyofvalues,calledResourceRecords(RRs), of ns.example.com, and the A record for ns.example.com,
associatedwiththekey. (The“key”domainnameiscalled so that a single query response may contain all the infor-
theRR’s“ownername”inDNSparlance). Themostcom- mation needed to follow a delegation. However, the .com
mon RRs are IPv4 addresses (the A RR), IPv6 addresses zonewouldnotbeauthoritativeovereithergluerecord;the
(theAAAARR),mailserversassociatedwithadomain(the glue records fall under the authority of the example.com
MX RR), and name servers associated with a domain (the server.
NS RR). The values associated with the MX and NS RRs
Figure 1 illustrates a typical DNS lookup process, which
are in name and not IP address form. The set of all RRs
involves two types of DNS resolvers, a stub resolver and
of the same type belonging to the same owner name, e.g.
a recursive resolver. Consider the name resolution pro-
multipleNSorARRs,istermedaRRSet.
cess that occurs after a user types www.example.com into
Wenowusethedomainnamewww.example.comasanex- the browser address bar. This triggers the DNS resolution
ampletoexplainDNSterminologyaswellasitshierarchi- process of the stub resolver on the user’s PC, which then
caloperations. Thenamewww.example.comhasacanoni- issues a query (“www.example.com A?”) to the local ISP-
calDNSformofwww.example.com.. Eachsuccessivela- run DNS server. This server now becomes a local DNS
bel (“www”, “example”, “com”) in this form corresponds recursive resolver: it first queries the DNS root server for
toalevelwithintheDNShierarchy(azone),andtheextra the A RR of www.example.com. The root server is not
trailingdot(“.”)attheendofthecanonicalDNSformisin- authoritative for this information, so it issues a delegation
sertedtosignifythepresenceoftherootzone,thetoplevel response, pointing the local recursive resolver towards theReply RRSetsinDNSReply RRSetsaddedbyDNSSEC
3 “com.NSa.gtld.net.” “com.DS”
2 Root Zone
3 (".") “a.gtld.net.A192.5.6.30” “RRSIG(DS)by.”
1 4 5 “example.com.NSa.iana.net.” “com.DNSKEY”
“a.iana.net.A192.0.34.43” “RRSIG(DNSKEY)bycom.”
8 5
“example.com.DS”
User PC Local TLD Zone
Stub Recursive 6 ("com.") “RRSIG(DS)bycom.”
Resolver Resolver 7 7 “www.example.com.A1.2.3.4” “example.com.DNSKEY”
“RRSIG(DNSKEY)by
example.com.”
Zone for
“RRSIG(A)byexample.com.”
"example.com."
8 “www.example.com.A1.2.3.4”
Figure 1. DNS(SEC) name resolution sequence for query “www.example.com A?" resolving to IP address
“1.2.3.4". Authoritative RRSets are in plain text and glue RRSets are in italic. The stub resolver is not ex-
pectedtohandleDNSSECRRs,sononearesenttoit.
authoritativeserverforthe.comzone. Thisquery/response provides against spoofing is in the 16-bit TXID (transac-
pair occurs again between the recursive resolver and the tionID)field. ADNSresolverwillacceptasvalidthefirst
.com authoritative server, which leads to the resolver ob- responsepacketcontainingaTXIDmatchingtheTXIDof
taining the address of the authoritative DNS server of ex- an outstanding query. This creates a race condition for at-
ample.com.Whentherecursiveresolverqueriestheauthor- tackers: their spoofed responses to the DNS resolver must
itative DNS server for example.com, it finally obtains an match an outstanding TXID before the actual response re-
answerto“www.example.comA?”,whichitcanthenpass turns.
back to DNS stub resolver on the user’s PC that initiated
thisentireprocess.
To reduce DNS network traffic, each DNS server caches 2.3 Cache-PoisoningAttack
RRstokeepfromissuingredundantrequests. DNSreplies
include the specified caching period (TTL) of a returned
RR, set by the authoritative zone. As an example, sup-
In a cache poisoning attack, the attacker spoofs a DNS re-
pose that the set of queries and responses in Figure 1 has
sponse packet so that a DNS resolver accepts and caches
occurred recently, so that the TTL of caches records has
data “poisoned” by the attacker, such as an A RR of a
not yet expired. When another user of same local recur-
valid owner name pointing at the IP address of an attack-
siveresolverrequests“mail.example.comA?”,thelocalre-
ing server. The resolver then provides this poisoned data
solver will be able to bypass steps 2-5 due to caching and
totheenduser,redirectingcommondomainnamerequests
directlyquerythe“example.com.”authoritativeserverwith
(suchaswww.google.com)awayfromthelegitimateserver
“mail.example.comA?”.
toattackingservers[17].
2.2 DNSPacketFormat
2.3.1 Man-in-the-Middle
We will now briefly describe the DNS packet format
and transmission characteristics and subsequently discuss
Man-in-the-middle attackers are attackers who have read
“cache-poisoning” attacks on DNS, conducted via both
andwriteaccesstonetworkpacketsbelongingtothevictim.
“man-in-the-middle”and“out-of-path”means.
In this scenario an attacker can overhear the queries made
The format of a DNS packet is illustrated in Figure 2 bythelocalrecursiveresolvertotheremoteDNSzonesand
(DNSSEC packets are completely identical). DNS queries inject faux replies from the remote zones. As DNS is un-
andresponsesareusuallycontainedinasinglesmallpacket, encrypted,itistrivialfortheman-in-the-middleattackerto
less than 512 bytes, and are usually sent over UDP. This copy the correct TXID to generate an acceptable spoofed
makes it fairly simple for network attackers to spoof DNS DNS reply, which will then poison the cache of the recur-
responses. TheonlyprotectionthattheDNSpacketformat siveresolver.0 1516 2324 31 TXID = Transaction ID
QR = Query or Reply
UDP UDP Source Port UDP Dest Port Opcode = Typically 0 (QUERY)
Header UDP Length UDP Checksum AA = Authoritative Answer
UDP Source Port TC = Truncated
TXID QR Opcode AATCRDRA Z ADCD RCODE RD = Recursion Desired
DNS RA = Recursion Available
QDCOUNT ANCOUNT Z = Zero Bit
Header
AD = Authenticated Data
NSCOUNT ARCOUNT CD = Checking Disabled
RCODE: 0 = No Error
Question Section Answer Section RRs
2 = Server Failure or
Bogus DNSSEC data
Authority Section RRs Additional Section RRs DO
DO = DNSSEC OK (in EDNS0 header)
Figure2.DNSandDNSSECpacketformat. DObitisinEDNS0HeaderinAdditionalSectionRR
2.3.2 Out-of-PathAttack serveroftheattacker’schoosing.
In order to address this vulnerability, Kaminsky worked
We will now discuss out-of-path DNS cache-poisoning at- with DNS software vendors to randomize the UDP source
tacks,ofwhichtherecentworkpublicizedbyDanKamin- port of DNS queries [8, 12]; these random ports become
sky [14] is the most infamous. In a Kaminsky attack, the thedestinationportsforDNSresponsepackets. Thiseffec-
attacker does not require the ability to overhear the outgo- tively adds 10-11 bits of entropy for the attacker, making
ingDNSrequestsgeneratedbythelocalrecursiveresolver. theexpectedsuccesstimeofanattackseveraltensofmin-
Instead, the ingenuity of the Kaminsky attack involves in- utesratherthanseconds. However,themitigationdoesnot
creasing the number of valid outstanding TXIDs, thus in- fundamentally prevent a spoofing packet success; it only
creasing the probability that a randomly generated spoof lowers the probability of such an event. This mitigation
TXIDwillmatchanoutstandingone. alsoprovidesnodefenseagainstman-in-the-middleattack-
ers.Therefore,manyresearchers,includingKaminskyhim-
The Kaminsky attack works with delegation responses
self [8, 16], have been actively supporting DNSSEC as a
rather than authoritative answers. The attacker issues
long-termsolutiontoDNSsecurityvulnerabilities, includ-
many DNS queries to a DNS recursive resolver for non-
ingcache-poisoning.
existent names sharing a common suffix zone, e.g. aN-
otExist.example.com, bNotExist.example.com, etc. (The
queries may also be coerced from a user, for instance by 3 DNSSECProtocol
an attacker-crafted web page containing these names in
<img>tags).ThiscreatesmanyvalidoutstandingTXIDsat
therecursiveDNSresolver. Sinceallofthesequeriescon- 3.1 StatedSecurityGoalsandLimitations
tainacommonsuffixzone(“example.com”), allresponses
coming from the “.com” zone will include NS and A glue
DNSSEC, as the name implies, consists of a set of secu-
records for the name server of “example.com”. The at-
rity extensions to the DNS protocol (see Table 2 for the
tackerthushasmanychancestopoisontheRRsforthe“ex-
relevant RFCs). DNSSEC introduces additional security-
ample.com” name server at the resolver, by sending many
related resource records with each reply, for the purpose
spoofeddelegationresponses(packet5fromFigure1)with
ofprovidingcryptographicallysignedintegritytotheorig-
differentTXIDscontainingalteredNSandAgluerecords.
inalDNSresourcerecords. ThismakesDNSSECeffective
Since the resolver will accept and cache the glue records
against both types of cache-poisoning attacks described in
uponfindingamatch,thiscreatesaninstanceofthe“birth-
Section 2.3. DNSSEC does not guarantee delivery of re-
dayproblem”[10]fromprobabilitythatcanleadtosuccess
source records and doesnot provide integrity for unsigned
after only seconds of attacking the 16-bit TXID field. Af-
portionsofpackets. ItssecuritygoalsaredescribedinRFC
terasuccessfulmatch,theresolverwillquerytheattacking
4033asfollows:
servertoresolveanyRRswithownernameendingin“ex-
ample.com”, essentially giving the attacker full control of “TheDomainNameSystem(DNS)securityextensionspro-
the “example.com” zone for users of this resolver. After vide origin authentication and integrity assurance services
thesuccessfulattack,allusersofapoisonedDNSresolver for DNS data, including mechanisms for authenticated de-
thatattempttoaccess“example.com”willbedirectedtoa nialofexistenceofDNSdata.”In RFC 4033, the authors explicitly distinguish DNSSEC security indicator bit. Thus, whenever a DNSSEC recur-
data (RR) security from channel security. DNSSEC pack- sive resolver must query a standard DNS zone, the recur-
ets, containing resource records carrying encoded-binary sive resolver is forced to provide an answer without secu-
cryptographic material, are typically carried in the clear rityguaranteestothestubresolver. Asofthiswriting,end-
over UDP. Thus, the current paper is largely about the usersoftwareacceptsbothsecureandinsecureresultsfrom
implications of the DNSSEC design decision to provide thestubresolver,withoutanyuser-interfaceelementstoin-
data (RR) security rather than channel security. We will dicate the security of the lookup result. Thus, the current
firstdiscussthelimitationsofDNSSEC,andthenconsider end-usercannottrustthesecurityofDNSlookupsevenifa
in turn the three component DNSSEC data integrity goals DNSSECrecursiveresolverwithlast-hopchannelsecurity
fromabove: originauthentication,dataintegrityassurance, isutilized.
and authenticated denial-of-existence, and detail how the
DNSSECprotocolattemptstoreachthesegoals,evenwith
3.2 OriginAuthentication
in-the-clearcommunications.
The need for origin authentication is possibly best under-
3.1.1 “Last-Hop”Limitations
stoodinthecontextofpreventingcache-poisoningattacks.
As we described above, these attacks are possible because
RFC 4033 specifically states the “last-hop” between stub the DNS recursive resolver will accept DNS data sent to
resolver and recursive resolver (1 and 8 in Figure 1) may it by any computer connected to Internet (possibly with
be out-of-scope for DNSSEC, to be protected via DNS a falsified source IP address) as long as the destination
channel security means such as SIG(0) [3] or TSIG [2]. port/TXID fields match. There is no mechanism within
ThisisbecauseinanticipatedDNSSECdeployment,cryp- DNS, aside from source IP address, that verifies the data
tographicsignaturesareexpectedtoflowfromauthoritative originatesfromanauthoritativeserverforaparticularzone.
serversonlytolocalrecursiveresolvers,withstubresolvers Tosolvethisissue,DNSSECprovidesaformofhierarchi-
onend-userPCsnotequippedtohandlesignatureverifica- cal public key infrastructure (PKI) which allows resolvers
tion. to securely obtain the public key for a DNSSEC zone and
to use this for authenticating signed data belonging to the
Asourfinite-stateanalysisisfocusedontheDNSSECpro-
zone.
tocol, we consider last-hop security out-of-scope and des-
ignate the recursive resolver as the trusted end-point for DNSSEC introduces three new RRs to support this PKI:
name resolution in the analysis. However, we emphasize DNSKEY, RRSIG (RR Signature), and DS (Delegation
that the channel security of this last hop is critically im- Signer). The DNSKEY RR contains the binary-text-
portanttoend-to-endDNSSECintegrity. Forexample,the encodedpublickeyalongwithrelevantkeyparameterssuch
recursive resolver marks the difference between two types astheencryptionalgorithmused. Thezoneusesthecorre-
ofresponsestothestubresolver: verifiablysecureanswers spondingprivatekeytosignalloftheRRSetsoverwhichit
and insecure answers, with a single “Authenticated Data” is authoritative. Each signature over an RRSet is recorded
(AD) bit. Thus, attackers able to manipulate DNS replies inaRRSIGRR.TheDSverificationRRcontainsacrypto-
overthislasthopmayforgesecureanswerssimplybyset- graphic digest of a DNSKEY belonging to a child zone in
tingtheADbit. Inusagescenarioswherelast-hopsecurity a delegation. The DS RR is considered under the author-
isabsent,suchasunencryptedwirelesshotspots,DNSSEC ityoftheparentzoneandcanthusbesignedbytheparent
cannotguaranteedomain-namelookupintegritytotheend zone (with a corresponding RRSIG). It is returned by the
user. parent sideof a delegationas an authenticatedpointer to a
signs
DNSKEY in the child zone. This [Parent DNSKEY →
signs
ParentDS → ChildDNSKEY]sequenceformsalinkin
3.1.2 InteroperabilitywithDNSLimitations
an extensible attestation chain that can impart trust to any
publickeyobtained viathechain, solongasthe chainbe-
Undercurrentspecifications,anyinter-operationwithstan-
ginsatatrustanchor. IntheDNSSECPKI,atrustanchor
dard DNS zones exposes the end-user of a DNSSEC re-
is any DNSKEY or DS RR confirmed as trustworthy via
cursive resolver to forgeable query results. When inter-
out-of-band means and configured in the resolver as trust-
operatingwithastandardDNSzone,aDNSSECrecursive
worthy.Withtherecentannouncementofrootzonesigning,
resolvercannotverifytheintegrityofremotezonedatadue
thisisexpectedtobetherootDNSKEY.
to the lack of cryptographic signatures. For compatibil-
ity, the recursive resolver still returns any responses from TheoperationoftheDNSSECPKIisillustratedinFigure1,
the zone to the stub resolver, but without setting the AD whichliststheDNSSECpacketcontentsforthenameres-olution “www.example.com A?”, for which the DNSKEY 3.4 AuthenticatedDenialofExistence
of the “example.com.” zone are needed. Starting with the
DNSKEYoftherootzoneasthetrustanchor,Reply3pro-
vides the DS to attest to the DNSKEYs of “com.”. Re- Thus far, we have discussed how DNSSEC provides in-
ply5addstheDNSKEYof“com.”andtheDStoattestto tegrity assurance for existent RRs. Authentication and in-
theDNSKEY“example.com.”,whichisprovidedbyReply tegrityisalsorequiredforresponsesdenyingtheexistence
7. ofanyRRsmatchingaquery:Ifauthenticationmechanisms
didnotexist,forexample,anattackermaybeabletoforge
a response packet denying the existence of an existent do-
main name and have this response cached at the local re-
3.2.1 OriginAuthenticationwithRegularDNS solverforlongperiods,creatingadirecteddenial-of-service
attack.
In order to inter-operate with non-SEC DNS implemen- The initial DNSSEC scheme for “authenticated denial of
tations, DNSSEC must also provide for cases where a existence” creates RRs, named Next Secure (NSEC), that
DNSSEC zone has a non-DNSSEC parent or child zone. list all of the existent RRs belonging to an owner name
Inthe insecureparent zonecase, since thetrustchain can- within an authoritative zone, so that a resolver can ver-
notbeestablishedallthewaybacktotheDNSroot,either ify the non-existence of an RR against the RR list of its
theDNSKEYofthesecurezoneoraDSgeneratedfromthe ownername.EachNSECRRalsocontainsthenextexistent
DNSKEYmustbemanuallyconfiguredasatrustanchorat owner name in canonical form, so that the non-existence
therecursiveresolver.Whenthereisnosuchmanuallycon- of an owner name within a zone may be shown by re-
figuredtrustanchor,noattestationchaincanimparttrustto turning a covering NSEC, whose owner and next existent
the DNSKEY of the secure zone. In this case, no records namesbracketthequeriedname. Asanundesirableconse-
fromthesecurezoneareverifiablebytherecursiveresolver quence, the entire contents of a zone may be trivially enu-
and all records ostensibly from the zone will passed on to meratedbyfollowingNSECrecordsandmakingappropri-
thestubresolverasaninsecureanswer. atequeries.
Inthecaseofaninsecurechildzoneofasecurezone,anin- The current scheme for hashed authenticated denial of ex-
securedelegationwillbecreatedwithnoDSrecordwithin istence, named NSEC3 [7], is nearly equivalent to NSEC
thesecurezonepointingatthechildzone. except that all owner names are cryptographically hashed
andnotavailableincleartext. Thecanonicalorderofexis-
tent names in NSEC3 is the hashed order. Under NSEC3,
zoneenumerationofhashednamesremainstrivial, butthe
3.3 IntegrityAssurance
attacker must expend computational resources in a dictio-
naryattacktolearnthezonecontentsincleartext. Asingle
salt string is also appended to each owner name, which if
Given the hierarchical PKI provided by DNSSEC, it is keptunknownwouldincreasethesearchspacerequiredfor
straightforwardforazonetoprovide“integrityassurance” dictionary attacks. However, NSEC3 strangely makes the
for its existent data. The zone signs all the RRSets over saltstringavailableviaaRRquery,thusrenderingitcom-
whichitisauthoritativeandtransmitstheRRSIGalongwith pletely ineffectual. Thus, NSEC3 is still vulnerable to the
theRRSetinitsreplies. Forexample, whenrespondingto leakageofRRownernamesafterfewdaysofcomputation
the “www.example.com A?” query, the example.com au- [11].
thoritative server will transmit both the A record and the
RRSIG containing the signature over the A record, as Re- With NSEC, all owner names within the zone, including
ply7inFigure1demonstrates. namesonlyassociatedwithNSrecordsusedfordelegation,
form the NSEC “next owner” chain. In NSEC3, such an
DNSSEC allows a zone only to sign RRs over which it is owner name may “opt-out” of the chain via a bit in the
authoritative. Thismeansthatanygluerecordsincludedin NSEC3 RR. When the “opt-out” bit is set in an NSEC3
adelegationresponseareunsigned,asillustratedinReplies record, one or more unsigned delegations may exist with
3 and 5 from Figure 1. As Bernstein has noted and as we ownernamesthathashestoavaluebetweenthetwohashed
willexplain,thesegluerecordsmaybeforged,causingthe names in the NSEC3 RR. Thus, even when a resolver re-
local resolver to query an attacking server in its recursive ceives a signed opt-out NSEC3 RR covering its queried
nextstep. WeshowinSection3.7,however,thatthisredi- name, it must still consult unsigned information, such as
rectiondoesnotaddthecapabilityforthenetworkattacker gluerecordsindicatingadelegation, todecidewhetherthe
toinfluencetoendresultofnameresolution. query answer exists lower in the DNS hierarchy. TheNSEC3opt-outoptionisthusverydangerousandformsthe 3.7 RobustnessAgainstCachePoisoning
basisforthedemonstratedattackthatwewilldetaillaterin
thispaper.
DNSSEC is effective against the cache-poisoning attacks
described in Section 2.3. In the presence of the attacker
capabilities listed in Section 4.4, which model a man-in-
3.5 TemporalSpecifications the-middle network attacker, our finite-state model check-
ingresultsinSection5.2demonstratethatsignedDNSSEC
recordsobtainedusingonlysecuredelegationsarenotvul-
nerabletoforgery. Anend-usertrustingonlysecurequery
UnderDNS,aRRinaDNSreplypacket includedaspec-
responsesisthussafefromsuchanetworkattacker.
ificationofTTLasthetime, startingfromreplyreception,
that the resolver may validly cache the RR. This specifi- We will also now detail how DNSSEC successfully pro-
cation of TTL relative to packet reception makes DNS re- tectsagainstout-of-path(Kaminsky)cache-poisoning. Re-
ply packets susceptible to replay attacks. To avoid replay call that the Kaminsky attack works by redirecting the IP
vulnerability, DNSSEC introduces absolute-time temporal addresses associated with glue NS and A records, causing
specificationsforitssignatures. EachRRSIGRRhasasig- therecursiveresolvertoqueryaDNSservercontrolledby
naturevalidityperiod,statedasabsolutestartandendtimes. anattacker. AsnotedbyBernstein,redirectionofthechild
ThisintroducesadependencyofTTLtimesuponsignature zonequerytoanattackingDNSSECserverisstillpossible
validitytimesattheresolver,asTTLsforRRsmustnotre- underDNSSEC,sincegluerecordsareunsignedandforge-
main valid for longer than the valid periods of signatures able. However, with the DNSSEC protocol, a DS record
attesting to these RRs. The absolute timing eliminates the with RRSIG will also be sent in a secure delegation re-
possiblyofreplayaftertheexpirationofthecorresponding sponse. The authenticity of this signed DS record is veri-
RRSIG. fiable by the recursive resolver via the attestation chain (it
shouldnotfollowdelegationresponseswithoutasignedand
attestedDS),thusgivingtherecursiveresolverawaytover-
ifythepublickeyofthechildzone.
3.6 PacketFormat&AttackerCapabilities
Withatrustedpublickeyforthechildzone,theresolvercan
validate whether a RR contained in a response sent by the
attackingserverisproperlysignedbythechildzone. Short
Because DNSSEC operates solely by adding RRs to reg-
of key compromise, the attacking server therefore cannot
ular DNS, its packet format is essentially unchanged from
falsifyanysignedRRSetsinthischildzone, includingDS
DNS(seeFigure2).Thesecurity-relatedDNSSECRRsare
records for further secure delegation. Since the ultimate
carriedalongsidetheoriginalDNSRRsinthesamepacket
RRs requested by name resolution, usually A or MX, are
(see Figure 1). DNSSEC does introduces a single enable
available in signed form in their authoritative zone, a re-
bit,DNSSECOK(DO),locatedintheEDNS0headercon-
solver never has to rely on an unsigned record as its final
tainedintheAdditionalSectionofDNSpackets. Italsode-
answer. Thus, aslongasaDNSSECresolveracceptsonly
finestwobitintheDNSheader: AuthenticatedData(AD),
RRSets appropriately signed by their authoritative zone as
which indicates that the sending server has validated the
final query answers, the response packets may come from
RRsinthepacket,andCheckingDisabled(CD),whichtell
anyserver, redirectedornot, withoutallowingtheattacker
upstreamserverstonotperformRRvalidation.
toviolatetheultimateintegrityofaDNSSECnameresolu-
tion.
The DNSSEC signature scheme only allows for individ-
ual RRSets to be signed by an associated RRSIG record. In fact, server redirection does not increase the packet
Thus, the integrity provided by DNSSEC is at individual forgery capabilities of the network attacker. Once an at-
RRSet+RRSIG granularity. Essentially, the only guaran- tacker has caused a recursive resolver to query its attack-
teeofDNSSECisthatitisimpossible,shortofprivatekey ing DNSSEC server, it can form any type of response to
compromise, for a network attacker to create a RRSet and the resolver that it chooses except create a valid RRSet
RRSIGpaircontainingmanipulateddatavalidlysignedby and RRSIG pair signed with the zone’s private key. These
the originating zone. We thus incorporate capabilities for are exactly the same capabilities that we ascribed to the
manipulatingallotheraspectsofDNSSECpacketsintoour man-in-the-middle network attacker in Section 3.6, albeit
attacker model, including stripping RRSIGs from RRSets, made more convenient for the attacker by eliminating the
changingheaderbits, insertinganddeletingrecordedRRs, race with a legitimate DNSSEC server. Thus, glue record
etc. SeeSection4.4foradetaileddescription. forgery does not present any additional security threat toStates TransitionRules
LocalResolverState LocalResolver
KnowledgeofTLDandAuthoritativeZone QueryGeneration
Address(andvalidity) LocalResolverState→Network
DS(andvalidity) ReplyHandling
DNSKEY(andvalidity) Network→LocalResolverState
NamestoResolve(name1-name6) TTLandSignatureExpiration
Answer(andvalidity) LocalResolverState→LocalResolverState
Network Root,TLD,andAuthoritativeZoneServers
SetofPackets QueryResponse
AttackerKnowledge Network→Network
SetofPackets Attackers
LearningLegitimateReplies
Network→AttackerKnowledge
ForgeryGeneration
AttackerKnowledge,Network→Network
Table3.OverviewofDNSSECMurϕModel. ArrowsdenoteStatesRead→StatesWritten.
DNSSEC beyond the normal capabilities of a network at- 4.1 OverviewofMurϕModel
tacker, though it may allow the attacker to more easily in-
hibitDNSSECperformancewithroguepacketsthat,forex-
ample,consumeresolverCPUtime. Our model is available at http://crypto.
stanford.edu/protocols/murphi_models/
and is based on a typical usage scenario of the DNSSEC
service. Table 3 summarizes this finite-state model. We
4 FiniteStateModelChecking modelthreelayersoftheDNSSEChierarchy,representing
root zone servers (“.”), TLD zone servers (“com.”), and
an authoritativeserver fora singlezone (“example.com.”).
The root zone DNSKEY is our modeled trust anchor. In
In order to evaluate the security of the DNSSEC proto-
the state machine, these zone servers are simply modeled
col,weperformedafinite-state“rationalreconstruction”of
as a set of transition rules on network state; they do not
DNSSEC using Murϕ [13], a Nondeterministic Finite Au-
introduce any additional state themselves. We also model
tomaton (NFA) enumerator to check its operations against
a local recursive resolver, representing ISP-run DNSSEC
safety invariants derived from its stated security goals. In
resolvers, as a set of transition rules on network state as
the rational reconstruction process, decribed in [20], the
wellaslocalstate,representingnameresolutionstatusand
mostbasicpartsoftheprotocolmessagesaremodeledand
knowledge of the DNSSEC hierarchy, such as zone keys,
executedinthemodelchecker,toseeifanysafetyinvariants
DS RRs, and server addresses. The network is simply a
are violated. When invariants are violated, more protocol
set of modifiable packet state structures. The final aspect
components are added until the invariants pass or cannot
of our model is the attacker model, which consists both
be passed. The entire process thus aids in understanding
of transition rules modifying network state and additional
the component design of the protocol and ensures that the
state representing packet knowledge recorded by the
properties expressed in the invariants test the functionality
attacker.
ofeachprotocolcomponent.
Furthermore,sinceMurϕtriesallpossiblecombinationsof 4.2 Root, TLD, and Authoritative Servers
modeled attacker capabilities, when the reconstructed pro- Model
tocol runs to completion without violating any invariants,
wemaydrawtheconclusionthattheprotocolpreservesthe
expressedsafetyinvariantsagainsttheattackerdescribedin The behaviors of the root, TLD, and authoritative zone
themodel. Inthissection,wewilldetailourreconstruction serversrequirenoserverstateandareentirelydescribedby
of the protocol, the network attacker mode, and the secu- network state transition rules. Our modeled root and TLD
rity invariants. We will also report on an inconsistency in behaviors are quite simple. They respond to network state
thetemporaldependenciesoftheDNSSECattestationchain containingaquerypacketaddressedtothemandwillwrite
foundbyourmodeling. aresponsetothenetworkcontainingeitherasecuredelega-MatchingRRSetsin
Zone Receives RR Query
AttestedCache Non-Attested Action
Cache
RR Exists RR Not
A Answer
in Zone In Zone
DS NS,A Secure
Delegation
1Returns RR in RR Does NSEC3 (owner name NS,A Insecure
Signed RR Child Zone Not Exist matches query, shows Delegation
glueNSexists)
2 Secure Insecure Returns NSEC3 NSEC3 (covering NS,A Insecure
Delegation Delegation Covering Query query,opt-out) Delegation
NSEC3 (covering Denial-of-
3 NS Glue Record 4 NS Glue Record not 5 Opt-out 6 Non-opt-out query,opt-out) Existence
NSEC3 (covering Authenticated
in NSEC3 Chain in NSEC3 Chain NSEC3 NSEC3
query,noopt-out) Denial-of-
(Opt-out)
Existence
Figure 4. Modeled Resolver Action Logic, Depending
Figure3.ZoneResponseBehaviortoanRRQuery
onResolverCacheContentsMatchingQuery
tion,withDSandRRSIGauthoritativeRRsandNSandA fromreplies.Theresolverstaterecordstheanswersupplied
glueRRs. by the authoritative zone to each of the six query targets,
along with the temporal validity of the answer. When any
Themodeledbehavioroftheauthoritative“example.com.”
answer is in the expired state, the resolver will try to re-
server is more complex, as it covers the entire set of zone
solvethecorrespondingnamebywritingaquerypacketto
responses to an RR query. The full set is enumerated in
theauthoritativezoneserver,provideditsknowledgeofau-
Figure 4.1. Response 1 represents the simple case where
thoritativeserveraddressisvalid. Forthepurposeofquery-
thequerymatchesanRRexistentinthezone. Responses2-
ing and authenticating replies, the local resolver state also
4 represent when the query matches an existent delegation
maintains TLD and authoritative zone address, DNSKEY,
pointinsteadofanRRinthezone. Response2isthesecure
and DS, and will appropriately query when these expire.
delegation case. Responses 3 and 4 represent the options
(TherootserveraddressandDNKSEYarenotmodeledas
foraninsecuredelegation: aNSgluerecordusedforinse-
resolverstatebecausetheyarehard-codedinaresolverim-
curedelegationinDNSSECmayeitherberecordedbythe
plementation).
NSEC3 chain (response 3), or unrecorded, with the cover-
ingNSEC3settingopt-outinstead(response4).
Finally, responses 5 and 6 represent cases when the query 4.3.1 TTLandSignatureExpiration
matchesneitherexistentRRnordelegation. Thezonemust
thenindicatenon-existenceofthequeriedRRbyreturning We model validity expiration for all query answers and all
thecoveringNSEC3,whichmayhappentohaveopt-outset serveraddresses,DNSKEYs,andDSs. InDNSSEC,allof
(response 5), or not (response 6). Our modeled authorita- thisinformationisstoredasaRR.RRshaveanassociated
tivezonehasRRcontentthatwilleliciteachofthesesixre- TTLand, ifsigned, alsoasignaturevalidityperiodforthe
sponseswhenqueriesforname1throughname6aresentby corresponding RRSIG. As per RFC 4033, TTLs for RRs
theresolver,allowingMurϕtoenumerateallpossiblestates mustexpirewhenthecorrespondingRRSIGsexpire;thisis
ofanauthoritativezonerespondingtoaquery. strictly enforced in our model by combining RR TTL and
RRSIG validity into a single entity. Also, all modeled va-
liditystatesinitializeto’expired’,andtransitionrulesexist
4.3 LocalRecursiveResolverModel
for each record that change a ’valid’ state to an ’expired’
state.
Themodeledlocalrecursiveresolvertriestoresolvetheset
ofsixnamesthatelicitthefullrangeofDNSSECresponse
behavior as described in the previous section. These six 4.3.2 ReplyValidationLogic
namesalsoformthebasisofourinvariants,aswecheckthat
the information associated with the names in the authori- The local resolver model also contains logic that validates
tative zone matches the understanding the resolver learns the contents of a reply packet and decides what actions totake with regards to the query based on received informa- (b) AttackermaymodifytheQuestionsection.
tion. Thislogicisofutmostimportancetothesecurityofa (c) Attacker may strip any number of RRs from a
DNSSECimplementation. Forexample,incorrectresolver reply,includingRRSIGsforotherRRs.
validationbehaviorthatacceptsunsignedRRsfromanex- (d) Attacker may add any number of recorded A,
pected DNSSEC zone opens up a downgrade path for at- NSEC3, DS, NS, or RRSIG RRs to a reply, so
tackers to exploit. We distilled the guidance of RFC 4035 longastheaddedRRswerenotmodifiedbythe
intoourmodel. attacker.
(e) AttackermaycreateauthoritativeA,NSEC3,and
Inparticular,ourmodeledresolverplacesRRSetscontained
DS RRs with corresponding RRSIGs signed by
in replies into two separate entities for use in this logic:
theattacker’sownkey,andaddthemtoareply.
an Attested Cache, whose contents are secure RRSets that
(f) AttackermaymodifythecontentsofanyAorNS
haveafullattestationchainbacktothetrustanchor, anda
gluerecord.
Non-Attested Cache, whose contents are RRSets the zone
expects to be insecure, such as glue records or data from
regular DNS zones. The attested cache consists of zone
DNSKEYsandDSesaswellassignedAandNSEC3RRs 4.5 SecurityInvariants
from reply packets. For instance, to include an A record
signed by the authoritative zone in the attested cache, the
resolver’sTLDandauthoritativezoneDSesandDNSKEYs
WeruntheDNSSECmodelinMurϕtocheckifanyreach-
must all be valid. The unattested cache consists of zone
able state violates any security invariants. These invari-
addressesandgluerecordsfromreplypackets. RRSetsde-
ants,whichcharacterizetheintendedsecuritypropertiesof
terminedtobebogus,suchasthosewithinvalidsignatures,
DNSSEC, are all logical expressions based on the state of
orindeterminate,suchasthosewithincompleteattestation
thelocalrecursiveresolver.Thefirstsetofinvariantschecks
chains, are discarded by validation logic. We believe that
that the local resolver has not recorded an spoofed answer
theattested/non-attestedcachedistinctionmaybeusefulto
foroneofthequeriednames.Thus,iftheanswertoname[1-
futureDNSSECimplementers.
6] is valid, its answer must be the value intended by the
Theresolverdecideswhatactionstotakeonbehalfofeach authoritativeserver: AnARRwiththecorrectaddressfor
querybasedonthecontentsoftheattestedandnon-attested name1, anindicationofsecuredelegationwiththeproper
caches. Table4summarizestheselogicalrules. DSforname2, indicationsofinsecuredelegationwiththe
correct child zone address for names 3 and 4, and indica-
tionsofnon-existenceofnames5and6.
4.4 ModeledAttackerCapabilities
Anotherinvariantchecksthatnokeyotherthanthecorrect
OurMurϕmodelchecksDNSSECinthepresenceofanet- TLD and authoritative zone keys become accepted in re-
workattackerpossessingallreplypacketmanipulationca- solvers attested cache. The next invariants check that the
pabilitiesshortofkeycompromise. Theattacker’sultimate localresolver’sknowledgeoftheaddressesoftheTLDand
goalistoinducetheresolvertoacceptacorruptedqueryan- authoritativeservershavenotbeenspoofed.
swer. Thisisastandardattackermodel,usedbymanypre-
viousstudiesincluding[18,20]. Thefulllistofattackerca- Thelastinvariantchecksfortheintegrityoftheattestation
pabilitiesinourfinite-statemodelissummarizedhere. Due chain. Wefeelthatitisadesirablepropertythatarecordbe
tothenatureofanon-deterministicfiniteautomaton(NFA), considered valid at the local recursive resolver for only as
allattacksinvolvinganycombinationofthecapabilitiesare longasalloftheotherrecordsthatformthisrecord’sattes-
exercised. Toprevent state-space explosioninMurϕ, only tation chain back to the trust anchor remain valid. For ex-
hostnamesrecognizedbythemodeledresolver,i.e.,name1 ample,foranARRwithownernamewww.example.com.,
throughname6,areusedbytheattackermodel. signs
the RR attestation chain is [1 “. DNSKEY” → 2 “com.
signs signs
1. Attackermayoverhearanypacketsintendedfortheau- DS+RRSIG” → 3 “com. DNSKEY” → 4 “exam-
signs signs
thoritative,TLD,orrootserver. ple.com. DS” → 5 “example.com. DNSKEY” → 6
2. Attackermayrecordanyreplypacketstotheresolver. “www.example.com. A+RRSIG”]. Inourmodel,thismaps
3. Attacker may modify any recorded reply packet and to the invariant that while any of the query answers at the
resendthemtotheresolver.However,theattackermay resolverarevalid(representing6),noneofauth DNSKEY
notcompromisecryptography,thuslimitingitspacket (5),auth DS(4),tld DNSKEY(3),ortld DS(2)shouldex-
modificationcapabilitiestothefollowing: pire,sincethiswouldbreaktheattestationchaintothetrust
(a) Attackermaymodifyanyheaderbits anchor.4.5.1 TemporalInconsistencyDiscovered tionsproposalwillbestandardizedintheRFCitself.
The attestation chain temporal integrity invariant is in fact
violated during our run of Murϕ. The DNSSEC proto- 5 DNSSECVulnerabilitiesand
col only specifies temporal constraints between TTL of a Guarantees
RR and the signature validity period of its corresponding
RRSIG;therearenoconstraintsbetweentheTTLofanRR
andthevalidityperiodofanothersignatureinitsattestation 5.1 InherentVulnerabilities
chain. Thusasignaturewithintheattestationchainmayex-
pirebeforetheRRtowhichitissupposetoattest.Thismay
OurMurϕmodelcheckingfoundseveralsignificantvulner-
cause stale data to persist in the DNS distributed database
abilitiesintheDNSSECprotocolwhichmaybeexploitable
longer than desired, which is dangerous in the case of key
byanetworkattacker. Thevulnerabilitiesaredescribedin
compromise.
thissectionandalsosummarizedinTable1.
Usingtheexampleabove, considerthecasewherethekey
of“example.com.”iscompromised,leadingtoasigned“ex-
ample.com.”DS+RRSIGthatvalidatesakeycontrolledby 5.1.1 GlueRecordRedirectionVulnerability
theattacker. IftheTTLsofRRsundertheauthorityof“ex-
ample.com.”, such as the A RR for “www.example.com.”,
Thefirstvulnerabilityoccursduetotheforgeabilityofglue
depended upon the validity of all of the signatures tracing
records used in delegations, making all delegations vul-
back to the trust anchor, this period of compromise would
nerable to redirection. Since attackers may modify un-
at least be bound by the expiration of “example.com.” DS
signedgluerecords,Murϕfoundinvariantviolationsresult-
during the routine key rollover for “example.com.”. How-
ing from the attacker changing TLD server and authorita-
ever,ifRRsfor“example.com.”dependonlyontheexpira-
tiveserveraddressesstoredinlocalrecursiveresolverstate.
tionoftheirassociatedRRSIG,thentheattackermaycreate
However, even with this server redirection, since the TLD
RRSIGswitharbitrarilylongvalidityperiods,extendingthe
and authoritative zones in our model are reached by se-
period of compromise for RRs under the authority of “ex-
cure delegations, Murϕ did not find forgery of any signed
ample.com.”indefinitely,evenpastkeyrollover.
query answers from the authoritative zone at the recursive
Similarly, this example also illustrates another undesirable resolver. SeeSection5.2fordetailsofthemodelchecking
trait of the DNSSEC protocol: the lack of support for key result. The mechanism for this protection was previously
andsignaturerevocation. Assumethatthekeycompromise describedinSection3.7,whichalsonoteshowthisredirec-
hasbeendiscoveredbytheoperatorsof“example.com”and tionvulnerabilityallowstheattackertomoreeasilyhinder
theyrolloverthe“example.com”keyasaresult. Arecur- resolverperformance.
sive resolver caching the A RR of “www.example.com.”
Gluerecordmanipulationbytheattackeralsoledtothevi-
signed with the compromised key may continue to serve
olationofinvariantscheckingtheintegrityofinsecuredel-
the RR to its users for the entire signature validity period
egationsreturnedbytheauthoritativezone. Redirectionof
set by the attackers. Instead, we suggest that the resolver
an insecure delegation, which always points to a standard
checkforkeyrevocationbyperiodicallyvalidatingthesig-
DNS child zone, is the exact mechanism of the Kaminsky
naturesforminganattestationchainagainstthecurrentzone
attack. Dataservedbytheattackingserverisacceptedand
keys.
cached at the recursive resolver without validation, expos-
Thus, we propose that resolver logic be strengthened be- ing the end-user to cache poisoning. Such an attack can
yond RFC 4033’s recommendations. The resolver cache onlybepreventedbytheadoptionofDNSSECbythechild
should specify that a RRSet may not have TTL expiration zone,whichsecuresthedelegation.
timeaftertheexpirationtimeofANYsignaturesthatform
its attestation chain, not just the RRSIG directly associ-
atedwiththeRRSet. Furthermore,theresolvershouldalso 5.1.2 Inter-operationwithDNSVulnerability
periodically validate (perhaps with a period of hours) that
the signatures forming the attestation chain of all signed Togeneralizetheconsequencesofinter-operationwithstan-
RRSet within its cache remains valid against a fresh copy dard DNS zones, we note that a DNSSEC local recursive
the zone keys. Note that in the normal case, without key- resolvercannotprovidesecureanswerstothestubresolver
compromise, this only adds network traffic to re-acquire unless the resolution process queries only DNSSEC zones
zonekeys,whichshouldbeasmallfractionoftheresolver starting at the trust anchor. An intervening standard DNS
cache,everyperiod. Wealsohopethattheserecommenda- zone requires an insecure delegation, meaning the localDNSSEC resolver will not be able to form the full attes- expirationofARRSetsandassociatedRRSIGsismisman-
tation chain required to verify the final answer from the aged. RRSIGs have a 30-day validity period according to
trustanchor. Sinceitprecludesverificationattherecursive thedefaultsettingsinBIND,andDNSSEClacksarevoca-
resolver, any DNS-DNSSEC inter-operation causes an in- tion mechanism that can hasten the expiration date. Sup-
secure, forgeable answer to be passed to the stub resolver. pose that a domain owner decides to relinquish one set of
Since users are not informed of insecure query results due IPaddressesinfavorofanotherandcreatesnewARRSets
tothecurrentabsenceofsoftwareinterfaceindicators,inter- and RRSIGs. During the period when the RRSIGs asso-
operation with DNS effectively exposes users trusting in ciatedwiththeoldARRSetarestillvalid,ifattackersgain
DNSSECresolverstoattackerexploitation. controlofanyIPaddressrelinquishedbythedomainowner,
theywillbeabletoreplayacompletelyvalidDNSSECre-
sponsepointinganARRatanattackserver.Thisattackcan
5.1.3 NSEC3Opt-outVulnerability becompletelymitigatedbydomainownersnotrelinquish-
ingIPaddressesuntiltheyarecertainallRRSIGsforRRs
Thenextclassofvulnerabilitiesresultfromtheattackerbe- pointingtotheseIPaddresseshaveexpired.
ing able to change the content of a DNSSEC reply packet
by subtracting or adding RRs. We found that the attacker 5.2 DNSSEC Guarantees from Model Checking
was able to convert an insecure delegation to a unauthen- Completion
ticated denial-of-existence and vice-versa. To understand
this, recall from Table 4 that an insecure delegation using
opt-out requires the presence of an authoritative NSEC3 After removing the invariant that checked the integrity of
record with opt-out, its associated RRSIG, and A and NS zone server addresses, the invariant that checked the in-
gluerecords,andthatanunauthenticateddenialofexistence tegrityofthedenial-of-existenceexpressedbyNSEC3with
requires an authoritative opt-out NSEC3 record and its as- opt-out,andtheinvariantthatchecktheintegrityofinsecure
sociatedRRSIG.Thenetworkattackerhasthecapabilityto delegations,ourMurϕmodelrantocompletion,exhausting
convertbetweenthesetworesponsetypessimplybyadding allpossiblenetworkattackcombinations,withoutviolating
orsubtractingthegluerecords. anotherinvariant. Thecompletionofexecutionimpliesthat
themodifiedprotocol,notcontainingopt-outNSEC3orin-
The conversion from insecure delegation to denial-of- securedelegations,containsnofurthervulnerabilitiesshort
existenceisusefulforanattackerasadenial-of-serviceat- of cryptographic compromise. This means that, when ac-
tackthatmaylingeronthelocalresolverduetoitscaching quired by the resolver using a full chain of secure delega-
of denial-of-existence responses. On the other hand, the tions,signedexistentDNSSECRRsandsignednon-opt-out
ability to insert an insecure delegation may be used by an NSEC3denials-of-existencearesafeagainstforgerybythe
attackertoinsertanyarbitraryRRwithanownernamethat networkattackerdescribedinourmodel,whichisincapable
hashesbetweenthenamesontheNSEC3RR. ofkeycompromise.
For example, an attacker may insert an A RR for
spoof.example.com using an opt-out NSEC3 with 5.3 FaultyResolverLogicVulnerabilities
owner name www.example.com and next name
mail.example.com, as long as ’spoof’ hashes between
DNSSEC security depends on correct implementation of
’www’and’mail’. Contrarytocommentsin[7]suggesting
appropriateresolverlogic. Section5.1describedDNSSEC
its insignificance, we will show that this vulnerability
vulnerabilities found even with correct resolver validation
is exploitable by experimentally carrying out a browser
logic–vulnerabilitiesinherenttotheDNSSECprotocol.To
cookie-stealingattackdetailedinSection6. Attacksofthis
demonstrate the importance of resolver logic to DNSSEC
nature may only be prevented by the domain operator of
implementation security, we will discuss some common
“example.com.” not using opt-out and including all owner
attack paths that become exploitable vulnerabilities with
namesintotheNSEC3chain.
faulty resolver logic. We begin with the attack paths and
then discuss how to prevent them with correct validation
logic.
5.1.4 MismanagedSignatureExpiration
Attackers may arbitrarily modify headers and add or sub-
Inthissub-section,weprovidemitigationadviceforavul- tract individual RRs from DNSSEC replies, opening up
nerability,firstmentionedbyBernstein[11],whichisactu- downgrade paths to DNS. For instance, an attacker that
allyanotherconsequenceofthelackofsignaturerevocation strips all RRSIG, DS, and NSEC3 RRs from a DNSSEC
in DNSSEC. The vulnerability occurs when the signature response packet will create a valid DNS packet. Also, anattackermaymodifyunsignedpacketcontentstointroduce answersindicatingsuchauthenticationviatheADbit,ifre-
inconsistent information into reply packets. For example, ceivedoverasecurechannel.
attackers may set the AD (Authenticated Data) in a reply
However, we again note that even a completely correct re-
packet containing a forged RR with an invalid RRSIG, in
solver cannot excise the inherent DNSSEC vulnerabilities
anattempttocausetheresolvertoaccepttheindicatedsuc-
listedinSection5.1.
cessofremotevalidationandforgoitsownvalidation. Fi-
nally, as previously stated, attackers may modify unsigned
RRs contained in the reply packet, such as the glue A 5.4 NSEC3SaltWeakness
and NS RRs contained within the “additional” packet sec-
tion.
Asanasidewhichwaspreviouslymentioned,inthecourse
ofstudyingtheRFC5155forthiswork,wefounditsuseof
salttobeinadequate. Thecryptographichashingofnames
5.3.1 Eliminating Vulnerabilities By Attested Cache
inNSEC3takesasaltasaparameter,ostensiblytoincrease
ResolverDesign
thesizeofanydictionariesthatmaybecomputed.However,
RFC5155specifiesthatthevalueofthesaltispubliclyac-
The resolver must thus be scrupulously designed to min- cessibleviaDNSSECRRlookup. Thus, anyattackermay
imize susceptibility to attack by only trusting the validly obtain the salt to use as input into its dictionary computa-
signed content of reply packets. A resolver must not ac- tion, effectively negating the required increasing in dictio-
cept valid DNS responses where DNSSEC responses are narysize. Thus,weurgereadersnottoconsidertheNSEC3
expected, to eliminate downgrade attacks. Resolver logic saltasausefulsecurityenhancement.
must also not trust header fields. As a consequence, each
resolver must perform its own verification of RR data in
6 ImplementedAttackExperiment
reply packets and not rely on upstream servers to indicate
validationandquerysuccess/failure.
In effect, to answer user RR queries for a particular zone, Inthissection,wewilldescribehowweutilizedtheNSEC3
the local recursive resolver must build an attested cache opt-out vulnerability described in the previous section and
containingbothRRsauthoritativetothatzoneandafullat- also insecure delegations to insert forged names into an
testationchainfromthetrustanchortothezone,usingonly experimental DNSSEC zone and steal browser-cookies.
validlysignedRRscontainedinreplypackets.Gluerecords While we recognize that a man-in-the-middle network at-
may only be used as guides for which DNSSEC server to tacker may steal browser-cookies via means other than
query next in a delegation and cannot be accepted into the DNSSEC, we exploit DNSSEC for cookie theft primar-
attested cache. (The resolver logic we outlined in Section ily as a convenient demonstration that our observed pro-
4.3.2 is an instance of this attested cache implementation tocol vulnerabilities allow an attacker to successfully sub-
style.) vertaDNSSECdomainandfoolexistingstubresolverand
end-user software, raising security implications discussed
Theimportanceofproperlytreatingtheunsignedrecordsin inSection6.3.
a reply was anecdotally demonstrated during the time that
For our experiment, we set up a server running a BIND
thispaperwasbeingwritten,asavulnerabilitywasdiscov-
9.6 instance for the hypothetical authoritative DNSSEC
eredwhereBINDincorrectlyaddedunsignedRRsfromthe
zone “bank.com.”, containing an A record for the name
“additional”sectionsofDNSSECresponsestoitscache[9].
“www.bank.com”, an opt-out NSEC3 that covers the
The vulnerability was deemed a severe risk for DNSSEC
name “attack1.bank.com”, and an insecure delegation to
usersofBIND.
a zone “attack2.bank.com”, so named for illustration pur-
Resolversmustonlysecurelyanswertheuser’squerywhen poses. This server also hosts a legitimate web page at
all of the information necessary to answer queried RR “www.bank.com”, which sets secure and insecure cook-
with integrity guarantee is contained within this attested ies with domain equal to “bank.com”, as well as a third-
cache,forexamplewhenamatchingRRwithvalidRRSIG partywebpagecontaining<img>tagslinkedtothezones
alongwithitsfullattestationchainexistsorwhenthenon- “attack1.bank.com” and “attack2.bank.com”. We also set
existence of the queried RR can be proven using NSEC3 up a user machine running web browsers, the OS stub re-
RRswithvalidRRSIGsandfullattestationchains. Secure solver, and another BIND instance operating as the recur-
answers provided strictly from resolver attested cache are sive DNSSEC resolver, that communicates with the stub
guaranteedagainstforgery,shortofattackercompromiseof resolver over the loopback interface. Finally, we set up
zonekeys,andendusersmaytrusttheintegrityofresolver an attacker machine which can overhear and inject DNSLegitimateReply ForgedReply
Exploit
SignedRRs UnsignedGlueRRs SignedRRs UnsignedGlueRRs
NSEC3 Opt-outNSEC3covering Opt-outNSEC3covering “attack1.bank.com.
Opt-out “attack1.bank.com” “attack1.bank.com” NS ns.atk.com”
“ns.atk.comA5.6.7.8”
Insecure “attack2.bank.com “attack2.bank.com
Delega- NS ns.a2.bank.com” NS ns.a2.bank.com”
tion “ns.a2.bank.com A “ns.a2.bank.com A
1.2.3.4” 5.6.7.8”
Table4.Forgedreplypacketsfrom“bank.com."zoneusedincookietheftattack. 5.6.7.8isanIP-addressowned
byattackers.
packet traffic between the recursive resolver and the zone of “attack[12].bank.com” to create a birthday-problem in-
server. Whilethisscenarioplacestheexperimentalattacker stancethatmatchesTXID.
as a man-in-the-middle, the only information used by the
In our experiment, the name-insertion attack succeeds
attackerfromtheoverheardDNSSECrequestpacketisthe
whenever the forged reply packet arrives at the local re-
TXID.Thus,itisalsopossibletomountthisattackasavia
solveraheadofthelegitimatereply,astheTXIDiscopied
Kaminsky-styleout-of-pathmeans.
fromrequesttospoofedresponse.Inbothcases,aninsecure
delegationiscreatedthatcausestheresolvertoquerytheat-
tackingserverandaccepttheforged“attack[12].bank.com”
6.1 AttackingNameInsertion
ARRinitsreply. ThisforgedARRalsopoisonsthecache
ofthelocalserver,sothatsubsequentDNSSECqueriesfor
“attack[12].bank.com”byusersofthelocalresolverreturn
In the first exploit step, our attacker attempts to poison
the attack site address without requiring more injected at-
the local recursive DNSSEC resolver by inserting an A
tackpackets.
recordpointedattheattackerserverwithownernamecon-
taining the suffix “bank.com”. This may be done us-
ing both the the opt-out NSEC3 RR (creating an A RR
6.2 CookieTheft
for “attack1.bank.com”) and the insecure delegation (“at-
tack2.bank.com”). In either case, the attacker must first
get the user to initiate recursive resolution for the attack- To steal user cookies once the false names have been in-
ing A RR on the local DNSSEC resolver. In our exper- serted on the local DNSSEC resolver, the attacker utilizes
iment, this was initiated by two means: the user actually browserpolicygoverningthecookie“domain”setting. The
typingthenameintothebrowseraddressbar, andtheuser policy specifies that non-secure cookies be sent in all http
accessing a third-party page with an image hosted at “at- requestsmadetositeswhicharesub-domainsofthecook-
tack[12].bank.com”.Inthewildtheresolutionmaybeiniti- ies’ “domain” setting. In our experiment, the attack web
atedviabyphishingemail,<img>tagsonthird-partysites, site at “http://attack[12].bank.com”, hosted on the attack
or other means. Then, while the local recursive resolver server, receives in http requests all legitimate non-secure
queriesthelegitimate“bank.com.”DNSSECserver,ourat- cookiessetwithdomainequalto“bank.com”. Thecoarse-
tacking server sends a forged DNSSEC reply packet with grain setting for cookie domain required for this attack re-
TXID matching the query to the local resolver, in a race flects a common practice. For example, all of the cook-
with the legitimate reply. Table 4 summarizes the forged ies for PayPal are set with domain equal to “paypal.com”,
replypackets. evenwhentheactualwebpagesareservedfromtheaddress
“www.paypal.com”.
Table4alsodemonstrateshowourattackisfeasibleforan
out-of-path attacker. The signed RRs used in the forged AfterthenameinsertiononthelocalDNSSECresolver,the
reply are public and available to the attacker by simply cookie theft succeeds in our experiment any time the user
querying the “bank.com” DNSSEC zone. Thus, the only has active cookies set by “http://www.bank.com” and sub-
“secret” information copied from request to forged reply sequentlymakesahttprequestforanyobject(images,web
is the TXID. The attacker needs only to guess the TXID pages, etc.) in the “attack[12].bank.com” domain. Even
to execute this attack without man-in-the-middle capabili- ifthenameinsertionhasnotyetoccurred, thehttprequest
ties. Thisimpliesanout-of-pathattackermayalsomounta to “http://attack[12].bank.com” itself generates a predicate
Kaminsky-styleattackthatrequestsmanybogussub-names DNSSEClookupthatcreatesanopportunityforthespoofed0. User visits www.bank.com, "bank.com." DNSSEC zone
Cookies set for "bank.com"
2. Query
"attack1.bank.com A?"
1. User visits www.thirdparty.com,
containing <img> link to 4b. Legit reply
attack1.bank.com containing covering
opt-out NSEC3
3. Attacker
same computer
overhears query 4a. Forged reply
containing insecure
4a attacker delegation
5
browser + recursive 6 5. Query "attack1.bank.com A?"
stub resolver resolver
6. Reply with A RR pointed at
7. http request to attack1.bank.com attacker
containing "bank.com" cookies
Figure5.IllustrationofNSEC3CookieTheftAttack. Packet4awinstheraceagainstpacket4b.
name insertion. Both the name insertion and the cookie via Kaminsky-style out-of-path means. Illegitimate name
theft occur automatically after the single originating user insertionmaybeusedforcookietheft,aswehavedemon-
action of visiting the attack site or a third-party site link- strated. Pharming attacks, which are a form of phishing
ingtoattacksite. Thecookietheftisalsoverydifficultfor whereattackerpageisshownatanaddressthatlegitimately
the user to detect, since the stolen payload is carried by in belongstothevictimdomain,arealsomadepossiblebythis
a request to the attacker, allowing the attacker to return a vulnerability.
visuallybenignobjectormakenoresponseatall. Figure5
illustratestheentireattackusingNSEC3opt-out.
7 SecurityAdviceandConclusion
In order to steal secure cookies, the user must open
“https://attack[12].bank.com”, as browser policy will only
sendsecurecookiesoversecurehttps.Thismakestheattack DNSSEC is a complex system containing many options,
slightly more difficult, since the attacker should not pos- someofwhichhavebeendemonstratedinthispapertolead
sessCertificateAuthority-validatedcredentialsforencrypt- to security vulnerabilities. In addition, DNSSEC is oper-
ing the https connection. In our experiment this limitation ated by many participants, such as domain administrators,
wasbypassedbytheuserclickingthroughabrowserwarn- software implementers, and ISPs. To summarize, in order
ingdialogstatingincorrectcredentials,forOperaandolder tobefullysecurefromauthoritativezone(“example.com.”)
version of Firefox and Internet Explorer. The attacker in to end-user while still inter-operating with standard DNS,
thewildmayalsouseoneoftheCA-spoofingmethodsde- DNSSECrequires:
tailedduringBlackHatUSA2009[19,15],whereattackers
1. DNSSECadoptionbyauthoritativezone
obtains CA-validated credentials for a domain name con-
2. Authoritative zone to not use NSEC3 opt-out and to
taininganullcharacter,suchas’bank.com\0.attacker.com’,
havenoinsecuredelegations
thatbecomevalidforthedomainnameexpressedbeforethe
3. Allancestorzones(rootandTLD)toadoptDNSSEC
nullcharacterduetofaultybrowserimplementation. Using
and guarantee secure delegations at every step from
these certificates, stealing secure cookies becomes as sim-
trustanchorauthoritativezone
pleasstealingnon-secureones.
4. DNSSECadoptionbylocalrecursiveresolver
5. Securechannelinthelast-hopbetweenstubandrecur-
6.3 VulnerabilityImplications siveresolvers
Inaddition,tosupportincrementaladoption,DNSSECalso
requires indicators of DNS lookup security to be imple-
We have experimentally demonstrated how a network at-
mentedinend-userinterfaces.
tacker can exploit NSEC3 opt-out and also insecure dele-
gationstoinsertanillegitimatenameintoaDNSSECzone. It is clear that many parts of the DNS ecosystem need to
We have also shown the feasibility of such name-insertion participateinDNSSECinorderforanyonetobenefit,thusdampeninganyenthusiasmforincrementalDNSSECearly- – Build an attested cache only containing signed
adoption. We hope the planned DNSSEC deployment of RRs with full attestation chain to the trust an-
therootandTLDzonesgeneratessufficientmomentumto- chor. Answers to user queries are only secure
wardsadoptingend-to-endDNSsecurity. when formed entirely from contents of this at-
testedcache.
WealsoobservethatseveraloftheDNSSECsecurityloop-
– Use glue records only as indications of delega-
holes,suchaszoneenumerationandNSEC3opt-out,result
tionandpointerstochildzoneserveraddress,but
fromthedesiretosupportoff-linesigningofauthenticated
notasdatathatcanentertheattestedcache.
denial-of-existence. We believe that a better solution for
authenticated denial-of-existence, whether through on-line • For ISPs, local recursive resolvers must request all
signingofresponsesorabettercryptographically-basedoff- DNSSEC RRs to be included in packets to prove RR
linescheme, wouldleadtoamoresecureDNSSECproto- integrity at the closest recursive resolver to the end
col. user. Asecurechannelbetweenthisrecursiveresolver
andtheenduser’sstubresolverisrequiredtoguaran-
To conclude this study of DNSSEC security, we offer the
teeDNSSECintegrityallthewaytotheend-user.
followingadvice,alsosummarizedinTable1,tothevarious
operatorsandusersofDNSSECtoeliminateexploitability • Forendusersoftwarevendors,especiallybrowsers,we
ofthevulnerabilitiesuncoveredinthisstudy. urge the development of user-interface elements indi-
catingthesecurity/insecurityofaDNSSEClookup.
• ForadministratorsrunninganDNSSECserverauthor-
itative over a domain such as ’bank.com.’, we advise We believe the adoption of the advice laid out in this sec-
that all NSEC3 records NOT use opt-out. We also tion will lead to the best possible security practices for
advise that any insecure delegations from this zone DNSSEC.
be made secure with the adoption of DNSSEC by
the delegation-target zone, to eliminate mechanisms
for falsified name insertion and DNS-DNSSEC inter- References
operation.
To eliminate replay attacks, domain owners should
[1] RFC 2535. Domain Name System Security Exten-
not relinquish IP addresses until they are certain all
sions.
RRSIGs for RRs pointing to these IP addresses have
expired. [2] RFC2845. SecretKeyTransactionAuthenticationfor
DNS(TSIG).
• For website designers, we urge a fine-grained cookie
“domain” setting. Coarse-grained cookie “domain” [3] RFC2931. DNSRequestandTransactionSignatures
setting, as we have shown, can be utilized as an av- (SIG(0)s).
enueforcookietheftviaDNSnameinsertion. Inour
[4] RFC 4033. DNS Security Introduction and Require-
experiment, ifthecookiedomainsweresettoafiner-
ments.
grain that covers only the web pages that actually re-
quire these cookies, the attack scenario in Section 6 [5] RFC 4034. Resource Records for the DNS Security
wouldhavebeenpreventedunderDNSSEC,sinceitis Extensions.
impossibletoforgerecordsthatprependasubdomain
toanexistentnamesuchas“www.bank.com”. [6] RFC4035. ProtocolModificationsfortheDNSSecu-
rityExtensions.
• For DNSSEC software implementers, we emphasize
theimportance ofresolversoftware logictothe secu- [7] RFC5155.DNSSecurity(DNSSEC)HashedAuthen-
rityofDNSSEC.Ourcollectedresolversoftwarerec- ticatedDenialofExistence.
ommendationsare:
[8] BINDSecurityAdvisory.DNSCachePoisoningIssue
– BoundRRTTLlifetimeonthesignaturevalidity (’Kaminskybug’). https://www.isc.org/sw/
periodofallrecordsformingtheattestationchain bind/forgery-resilience.php,07/08/2008.
tothetrustanchor,notjustthesingleRRSIGcov-
[9] BIND Security Advisory. BIND 9 Cache Update
eringtheRR.
from Additional Section. https://www.isc.
– Do not trust the header bits of DNSSEC reply
org/node/504,11/23/09.
packets. As a consequence, all resolvers must
validate the content of DNSSEC reply packets [10] WikipediaArticle. BirthdayProblem. http://en.
themselves. wikipedia.org/wiki/Birthday_problem.[11] Daniel Bernstein. Breaking DNSSEC. 3rd Usenix
WorkshoponOffensiveTechnologies,August2009.
[12] Microsoft Security Bulletin. Vulnerabili-
ties in DNS Could Allow Spoofing (953230).
http://www.microsoft.com/technet/
security/Bulletin/ms08-037.mspx,
07/08/2008.
[13] David Dill. The Murϕ Verification System. Com-
puter Aided Verification, 8th International Confer-
ence,1996.
[14] DanKaminsky. It’stheEndoftheCacheasWeKnow
It. BlackHatUSA,Auguest2008.
[15] Dan Kaminsky. Black Ops of PKI. BlackHat USA,
August2009.
[16] Dan Kaminsky. DNS 2008 and the New (old) Na-
tureofCriticalInfrastructure. BlackHatDC,February
2009.
[17] Robert Lemos. Poisoned DNS Servers Pop Up
as ISPs Patch. http://www.securityfocus.
com/news/11529.
[18] Gavin Lowe. Breaking and Fixing the Needham-
Schroeder Public-Key Protocol using CSP and FDR.
In 2nd International Workshop on Tools and Algo-
rithmsfortheConstructionsandAnalysisofSystems,
1996.
[19] MoxieMarlinspike. MoreTricksForDefeatingSSL.
BlackHatUSA,August2009.
[20] JohnC.Mitchell,VitalyShmatikov,andUlrichStern.
Finite-StateAnalysisofSSL3.0. InSeventhUSENIX
SecuritySymposium,pages201–216,1998.
[21] Erica Naone. The Flaw at the Heart of the Internet.
TechnologyReview,November/December2008.