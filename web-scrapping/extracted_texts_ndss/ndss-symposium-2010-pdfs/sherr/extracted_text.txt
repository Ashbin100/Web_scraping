A3: An Extensible Platform for Application-Aware Anonymity
MicahSherr∗ AndrewMao† WilliamR.Marczak‡
WenchaoZhou∗ BoonThauLoo∗ MattBlaze∗
∗UniversityofPennsylvania †HarvardUniversity ‡UniversityofCalifornia,Berkeley
{msherr,wenchaoz,boonloo,blaze}@cis.upenn.edu, mao@seas.harvard.edu, wrm@berkeley.edu
Abstract Despitetheproliferationofproposedtechniques,we
note that no one-size-fits-all anonymity system exists.
Thispaperpresentsthedesignandimplementationof The appropriate relay selection and path instantiation
Application-AwareAnonymity(A3),anextensibleplat- strategycanvaryaccordingtoapplicationrequirements,
formfordeployinganonymity-basedservicesontheIn- performance characteristics, and additional constraints
ternet. A3 allowsapplicationstotailortheiranonymity imposed by the underlying network. For example, in
propertiesandperformancecharacteristicsaccordingto thecontextofrelayselection,ananonymousvideocon-
specificcommunicationrequirements. ferencing system may be willing to achieve weaker
To support flexible path construction, A3 exposes a anonymity in exchange for a path that meets its high-
declarativelanguage(A3LOG)thatenablesapplications bandwidth, low-latency performance demands. In con-
to compactly specify path selection and instantiation trast, an anonymous email system may require very
policies executed by a declarative networking engine. strong anonymity guarantees while imposing no con-
We demonstrate that our declarative language is suffi- straintsonbandwidthorlatency.
ciently expressive to encode novel multi-metric perfor- Similarly,severalpathinstantiationapproachesexist.
mance constraints as well as existing relay selection Onion Routing [30] and Tor’s telescoping scheme [9]
algorithms employed by Tor and other anonymity sys- build paths by recursively encrypting and shipping key
tems,usingonlyafewlinesofconcisecode. Weexper- material to their constituent nodes. The former con-
imentally evaluate the A3 system using a combination structsanonymouspathsthathaveconstant lengthover
of trace-driven simulations and deployment on Planet- their lifetime, while the latter adds the ability to ex-
Lab. OurexperimentalresultsdemonstratethatA3 can tend existing anonymous paths. On the other hand, the
flexibly support a wide range of path selection and in- Crowds [31] approach relies on the network to make
stantiationstrategiesatlowperformanceoverhead. routing decisions on behalf of the source. Crowds is
best suited for an environment where source routing is
notavailableandintermediaterelaynodescanbetrusted
1 Introduction withtheidentityofthereceiver.
Inthepastdecade,therehasbeenintenseresearch[9, In this paper, we present the Application-Aware
31, 30, 13, 39, 44, 32, 23, 38, 4, 10, 36, 40, 24] into Anonymity (A3) framework: an anonymity system that
designing systems that enable parties to communicate enables tradeoffs between anonymity and performance
anonymously in the presence of eavesdroppers. Typ- throughhighlycustomizablerelayselectionandpathin-
ically, these systems achieve anonymity by sending a stantiation strategies. A3 aims to support a wide range
messagethroughapathofrelaysbeforedeliveringitto of anonymity-based networked services with different
its final destination. Broadly speaking, recent innova- application-specificconstraints. Applicationscanlever-
tions have improved relay selection [8, 40, 24, 36]) – ageA3 inapolicy-drivenfashionbyspecifyingpathin-
choosingapathofrelaystoprovidehighanonymityand stantiationandrelayselectiontechniquesthatmeettheir
good performance – and path instantiation – establish- performanceandanonymityrequirements.
ing necessary state at each relay to enable anonymous OneimportantelementofA3istheuseofdeclarative
communication. networking [20, 19], a declarative logic-based frame-work that can efficiently execute a high-level protocol controloverthemannerinwhichtheirmessagesarere-
specification using orders of magnitude less code than layed, as forwarding can be based on application layer
animperativeimplementation. A3 utilizesadeclarative information.Whencombinedwithsource-routing,these
networkingsystemasapolicyengineforspecifyingand networks allow applications the ability to select paths
executingrelayselectionandpathinstantiationpolicies. that meet their specific requirements (e.g. RON [2] for
Our proposed A3LOG declarative language extends robustness).
previous declarative networking languages with con-
Overlay networks may also enable anonymous rout-
structs that are added specifically to enable the speci-
ing on the Internet. For example, Tor [9], Onion
fication of anonymity systems. For example, we have
Routing [30], Crowds [31], Tarzan [13], Hordes [39],
integrated the ability to specify user-defined crypto-
JAP[10],andMorphMix[32](amongmanyothers)uti-
graphic primitives for secure communication. We have
lizeapplication-layeroverlayrouting. Theseanonymity
also adapted recently proposed extensions for declara-
systemsexploittwofeaturesofoverlaynetworks:(i)the
tive network composition [22] to enable us to develop
abilitytoobfuscatetheaddressesoftheinitiator(sender)
reusablecomponentsidealforspecifyingandcustomiz-
and responder (receiver) while still providing reliable
inganonymousrouting. Wedemonstratehowtheseex-
message delivery; and (ii) in some instances, the abil-
tensionsenabletheconciseexpressionofrelayselection
ity to produce anonymous paths that achieve some de-
andpathinstantiationalgorithms.
sirable property (usually high bandwidth) [9, 13, 40].
A3 is sufficiently extensible to support both tradi-
This paper is principally concerned with the latter as-
tional node-based as well as recently proposed link-
pect: Weprovidemechanismsthatallowanonymitysys-
based [36, 35] relay selection strategies. Node-based
temstoproducedesirablepaths.
strategies select relays with desirable node properties
(usuallybandwidth), whereaslink-basedstrategiesbias Alargevolumeofexistingliteratureexaminesmeth-
relayselectioninfavoroflinkcharacteristicssuchasla- odsforgeneratinghighperformanceanonymouspaths.
tency,AShopcount,orjitter. Wedemonstratethatboth Tor [9, 8] attempts to achieve high bandwidth paths by
link- and node-based relay selection strategies, includ- imposing a probability distribution over the set of po-
ing those used by Tor and other systems, can be con- tential anonymous relays. The probability of a relay
ciselyrepresentedinafewlinesofA3LOGcode.Wealso being selected is proportional to its advertised band-
show how A3LOG compactly encodes the path instanti- width. Murdoch and Watson have demonstrated that
ation algorithms used by these systems. By providing such a strategy delivers both performance and strong
a flexible framework for realizing both relay selection anonymity [24]. Snader and Borisov offer refinements
andpathinstantiationpolicies,A3 enablestherapidde- to Tor’s strategy, allowing an initiator to tune the per-
velopment,deployment,andtestingofbothexistingand formance (quantified in their work as bandwidth) of its
novelanonymityprotocols. anonymous paths [40] by defining the degree to which
We experimentally evaluate the A3 system through relay selection is biased in favor of bandwidth. At
bothtrace-drivensimulationsandadeploymentonPlan- one extreme, initiators consistently choose relays with
etLab. Our results demonstrate that the A3 system can the highest bandwidth, achieving very high bandwidth
flexibly support a wide range of path selection and in- paths at the expense of allowing a small subset of re-
stantiationstrategiesatlowperformanceoverhead. lays to view a significantly disproportionate amount of
anonymous traffic [3, 26, 36]. At the other extreme,
initiators may opt to favor anonymity while disregard-
2 RelatedWork
ing performance by selecting relays uniformly at ran-
To support diverse applications, the Internet uses a dom. Given the bandwidth requirements of the partic-
simple routing scheme in which packets are forwarded ular application, Snader’s and Borisov’s technique en-
onabest-effortbasistowardstheirintendeddestinations. ables the sender to select a point in this anonymity-
The end-to-end (e2e) performance of Internet paths is vs-performance spectrum. Similarly, we previously in-
dictated by policies enforced by routers along the path troduced tunable link-based routing [36], where initia-
from source to sink. With the exception of fragmented tors can weigh relay selection based on the expected
portionsoftheInternetthatsupportIPquality-of-service e2e cost computed using link performance indicators
features,applicationsusuallyhavelittlecontroloverthe such as latency, AS hop count, and jitter. We showed
performanceaspectsoftheirnetworkconnections. thatbiasingselectiononlinkcharacteristicsofferssome
AnoverlaynetworkbuiltontopoftheInternetrout- anonymity benefits over node-based (i.e., bandwidth-
ing infrastructure can allow users to exercise greater weighted) techniques, since link-based routing reduces“hotspotnodes”inthenetworkthatappearattractiveto code[19]1. Whencompiledandexecuted,thesedeclar-
allinitiators. ativespecificationsperformefficientlyrelativetoimper-
This is the first paper of which we are aware that ativeimplementations.
addresses the related problem of extensible anonymous
routing: given the variety of relay selection algorithms 3.1 Datalog
alongwiththeirindividualperformanceandanonymity
properties,howshouldapplicationsproduceanonymous
Our A3LOG declarative language is primarily based
onDatalog[29]. ADatalogprogramconsistsofasetof
pathsthatmeettheirspecificneeds?Ratherthanprovid-
inghardcodedrelayselectionpolicies,ourproposedA3 possibly recursive declarative queries, also referred to
as rules. Each rule has the form q :- p1, p2, ...,
anonymityarchitectureallowsapplicationstoloadrout-
pn., which can be read informally as “p1 and p2 and
ing policies at runtime. We show in Section 5 that ex-
... and pn implies q”. Here, q is the head of the rule
isting anonymous routing techniques – including those
andp1, p2, ..., pnisalistofliteralsthatconstitutes
described above – may be compactly represented in a
thebodyoftherule. Literalsareeitherpredicates(also
fewlinesofdeclarativecode.Thisallowsapplicationsto
calledrelations)withattributes(variablesorconstants)
tunethedegreeofanonymity-vs-performance,andtose-
or boolean expressions that involve function symbols
lect(andcombine)differentrelayselectiontechniques.
Thisworkextendsourearlierproposal[38]inwhich
(including arithmetic) applied to attributes. A3LOG ex-
tendsDatalogbyallowingthespecificationofruleswith
we introduce the concept of using coordinate embed-
multiple head literals, i.e. rules of the form q1, q2,
dingsystems[6,5]–decentralizedalgorithmsthateffi-
..., qm :- p1, p2, ..., pn. A rule of this form is
cientlymappairwisenetworkdistancesintovirtualcoor-
short-handforthesetofmruleswheretheith ruleisof
dinates–toproduceanonymouspathswithlowlatency.
theformqi :- p1, p2, ..., pn. ADatalogprogram
In contrast to our proposal, this paper presents a com-
plete implementation of the A3 anonymity system and issaidtoberecursiveifacycleexiststhroughanypred-
icate – such as when a predicate that appears once in a
describestechniquesforcombiningmultiplesourcesof
rule’sbodyappearsintheheadofthesamerule. Are-
information (including coordinate embedding systems)
cursiveDatalogprogramiscontinuouslyexecuteduntil
toformhighperformancepaths.Thispaperalsoextends
afixpointisreached,i.e. nonewfactsarederived.
ourrecentworkinwhichweintroducelink-basedrout-
ing [36]. In contrast to that work, the A3 anonymity The order in which the rules are presented in a pro-
gram is semantically immaterial; likewise, the order
infrastructure proposed in this paper combines support
predicates appear in a rule is not semantically mean-
forbothnode-andlink-basedrelayselectionstrategies.
ingful. Conventionally, thenamesofpredicates, func-
Additionally,thisworkintroducestheuseofdeclarative
tionsymbols,andconstantsbeginwithalowercaselet-
networking [20] to both represent relay selection poli-
ter, while variable names begin with an uppercase let-
ciesaswellasinstantiateanonymouspaths.
ter. Function calls are prepended by f. An aggregate
construct,whichdefinesanoperationonmultipleresults
3 BackgroundonDeclarativeNetworking
from the rule body, is represented as a special function
Given our use of declarative networking in A3, we in the rule head with its attribute variables enclosed in
begin by providing some background. The high level angle brackets (<>). To support anonymous relay se-
goalofdeclarativenetworkingistoenabletheconstruc- lection and path instantiation, A3LOG enhances Data-
tionofextensiblearchitecturesthatachieveagoodbal- log with cryptographic functions, random and ranking
anceofflexibility, performance, andsafety. Onespeci- aggregates, and composability. We defer discussion of
fiesadeclarativenetworkingprotocolasasetofqueries theseadditionstoSections5-6.
in a high-level language. Because such a specification
expresseswhataprogramachievesasopposedtohowit 3.2 FirstExample: AllPairsReachability
operates(thelatterstyleisreferredtoasimperativepro-
We illustrate A3LOG using a simple example of two
gramming), declarative queries are a natural and com-
rulesthatcomputeallpairsofreachablenodesinanet-
pactwaytoimplementavarietyofapplications–espe-
work.
ciallyroutingprotocolsandoverlaynetworks,whichof-
tenmaybeexpressedasasetofrecursivequeries. For r1 reachable(S,N) :- neighbor(S,N).
example,path-vectoranddistance-vectorroutingproto- r2 reachable(@N,D) :- neighbor(S,N), reachable(S,D).
cols can be expressed in only a few lines of code [20], 1Incontrast,MIT’simperativeimplementationofChordisseveral
andtheChord[41]distributedhashtablein47linesof ordersofmagnitudelarger.Rules r1 and r2 specify a distributed transitive clo- Keys), where Relation is the name of the relation,
surecomputationthatderivesallpairsofnodesthatcan Timeout is the maximum time in seconds that any
reacheachotherthroughpathsofneighbors. Therules fact in the relation may persist, Maxentries is the
takeasinputalocalneighbortablestoredateachnode maximum facts allowed in a relation before facts are
S(eachfactintheneighbor(S,N)relationdenotesthat ejected according to a FIFO policy, and Keys specifies
N is a neighbor of S). Rule r1 is a regular Datalog rule the relation’s primary keys. If a fact is derived with
(i.e. executed locally at a node to derive local facts); the same primary keys as an existing fact in the same
itcomputesallpairsofnodesreachablewithinasingle relation,thenewfactreplacestheoldone,andtheTTL
hop from all input neighbor links. Rule r2 expresses isrestored.
that “if N is the neighbor of S, and S can reach D, then If a relation has no corresponding materialize di-
N can reach D.” The output of interest is the set of all rective,itistreatedasaneventpredicatewithzerolife-
reachable(S,D) facts, representing reachable pairs of time. Eventpredicates–whosenamesareprefixedwith
nodes from S to D. By modifying this simple example, an“e”–areusedtodenotetransienttablesusedasinput
wecanconstructmorecomplexroutingprotocols,such torules.
asthedistancevectorandpathvectorroutingprotocols.
Rule r2 introduces the location specifier – the argu- 4 A3 DesignGoalsandArchitecture
ment prefixed with the @ symbol – which denotes the
location of each fact derived by the rule head. In rule A3 is a flexible and extensible anonymity system in
r2,allderivedreachable(N,D)factsareexportedbased which protocol designers publish their particular relay
ontheaddressencodedintheirfirstattribute,(@N).This selection and path instantiation algorithms along with
meansthattheexecutionofruler2resultsineachnode a description of their corresponding performance and
propagatingitsreachabilityinformationtoitsneighbors anonymity tradeoffs. In contrast to existing anonymity
until a distributed fixpoint (i.e. no new facts being de- systems in which an immutable relay selection algo-
rived)isreached. rithm is hardcoded into the anonymity service, A3 al-
A3LOG queries are compiled and executed either lo- lows the sender to provide a relay selection policy that
cally – such as a regular Datalog rule like r1 – or in a precisely specifies the manner in which relays are cho-
distributedfashion,asinr2. InA3,initiatorsspecifyre- sen for its anonymous paths. The A3LOG policy lan-
lay selection policies using local rules (Section 5), and guage(Section5)enablestheapplicationtonotonlyin-
pathinstantiationusingdistributedrules(infact,aseries telligently tune relay selection in favor of performance
ofdistributedrecursivequeriesasweshowinSection6). or anonymity [40, 36], it also allows the application to
A3LOG shares a similar execution model with the easily define its individual characterization of perfor-
Click modular router [18], which consists of elements mance in terms of bandwidth, latency, loss, jitter, etc.,
that are connected together to implement a variety of or some combination of the above. In addition to sup-
network and flow control components. In the case of portingflexiblerelayselection,A3 alsopermitsthecus-
A3LOG,theseelementsincludedatabaseoperators(such tomizationofpathinstantiationpolicies(Section6).
as joins, aggregation, selections, and projections) that A3’s use of declarative networking provides the ca-
aredirectlygeneratedfromqueries. Reference[19]pro- pabilityforapplicationstorapidlycustomizeandrefine
vides more details on the compilation process and ex- the policiesthat bestmeet theirapplication constraints.
ecution model used in declarative networking that A3 However, our system does not preclude similar tuning
adopts. outside the use of declarative languages. A user of A3
who is not familiar with declarative policy languages
3.3 MaterializedSoft-stateTablesandEvents
can,forexample,simplydownloadandinstallanA3LOG
policythatproduceslowlatencyandlowjitterpathsfor
Declarativenetworkingincorporatesasoft-statestor- his VoIP application, while using a different policy to
agemodel,whereeachrelationhasanexplicit“timeto deliverhighdownstreamthroughputforanonymousweb
live”(TTL)orlifetime. Allfactsintherelationmustbe browsing.
periodically updated before their TTL expires, or they Since the anonymity offered by an anonymous path
aredeleted. depends in no small part on the mechanisms for relay
A3LOG supports soft-state through the selection [24, 36, 26] and path instantiation, policies
materialize [19] directive, which specifies the TTL shouldbeusedwithextremecautionuntiltheirsecurity
of each relation. A materialize directive has the form: properties can be fully understood. A thorough review
materialize(Relation, Timeout, Maxentries, oftheperformanceandanonymitypropertiesofvariousrelay selection and path instantiation algorithms is out- in the Local Directory Cache. Our current implemen-
side the scope of this paper. Our goal in this paper is tation includes adapters for the Vivaldi [6] embedded
to provide a flexible architecture for developing, test- coordinate system (described below) and CoMon [27],
ing, and studying path strategies and implementations althoughotherscanbeeasilyconstructed.
(thoughA3constitutesaveryusefultoolforconducting
securityevaluations).
Network Coordinate Information Providers Tradi-
tional anonymous relay selection algorithms (most no-
System Overview. An application, or a proxy acting tablyTor[9],andtherefinementproposedbySnaderand
on the application’s behalf, provides relay and path in- Borisov [40]) bias selection in favor of relays that ad-
stantiationpoliciesthatreflecttheapplication’scommu- vertisehighbandwidths. However,inadditiontoband-
nication requirements. Figure 1 shows the architecture width, anapplicationmayalsopreferpathsthatexhibit
oftheA3 clientrunningontheinitiator’shost. TheRe- low latency. Unlike bandwidth, latency is not a node
lay Selection Engine interprets the initiator’s relay se- characteristic that can be associated with an individual
lectionpolicyandappliesthatpolicytoproduce(butnot relay. Rather, latency is a link characteristic that has
instantiate)ananonymouspathconsistingofrelaysfrom meaningonlywhendefinedintermsofaconnectionbe-
the Local Directory Cache. To populate the cache, the tweenapairofrelays.
A3 instance periodically contacts a Directory Server to Giventhatthereare(cid:0)N(cid:1) linksinanetworkcomposed
2
ascertain membership information – that is, a listing of of N relays, maintaining link characteristics for all re-
availablerelays–and,optionally,oneormoreInforma- laysintheanonymitynetworkisinfeasible. Oneprac-
tion Providers. Information Providers are data aggre- tical solution to succinctly capture pairwise link laten-
gating services that report performance characteristics ciesisviatheuseofvirtualcoordinateembeddingsys-
of relays (e.g., bandwidth) and links (e.g., the latency tems (also called network coordinate systems). These
between two relays). The Relay Selection Engine uses distributed algorithms enable the pairwise latencies be-
cached data to generate paths that conform to the pro- tweenallparticipatingrelaystobeestimatedtohighac-
videdrelayselectionpolicy. curacywithlowoverhead. Networkcoordinatesystems,
OncetheRelaySelectionEngineproducesapath,the such as Vivaldi [6], PIC [5], NPS [25], and Big Bang
Forwarding Engine instantiates that path according to Simulation[34]mapeachrelaytomultidimensionalco-
the provided path instantiation policy. After path es- ordinatessuchthattheEuclideandistancebetweenany
tablishment, a Proxy Service on the local machine in- two relays’ coordinates corresponds to the latency be-
tercepts the application’s traffic and relays it through tween the pair. By representing pairwise distances us-
theanonymouspath. Likewise,incomingdatafromthe ingN virtualcoordinates,thesesystemseffectivelylin-
anonymous channel is transparently forwarded through earize the information that must be stored and main-
the Proxy Service to the application. To forward up- tainedbytheInformationProvider.
streamanddownstreampackets,eachrelayalsoincludes Coordinate systems use distributed algorithms in
aForwardingEngine. which each participant periodically measures the dis-
Below, we describe each component of A3 in more tance between itself and a randomly selected peer. By
detail. comparing the empirical measurement with the Eu-
clideandistancebetweenthetwonodes’coordinates,the
4.1 InformationProviders relaycanadjustitscoordinateeithertowards(inthecase
ofover-estimation)orawayfrom(forunder-estimation)
To support non-trivial relay selection policies, A3 the neighbor’s coordinate. Although network distances
makesuseofInformationProviders(alsoreferredtoas cannot be perfectly represented in Euclidean space due
Providers)thataggregatenodeand/orlinkperformance to the existence of triangle inequality violations on the
data. Policiesmayutilizesuchinformationtomorepre- Internet, virtual coordinate systems efficiently estimate
cisely define their requirements (e.g., “include only re- pairwise distances with very low error [6]. Since net-
laysthathavebeenonlineforatleastanhour”). workcoordinatesystemsrequireonlyperiodicmeasure-
A3 imposes few restrictions on the types of Infor- ments(ontheorderofasinglepingevery15seconds),
mation Providers. Each Information Provider is inter- participation in the system does not incur a significant
faced through an adapter that resides on the A3 relay. bandwidthcost.
Adaptersaresmallprogramsorscriptsthatperiodically A Network Coordinate Information Provider main-
queryaProviderfornewinformation,storingtheresults tainsthecurrentcoordinatesoftherelaysintheA3 net-Initiator
Internet
A3Client
Local
Directory Cache Information
Relay Relay Provider
Selection Selection Adapter
Policy Engine
Path
Inst Pa on lt ii ca ytion Fo Erw nga ir nd eing D Sir ee rc vt io cery
Application Proxy Service
Figure1.TheA3 architecture.
work. RelaysperiodicallysendupdatestotheProvider mitigate such attacks, Snader and Borisov propose the
whenever its coordinate changes from its last reported use of opportunistic measurements in which relays re-
value(e.g.,bymorethan10ms). porttheobservedthroughputoftheirnetworkpeers.The
Unfortunately, the distributed nature of coordinate Provider(orintheircase, thedirectoryservice)reports
systems make them particularly vulnerable to insider the median of the reported measurements [40]. Sim-
manipulation. Recent studies [16] on Vivaldi have ilar protection schemes are applicable to A3 Informa-
shown that when 30% of nodes lie about their coordi- tion Providers. Here, relays report the bandwidth and
nates, Vivaldi’s accuracy decreases by a factor of five. responsiveness of peer relays with whom they interact.
Attacking the coordinate system provides a vector for Certain metrics (e.g., memory usage) cannot easily be
an adversary to either prevent high performance rout- probed by remote parties, and if reported by Informa-
ing or bias routing decisions in favor of relays under tion Providers, should be treated with some degree of
their control. Fortunately, practical coordinate protec- skepticismbytherelaysthatmakeuseofthem.
tion techniques may be applied on top of the embed-
dingsystemtoprotecttheveracityofadvertisedcoordi-
Other Potential Information Providers There have
nates[5,33,15,43,37].Often,thesecoordinatesecurity
been a number of proposals (e.g. iPlane [21],
techniquesrelyonspatialandtemporalheuristicstospot
IDMaps [11], OASIS [12], and Meridian [42]) that
false coordinate advertisements [43], utilize a small set
attempt to succinctly map the structure of the Inter-
oftrustedsurveyornodes[33,15],orassesscoordinate
net and provide estimates of latency and (in some
accuracy using a distributed voting protocol [37]. Net-
cases) bandwidth between arbitrary Internet hosts.
work Coordinate Information Providers should employ
Such systems have typically been deployed to pro-
such services to ensure that the coordinate information
videproximity-basedrouting[38],neighborselectionin
itprovidestoA3nodesistrustworthy.
overlays[7],network-awareoverlays,andreplicaplace-
ment in content-distribution networks. However, these
Relay-Assisted Information Providers Relays have systems are also applicable to anonymity services in
access to a significant number of local performance in- which the initiator is interested in discovering the cost
dicators. For instance, a relay can measure its current of routing through a particular relay. By constructing
upstreamanddownstreamthroughput,processorusage, adaptersthataccesstheinterfacestothesesystems,ini-
and available memory, and estimate its bandwidth ca- tiatorscanconstructrelayselectionpoliciesthattakead-
pacity.Suchinformationcanbecollectedandstoredina vantage of such services. The mechanism for inserting
Relay-AssistedInformationProvider.TheCoMonMon- polledinformationintotheLocalDirectoryCacheisde-
itoringInfrastructure[27]thatoperatesonthePlanetLab scribedinthefollowingsection.
testbed[28]isonesuchexample.
As has been pointed out by Øverlier [26] and oth- 4.2 OtherComponentsofA3
ers [40, 3, 36], malicious relays may purposefully at-
tractalargefractionofanonymoustrafficbyfalselyad- We briefly describe the other components of the A3
vertising favorable performance, consequently increas- system, namely the directory service, local directory
ing their view of traffic in the anonymous network. To cache,relayselectionengine,andforwardingengine.4.2.1 DirectoryService The keys(1) argument specifies that an existing tuple
shouldbereplacedifanewtuplearriveswiththesame
NodediscoveryisfacilitatedbyaDirectoryService(or
firstfield(thenetworkaddress). Similarly,thelatterta-
simply Directory) that maintains membership informa-
ble stores the coordinates of a remote node. The two
tiononalltherelaynodescurrentlyparticipatinginthe
example tBandwidth and tVivaldiCoordinates state-
A3 platform. Relays that join the A3 network publish
ments insert data into the respective table. Such state-
their network address and public key to the Directory
mentsareexecutedbytheadapterasnewdataispolled
Service. InitiatorsperiodicallypolltheDirectorytodis-
fromInformationProviders.
coverpeernodesthatmaypotentiallybeusedasrouters
inanonymouspaths.
The Directory Server represents a central point of 4.2.3 RelaySelectionEngine
failure in the network. If the server becomes unavail-
TheRelaySelectionEngineprovidestheflexibilitythat
able, then initiators cannot discern the network ad-
enables applications to communicate their routing re-
dressesofavailablerelays. IftheDirectoryismalicious
quirements. At runtime, applications provide relay se-
or becomes compromised, then it can answer queries
lectionpoliciesthatspecifytheirindividualroutingcri-
withonlytheidentitiesofmisbehavingrelays.
teria. Using the information stored in the Local Direc-
Tor reduces this risk by establishing multiple semi-
toryCache,theRelaySelectionEngineformsroutesac-
trusteddirectoryauthorities[1]. Theauthoritiesperiod-
cordingtothespecifiedpolicy. Theparticipantsofgen-
icallyvoteonasummaryofthenetwork(thatis,there-
erated paths are relayed to the Forwarding Engine (see
laysthatconstitutethenetwork),anddisseminatesigned
below) that instantiates the path. Relay selection is ex-
consensusdocumentstoTorrouters. Theroutersfurther
ploredinmoredetailinSection5.
redistributethisnetworkinformationtootherroutersand
to clients. Clients verify signatures on consensus doc-
uments based on certificates shipped with the Tor bi-
4.2.4 ForwardingEngine
nary.Althoughourcurrentimplementationusesasingle
Directory Service, such protections can be straightfor- The Forwarding Engine consists of a declarative net-
wardlyappliedtoA3. working engine enhanced with low-level cryptographic
primitives. The Forwarding Engine provides methods
4.2.2 LocalDirectoryCache for composing these primitives to form high-level op-
erations. For example, the one-way authentication and
The Local Directory Cache periodically queries and symmetrickey-exchangeprimitivesusedinTorpathin-
stores performance data from Information Providers. stantiation are constructed by composing RSA digital
TherateatwhichthecachepollsProvidersaffectsboth signatureswithDiffie-Hellmankeyexchange.
thefreshnessofcacheddataaswellastherelay’scom-
The Forwarding Engine instantiates the anonymous
munication overhead. The tradeoff between update in-
pathprovidedbytheRelaySelectionEngineaccording
tervalsandbandwidthcostsdependsontherateatwhich
to rules specified in the path instantiation policy. Ad-
performancecharacteristicschangeinthenetwork, and
ditionally,theForwardingEnginesupportsmessagere-
isexploredinmoredetailinSection7.
layoverinstantiatedanonymouspaths. Thatis,theFor-
TheLocalDirectoryCacheusesadapterstoquerythe
wardingEngineisusedbothtoconstructpathsaswellas
various Information Providers, storing the results in ta-
torelayapplicationmessagesovertheanonymousroute.
bles that are accessible by the Relay Selection Engine.
InthecaseofOnionRouting,Tor,andCrowds,therules
Adapters define tables using the materialize keyword for path instantiation and message relay are distributed
as described in Section 3. For example, given the fol-
recursivequeries. WerevisittheroutingengineinSec-
lowingA3LOGstatements,
tion6.
materialize(tBandwidth, Infinity, Infinity, keys(1)).
materialize(tVivaldiCoordinates, Infinity,
Infinity,keys(1)). 5 RelaySelectionPolicies
tBandwidth("10.0.0.1", 1000, 500, 3000).
tVivaldiCoordinates("10.0.0.1", [10,-6]).
In this section, we demonstrate how a variety of
the Local Directory Cache will create two tables: strategies used by the relay selection engine can be ex-
tBandwidth and tVivaldiCoordinates. The former pressed using the declarative framework. These rules
holds the address of a remote node, its upstream band- arethenexecutedbyadeclarativenetworkingengineto
width,downstreambandwidth,andbandwidthcapacity. implementtheselectionpolicies. InpresentingtherelayAlgorithm Reference Description Benefits ExampleUsage
RANDOM Section5.1 Relaysselecteduniformlyatrandom Produceslownodeprevalences Emailmixing
TOR[9] Section5.1.1 Relaysbiasedproportionallytoband- Highbandwidthandnetwork utiliza- Webbrowsing
width tion[24]
SNADER- Section5.1.2 Tunablebiastowardsbandwidth Tunableanonymityandperformance Filetransfer
BORISOV[40]
CONSTRAINT Section5.2.1 Specification of end-to-end perfor- Expresses communication require- VoIP
mancerequirements ments
WEIGHTED[36,35] AppendixA Bias relay selection in favor of link- Extends support to multiple metrics Streamingmulticast
properties (latency,jitter,etc.)
HYBRID Section5.2.3 Combinesabovetechniques Supportshighlyflexibleroutingpoli- Videoconferencing
cies
Table1.Examplerelayselectionpolicies
selection examples in A3LOG, we also highlight exten- 5.1 Node-basedRelaySelection
sionswehavemadetocanonicaldeclarativelanguages,
Asitsnamesuggests,node-basedrelayselectionpri-
includingcustomizablerandomaggregates,rankingag-
marilyselectsnodesbasedonnodecharacteristics,typ-
gregates, and a tuple list type convenient for selecting
ically bandwidth. The following rule r1 shows an ex-
andmanipulatingrelaysandcoordinates.
ample A3LOG program being executed by an A3 node.
Ourgoalinthissectionistohighlighttheflexibility,
GivenarequesttogenerateapathfromSrctoDst, the
ease of programming, and ease of reuse afforded by a
program randomly selects three relay nodes other (ex-
declarative query language. We show that routing pro-
cludingSrcandDst).
tocolscanbeexpressedinafewA3LOGrules,andaddi-
tionalprotocolscanbecreatedbysimplemodifications r1 ePathResult(Src, Dst, RAND(3)<IP>) :-
ePathRequest(Src, Dst), node(IP),
to previous examples. We present examples of well-
Src != IP, Dst != IP.
knownnode-basedandlink-basedstrategies, aswellas
hybridstrategiesthatselectrelaysbasedonacombina- Ruler1takesasinputapathrequest,intheformofan
tionofnodeandlinkmetrics. Inadditiontothespecific eventtupleePathRequest(Src,Dst),whereSrcistypi-
rules shown, usersof A3 can also maintainseveral sets callytheaddressofthenodethatissuedtherequest,and
ofrules,aswellasdynamicallyspecifyruleparameters Dstistheaddressoftheresponder.Ruler1isessentially
innewpathrequests. Thisallowsforextremelyflexible, atypicaldatabasequerywithgroup-byattributes(IPin
on-the-flypathgenerationtunedforspecifiedparameters thiscase)andarandomaggregate.
withoutadditionalmodificationtoA3LOGcode. Unlike a regular aggregate that computes, for
In all our examples below, we assume that each A3 instance, the minimum and maximum value,
node has a background process that periodically polls a random aggregate is a function of the form
theDirectoryServertogathercandidatenodes. Ateach RANDAGG(a 1,a 2,...,a m)hp 1,p 2,...,p ni that takes in
node, the returned information is stored in a node ta- (a 1,a 2,...,a m) as m argument parameters, and n
ble, indexed by the IP address of the node. Additional arguments in hp 1,p 2,...,p ni that denote the output
attributes obtained from Information Providers are in- (projection) attributes of the resulting group-by value.
cludedinthistable(forexample,thenetworkcoordinate Givenresulttuplesgeneratedintherulebody, foreach
ofthenode,itsbandwidthmeasurements,etc.)2. These group-by value, RANDAGG performs the appropriate ran-
node and measurement data are then used as input to domselectionalgorithmbasedonitsfunctiondefinition,
A3 forexecutingA3LOGrulesthatwillselectcandidate and then returns a list of tuples with the appropriate n
relays. In all our example programs, the output of in- attributesbeingprojectedfromtheresults.
terest is an ePathResult(Src,Dst,P) tuple, where P is For instance, in rule r1, RAND(3)<IP> is a random
the list of relay node tuples (which includes their ad- aggregate with argument 3 and projecting by IP. With
dresses, bandwidth, coordinates or any other attributes these parameters, the aggregate will return 3 randomly
relevanttothequery)fromSrctoDst. Thepropertiesof selected nodes without replacement from the result of
the example relay selection policies are summarized in executingtherulebody.Theoutputofexecutingtherule
Table1. r1istheePathResults(Src,Dst,P)eventtuple,where
PisalistoftupleseachcontainingtheIPaddressfieldof
2Note that these attributes correspond to the attributes in theselectedrelaynodesfromSrctoDst. Theadditional
tBandwidth and tVivaldiCoordinates tables described in
selectionpredicatesinr1ensurethatneitherSrcorDst
Section4.2.2. Foreaseofexposition,werefertothemasattributes
areselectedasrelaynodes.
inthenodematerializedtable.5.1.1 Bandwidth-weightedSelection
(cid:26) 1−2sx ifs6=0
The above selection strategy randomly chooses three f s(x)= x1−2s
ifs=0
(1)
nodes as relays without taking into consideration their
wheresisaparameterchosenbytheinitiatorthatallows
node characteristics. As an enhancement, the follow-
foratradeoffbetweenanonymityandperformance. Af-
ingrulesimplementTor’srelayselection[8]andselects
terrankingtherelaysbybandwidth,theinitiatorchooses
nodeswithprobabilityweightedbytheirbandwidth. A
therelaywithindexbn·f (x)c,wherexischosenuni-
nodewithhigherbandwidthhasagreaterprobabilityof s
formly at random from [0,1), and n is the number of
beingselected,andthelikelihoodofselectionrelativeto
nodes. By applying higher values of s, the initiator is
othernodesislinearlyproportionaltobandwidth.
able to more heavily bias her selections towards band-
t1 eCandidateRelay(Src, Dst, PathsSoFar, width. On the other hand, for s = 0, a relay is chosen
RANDWEIGHTED(1,BW)<IP>) :- uniformly at random [40]. Each relay is selected inde-
ePathRequest(Src, Dst, PathsSoFar),
node(IP,BW), Src != IP, Dst != IP. pendentlyandwithoutreplacementaccordingtothedis-
tributionimposedbyEq.1.
t2 ePartialPath(Src, Dst, PathNew) :-
eCandidateRelay(Src,Dst,PathsSoFar,Relay), Snader and Borisov’s algorithm may be represented
PathsSoFar.inPath(Relay[0]) = false, inA3LOGbymodifyingthet1rulefromaboveintotwo
PathNew = f_append(PathsSoFar, Relay[0]).
rules:
t3 ePartialPath(Src, Dst, PathsSoFar) :-
eCandidateRelay(Src,Dst,PathsSoFar,Relay), s1 eRelayList(Src,Dst,PathsSoFar,S,SORT(BW)<IP>) :-
PathsSoFar.inPath(Relay[0]) = true. ePathRequest(Src,Dst,PathsSoFar,S), node(IP,BW),
Src != IP, Dst != IP.
t4 ePathRequest(Src, Dst, P) :-
ePartialPath(Src, Dst, P), f_size(P) < 3. s2 eCandidateRelay(Src,Dst,PathsSoFar,Relay) :-
eRelayList(Src,Dest,PathsSoFar,S,SortedRelayList),
t5 ePathResult(Src, Dst, P) :- sbRand = (1 - 2ˆ(S * f_rand01())) / (1 - 2ˆS)),
ePartialPath(Src, Dst, P), f_size(P) = 3. Relay = f_selectIndex(SortedRelayList,sbRand).
SORT(BW)<IP> is a ranking aggregate which follows
The initial route request is triggered by the re-
a similar syntax as the random aggregates. It takes
questing event ePathRequest(Src,Dst,()), where the
all the resulting tuples derived from executing the rule
last attribute is the current path initially initialized to
body,performsasortusingtheBWattribute,andthenre-
the empty list (). Rule t1 is similar to the ear-
turns the projected field IP as a nested tuple based on
lier rule r1, except that it uses the aggregate function
thesortorder. Hence,theSortedRelayListattributeof
RANDWEIGHTED(1,BW)<IP> which selects one tuple ran-
eRelayListwillincludeasortedlistofIPtuples. Rule
domly from the tuples derived from executing the rule
s2 applies Eq. 1 to generate a biased random variable
body, with probability linearly weighted by the band-
whichisthenusedtoindexintothelistandselectare-
width attribute BW. (To bias the selection using another
lay.
metric such as average node load, one would simply
havetomodifytheparametertoRANDWEIGHTED.)There-
5.2 Link-basedSelection
sulting output is a list containing one tuple, which can
beretrievedasthefirstelementofthelist(indicatedby The previous examples have focused exclusively on
theindex[0])followedbyaprojectionontheIPfield. node characteristics – performance metrics (i.e., band-
Rulest2andt3generateanewePartialPathifthe width) that may be attributed to individual relays. In
chosen Relay is not already in the current partial path; link-basedpathselection[36],thee2eperformanceofa
otherwise, theyaddtherelay’sIPtothepath. Thepro- pathiscomputedbyaggregatingthecostofalllinksthat
cessrepeatsint4ifthenumberofrelaysselectedisless comprisethepath,wherecostisdefinedintermsoflink
than three. Eventually, the resulting path ePathResult characteristics such as latency, loss, and jitter. (While
isreturnedviarulet5whenthreerelaynodeshavebeen bandwidthisanode-basedcharacteristic, itcanalsobe
chosen. represented as a link characteristic by considering the
measuredavailablebandwidthonalinkconnectingtwo
nodes.) The use of link rather than node characteris-
5.1.2 TunablePerformance/AnonymitySelection
ticsenablesnotonlymoreflexiblerouting(sinceinitia-
Snader’s and Borisov’s recent proposal [40] introduces torscanconstructanonymousroutesthatmeetmorespe-
a tunable weighting system that allows the initiator to cific communication requirements), but also offers bet-
trade between anonymity and performance. Briefly, terprotectionoftheidentitiesofthecommunicatingpar-
theirproposaldefinesthefamilyoffunctions ties[36].In these examples, the table of node information relayselection.
gathered from the directory service and Information The following rule selects a path whose minimum
Providers is stored in the format node(IP, Coord) and bandwidthisaboveThresbyaconditionaljoinonnodes
includes nodes’ network addresses and virtual coordi- inthetable,andthenusesthecoordinateembeddingsys-
nates. temtoselectapathwithe2elatencylessthanLimit. In
this example, the table of all nodes node(IP, Coord,
5.2.1 End-to-endConstraint-BasedSelection BW)storesthevirtuallatencycoordinateaswellasband-
widthforeachnodeIP.Interestingly,weneedonlymake
The simplest form of link-based selection is based on
onechangetoreplacec1(from5.2.1)withh1:
selecting paths that meet e2e constraints. Rules c1-c4
h1 eCandidatePath(Src, Dst, Limit,
resultintheselectionofthreerelaynodeswherethee2e RAND(3)<IP,Coord,BW>) :-
latencyislessthanLimit. ePathRequest(Src, Dst, Limit, Thres),
node(IP,Coord,BW),
c1 eCandidatePath(Src,Dst,Limit, Src!=IP, Dst!=IP, BW>THRES.
RAND(3)<IP,Coord>) :-
ePathRequest(Src, Dst, Limit), Other hybrid policies using multiple metrics can
node(IP, Coord), Src!=IP, Dst!=IP. be similarly constructed (for example, using the
c2 ePathCost(Src, Dst, Limit, P, Cost) :- WEIGHTED policy only on nodes whose bandwidth is
eCandidatePath(Src, Dst, Limit, P), aboveathreshold).
Cost =
f_coorddist(Src.Coord, P[0].Coord) +
f_coorddist(P[0].Coord, P[1].Coord) + 6 PathInstantiationPolicies
f_coorddist(P[1].Coord, P[2].Coord) +
f_coorddist(P[2].Coord, Dst.Coord). A3’s forwarding engine performs path instantiation,
c3 ePathRequest(Src, Dst, Path) :- aprocessthatestablishesnecessarynetworkstateateach
ePathCost(Src, Dst, Limit, Path, Cost),
selected relay to enable bidirectional data flow over an
Cost > Limit.
anonymouscircuitbetweenagiveninitiatorandanydes-
c4 ePathResult(Src, Dst, Path) :-
tination. Unlike relay selection, which happens locally
ePathCost(Src, Dst, Limit, Path, Cost),
Cost <= Limit. at the initiator, path instantiation is an inherently dis-
tributedoperation,andthusexercisesthedistributedex-
Rulec1issimilartotheearlierrandomselectionrules
ecutionfeaturesofA3LOG.
thatselectarandomsetofthreerelaynodes.Here,how-
Inthissection,wedemonstratetheuseofA3LOGfor
ever,theCoordfieldisalsoprojectedforuseinrulec2.
pathinstantiation. Duetospaceconstraints,weprimar-
Basedonthethreeselectedrelays,c2computesthee2e
ilyemphasizeOnionRouting[30]andleaveadiscussion
path cost as the sum of the Euclidean distances of the
ofTor[9]andCrowds[31]toAppendixB. Weevaluate
coordinates. The process repeats (rule c3) until a path
theperformanceofourOnionRoutingpathinstantiation
whoseoverallcostislessthanLimit(aninputvariable)
implementationinSection7.2.1.
isselected(rulec4).
We begin with a brief overview of the path instanti-
ation scheme used by Onion Routing. After selecting
5.2.2 TunablePerformance/AnonymitySelection
a path consisting of one or more relays – called onion
In Appendix A, we additionally present a link-based routers–theinitiatorsendsarecursivelyencryptedmes-
pathselectionalgorithm,WEIGHTED[36]thatprovides sagecalledanoniontothefirsthopoftheselectedpath.
tunableperformanceandanonymity.Thealgorithmcon- Eachlayeroftheonioncontainstheaddressofthenext
sistsoftwophases.Inthefirstphase,theinitiatorrapidly desired hop in the path, and seed material to generate
generates(butdoesnotinstantiate)candidatepathscon- symmetric keys shared with the initiator 3. Public key
sistingofthreerelayschosenuniformlyatrandomwith- cryptography ensures that every node can interpret ex-
outreplacement. Theinitiatorcomputesthee2ecostof actly one layer of the onion. Each node removes its
eachgeneratedcandidatepath. Inthesecondphase,the layer, generates keys from the seed material, and – if
initiatorsortsthecandidatepathsbytheircostestimates, it is not the endpoint – forwards the remainder of the
andthenappliesEq.1toselectthepath. onion on to the next hop. The endpoint sends a con-
firmation message to the initiator backward along the
newly-instantiatedpath.
5.2.3 HybridSelection
3In practice, each layer also contains information about which
Although the above rules use a single metric when se-
cryptographicalgorithmtouseineachdirectionofthecircuit,atimes-
lectingapath,itiseasytocombinemultiplefactorsfor tamp,andaversionidentifier.More precisely, if the relays in the anonymous path singlelink,necessitatingtheuseofper-circuitlink-local
are R ,...,R and M ,...,M are the relays’ corre- uniqueidentifiers. Also,ineachsystem,pathsarebidi-
1 n 1 n
sponding onion layers, then the onion is encrypted rectional,requiringintermediatenodestostorethenext
asE (M ,E (M ,...,E (M ))),whereE (W) nodeineachoftheforwardandbackwarddirections.To
R1 1 R2 2 RN N X
denotes the encryption of message W using the public differentiate between different types of paths, we use a
keybelongingtoX. Inpractice,onlythekeyseedma- circuitType(CID, Type)relation.
terial is encrypted with the public key. The remaining Below,wehighlighttheuseofA3LOGviathefollow-
data is encrypted using a symmetric key derived from ingthreerules(oc1-oc3)thatexpressthelocalrecursive
thekeyseedmaterial. computationofgeneratinganOnionattheinitiator:
Onion routing specifies an additional link-layer pro-
oc1 circuitPath(CID, Path),
tocolthatgovernshowmessagesareexchangedbetween
circuitStatus(CID, "BUILDING"),
onionrouters.Foradiscussionofthisprotocol,see[30]. circuitForward(CID, ACIForward, FirstRelay),
eCreateOnion(CID,LastRelay,
RemainingPath,FirstLayer) :-
6.1 OnionRoutinginA3LOG ePathResult(_,_,Path),
FirstRelay=f_first(Path).IP,
LastRelay=f_last(Path).IP,
Our A3LOG implementation of Onion Routing re- ACIForward=f_gen_aci(),
quires12rulestospecifypathinstantiation. Theserules RemainingPath=f_removeLast(Path),
CID=f_gen_cid(), FirstLayer={}.
consist of three recursive computations: building the
onion,relayingtheonionalongthepathtoestablishstate
Ruleoc1istriggereduponinsertionofanewpath. It
ateachnode,andforwardingaconfirmationbackalong
generatesstateattheinitiatorforthenewcircuit,includ-
the path. We extended our implementation to support
ing the local CID and link-local ACI. These are respec-
forwarding data along an instantiated path at a cost of
tively used to differentiate between circuits at a given
fiveadditionalrules.
node and circuits on a given link. In addition, oc1 as-
We briefly summarize the schema (data format) of
sociatesthenewcircuitwithitspathrepresentation,and
the facts computed in relations at each node. All facts
astatusdescribingthecurrentstageofthecircuit’slife-
are indexed by a locally unique CID (circuit identi- cycle – BUILDING in this case indicates that the circuit
fier). An initiator stores a circuitPath(CID,Path) is currently being instantiated and is not yet ready for
fact that associates a circuit with a path representing
use. Rule oc1 triggers the recursive rule, oc2, through
the chosen relay nodes. The Path variable represents theeCreateOnionevent:
the result of the relay selection phase and is popu-
lated based on the ePathResult tuple. In addition, oc2 eCreateOnion(CID,NextRelay,
RemainingPath,NextLayer) :-
the initiator stores the current state of the circuit in
eCreateOnion(CID, CurrentRelay,Path, PrevLayer),
the circuitStatus(CID,Status) relation. The value f_size(RemainingPath) != 0,
NextRelay = f_last(Path).IP,
for Status may be either BUILDING or ESTABLISHED. RemainingPath = f_removeLast(Path),
As the path is being instantiated, the initiator and encryptOnion(CID, CurrentRelay,
PrevLayer, &EncryptedLayer),
each intermediate relay creates a link-local identi-
NextLayer={NextRelay, EncryptedLayer}
fier (ACI) for the circuit, stored along with the cir-
cuit’s next relay in a circuitForward(CID,ACI,Node) The eCreateOnion event represents an intermediate
fact. Similarly, the final relay and each interme- stepofcircuitinstantiation. Itsfirstargumentreferences
diate relay stores the ACI generated by the pre- theCIDofthecircuitbeingcreated,itssecondnotesthe
vious Node in the circuitReverse(CID,ACI,Node) mostrecentlyaddedrelay, anditsthirdcontainsthein-
relation. At each relay, symmetric encryption termediaterepresentationoftheonion. Notethatonions
keys (shared with the initiator) for forward and arebuiltoutwardsfromtheinnermostlayer. Wedenote
reverse cryptographic operations are stored in the theinnermostlayerasanemptylist,asthislayerwillbe
circuitKeys(CID,ForwardKey,ReverseKey) relation. interpretedbytheultimaterelayinthecircuit,whodoes
For each relay node, the initiator maintains these keys notextendthepathanyfurther.
in the circuitInitiator(CID, Relay, ForwardKeys, Rule oc2 calls the encryptOnion Composable View
ReverseKeys)relation. (CView, described in Section 6.2), which encrypts
Itisworthnotingthatmanyoftherelationsusedby the previous layer of the onion. Rule oc2 is lin-
the Onion Routing rules can also be used by Tor and early recursive and will continue to trigger itself and
Crowds. Forexample,allofthesesystemsinvolvemul- derive new facts as long as RemainingPath is non-
tiplexingtrafficfrommultipleanonymouscircuitsovera empty. Each invocation of the rule removes a relaynodefromRemainingPathasitaddsalayerofencryp- KeySeed = f_genKeySeed(),
tion. Upon reaching the terminating condition – when Key_onion = f_sha1(KeySeed),
Key_forw = f_sha1(Key_Onion),
RemainingPathisempty–ruleoc3istriggered: Key_back = f_sha1(Key_forw),
Payload_E = f_symEncrypt(Key_onion,Data_in),
oc3 eOnionMessage(@FirstRelay, ACI, CompleteOnion) :- publickey(Node,PubKey),
eCreateOnion(CID, CurrentRelay, KeySeed_E = f_asymEncrypt(PubKey,KeySeed),
RemainingPath, PrevLayer), Data_E=[KeySeed_E, Payload_E].
f_size(RemainingPath) = 0, }
circuitForward(CID, ACI, FirstRelay).
encryptOnion(CID, CurrentRelay, The built-in predicates this.init and this.return
PrevLayer, &CompleteOnion).
respectively specify the input values and return values
Rule oc3 calls encryptOnion to encrypt the final to/from the CView. Rule eo1 generates key seed mate-
rial and iteratively applies the SHA-1 hash function to
layeroftheonion,andsendsthecompletedoniontothe
derive three symmetric keys to be shared between the
firstrelaynode(viathelocationspecifier@FirstRelay)
read from the circuitForward relation. Upon receiv- initiator and a given Node in the circuit: (i) Keyonion,
used for encrypting the layer of the onion (except for
ingtheonion, eachintermediaterelaywillpeeloffand
decrypt a layer of the onion (using the decryptOnion
KeySeed)destinedforNode;(ii)Keyforw,usedforcryp-
tographic operations on data sent forward from the ini-
CView),extractthelocationofthesubsequenthop,and
recursivelyforwardtheonion. Weomittheserulesdue
tiator; and(iii)Keyback,usedforcryptographicopera-
tionsondatasentbackwardtotheinitiator. Thesekeys
tospaceconstraints.
Theobservantreaderwillnotethattheaboverulesdo
arestoredattheinitiatorinthecircuitInitiatorKeys
notimplementOnionRouting’slink-layerprotocol.One relation4. Rule eo0 then employs Keyonion to encrypt
may easily specify this protocol in A3LOG by adding a Datain, which consists of the next node in the circuit,
layer of indirection to any rule that sends a high-level
andthepreviouslayeroftheonion. TheKeySeedisthen
anonymousmessage. Weomitthespecificationhere,as
encryptedwiththepublickeyofNode.
Because CViews can clearly separate the crypto-
it involves relatively mundane serialization, encapsula-
graphic operations from the specification of the proto-
tion,andencryption.
col, one can easily tune the encryption by customiz-
6.2 Composable Virtual View for Onion En- ing the above encryptOnion (and the corresponding
cryption
decryptOnion)CView. Furthermore,CViewscanfacil-
itatereusabilityofthesehigh-levelcryptographicprimi-
In order maximize reusability between different tivesacrossdifferentpathinstantiationprotocols.
path instantiation protocols and enable re-configurable
encryption, we leverage Composable Virtual Views
7 Evaluation
(CViews)[22]toexpresshigh-levelcryptographicprim-
itives. ACViewisauser-definedfunctionimplemented In this section, we describe our implementation of
inA3LOG.AcalltoaCViewmayonlyoccurinthebody A3andpresentmeasurementstudiesthatdemonstrateits
ofarule,andhasthefollowingsyntax: abilitytoproduceflexibleanonymouspathsatlowper-
formance overhead. To examine the scalability aspects
viewName(K1,K2,...,Kn, &R1,&R2,...,&Rm)
of our implementation, we evaluate A3 both in simula-
Each CView has a set of input attributes – shown tionusingreal-worldnetworktracesaswellasanactual
aboveasK1,K2,...Kn–whichmustbeboundatthebe- deploymentonthePlanetLabtestbed.
ginningofthecalltotheCView, andasetofreturnat-
tributes,&R1,&R2,...,&Rm,thatarereturnedbythecall. 7.1 ImplementationandExperimentalSetup
NotethatCViewsdonotaugmenttheexpressivepower
of the A3LOG language but rather provide modularity. A3’s Relay Selection and Forwarding Engines has
Infact, anyrulethatusesCViewscanberewrittenasa beenimplementedasanextensiontotheP2[19]declar-
seriesofregularA3LOGrulesusingarewrite[22]. ative networking system, with enhancements to enable
We illustrate the encryptOnion CView used by the thevariousnewfeaturesof A3LOG asdescribedinSec-
aboverule: tions 5 and 6. All relay selection policies used our ex-
perimentsproducepathswiththreeanonymizingrelays.
def encryptOnion(CID, Node, Data_in, &Data_E) {
eo1 circuitInitiatorKeys(CID, Node,
4NotethatcircuitinitiatordoesnotcontainKeyonion
Key_forw, Key_back)
this.return(Data_E) :- –thiskeyisonlyusedforcryptographicoperationsontheonionsent
this.init(CID, Node, Data_in), forpathinstantiation,andneednotbepersisted.WeutilizeaMySQLdatabaseserverasourDirectory
Service. A3 nodes register with the service and query
100
formembershipbysendingSQLqueriesandupdatesto
the server. Membership information that has not been 80
refreshed within 15 minutes is purged from the direc-
tory.AlthoughtheMySQLprotocoladdsasmalldegree 60
of unnecessary bandwidth overhead, directory fetches
40
andupdatesoccurinfrequently. Tominimizesuchover-
head, compression is enabled in both A3 clients and
20
thedatabaseserver. TheLocalDirectoryCache, which
queriesthe DirectoryService formembership informa-
0
tion,storestheresultsinmaterializetablesthatareac- 400 350 300 250 200 150
cessibletotheRelaySelectionEngine.
The A3 system executes in simulation mode by tak-
ing as input a network trace consisting of pairwise la-
tency measurements [17] and running several A3 in-
stances on a single machine. Actual implementation
is achieved by running each A3 instance on PlanetLab,
interfacing with the Directory Service and Information
Providers.
Our experiments utilize two Information Providers.
Each relay (whether running in simulation mode or on
PlanetLab) participates in a Vivaldi [6] virtual coordi-
nate embedding system. Relays update the Network
Coordinate Information Provider (here, the MySQL
databaseusedasourDirectoryService)withitsnewco-
ordinate when the Euclidean distance between coordi-
nateupdatesexceed10ms. Additionally,ourPlanetLab
experiments utilize the CoMon PlanetLab Monitoring
Infrastructure [27] to retrieve peers’ bandwidth, mem-
ory,andCPUusageinformation.
7.2 RelaySelectionEvaluation
A3isaflexibleanonymityframeworkthatenablesthe
rapiddevelopmentanddeploymentofrelayselectional-
gorithms. TodemonstrateA3’sabilitytoparseadiverse
set of relay selection policies, we evaluate the perfor-
mance characteristics of generated paths and compare
themtotheirexpectedvalues.
7.2.1 Simulation-basedEvaluation
Figure2showsthecumulativedistributionofend-to-end
(e2e) latencies using our A3 implementation in simu-
lation mode with the WEIGHTED relay selection pol-
icy [36]. The x-axis of the graph plots the achieved
e2e latency, while the y-axis indicates the fraction of
pathsthathasatmostthatlatency. Asinputtothetrace-
drivensimulator,weutilizetheKingdataset[17],acol-
lection of pairwise latencies collected from the Inter-
net using the King method [14]. As can be seen from
tniartsnoc
gniteem
shtap
fo
egatnecreP
% of constraint paths
% of random paths
Constraint: e2e RTT (ms)
Figure 4. Achieved performance as mea-
sured by e2e RTT under simulation using
theKingdatasetwiththeCONSTRAINTrelay
selectionpolicy.
the figure, WEIGHTED reduces the e2e RTT of anony-
mous paths when compared to RANDOM. For exam-
ple,themedianRTTofanonymouspathsdecreases30%
from 261ms to 184ms when WEIGHTED is used. Sim-
ilarly, Figure 3 shows the achieved performance, mea-
sured as the e2e bandwidth of anonymous paths, using
variousnode-basedrelayselectionpolicies. Pathswere
constructedusingbandwidthinformationretrievedfrom
Tordirectoryservers. Asexpected,theTorroutingpol-
icyproducespathswithsignificantlygreaterbandwidths
than random selection. The Snader-Borisov algorithm
achieves tunable performance results – as the value of
s increases, the effective e2e bandwidth of anonymous
pathsalsoincreases.
The performance of the anonymous paths shown in
Figures 2 and 3 can be validated by comparing against
results from previous studies [36] in which the relay
selection algorithms were hardcoded. Using A3, how-
ever,policiesareconciselyrepresentedinafewlinesof
A3LOG,andareprovidedtotheRelaySelectionEngine
duringruntime.
Our novel CONSTRAINT algorithm allows applica-
tions to specify hard constraints on their anonymous
paths. The performance results for various e2e latency
constraints is shown in Figure 4. The graph plots the
percentage of anonymous paths whose e2e latency met
theconstraintforboththeCONSTRAINTandRANDOM
relay selection policies. The results from the uniform
selection policy serve as an approximation for the per-
centage of possible paths that meet the constraint, and1
0.8
0.6
0.4
0.2
0
0 100 200 300 400 500 600 700 800
noitcarF
evitalumuC
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
Random
Weighted (s=3) 0.1
Weighted (s=15)
0
16 32 64 128 256 512 1024
e2e RTT (ms)
Figure 2. Achieved performance as mea-
sured by e2e RTT under simulation using
the King dataset with the WEIGHTED relay
selectionpolicy.
noitcarF
evitalumuC
Random
Tor
Snader-Borisov (s=3)
Snader-Borisov (s=9)
Snader-Borisov (s=15)
Bandwidth (KBps)
Figure3.Achievedperformance(logscale)
asmeasuredbye2ebandwidthundersim-
ulation using bandwidths from the Tor di-
rectoryserverforvariousnode-basedrelay
selectionpolicies.
0.06
0.05
0.04
0.03
0.02
0.01
0
secnelaverP
edoN
fo
egnaR
modnaR )sm004<(
tniartsnoC
)sm053<(
tniartsnoC
)sm003<(
tniartsnoC
)sm052<(
tniartsnoC
)sm002<(
tniartsnoC
)sm051<(
tniartsnoC
)3=s(
dethgieW
)9=s(
dethgieW
)51=s(
dethgieW
1
0.1
0.01
0.001
0.0001
Figure 5. Node prevalences for latency
datasets
secnelaverP
edoN
fo
egnaR
modnaR roT )3=s(
vosiroB-redanS
)9=s(
vosiroB-redanS
)51-s(
vosiroB-redanS
Figure 6. Node prevalences for band-
widthdatasets(logscale).
therefore indicate the difficulty of finding conforming adhere to the requirement. Even for very stringent re-
paths. Failuretomeettherequirementsspecifiedbythe quirements – e2e latencies of 150ms or less – 83% of
CONSTRAINT strategy are due to embedding errors in pathsproducedfortheCONSTRAINTpolicymetthere-
the Vivaldi virtual coordinate system. That is, under- quirement. In contrast, less than 9% of random paths
estimationsofnetworkdistancesoccasionallycausethe hadlatenciesbelowthethreshold.
RelaySelectionEnginetoincorrectlybelievethatanon- In addition to enabling flexible routing, A3 also
conformingpathmettherequirementsofthepolicy. serves as a tool for protocol designers to empirically
Whentheconstraintislaxandpermitspathswithe2e measuresomeofthesecuritycharacteristicsoftheiral-
latenciesofupto350ms,74%and94%ofthepathsgen- gorithms. New protocols may be quickly encoded in
erated using uniform and CONSTRAINT, respectively, A3LOG and tested on A3. The security of a given al-gorithm may be partly assessed by examining the dis- (as measured by the distance between successive coor-
tribution of relays’ node prevalences – the percentage dinate updates) on PlanetLab. Since relays operate in-
of anonymous paths for which a given relay is a par- dependently and conduct coordinate updates at varying
ticipant [36]. Comparing the node prevalences for var- times, results are grouped at one minute intervals, with
iousroutingpolicieswhilekeepingthenetworkconsis- the10th,50th(median),and90thpercentilesplottedon
tent provides a straightforward means of determining the graph. Initially, 90% of all relays join the network
whether any particular relay is selected disproportion- atapproximatelythesametime,resultinginsubstantial
ately during relay selection. Figures 5 and 6 plot the coordinatemovementearlyintheexperiment.However,
range of node prevalences for the previously described thesystemquicklystabilizes–themedianrateofchange
relaypoliciesundersimulation. Ofparticularinterestis decreases to less than 10ms within 10 minutes. Hence,
themaximumnodeprevalence–thepercentageofpaths eveninthenearworst-casescenarioinwhichallpartic-
thatincludethemostpopularchosenrelay. Asdemon- ipants join the network at once, the coordinate system
stratedinpriorwork[36],thenodeprevalencesresulting reachesequilibriumwithinapproximately10minutes.
from link-based path selection (left) tend to be signifi- To model a more realistic scenario, the remaining
cantlylowerthanthatofnode-basedselection. 10%ofPlanetLabnodesjointhenetworkafterapprox-
imately 30 minutes(indicated by arrows on the graph).
Immediatelyfollowingtheintroductionofthenewpar-
7.2.2 PlanetLabDeployment
ticipants,themediandifferencebetweencoordinateup-
Toevaluatethesystem’sperformanceonreal-worldnet- datesexperiencesaminorjump,butremainsbelow3ms.
works,weinstalledA3onapproximately110geograph- Our results indicate that latency is fairly stable (at
icallydistributedhostsonthePlanetLabtestbed. leastonPlanetLab),requiringinfrequentcoordinateup-
dates. Evenwhenmembersofalargecoalitionofrelays
jointhenetworksimultaneously,theeffectoncoordinate
PlanetLabPerformance. Figure7showsthee2epath
stabilityisminor.
performance results on PlanetLab for the RANDOM,
WEIGHTED,andCONSTRAINTstrategies. Duetoinsta-
bility in the PlanetLab network, paths were abandoned Processing Costs The Relay Selection Engine parses
afteratwosecondtimeout,leadingtoamaximumRTT andinterprets A3LOG policiesandusestheinformation
of 2s. WEIGHTED (with s = 9) reduced the median stored in the Local Directory Cache to generate con-
RTT of paths by 194ms (38%) as compared to random formingpaths. TheengineisimplementedinC++asan
selection. 69% of paths met the fairly stringent 400ms extensiontotheP2declarativenetworkingsystem[19].
requirement using the CONSTRAINT policy. By com- We observe in our simulations and PlanetLab exper-
parison,only26%ofrandompathshade2eRTTsofless iments that the time required to parse A3LOG scripts
than400ms. (which occurs only when such scripts are loaded) and
produce paths is minimal. For example, when running
onPlanetLabwithaheavynetworkload,theRelaySe-
InformationProviderPollingFrequency Inorderto
lection Engine requires on average less than 200ms to
produce paths that adhere to application policies, the
produceapathusingtheCONSTRAINTpolicywithmul-
RoutingEnginemustrelyonthedatastoredintheLocal
tipleconstraints.
DirectoryCache. Ifthedataisstale, thenroutingdeci-
sions will be based on outdated information. However,
7.3 PathInstantiation
frequentpollingoftheInformationProvidersconsumes
bandwidthbothatrelaynodes(whoseresourcesmayal- Above, our evaluation validated the flexibility of
ready be overburdened from forwarding traffic) and at A3LOG for supporting a wide range of relay selection
theProviders. Therateatwhichinformationshouldbe policies with low performance overhead. Next, we
refreshedishighlydependentupontheparticularmetric. benchmark the performance of declarative onion path
Forexample,bandwidthcapacitiesmaybefairlystatic, instantiation. AsdescribedinSection6,theA3LOGim-
whereas bandwidth utilization varies significantly over plementationofthisprotocolrequirestheuseofsecure
time. communication,aswellassymmetric-keycryptographic
To understand this tradeoff for our Network Coor- primitivesandonionassembly. Toisolatetheeffectsof
dinate Information Provider, we examined the rate at CPU and communication overhead, we conducted our
whichcoordinateschangedunderhighdegreesofchurn. evaluationinalocalclusterinadditiontothePlanetLab
Figure8(logscaleonbothaxes)plotstherateofchange testbed.1
0.8
0.6
0.4
0.2
0
0 200 400 600 800 1000 1200 1400 1600 1800 2000
noitcarF
evitalumuC
1000
100
10
1
Random
Weighted (s=9)
Constraint (< 400ms)
0.1
10 100 1000
e2e RTT (ms)
Figure 7. Achieved performance as mea-
suredbye2eRTTonPlanetLab.
)sm(
etanidrooc
suoiverp
morf
ecnatsiD
Median
10%
90%
Time (minutes)
Figure8.Median,10th,and90thpercentile
distancesbetweencoordinateupdateson
PlanetLab (log scale). Initially, 90% of all
relays join the network at approximately
the same time. Arrows indicate the point
atwhichtheremainingrelaysjoin.
PathLength LocalCluster PlanetLab
2 102 1059(853,1459)
1
3 146 1342(1120,2862)
4 192 2202(1311,3402) 0.9
5 244 2215(1602,2564) 0.8
0.7
Table2.MedianOnionRoutingpathinstan-
0.6
tiation time (in milliseconds) on our local
0.5
cluster and on PlanetLab. The values in
0.4
parenthesesshowsthe20thand80thper-
0.3
centiletimesonPlanetLab. 0.2
0.1
0
0 5 10 15 20
Ourlocalclusterconsistsofquad-coremachineswith
Intel Xeon 2.4GHz CPUs and 4GB RAM running Fe-
dora 10 with kernel version 2.6, which are intercon-
nectedbyGigabitEthernet. Thissetupallowsustoiso-
late the computation overhead of onion routing in our
benchmark.
Table2(secondcolumn)showsthepathinstantiation
times (measured from the initiator creating the onion
to the establishment of the bidirectional onion path) as
thenumberofrelaysincreases. Foreachrelaysize,we
measured 10 path instantiations and computed the me-
dian. Wemakethefollowingtwoobservations: First,as
expected, the path instantiation time increases linearly
withthenumberofrelays.Second,theinstantiationtime
is within 244ms, even for up to 5 relay nodes, demon-
noitcarF
evitalumuC
Random
Dual-Constraint
Bandwidth (KBps)
Figure 9. Distribution of bandwidth
throughput on PlanetLab using the DJ-
Anonymous application with a dual-
constraintselectionpolicy.
stratingthelowoverheadandefficiencyofusingA3LOG.
Table2(thirdcolumn)showsasimilarexperimental
evaluationonthePlanetLabtestbed,wherewemeasure
themedianpathinstantiationtimesasthenumberofre-
lays increases. We observe greater variability in path
instantiationtimes(asshownbythevaluesinparenthe-sesdenotingthe20th and80th percentile)forthesame senders to compactly specify policies for relay selec-
numberofrelays. WefurtherobservethatonPlanetLab, tion and path instantiation that meet their performance
the instantiation times are higher when the end-to-end andanonymityrequirements.Unlikeexistinganonymity
latencydominatesotherfactorsduetothehighloadand networks in which modifying the relay selection and
network congestion observed on PlanetLab. Neverthe- path instantiation algorithms require changes to the
less,themajorityofpathinstantiationscompletewithin sourcecode,A3allowssenderstocustomizethemanner
2-3seconds,evenformanyrelays. inwhichpathsarechosenandconstructedatruntime.
A3usesadeclarativedesigninwhichsendersspecify
7.4 DJ-AnonymousA3 AudioStreamer their routing requirements using the A3LOG policy lan-
guage. WedemonstratethatA3 providessufficientflex-
To illustrate how applications can leverage the flex-
ibility to encode the relay selection algorithms used by
ibility provided by A3, we implemented a simple uni-
Tor[9],SnaderandBorisov’srefinementtoTor[40],and
castaudiostreamerwhichwecallDJ-Anonymous. DJ-
link-basedapproaches[36]inonlyafewlinesofA3LOG.
Anonymous reads from an audio device at a fixed rate
Resultsfromsimulationsovertrace-drivendatasetsand
andtransmitsaudiomessagesatregularintervalstothe our deployment on PlanetLab show that A3 produces
receiver. DJ-Anonymous supports the transmission of
paths that conform to the specified policies with little
live audio and aims to minimize the latency and maxi-
computationaloverhead.
mizethebandwidthofitschosenpaths.
In addition to providing flexible relay selection, A3
DJ-Anonymous uses a dual constraint policy in
also enables initiators to customize both the manner in
which the e2e latency is capped at 400ms and the tol-
which anonymous paths are constructed as well as the
erablemaximumCPUutilizationofarelayissetat30%
mechanismsusedtotransportdataoversuchpaths. For
(as measured by CoMon [27]). Since rate limiting on
example,weshowhowtheSetupandDataTransmission
PlanetLab prevents accurate bandwidth measurements,
phases of Onion Routing [30] can be compactly speci-
ourpolicydoesnotincludeanybandwidthrequirements.
fiedinA3LOG.
The entire policy used by DJ-Anonymous may be ex-
A3’sflexibilityhasseveraladvantagesforanonymous
pressedinjustsixlinesofA3LOG.
routing. First,itallowssenderstoconstructpoliciesthat
Inourexperimentalsetup,eachPlanetLabnoderuns
meet their applications’ specific requirements. For ex-
aninstanceofDJ-Anonymous, sendingstreamsofdata
ample, a real-time VoIP application may provide poli-
to randomly selected PlanetLab destinations. Streams
cies that enforce e2e latency constraints, whereas a file
are instantiated on average every two minutes (stream
sharingclientmayutilizeapolicythatfavorsbandwidth
starttimes arerandomizedbetween -20%and+20% to
overotherperformanceindicators.Second,theabilityto
avoidnodesfunctioninginlockstep)andpersistforone
rapidlydeploybothrelayselectionandpathinstantiation
minute. Initiators attempt to send 500 byte payloads
algorithmsmakesA3ausefultoolforprotocoldesigners
every25ms,representingamaximumpossiblethrough-
and anonymity researchers. Finally, A3’s modular de-
put of 20KBps. Since we were not able (or willing) to
signanddeclarativetechniquespermitthesystemtobe
read from live audio sources on PlanetLab nodes, DJ-
easily extended to support additional metrics. By con-
Anonymous instances on PlanetLab read “audio” from
structing small adapters that interface with Information
their/dev/zerodevices.
Providers,A3canbeadaptedtosupportpoliciesthatref-
Figure 9 shows the e2e bandwidth (as measured
erenceadiversesetofroutingcriteria.
by the receiver) achieved using DJ-Anonymous’ two-
constraint relay selection policy. For comparison, the
bandwidth that results from using random selection is Acknowledgments
also plotted. Using our six-rule dual-constraint pol-
icy, DJ-Anonymous achieves a median throughput of Theauthorsaregratefultotheanonymousreviewers
9.0KBps (sufficient for G.711/PCM µ-law audio en- fortheirinsightfulfeedback. Thisworkispartiallysup-
coding), more than doubling the median bandwidth of ported by NSF Grants CNS-0831376, CNS-0524047,
3.7KBpsthatresultsfromrandomselection. andCNS-0627579; DARPAGrantONR-N00014-09-1-
0770; and OSD/AFOSR MURI Collaborative Policies
and Assured Information Sharing. Any opinions, find-
8 Conclusion
ings,andconclusionsorrecommendationsexpressedin
This paper presents Application-Aware Anonymity thispaperarethoseoftheauthorsanddonotnecessarily
(A3), an extensible anonymity framework that enables reflecttheviewsofthefundingagencies.Appendix A. Link-based Tunable Perfor- AppendixB.TorandCrowdsin A3LOG
mance/AnonymitySelectionin A3LOG
Tor: UnlikeOnionRouting,wheretheinitiatorrecur-
sivelybuildsasingleonionthatisrelayedalongtheen-
The WEIGHTED link-basedpathselectionalgorithm
tire path, Tor specifies an incremental telescoping path
operatesintwophases:
instantiation strategy. At a high level, a circuit initia-
In the first phase, the initiator rapidly generates (but
tor sends a CREATE message to the first Tor router in
doesnotinstantiate)candidatepathsconsistingofthree
thedesiredcircuit. TheTorrouterestablisheslocalstate
relays chosen uniformly at random without replace-
andreplies,resultinginapathoflengthone. Shouldthe
ment. The initiator computes the e2e cost of each gen-
initiatorchoosetoaddanotherhoptotheendofpath,he
eratedcandidatepath. Inthesecondphase,theinitiator
relaysanEXTENDmessagetothecurrentendpoint.The
sorts the candidate paths by their cost estimates. Us-
current endpoint translates the EXTEND into a CRE-
ing the family of functions introduced by Snader and
ATEmessageandsendsittothedesirednewendpoint.
Borisov [40] (see Eq. 1), the initiator instantiates the
Thenewendpointofthecircuitreplieswithaconfirma-
candidate path with index bn·f (x)c, where x is cho-
s tion message, which is forwarded back to the initiator.
senuniformlyatrandomfrom[0,1),andnisthenum-
The initiator may continue to extend the path if he de-
berofnodes. AswithSnaderandBorisov’salgorithm,a
sires5.
larger value of s more heavily weighs path selection in
Both CREATE and EXTEND messages can be en-
favorofperformance.Thesparameterisdenotedbythe
coded as A3LOG message tuples, and contain half of
Sattributeintheinitialpathrequest.
a Diffie-Hellman handshake, encrypted with the pub-
WEIGHTEDisrepresentedinA3LOGasfollows:
lic key of the desired new endpoint. The new endpoint
completes the handshake with the initiator, resulting in
w1 eCandidatePaths(Src, Dst, S,
symmetric keys shared with the initiator, as in Onion
RAND(3, 100)<IP,Coord>,
PathCosts) :- Routing.Theencryption/decryptionmodulescanbeim-
ePathRequest(Src, Dest, S), node(IP, Coord),
plemented as a CView module with the corresponding
Src != IP, Dst != IP, PathCosts = {}.
cryptographicfunctions,similartothatdescribedinSec-
w2 eCandidatePaths(Src, Dst, S, PathList,
tion 6.2. Tor’s telescoping path establishment implies
PathCosts) :-
eCandidatePaths(Src, Dst, S, PathList, that n messages are exchanged in each direction to es-
PathCosts),
tablishacircuitoflengthn. Thekthmessagesentinthe
f_size(PathList) > 0, P=f_popfront(PathList),
PathCost=f_coorddist(Src.Coord,P[0].Coord) + forward direction is essentially an onion with k layers.
f_coorddist(P[0].Coord,P[1].Coord) +
ForsendingmessagesbetweenTorrouters,Torspecifies
f_coorddist(P[1].Coord,P[2].Coord) +
f_coorddist(P[2].Coord,Dst.Coord), alink-layerprotocolsimilartothatofOnionRouting.
PathCosts.append([P, PathCost]).
w3 ePathResult(Src, Dest, Path) :- Crowds: TheprocessofpathinstantiationinCrowds
eCandidatePaths(Src, Dst, S, PathList,
PathCosts), commenceswhenaninitiatorstartsananonymousrelay
f_size(PathList)=0, on his machine called a jondo and contacts a server to
SortedPathCosts=f_sortByField(PathCosts,
"PathCost", obtain membership in a crowd – a collection of anony-
"desc"),
mous users. To build a path, the initiator forwards a
sbRand=(1 - 2ˆ(S*f_rand01())) / (1-2ˆS)),
Path=f_selectIndex(SortedPathCost,sbRand).P. request to a jondo chosen uniformly at random – pos-
sibly his own. Upon receiving a request to create a
Rule w1 first generates 100 random permutations of path,ajondochoosestoextendthepathtoanotherjondo
threeelementseachfromthenodetable. Then, rulew2 (againchosenuniformlyatrandom)withprobabilityp f,
repeatedly converts these list elements into pairs with orceasespathcreationwithprobability1−p .
f
thepath’se2ecost,basedontheembeddedcoordinates. Typically, an initiator will use a single bidirectional
Finally,rulew3sortsthislistandselectsanindexusing pathforallanonymouscommunication. However,inor-
theSnader-BorisovrandomvariabledescribedinEq. 1, dertopreserveanonymityproperties,allinitiatorsmust
with a tunable performance parameter S. Note that in createanewcircuit–andceaseusinganypreviousones
thiscase,wesortinreverseordersincelowerlatencyis –wheneveranewjondojoinsthecrowd.
preferred to higher latency. The above rule assumes a Below,weexhibittheforwardhalfofthepathinstan-
left-to-right execution ordering of predicates. This as- tiationschemeusedinCrowdsinthefollowingrules:
sumptioncanbeavoidedwithamoreverboseversionof
5The current implementation of Tor usesthree-relay anonymous
theaboveprogramusingsomeadditionalrules.
pathsbydefault.c0 circuitStatus(CID, "BUILDING"), [5] M. Costa, M. Castro, R. Rowstron, and P. Key. PIC:
circuitForward(CID, ACI_out, Node_out), PracticalInternetCoordinatesforDistanceEstimation.In
extend(@Node_out, ACI_out, Me) :-
InternationalConferenceonDistributedComputingSys-
establish_path(), ACI_out=f_gen_aci(),
CID = f_gen_cid(), random_jondo(&Node_out). tems,2004.
[6] F.Dabek,R.Cox,F.Kaashoek,andR.Morris.Vivaldi:A
Rulec0beginstheprocessofbuildinganewpathof
Decentralized Network Coordinate System. SIGCOMM
jondos in response to an establishpath event. Such Comput.Commun.Rev.,34(4):15–26,2004.
aneventistriggeredwhenanoderetrievesanewlistof [7] F. Dabek, J. Li, E. Sit, F. Kaashoek, R. Morris, and
jondos, for example. c0 generates a CID and ACI for C.Blake. DesigningaDHTforLowLatencyandHigh
thenewcircuit,andselectsajondouniformlyatrandom Throughput. InNSDI,2004.
(usingtherandomjondoCView)toreceivethepathex- [8] R. Dingledine and N. Mathewson. Tor Path Specifi-
tensionrequest, extend. Uponreceiptofanextendre- cation, January 2008. http://www.torproject.
quest,rulec1istriggered:
org/svn/trunk/doc/spec/path-spec.txt.
[9] R.Dingledine,N.Mathewson,andP.Syverson. Tor:The
c1 circuitReverse(CID, ACI_in, Node_in), Second-Generation Onion Router. In Proc. of the 13th
incoming(CID, X) :- UsenixSecuritySymposium,pages303–320,2004.
extend(@Me, ACI_in, Node_in),
[10] H. Federrath. JAP: Anonymity & Privacy. http://
X = f_rand01(), CID = f_gen_cid().
anon.inf.tu-dresden.de/.
Rulec1generatesarandomnumberintherange[0,1], [11] P. Francis, S. Jamin, C. Jin, Y. Jin, D. Raz, Y. Shavitt,
andL.Zhang. IDMaps: AGlobalInternetHostDistance
as well as a CID for the circuit. c1 also derives a local
EstimationService. IEEE/ACMTrans.Netw., 9(5):525–
incomingevent,containingthelocalCIDofthenewcir-
540,2001.
cuit,andthepreviouslygeneratedrandomnumber. The
[12] M. Freedman, K. Lakshminarayanan, and D. Mazie`res.
incomingeventtriggersrulec2:
OASIS:AnycastforAnyService. InNetworkedSystems
DesignandImplementation(NSDI),May2006.
c2 circuitForward(CID, ACI_out, Node_out),
extend(@Node_out, ACI_out, me) :- [13] M.J.FreedmanandR.Morris. Tarzan: APeer-to-Peer
incoming(CID, X), p_forward(P), X <= P, AnonymizingNetworkLayer.InCCS,Washington,D.C.,
ACI_out = f_gen_aci(),
November2002.
random_jondo(&Node_out).
[14] K.P.Gummadi,S.Saroiu,andS.D.Gribble. King: Es-
Rulec2comparestherandomnumber(X)againstthe timating Latency between Arbitrary Internet End Hosts.
In ACM SIGCOMM Workshop on Internet Measurment
probabilityofextendingthepathforward,(P).IfX≤P,
(IMW),2002.
then rule c2 generates an outgoing ACI, and selects a
[15] M. A. Kaafar, L. Mathy, C. Barakat, K. Salamatian,
jondouniformlyatrandomtoserveasthenextrelayin
T. Turletti, and W. Dabbous. Securing Internet Coordi-
the circuit. Alternatively, if X > P, another set of rules
nate Embedding Systems. In ACM SIGCOMM, August
relaysaconfirmationbacktotheinitiatorinforminghim
2007.
thatthenewlyinstantiatedpathisreadyforuse. [16] M. A. Kaafar, L. Mathy, T. Turletti, and W. Dabbous.
RealAttacksonVirtualNetworks: VivaldiOutofTune.
References InSIGCOMMWorkshoponLarge-ScaleAttackDefense
(LSAD),pages139–146,2006.
[17] “King”DataSet.Availableathttp://pdos.csail.
[1] Tor Directory Protocol, Version 3. https: mit.edu/p2psim/kingdata/.
//git.torproject.org/checkout/tor/
[18] E. Kohler, R. Morris, B. Chen, J. Jannotti, and M. F.
master/doc/spec/dir-spec.txt.
Kaashoek.TheClickModularRouter.ACMTransactions
[2] D. G. Andersen, H. Balakrishnan, M. F. Kaashoek, and ofComputerSystems,18(3),2000.
R.Morris. TheCaseforResilientOverlayNetworks. In [19] B. T. Loo, T. Condie, J. M. Hellerstein, P. Maniatis,
HOTOS’01:ProceedingsoftheEighthWorkshoponHot T.Roscoe,andI.Stoica.ImplementingDeclarativeOver-
TopicsinOperatingSystems,page152,2001. lays. InSOSP,2005.
[3] K. Bauer, D. McCoy, D. Grunwald, T. Kohno, and [20] B. T. Loo, J. M. Hellerstein, I. Stoica, and R. Ramakr-
D. Sicker. Low-Resource Routing Attacks Against Tor. ishnan. Declarative Routing: Extensible Routing with
InProceedingsofthe2007ACMWorkshoponPrivacyin DeclarativeQueries. InSIGCOMM,2005.
ElectronicSociety,pages11–20,2007. [21] H. Madhyastha, E. Katz-Bassett, T. Anderson, A. Kr-
[4] O. Berthold, H. Federrath, and M. Ko¨hntopp. Project ishnamurthy, andA.Venkataramani. iPlaneNano: Path
“AnonymityandUnobservabilityintheInternet”.InCFP PredictionforPeer-to-PeerApplications. InProc.ofthe
’00: ProceedingsoftheTenthConferenceonComputers, USENIX Conference on Networked Systems Design and
FreedomandPrivacy,pages57–65,2000. Implementation(NSDI),2009.[22] Y. Mao, B. T. Loo, Z. Ives, and J. M. Smith. MO- [38] M.Sherr,B.T.Loo,andM.Blaze.TowardsApplication-
SAIC: Unified Platform for Dynamic Overlay Selection Aware Anonymous Routing. In Second USENIX Work-
andComposition. In5thACMInternationalConference shoponHotTopicsinSecurity(HotSec),August2007.
onemergingNetworkingEXperimentsandTechnologies, [39] C.ShieldsandB.N.Levine. AProtocolforAnonymous
2008. CommunicationovertheInternet. InCCS’00: Proceed-
[23] A. Mislove, G. Oberoi, A. Post, C. Reis, P. Druschel, ingsofthe7thACMConferenceonComputerandCom-
and D. S. Wallach. AP3: Cooperative, Decentralized municationsSecurity,pages33–42,NewYork,NY,USA,
AnonymousCommunication. In11thWorkshoponACM 2000.ACMPress.
SIGOPS European Workshop: Beyond the PC, page 30, [40] R.SnaderandN.Borisov. ATune-upforTor: Improv-
2004. ingSecurityandPerformanceintheTorNetwork.In15th
[24] S.J.MurdochandR.N.M.Watson.MetricsforSecurity AnnualNetworkandDistributedSystemSecuritySympo-
andPerformanceinLow-LatencyAnonymitySystems.In sium(NDSS),February2008.
8th Privacy Enhancing Technologies Symposium (PETS [41] I. Stoica, R. Morris, D. Karger, M. F. Kaashoek, and
2008),July2008. H.Balakrishnan.Chord:AScalablePeer-to-PeerLookup
[25] T.S.E.NgandH.Zhang. ANetworkPositioningSys- ServiceforInternetApplications. InSIGCOMM,2001.
temfortheInternet. InProceedingsofthe2004USENIX [42] B. Wong, A. Slivkins, and E. G. Sirer. Meridian: a
AnnualTechnicalConference,June2004. Lightweight Network Location Service without Virtual
[26] L.ØverlierandP.Syverson. LocatingHiddenServers. Coordinates. InSIGCOMM,2005.
InIEEESymposiumonSecurityandPrivacy,2006. [43] D. J. Zage and C. Nita-Rotaru. On the Accuracy of
[27] K.ParkandV.Pai.CoMon:AMonitoringInfrastructure DecentralizedVirtualCoordinateSystemsinAdversarial
for PlanetLab. http://comon.cs.princeton. Networks. InCCS,2007.
edu. [44] L.Zhuang,F.Zhou,B.Y.Zhao,andA.Rowstron.Cash-
[28] PlanetLab. http://www.planet-lab.org. mere: Resilient Anonymous Routing. Proc. of NSDI,
[29] R. Ramakrishnan and J. D. Ullman. A Survey of Re- 2005.
searchonDeductiveDatabaseSystems. JournalofLogic
Programming,23(2),1993.
[30] M.Reed,P.Syverson,andD.Goldschlag. Anonymous
Connections and Onion Routing. IEEE Journal on Se-
lectedAreasinCommunications,16(4),May1998.
[31] M.K.ReiterandA.D.Rubin. Crowds: Anonymityfor
WebTransactions. InACMTransactionsonInformation
andSystemSecurity,1998.
[32] M. Rennhard and B. Plattner. Introducing MorphMix:
Peer-to-PeerBasedAnonymousInternetUsagewithCol-
lusion Detection. In WPES ’02: Proceedings of the
2002ACMWorkshoponPrivacyintheElectronicSoci-
ety,pages91–102,2002.
[33] D. Saucez, B. Donnet, and O. Bonaventure. A
Reputation-BasedApproachforSecuringVivaldiEmbed-
dingSystem.InDependableandAdaptableNetworksand
Services,2007.
[34] Y.ShavittandT.Tankel. Big-bangSimulationforEm-
beddingNetworkDistancesinEuclideanSpace. InIEEE
Infocom,April2003.
[35] M. Sherr. Coordinate-Based Routing for High Perfor-
manceAnonymity. PhDthesis,CISDepartment,Univer-
sityofPennsylvania,2009.
[36] M.Sherr,M.Blaze,andB.T.Loo. ScalableLink-Based
RelaySelectionforAnonymousRouting. In9thPrivacy
Enhancing Technologies Symposium (PETS 2009), Au-
gust2009.
[37] M.Sherr, M.Blaze, andB.T.Loo. Veracity: Practical
SecureNetworkCoordinatesviaVote-basedAgreements.
InUSENIXAnnualTechnicalConference(USENIX’09),
June2009.