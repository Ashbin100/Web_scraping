Stealth DoS Attacks on Secure Channels
AmirHerzberg∗ and HayaShulman†
BarIlanUniversity
DepartmentofComputerScience
RamatGan,52900,Israel
Abstract 1.Introduction
Denial/Degradation of service (DoS) attacks pose an
We initiate study of the use of ‘secure tunnel’ proto-
ever growing threat to Internet services and applications.
cols, specifically IPsec, and its availability and perfor-
Securechannelprotocols,withIPsec[27,38]beingthepre-
mance guarantees to higher-layer protocols, in particular
dominant one, are used to securely connect virtual private
TCP,againstDenial/DegradationofService(DoS)attacks.
networks (VPN), i.e., authenticate data and origin, ensure
IPsec is designed to provide privacy and authentication
confidentiality,andperformance. IPsecisdesignedtopro-
againstMITMattackers,andemploysananti-replaymech-
tectagainstman-in-the-middle(MITM)adversariesthatcan
anism to ensure performance. For our analysis, we define
eavesdrop on the communication and inject spoofed seg-
a new family of adversaries, the stealth denial and degra-
ments into the message stream. It is widely believed, and
dationofservice(DoS)adversaries. Theseadversariesare
also specified e.g., in [27], that IPsec also defends higher-
weakerthantheclassicalMITMadversary, andmaybeof
layer traffic from DoS attacks when attacker has limited
interest in other works. We analyse their ability to launch
resources (e.g., can only block, inject or reorder a limited
(DoS) attacks on secure channels, and show realistic am-
number of packets). Defense against DoS attacks is often
plificationattacks,disruptingTCPcommunicationoverse-
animportantconsiderationinadoptingIPsecforprotecting
cure VPNs using IPsec. In particular, we show that anti-
aVPN(ratherthansayusingSSL/TLS[22,14]). Weshow
replaymechanismiscriticalforperformancebylaunching
thatthisbeliefisnotpreciseandthatIPsecdoesnotdeliver
a DoS attack on communication over IPsec without anti-
on its performance guarantees, by presenting several DoS
replay window. We present attacks exploiting insufficient
attacksonTCPwhenusedoverIPsec.
IPsec anti-replay window size, and show how to calculate
TCP[35]isthetransportlayercommunicationprotocol
correct window size. Finally we present attacks on IPsec
that underlies most Internet applications, e.g., web, mail,
withcorrectlyadjustedanti-replaywindowsizethusshow-
file transfer, remote access. TCP provides a reliable and
ingthatevenlargeanti-replaywindowdoesnotensureper-
connectionorientedservicetoitsusers,allowsfairsharing
formance to TCP flows. We then suggest a fix to TCP in
of network resources with mechanisms for flow and con-
IPsec gateway designed to prevent the above attacks, and
gestion control. However, TCP does not provide security
toprovidesecurechannelimmunetodegradationandother
guaranteesagainstnetworkadversaries.
DoS attacks. Our solution involves changes (only) to the
Our attacks raise the following question: what are the
sending gateway machines running IPsec. In addition to
properties that secure channel should satisfy to protect
their practical importance, our results also raise the chal-
against performance degradation attacks? Existing works
lengeofformallydefiningsecurechannelsimmunetoDoS
donotanalysethepropertiesthatsecurechannelprotocols
anddegradationattacks,andprovidingprovably-secureim-
should possess to protect against denial of service attacks.
plementations.
Thereareworksthatattempttodefinewhatsecurechannel
is, e.g., [12], but they fail to capture performance analysis
ofsecurechannel,i.e.,efficiencyandresistancetodenialof
service attacks. Herzberg and Yoffe [21] present a frame-
work that allows to define specifications that capture such
∗Amir.Herzberg@gmail.com properties, and suggest further research on defining secure
†Haya.Shulman@gmail.com channel protocols within that framework. However, theydo not present such specifications for DoS-preventing se- withahighersequencenumber. Topreventthistypeofat-
curechannelprotocols,ordemonstratethatexistingsecure tacks,itissuggestedtorunGREoverIPsec,however,aswe
channelprotocolsfailtoprotectagainstDoS.Ourworkpro- show in this work, IPsec does not protect against this type
vides such demonstration; we hope that it will prompt re- ofattacks.
search leading to such specifications and provably-secure In all our attacks we assume a stealth attacker model,
DoS-preventing channels. Specifically, we show that al- presented in Section 2.2, that can with minimal effort sig-
thoughIPsecemploysananti-replaymechanismthatistar- nificantlydegradetheperformanceofcommunicationover
getedatensuringperformancebydetectinganddiscarding TCP.Ourattackermayberestrictedinitseavesdroppingca-
spoofedduplicatepacketsinjectedbyaMITMadversary,it pability(maybeabletoeavesdropononenetworksegment
failstocounterdenial/degradationofservice(DoS)attacks. but not the other), as well as in the number of (spoofed)
WeshowDoSattacksthatexploitcongestioncontrolmech- packets that it can inject. For instance, in wireless net-
anismofTCP. workattackercanonlyeavesdroponwirelesscommunica-
In each section we present different techniques for tion,andmaybeabletoinjectsegmentsinthewiredaccess
exploiting the vulnerabilities of TCP congestion control network. Often attackers may be limited in their spoofing
mechanism, which rely on slightly different adversarial ability, e.g., attacker is able to disrupt communication by
model.Theattackswepresentrelyonstandardbehaviourof infiltrating a small device which has a limited power. In
correctlyimplementedTCPcongestioncontrolmechanism. addition, attackers typically prefer to avoid detection, thus
We then analyse the impact that these attacks can have on spoofing a limited number of segments. Note that our at-
TCP performance (when run over IPsec). In addition, we tacks exploit the congestion control of TCP, by injecting
demonstrate the necessity for and motivate the anti-replay duplicate segments. This strategy allows attacker to evade
mechanism of IPsec, by presenting simple attacks on TCP DoS detection mechanisms, e.g., consider a sequence of
congestioncontrolmechanismwhenIPsecisusedwithout routers on the path between source and destination, where
theanti-replaywindow. Wealsoinvestigatethecorrectsize the attacker controls one of the routers. The router simply
of IPsec’s anti-replay window, and show attacks when in- duplicatessomeofthesegmentsthattraverseit,andreroute
correctwindowsizeisused. Wealsoshowhowtocompute themviaanalternativepath. Thusthemaliciousroutercan-
correctanti-replaywindowsize. Yet,weshowdegradation not be traced back. On the other hand, if the router sim-
of service attacks by stealth adversary (defined in Section ply dropped occasional segments, this could be detected,
2.2),evenwhensufficientanti-replaywindowsizeisused. andtheattackwouldbetracedbacktothemaliciousrouter.
FormoredetailsonattacksonwirelessnetworksbyMITM
In Section 5.3 we discuss solutions to combat the re-
adversary (and limitations) can be found in [33]. Similar
orderingattacks(whetherbymaliciousadversary,ordueto
attacker model was considered in [36], which investigated
benignnetworkcongestion),andpresentafixinIPsecgate-
anExplicitCongestionNotification(ECN)withIPsec. We
way, to address the reordering of packets. Our goal is not
discussthisbrieflyinRelatedWorksinSection1.2.
torequirechangesintheTCPprotocolineveryhostsepa-
rately, but to apply the modification to the firewall, and as
a result to protect subnet of hosts. Many private networks 1.1.OtherDoSAttacksonIPsec
connectedtotheInternetareprotectedbyfirewalls.Firewall
protection is based on the idea that all packets destined to In this work we consider DoS attacks by stealth attack-
hostsbehindafirewallhavetobeexaminedbythefirewall. ers,thatcaneavesdropandspoofpackets,yetevenweaker,
Whenappliedtofirewall,ourmechanismrequiresminimal blind spoofing, attacker can mount a DoS on IPsec. For
changestoexistingimplementations,tocombattheattacks instance, it is known that fragmentation can expose IPsec
presentedintherestofthispaper.Oursolutioniscomprised to DoS attacks, e.g., IPsec cannot prevent attacks on frag-
oftwophases: firstdetectionandthenpreventionofanat- ments’ buffer at the recipient if fragmentation is allowed.
tack, andisbasedondelayingcongestionnotification, i.e., Specifically,sinceauthenticationisperformedpriortofrag-
duplicateACKs,anddiscardingifturnedouttobefalse. mentation, spoofingattackercouldlaunchaDoSattackby
Ourstealthattackscanbeappliedtoothertunnelingpro- swampingthereceivinggatewaywith(maliciouslycrafted)
tocols, e.g., to the widely used tunneling Generic Routing IP fragments, which could not be reassembled, thus legiti-
Encapsulation (GRE) mechanism, see [15]. According to matepacketscouldnotbeaccepted,e.g.,in[25].Thisattack
[15],GREspecifiesaprotocolforencapsulationofanarbi- ismadepossibleduetothefactthatIPsecreassemblesthe
traryprotocoloveranotherarbitrarynetworklayerprotocol, fragments prior to authenticating them, and the attack can
and is a common way to achieve tunneling of IP encapsu- bepreventedbydefiningminimalfragmentsizeandnotal-
lated inside IP. GRE does not provide authentication, i.e., lowingfragmentation;anothersolutionistoonlyallowpre-
itisvulnerabletospoofingadversary; toperformdenialof fragmentation,i.e.,fragmentationbyIPsecgatewaypriorto
serviceagainstGRE,anattackercansimplysendasegment applyingIPsecprocessingontheoutgoingpacket.Another attack is returning an ICMP port unreachable er- briefly recap several types of DoS attacks, using different
ror message which would force the sender to reduce frag- (roughly,diminishing)adversarialcapabilities.
ments’ size until no (or minimal size, e.g., Byte) packets The basic distributed denial of service attack is brute
can be exchanged, discussed in [16]. This attack is pre- force or flooding, see e.g. [23, 13], and SYN attack in
vented trivially against a spoofing attacker; IPsec packets [37]. Flooding DoS attacks typically utilise a large num-
include the security parameters index (SPI), used to iden- berofcompromisednodesinordertoconsumenetworkre-
tify the security association (SA) used for the connection, sources by flooding an Internet link, and thus shutting off
inpackets’headers. Inaddition,anICMPportunreachable TCP flows. The shortcomings of this attacks from the at-
error message includes the 8 bytes of the original packet tackerperspectiveisthattheyareeasytodetectduetohigh
(which has the SPI). The SPI field is secret and random, volumeofuniformtraffic,e.g.,networkadministratorscan
therefore cannot be known to spoofing attacker, and if in- identifyperformancedegradationininfectedmachinesand
valid SPI is received it is ignored by the receiving IPsec eliminatethevulnerabilitiesthatallowedtheattack. Alter-
gateway. Yetthissolutiondoesnotholdagainstourstealth nately, an ISP can block the malicious traffic. In addition,
attackersinceitcanobservetheSPIvalueinpackets’head- attacker may also be blocked by rate controls or limited
ers, and can thus forge a correct and valid SPI. However, by bandwidth of a zombie. However, recently it has been
thisattack(asopposedtoours)canalsobeprevented,e.g., shownthatattackerscanachievesimilaroutcomeswithout
bydefiningminimalfragmentsize, andoncereachingthat overloadingthesysteminapersistentmanner,usingattacks
size gateway would ignore further ICMP port unreachable suchasdescribednext(andsuchastheattacksinvestigated
messages. Anothersolution,againstastealthattacker(that inthispaper). TCPtargeted(low-rate)Shrewattacks, [29]
cannotdroppackets)canbetocheckifACKsarrive,inre- exploittheretransmissiontimeout(RTO)ofTCP,bytrans-
sponsetotransmittedmessages,e.g.,likeinourourstealth mittingshorttrafficpulsesofRTTscalelength, oflowav-
attacks,thenignoretheICMPportunreachablemessages. erage volume of RTO scale periods, causing TCP flows to
DoSattackscanalsobelaunchedonIKE(keyestablish- continually timeout. The result is near zero TCP through-
ment protocol of IPsec), which was designed to run over put. Due to the nature of the attack traffic it can be hard
UDPinordertoavoidDoSattacksonTCP.In[25],theau- to distinguish it from other legitimate traffic, e.g., video.
thorsshowanattackonIKE,byexploitingfragmentation. Low-rate TCP attacks are much harder to detect, and re-
A vulnerability of IPsec to DoS when using Explicit quire much weaker attacker capabilities, i.e., the attacker
Congestion Notification (ECN) is investigated in [36]. If cansimplygenerateburstyUDPflowsoflowaveragerate.
the IPsec gateway at the exit of the tunnel does not copy
Low-rate TCP targeted Reduction of Quality (RoQ) at-
theECNbit,thenitruinstheECNmechanism;ontheother
tacksareanothertypeoflow-rateTCPattack,introducedin
hand, if the gateway copies the ECN bit, then an attacker
[18,19,32],whereattackerexploitstheTCPAIMDmecha-
candegradeperformance. Theattackcanbelaunchedsince
nismcausingTCPperformancedegradation. Themaindif-
the authentication that IPsec performs does not protect the
ference is that RoQ attacks do not require precise timing
ECN bit. However, there is noanalysis of this attack; such
(totunetotheRTOfrequency). TheRoQattacksareeven
analysisisrathersimilartotheanalysiswepresent,ofsim-
moredifficulttodetectandblock,sincetheydonotoperate
ilarattacks. Inaddition,ourattacksworkevenifECNbitis
at specific intervals. In [32] authors suggest a type of at-
notused,aswellasiftherecommendationoftheRFCnotto
tackssimilartoRoQattacks,i.e.,thepulsingattacks,which
copytheECNbitfromtunneledpacketsisfollowed. Note,
are targeted at TCP applications. The pulsing attacks can
that the authors of [36] consider similar adversarial model
becategorisedintotwomodels: timeout-basedattacks,and
toours,i.e.,theyconsidera‘weakerMITM’attackermodel
AIMD-basedattacks,dependingonthetimingoftheattack
liketheonewepresentanddefineinSection2.2,although
pulsesw.r.t. congestionwindowofTCP.Duringtheattack,
wealsoconsiderduplications, anddonotconsidermodifi-
pulsesofmalicioustrafficaresenttoavictim, resultingin
cationstolegitimatepackets,e.g.,turningon/offECNbit.
packetlosses. Authorsof[32]showthatevenasmallnum-
berofattackpulsescancausesignificantthroughputdegra-
1.2.RelatedWorks dation. Recently, in [1], a new denial of service attacks,
dubbed JellyFish, were exhibited. JellyFish attacks target
1.2.1.Denial/Degradation-of-Service(DoS)Attacks TCPcongestioncontrolmechanismofTCPflows, byhav-
ing the relay nodes misorder, delay or drop packets which
Denial/DegradationofService(DoS)attacks, andespe- theyareexpectedtoforward.
ciallyDistributedDoS(DDoS)attacks,poseaseriousthreat LowrateTCPtargetedattackscanbepreventedbyusing
toInternetapplications. Inthelastyears,DoSattackmeth- securechannelprotocolbetweenthegateways,e.g.,LOTin
ods and tools are becoming more sophisticated, effective, [16],andusingmechanismsthatprovidequalityofservice
and also more difficult to trace to the real attackers. We bydifferentiatingtraffic, e.g., DiffServ[7]. Namely, whenemploying DiffServ, flows are given different priority, and anti-replaymechanismofIPsecisusedtosecureIPagainst
flows over a secure channel can be given higher priority, an adversary that can insert possibly replayed messages in
and will be reserved space in routers buffers. Alternately, themessagestream,andasaresultpreventdenialofservice
non-conforming packets can be dropped or given a lower attacks. Inparticular,theauthorsof[43]presentrobustness
priorityandplacedindifferentqueues. to DoS attacks as one of the requirements of anti-replay
mechanism,andclaimthatthepossibilitythatpacketswill
1.2.2.MakingTCPRobusttoReordering be dropped is traded with the prevention of replay attack.
Weshowthatevenlargeenoughanti-replaywindowcannot
preventDoSattacks,andinSection5wepresentanewtype
Some of our attacks, e.g., Section 5, are based on (ma-
oflow-rateTCPattacks,thereorderingattacks,whichsig-
licious) reordering of network packets, and we propose a
nificantlydegradeperformanceevenwhensufficientlylarge
fix to TCP in IPsec gateways. Our solution may also be
IPsecwindowisused.
integrated in TCP in each host, to handle benign network
reordering (yet further research is required to present ex-
perimentalworkandanalysis). 1.3.Contributions
AwiderangeofTCPmodificationshasbeenproposedto
improverobustnesstoreordering,e.g.,[8,41,10,6,40,11]; We show that IPsec alone cannot provide protection
seeasurveyin[30]andananalysisin[8]. Existingworks against DoS. The contributions of this work can be sum-
focusonbenignnetworkreordering.In[4]authorsdescribe marisedasfollows:
acollection oftechniquesthat provideoneway reordering
• We identify an important attack model, the stealth at-
measurementsinbothdirectionsbetweenaclientandmost
tack, which was not explicitly defined prior to this
TCP based servers on the Internet, and propose a metric
work.
to summarise reordering activity. In [30] the authors con-
sider the impact of packet reordering on TCP, and survey
• WejustifyandanalyseIPsec’santi-replaymechanism,
approaches to handle the issue. Authors identify two ap-
Section 3, and show how to compute optimal IPsec
proaches: theordinalapproachandthetemporalapproach.
anti-replay window to prevent packets loss due to re-
EifelandDSACKbasedalgorithmsareexperimentalRFCs.
orderingattacksinSection4.
1.2.3.InternetProtocolSecurity(IPsec) • We present degradation of service attacks on TCP
when running over IPsec, which work even when a
InternetProtocolSecurity(IPsec),in[27],providesnet- largeIPsecanti-replaywindowisemployed,Section5.
work layer security against MITM attackers, offering pri- Weanalyseourresultswithasimpleanalyticalmodel
vacyand/orintegritytotheexchangedcommunication,and ofTCPperformancedegradation.
authenticatessourceofIPpackets,i.e.,preventsspoofingof
• We propose a fix to TCP in IPsec gateways, Section
IP addresses. IPsec can be used in two modes: transport
5.3,topreventthestealthreorderingattacks.
or tunnel, and has two security protocols ESP, providing
encryptionandoptionalauthentication, andAH,providing • Conceptual contribution: we initiate investigation of
authentication. IPsecemploysananti-replaywindowtoen- the performance properties that secure channel proto-
sure performance by preventing duplicates, i.e., replays of colsshouldprovide.
thecommunicationexchangedbythelegitimateparties,by
discarding duplicate segments at the receiver. In a replay
2.Model
attack an adversary sends a copy of previously transmit-
ted,legitimatemessagebetweenasenderandareceiver,see
[39]formoredetails.Whenthereplayedpacketreachesthe Inthissectionwepresentthescenariowhichweconsider
destination, it will be passed to the transport layer buffer. inthepaper, wemodelandmotivatetheattacker, andgive
Duplicatemessagesdegradeperformanceandisanobvious assumptionsonthecommunication.
motivation for anti-replay window. Maintaining and man-
aging an anti-replay window can require significant mem- 2.1.ScenarioandAttackModel
oryresources,;optimisationofanti-replaymechanism,e.g.,
[24, 17, 43] try to come with more efficient implementa- Consider the scenario presented in Figure 1, with a vir-
tions. Yet some solutions, e.g., [17], that attempt to save tualprivatenetworkbetweentwobranches,bothconnected
resourcesby decreasingwindow sizeare susceptibleto at- viagatewaysGW1,GW2totheInternet. Allthecommu-
tacks, whichmayresultinmoredamagethannotusingan nication between the branches is over IPsec, using IPsec’s
anti-replaywindowatall.Accordingto[27,24,17,43],the ESP mode with authentication. For simplicity, we assumeNYC site LA site (ρ,σ)-limited stealth attacker can create a σ−burst which
Web Server is a burst of σ segments. We show that even this weaker
attackercandramaticallydegradeperformance,evenwhen
communicationisprotectedbyIPsec.
Public
GW1 Internet GW2 We consider stealth (i.e., weak MITM) attackers, and
Mail Server packets they inject can depend on the packets they eaves-
drop. In fact, since the communication between the two
FTP Server gateways is authenticated (using IPsec), it follows that the
attacker
adversarycaneffectivelyonlyduplicatepackets,andpossi-
Figure 1: Virtual private network behind gateway GW1 with bly‘speedup’deliveryofaduplicatesoitwillarrivebefore
users accessing servers located behind GW2. IPsec is used for theregularly-sentpacket,e.g.,viaanalternativepath. Note
protection,andastealthadversaryislocatedontheInternet,and thattheattackermaybelimitedinthedirectioninwhichit
attackingaVirtualPrivateNetwork(VPN)betweentwosites. can inject spoofed segments, e.g., can only duplicate seg-
mentssentfromNYCsitetoLAsiteinFigure1,butcannot
duplicatesegmentsintheotherdirection.
thattheclientsarelocatedbehindGW1,andtheserversare
In each attack we present we use a slightly different
located behind GW2. The clients send requests to down-
variant of the (ρ,σ)-limited stealth attacker; the different
loadfilesfromservers,andserverssendtherequestedfiles
variants of the attacker model are illustrated in Figures 2,
inresponse.WeassumethatallcommunicationisoverTCP,
and 3 and defined below; The weakest stealth adversary
anduponeachcorrectlyreceiveddatasegment,aclientgen-
(Figure 2) can duplicate packets. A stealth attacker in
erates and sends an acknowledgment (ACK). An attacker
Figure 3, can also reorder packets1 by speeding them
located on the Internet between the two gateways, GW1
up, e.g., via a faster route, in addition to its ability to
andGW2,inFigure1,isabletoeavesdroponthecommu-
duplicate packets. We now model the attackers based on
nication and inject (a limited number of) packets into the
thedefinitionsabove:
messagestream, butcannotdroplegitimatepackets. More
detailsontheattackerarepresentedinthenextsubsection.
σ-Duplicating stealth attacker (Figure 2): this is the
weakest adversary model we consider. As the name im-
2.2.StealthAdversaryModel
plies,theduplicatingattackercanduplicatepackets,sothey
are received σ number of times instead of once. Specifi-
Inthiswork,wedefineandconsiderthestealthadversary
cally,letibeasequencenumberofsomepacket. Packeti
model that can eavesdrop on communication, and spoof
was duplicated if σ identical copies of packet i arrived (in
packets(basedonpacketsitobserved),butcannotdelayor
addition to the original packet i) with sequence duplicate
droppackets;the‘classical’man-in-the-middle(MITM)ad-
packets.
versary can eavesdrop, intercept communication, drop and
We use the duplicating attacker to motivate the use of
inject spoofed packets into the message stream. Attacker
anti-replaywindowmechanisminIPsec;forthisattack,we
thatdropspackets,i.e.,MITM,candisruptcommunication
onlyneedtosendσ =3duplicatesofafewpackets.
and mount a denial of service attack, e.g., by blocking all
communication, yet we are interested in sophisticated am-
s-Reordering attacker (Figure 3): our next attacker
plification attacks where attacker spends considerably less
can duplicate σ packets and cause the duplicate(s) to be
resources w.r.t. the resulting damage. In addition, in real-
delivered via a faster route to the destination, i.e. faster
ityattackersoftendonothaveMITMcapabilities;andeven
than the delay of other packets (including the original du-
whenattackerscandroppacketstheyoftenprefertorefrain
plicated packet). Let 1,2,3,... be a sequence of transmit-
whenanalternativeexists,inordertoavoiddetection.
ted packets (bounded by the maximal number of packets
Like in low rate attacks [29], we restrict the attacker’s
in transit, see Claim 4). An s-reordering occurs if packet
ability to send (inject) spoofed and/or duplicated packets.
withsequencenumberiarrivesbeforepacketwithsequence
Specifically,webelievearealisticmodelwouldbetodefine
number i − s. We later show how such an attacker can
a quantified, (ρ,σ)-limited stealth adversary following the
disrupt communication over IPsec implementations which
‘leakybucket’approach. Namely, an(ρ,σ)-limitedstealth
use an insufficiently-large anti-replay window. We believe
adversaryisonewhocansend,duringanyintervaloflength
that such reordering capability may often be available to
T, at most ρ · T + σ spoofed and/or duplicated packets.
attackers and is therefore a reasonable model, e.g., an at-
Theselimitationsareweakercomparedtothoseoflow-rate
attacks,e.g.,[29,19,32],sincetheattackerisnotjustlim-
1Furtherresearchshouldbeconductedtoconsiderthedamagethatat-
ited in the amortised traffic, but also cannot create bursts
tackerswithoutspeed-upcapabilities,i.e.,withthesamedelayasthelegit-
oftraffic. Inparticular, theburstsarelimitedbyσ, i.e., an imatecommunicatingparties,caninflict.n
nn-1 444321 nn-1 321
Figure2: Duplicatingstealthadversary. Figure3: Reorderingstealthadversary.
tackermayreceiveservicesfromabetterISPthatprovides least delay . In addition, we assume that the attacker
MIN
a faster communication channel than the channel used by (similarlytoothernetworkentities)issubjecttosomenon-
thecommunicatingparties,thusattackercanreorderpack- zero network delay, which may be smaller than that of the
ets by sending duplicates over a faster route; or attacker legitimate parties, and which the attacker cannot change.
may control zombie computers that will send more traffic ThroughoutthepaperwedenotebyRTT(RoundTripTime)
ontheroutebetweenthetwogateways,causingsignificant thetimeittakestotransmitasegmentfromaclientintothe
queuing delays there, while the attacker speeds-up the du- networkandtoreceiveanacknowledgment(ACK)foritin
plicatepacketviaadifferentpathtothedestinationgateway. response. Namely, RTT is the sum of segment’s transmis-
Weassumethatattackerhassomenon-zerodelay,whichis sion time, propagation delay, transmission of ACK and its
smallerthanthatofthelegitimateparties. Specifically,ad- propagation delay back to the sender, including any queu-
versaryissaidtobeans-reorderingstealthattacker,ifitcan ingandprocessingdelaysinvolved. Theattackswepresent
causedeliveryoftheduplicatepacketwithsequencenum- apply to standard TCP implementations [35]; TCP state
beri,beforepacketwithsequencenumberi−s(beforethe machine is in Figure 5 (from [28]). We assume that the
deliveryoftheoriginalpacketi). Thereorderingparameter connection is always open, and that the sender sends full
isafunctionofattacker’sdelayandthedelayofthelegiti- sizedsegmentsasfastasitscongestionwindowallows. For
mate parties. The justification of our adversarial model, is simplicity (only), assume that the recipient acknowledges
that we focus on the use of IPsec, and IPsec is necessary every segment received from the sender, i.e., no delayed
onlywhenthereisconcernaboutMITM.Inparticular, the ACKs2. Foreaseofexposition,weworkwithsegmentsin-
anti-replaymechanismthatIPsecemploysisusedtoprevent steadofbytes(whichiswhatTCPactuallysends). Wealso
injectionofduplicatesegments,byidentifyinganddiscard- assume that flow control does not restrict congestion win-
ingreplayedpackets. Thistypeofattackcanbeperformed dowgrowth. Letcwnd(t)bethecongestionwindowsizeat
by attacker that can eavesdrop and inject spoofed packets, timet.WeanalyseTCPthroughputintermsoftransmission
i.e.,aMITMattacker. rounds,eachroundstartingwiththesendertransmittingthe
As we mentioned before, we are not interested in triv- first segment in a window of size cwnd(t) at time t. Each
ial ‘flooding’ attacks where the attacker achieves degrada- round ends when the sender receives an ACK for one of
tionbyspendingresourcesproportionaltotheperformance thesegmentsinawindow. Inthismodel,thedurationofa
degradation achieved, e.g., attacker injected two packets round is the round trip time (RTT), and is independent of
thus the link carries additional load, and IPsec has to in- the window size. Notice that at any time t holds that the
specttwomorepackets,resultinginsomedegradationper- number of ‘pending’ packets in transit at time t is smaller
formance but also attacker’s ‘cost’ is proportional. We are (or equal) to congestion window size at time t (unless the
focusonamplificationattackswheretheattackerpaysmin- senderisin‘fastrecovery’phaseattimet).
imal resources with respect to the inflicted damage, e.g.,
injects three packets, but with a devastating result on the 3.MotivatingAnti-ReplayWindow
attackedflows.
In this section we consider a general question of anti-
2.3.CommunicationModel replaymechanism.Morespecifically,shouldasecurechan-
nelprotocolthataimstoprotectagainstdenial/degradation-
WeassumethatpacketsarrivalisorganisedinFIFO(first of-service(DoS)attacks,employananti-replaymechanism.
in first out) and that they are delivered with fixed latency IPsec employs an anti-replay mechanism although replay
whichisknowntotheattacker. Thedelayofpacketsisbe- sensitive protocols over IP are typically robust to replay,
tween delay and delay (if a packet does not ar- e.g.,TCP.Ouranswertothisquestionispositive: weclaim
MIN MAX
rive within delay seconds it is assumed to have been
MAX 2WhenreceiversendsanACKforeveryothersegment,i.e.,usesde-
loast)whichtheattackercanchoose. Deliveryofattacker’s
layedACK,thecongestionwindowgrowsinlessthanonesegmentper
packets may not be in FIFO but their but the delay is at RTT;thisdoesnotsignificantlychangeourresults.(2.a) new ACK
(1.b) new ACK
cwnd = cwnd+MSS(MSS/cwnd)
cwnd = cwnd+MSS (1.c) duplicate ACK dupACKcnt = 0
d Su ep nA dC K (c cn wt n d= - u0 nACKed) new bytes dupACKcnt++ (2.c) timeout Send (cwnd-unACKed) new bytes
thresh = cwnd/2
(1.a) ᴧ cwnd = 1MSS
dupACKcnt = 0
cwnd = 1MSS retransmit missing segment Congestion
Thresh = 64KB Slow start avoidance
dupACKcnt= 0 (1.f) cwnd ≥ thresh
ᴧ
(2.b) duplicate ACK
(1.d) timeout
dupACKcnt++
ssthresh = cwnd/2 (3.b) timeout (3.c) new ACK
cwnd = 1MSS
dupACKcnt = 0 thresh = cwnd/2 cwnd = thresh
retransmit missing cwnd = 1 dupACKcnt = 0
segment dupACKcnt = 0
retransmit missing
segment
(1.e) dupACKcnt==3 (2.d) dupACKcnt==3
thresh = cwnd/2 thresh = cwnd/2
cwnd = thresh+3 cwnd = thresh+3
retransmit missing Fast retransmit missing
segment recovery segment
(3.a) duplicate ACK
cwnd=cwnd+MSS
Send (cwnd-unACKed) new bytes
Figure5: TCPcongestioncontrolstatemachineofthesender(basedon[28]).
that anti-replay mechanism is essential to counter DoS at- 3.1. ACK Duplication Attack: Stealth DoS on
tacks, and we show that protocols that provide only confi- ChannelwithoutAnti-ReplayMechanism
dentialityandauthenticationarevulnerabletoDoSattacks.
Inparticular,wefocusonIPsec,whichisoftenusedtopro- Client behind GW1 requests to download a file from
vide solutions at the channel layer. IPsec standard, [26], serverbehindGW2,asinFigure1. Theattackispresented
requires anti-replay mechanism to identify and discard re- in Figure 6. The main idea of the attack is to duplicate a
played packets in order to prevent DoS attacks, e.g., [43], legitimateACKsentbytheclientinresponsetosomeseg-
claim that the reason for anti-replay mechanism is to save ment, and retransmit three duplicate copies of that ACK.
CPU cycles which will be wasted on replayed packets, as TCP considers the receipt of three duplicate ACKs as an
wellastopreventincorrectbillinginformation. Yettoob- indication of lost segment, which in turn can be a sign of
tain access to a service or resource, attacker will have to congestion (see Figure 5). As a result, TCP at the sender
obtain secret keys used to encrypt (and possibly authen- halvesitscongestion-controlwindow. Furthermore,ifprior
ticate) the communication, and it will not gain much by to the attack TCP connection were in ‘slow start’ phase
merely replaying already sent messages. In addition, typ- (where the congestion window grows exponentially), TCP
ically, replay-sensitive applications check for freshness of also moves to the linearly-growing ‘congestion avoidance’
messages and discard (or ignore) replayed messages. We (CA)mode,thusprematurelyabortingtheslow-startphase.
presentanadditionalmotivationforIPsecanti-replaywin- As a result, connection uses a small congestion window,
dow;morespecifically,weshowthatwithouttheanti-replay which results in severe bandwidth underutilisation. By re-
window, (amplification) degradation of service attacks on peatingthisattackperiodically,attackercanensurethatthe
congestion control of TCP can be launched with signifi- connection continuously uses very small, suboptimal win-
cant performance damages. In what follows we describe dow. In Figure 6 we present an attack on a TCP connec-
theattacksthatcouldbelaunchedifnoanti-replaymecha- tioninCAmode. Forsimplicityassumethatthecongestion
nismwereused. Theseattacksrequiremerelyaduplicating window at the beginning of first attack epoch at time t is
0
stealthattacker(seeFigure2). cwnd(t ) > 4 ∗ MSS. Since this is the first attack, ad-
0
versary did not inject any duplicate packets in the interval
(t −T,t )(andhencecansendthreepacketsatanyinterval
0 0
beginningfromt ). Assumethattheserversendsawindow
0
of k+1 segments i,...,i+k, and the client upon receipt,
transmitsk+1ACKssuchthatACKonsegmenti+k isServer Attacker Client
i
cwnd=k+1 i+1
...
#Pending segments
i+k AA CC KK :: ii +1
before 3 dup ACKs, at
(time t—) is cwnd(t—) ACK: i+k
0 0
i+k+1
...
cwnd=k+2
i+2k+1
A AC CK K:
:
i i+ +k
k
Ai C+ K2k
:
+ i+2 k+1
cwnd/2t 0 i+kACK: i+k A AC CK K:
:
i i+ +2 2kk+ +1 2
Fast retransmit t
cwnd(t 0+)=cwnd(t 0—)/2+3 t 0,cwn0 d, /0
2 i+2k+3
...
S see gn mde er
n
c tsannot transmit new
i+2k+k/2 ACK:
i+2k+3
S
t
wrae illnn ssd eme nr
i
dsc
s
a aion
t
n
mr ,e oas snu tdm e
t+RTT
ACK:
i+2k+3
c sw egn md( et
0
n— t) s/2+2 0
i+2k+3 ACK:
i+5k/2
cwnd((t+RTT)—)<cwnd(t—)/2+2
#Pendin0 g segments at tim0 e i+2k+k/2
((t+RTT)—) is cwnd(t—)/2+3
0 0
Figure6: ACKduplicationattackonTCPcongestioncontrolmechanismwhennoIPsecanti-replaywindowisemployed(Section3.1).
TheattackerduplicatesalegitimateACKsegment(sentbytheclienttotheserverinresponsetoreceiptofadatasegment)andsendsthree
duplicatecopiesofthatACKtotheserver. TheservertakesthethreeduplicateACKsasanindicationofnetworkcongestion,retransmits
‘missingsegment’andreducesitssendingrate.
lastinthewindow.Theattackbeginswhentheattackercre- to congestion, ACK segments for all pending segments at
atesthreeduplicatecopiesoflastACK(forsegmenti+k) timet eventuallyarriveattheserver. OnceACKacknowl-
0
sentbythereceiverinrecentlytransmittedwindowofACK edgingnewdataarrives,thecongestionwindowisdeflated
segments. Attimet (inFigure6)theserverreceivesthree (step(3.c),Figure5),i.e.,settohalfofitsvaluebeforethe
0
duplicateACKcopiesinjectedbytheattacker. Sinceweig- receiptofthreeduplicateACKs,i.e.,cwnd = thresh,and
noretransmissiondelays,threeduplicateACKsarriveatthe theserverenterscongestionavoidancephaseduringwhich
same time, with no other ACK segment arriving between thesendingrategrowslinearly(step(2.a),Figure5).
the most recently transmitted legitimate ACK and the re-
ceiptofthreeduplicatesofthatACK,thatwereinjectedby 3.2.ACKDuplicationAttack: Analysis
theattacker. Thisdeceivestheserverintobelievingthatthe
three duplicate ACKs are transmitted as a result of a lost
We consider a (ρ,3)-limited duplicating stealth adver-
segment in last transmitted window of segments. Receipt
sary(seeFigure2),withconstantdelays;noticewerequire
of three consecutive ACKs for segment i + k is taken as
σ = 3 since the attack requires the adversary to duplicate
an indication of congestion which resulted in loss of seg-
three3 ACKsegments. Attackercanrepeattheattackonce
menti+k. Asaresult,oncetheserverreceivesthreecon-
everyT =3/ρseconds;werefertoT asthelengthofeach
secutiveduplicateACKs,(accordingtostep(2.d)inFigure
attack epoch (or the frequency of attack epochs), i.e., the
5, if the TCP at the sender is in CA, or step (1.e) if the
timeelapsedbetweentwoconsecutiveduplicationsofthree
TCPisinslow-start)itperformsfastretransmitoftheseg-
ACKsegmentsbytheattacker. Weanalysetheoperationof
ment which it believes to have been lost (step (2.d), Fig-
TCPintheT secondsfromoneduplicationtothenext.
ure5),i.e.,transmitsthe‘lost’segmentforwhichduplicate
In Claim 1, we show that when connection is under
ACKs were generated, and sets the congestion window to
packet duplication attack, average steady state congestion
cwnd(t+) = cwnd(t− 0) +3 and thresh = cwnd(t0). The windowcwndATK isboundedby 6 (averageconges-
0 2 2 MAX ρ·RTT
serverthenentersfastrecoverymode(Figure5)untilreceipt tionwindowgrowthbetweenattackepochsisinFigure7).
ofanACKfornewdata(i.e.,onsegmenti+k+1,inFig-
ure6). SincetripleduplicateACKswerenotgenerateddue 3Injectingmorethan3duplicatesegmentswillnothavethemaximal
amplificationeffect.cwnd cwnd
cwndt1RTTcwndt11
cwndSSmax cwndSSmin1 RT
TT
cwndSSmax=cwnd 2SSmax1 RT
TT
cwndSSmax=2 R2 TT
T
cwndSSavg=3 2 2R3T
TT
cwndt4cwndt1 cwn3
dt1
cwndSSmin2
cwndt3=cwndt2 cwn1 dt2cwndt1 cwnd2
t1
cwndSSmin=cwnd 2SSmax
cwndt2=cwndt1 cwn1
dt1
t0 t0+RTT t0+2RTT t0+3RTT
...
t1=t0+T
time
t1 t2 t3 t4 t1+RTT time Figure7: Averagecongestionwindowsizecwndatsteadystate,
1 1 2 3 4 ... cwnd(t1) A SeC qK us
e nce
i af ntT i-C reP plc ao yn wne inct di oo wn i is seu mnd pe lor yp ea dck (se et ed Fu ip gl uic ra eti 6o )n
,
ra et st uac ltk inw gh inen dan to
a
transfer rate of at most cwndA MT AK X = 6. Note that the growth
Figure 4: TCPcongestionwindowgrowthincongestionavoid- RTT ρ
of window size is discrete, i.e., upon each packet arrival. When
ance phase upon receipt of each new ACK. Let t be the time
1 T =RTT,cwnd=3andthroughputisatmost 3 .
afterawindowofpacketswassentandbeforefirstACKwasre- RTT
ceived, and let cwnd(t ) be congestion window size at time t .
1 1
Thenateachtimet ,fori ∈ {2,...,RTT},wheneachACKar-
i which the congestion window increases linearly, approxi-
rives, thecongestionwindowsettocwnd(t ) = cwnd(t )+
i i−1
1 .Afterasequenceofcwnd(t )ACKs,congestionwin- mately by one segment during each RTT; analysis of lin-
cwnd(ti−1) 1 earcongestionwindowgrowthispresentedinFigure4,and
dowcwnd(t )≤cwnd(t )+1.
1 1
holds:cwnd(t+RTT)<cwnd(t)+1. Attimet (when
0,1
firstlegitimateACKarrives)theservercannottransmitnew
This window size results in data transfer rate of at most segmentsintothenetworksincecwnd(t 0,1) < cwnd(t− 0),
bcw en R vd eTA M rT yT AK X sm= all-ρ· iR n6 T fT ac2 t,( nas egw lie gis bh lo ew coi mn pC al ra ei dm to2) th, ew eh xic ph ecc ta en d w cwh ner de (tc 0w ,1n )d =(t− 0 c) wnis d 2(t th − 0e ) ,n iu .em .,b te hr eo cf op ne gn ed sti in og ns weg inm de on wts da on ed s
throughput without attack, which is the average TCP con- notallowtransmissionofnewsegments. Letnbethenum-
gestionwindow4 dividedbytheroundtriptime. Thenum- ber of pending segments at time t , then n ACKs should
0
berofattackepochsitoreachsteadystatecongestionwin- arrive at the sender at times t ,...,t at constant inter-
0,1 n
dow is i = cwnd(t−)− 2T ), which we derive in Claim vals (since we assume constant delays). After arrival of
0 RTT
3. n
2
= cwnd 2(t− 0) ACKsegments,t 0,1,...,t 0,n 2,theservercan
resume transmitting segments with each new ACK arrival,
Claim1 Steady state congestion window cwndA MT AK X of and upon receipt of cwnd(t− 0) ACK segments, a total of
TCP sender when under packet duplication attack is cwnd(t−)
0 segmentswillbetransmitted. AfterRTTseconds,
cwndATK ≤ 6 2
MAX ρ·RTT attimet +RTT theACKontheretransmittedsegmentat
0
timecwnd(t+)arrives,andthecongestionwindowsizeis
0
Proof Lett bethejth ACKsegmentreceivedbyserver,
i,j
at time t
i
after attack epoch i (described in Figure 6), i.e., cwnd(t−) cwnd(t−)
afterthereceiptofthreeduplicateACKsattimet i. Attime cwnd((t 0+RTT)+) =
2
0 + cwnd(t−0
)
=
0
t 0,1,(t 0,1 >t 0)firstlegitimateACKsegmentsentbythere- 2
ceiverafterfirstattackepoch,arrives.Sinceweassumecon- cwnd(t−)
= 0 +2
stantdelays,thefirstACKarrivingattimet 0,1isessentially 2
alegitimateACKgeneratedbythereceiverwithahigherse-
quencenumberthantheACKduplicatedbytheattacker.As Next attack epoch is initiated T = 3/ρ seconds later, i.e.,
a result the server will exit fast recovery, will set the con- it takes T = 3/ρ seconds until attacker can launch the
gestion window to cwnd(t 0,1) = cwnd 2(t− 0) thus deflating a sett ga mck ena tg sa .in S, inb cy es ce on nd nin eg ctit oh nree ats tu hb is se tq iu me ent isdu inpl cic oa nt ge eA stC ioK
n
the congestion window, and will enter a CA phase during
avoidance (CA) phase, i.e., congestion window grows by
4AverageTCPwindowdependsontheoperatingsystemandconfigu- onesegmentineveryround-triptime(RTT),thecongestion
ration.Typicalboundonwindowsize,e.g.,onwindows7,is256KB. windowatsecondattackepoch,attimet 1 =t 0+ RT TTRTTwill have reached cwnd(t 1) = cwnd 2(t− 0) + RT TT, where cwn 2d(ti) > RT
TT
Thewindowsizedecreasesbetweeneach
T is the number of RTTs between each attack epoch. subsequent attack epoch; this is due to the fact that
RTT
Lett =t +i T RTT fori∈N,bethetimeatithattack thedurationbetweenattackepochsdoesnotsufficefor
i 0 RTT congestionwindowtorestoreitssize.
epoch. In Equation 1, we derive congestion window size
cwndattimet asafunctionoftheattackfrequencyandof
i
the congestion window size cwnd(t 0), prior to first attack cwnd(ti) ≤ T The congestion window size is restored
epoch. 2 RTT
between each attack epoch; this occurs when steady
stateisreached.
cwnd(t ) T
cwnd(t ) ≤ i−1 + =
i 2 RTT
=
cwnd(t− 0)
+
(2i−1) T
=
wCo inn ds oid we st ih ze ec da es ce rew ash ee sre bec tw wn eed n(t i e) ach> twR o2 TT sT u; bsc eo qn ug ee ns tti ao tn
-
2i 2i−1 RTT
2T 1(cid:16) 2T (cid:17) tack epochs t i and t i+1: at each attack epoch holds:
=
RTT
+
2i
cwnd(t− 0)−
RTT
(1) cwnd(t i+1) + 1 ≤ cwnd(t i). Once cwnd(t i) ≤ R2 TT T,
congestion window between attack epochs t and t is:
i i+1
Since 1 is negligible, the whole expression approximates cwnd(t ) < cwnd(t ) + 1, and the steady state win-
2i i i+1
2T , i.e., cwnd(t ) ≤ 2T . For T = 3/ρ, cwnd(t ) ≤ dow size is reached; then cwnd(t ) ≤ cwnd(t ) <
RTT i RTT i i+1 i
6 . In addition, since for every t , cwndATK ≤ cwnd(t ),wherecwnd(t )iscongestionwindowright
ρ·RTT i MAX i−1 i−1
cwnd(t i),theboundonthesteadystatecongestionwindow beforesteadystate,andcwnd(t i)<cwnd(t i+1)+1. (cid:3)
sizewhenunderattackisgivenby:cwndATK ≤ 6 .(cid:3)
MAX ρ·RTT
Claim2 Throughput of average steady state congestion 3.3.DataPacketsDuplicationAttack: StealthDoS
windowisatmost 6 . onChannelwithoutAnti-ReplayMechanism
ρ·RTT2
Proof Tocomputethroughputwetakethesteadystatecon-
gestionwindowlongtermdatasizederivedinClaim1,and PacketsduplicationattackissymmetrictoACKsdupli-
divideitbytheRTT: cation attack presented in Section 3.1. In order to achieve
performancereduction,attackertricksthereceiverintogen-
cwnd(t− 0) + (2i−1)T 2T 6 eratingduplicateACKsbyduplicatingpackets.Attackerin-
2i 2i−1RTT ≤ = jectsthreeduplicatecopiesofapreviouslysentpacket. As
RTT RTT2 ρ·RTT2
defined in [20], TCP receiver acknowledges every packet
(cid:3) received, thus three duplicate packets trigger three dupli-
cateACKsatthereceiver.Uponreceiptofthreeconsecutive
Claim3 Let i be the number of attack epochs required to
duplicate ACKs sender performs fast retransmit and slows
reachsteadystatecongestionwindowcwnd(t )attimet .
i i downitssendingrate.
Theni<log (cwnd(t−)− 2T −2)−1.
2 0 RTT Attackondatapacketsduplication, albeitsimilarinna-
turetoattackonACKs,servesseveralpurposes: itmaybe
Proof Assume at time t , steady state is reached, and ac-
i
thecasethattheattackercanonlyduplicateandinjectpack-
cording to Lemma 1, cwnd(t ) − 1 < cwnd(t ); then
i i+1
cwnd(t ) < 2T +1. In Claim 1 we derived the expres- ets in one direction, in which packets flow and not in the
i RTT directioninwhichACKsflow,i.e.,caninjectsegmentssent
sionforsteadystatecongestionwindowtobecwnd(t ) =
i
(cid:16) (cid:17) fromservertoclientbutcannotinjectsegmentsfromclient
2T + 1 cwnd(t−)− 2T ; by substituting cwnd(t )
RTT 2i 0 RTT i toserver,e.g.,iftheattackerislocatedinonenetworkand
(cid:16) (cid:17)
with 2T +1weobtain 2T + 1 cwnd(t−)− 2T < canonlyduplicateandinjectpacketsinthatsamenetwork,
RTT RTT 2i 0 RTT
orifingressfilteringmechanismisemployed. Anotherpur-
2T + 1; by solving the equation we obtain that upper
RTT poseisrelatedtoassumptionsonthepoweroftheattacker:
boundonthenumberofattackepochstoreachsteadystate
duplicating packets attack can be carried out by a much
isi<log (cwnd(t−)− 2T ). (cid:3)
2 0 RTT weaker(slower),attacker,thantheattackerthatmountsdu-
Lemma1 Steady state congestion window cwnd(t ) is plicatingACKsattack,sinceitdoesnotrequireattackerto
i
reachedwhencwnd(t ) < cwnd(t )+1,duringith at- inject the duplicates in limited time frame. In packets du-
i i+1
tackepochattimet . plicationattack attackercaninject segmentsthatare much
i
olderthanthelegitimatesegments. Thisattackwillnotsuc-
Proof Weconsiderthefollowingtwocasesrelatedtocon- ceedwithduplicatingACKsegments,sincethesenderwill
gestion window growth between each subsequent attack ignoreoutdatedduplicateACKs,i.e.,ifanewACKhasal-
epoch: readyarrivedthesenderignorestheoldACKthatarrives.4.DeterminingAnti-ReplayWindowSize sequence number into the message stream thus advancing
the anti-replay window, and as a result legitimate packets
AttackspresentedinSection3motivatethenecessityfor with low sequence numbers, i.e., to the left of the anti-
anti-replaymechanism. Anti-replaymechanismwoulddis- replay window, will be discarded by the IPsec. Discarded
card duplicate packets, thus preventing amplification DoS packetsresultinthreeduplicateACKsatthesender,which
attack. IPsec standard [27], recommends using anti-replay thenreducestheTCPcongestionwindow. Thethroughput
mechanism as a protection against denial of service (DoS) ofTCPconnectionsunderattackissignificantlydegraded.
attacksbyaMITMadversaryandtopreventreplayofpack- Thedamageisafunctionofthefrequencyatwhichthead-
ets, however current specifications do not provide recom- versarycanlaunchtheattack. Theattackermodelwecon-
mendationonhowtocalculateproperwindowsize. Ifanti- siderinthissectionispresentedinFigure3.
replay window is incorrectly adjusted, i.e., too small, re- Since we analyse worst case scenario, we assume
orderedpacketscanresultinpackets’loss,duetodiscarded throughouttheattackasingleTCPflowwhichtheattacker
legitimatepacketsbyIPsecimplementation. attempts to attack, with no other communication (this is
Packet reordering occurs when packets are received in equivalent to using a distinct SA per connection). The
a different order from the one in which they were sent. course of the attack is presented in Figure 8. Assume that
Packet reordering can significantly degrade TCP perfor- IPsec anti-replay window consists of W = n packets and
mance. Upon duplicate ACKs the sender triggers fast re- TCPwindowiscomprisedofcwnd=k+1segments,such
transmitandfastrecovery. Asaresultthecongestionwin- that n < k +1; attack can be launched when IPsec anti-
dowremainssmallrelativelytotheavailablebandwidth.As replay window is smaller than TCP congestion window5.
specified in [2], out of order data segments should be ac- We assume that the attacker knows when IPsec window is
knowledgedimmediatelyinordertoacceleratelossrecov- smallerthanTCPwindow, sinceIPsecanti-replaywindow
ery. To trigger the fast retransmit algorithm the receiver sizeispartofthedesign(thusisknowntotheattacker),and
shouldsendanimmediateduplicateACKwhenitreceives duetothefactthatattackeriseavesdroppingonthecommu-
adatasegmentaboveagapinthesequencespace. Ifmes- nication it can observe the TCP window size at any given
sages are reordered on transit, e.g., due to benign network time.
reordering or by malicious attacker, there will be a gap in InFigure8senderreceiveskACKsandtransmitsawin-
sequencenumbersofthearrivedpackets,whichmayresult dowofk+1segments,withithsegmentbeingthefirstseg-
in anti-replay mechanism discarding valid messages if the mentintheTCPwindowandi+kbeingthelastsegment,
anti-replaywindowisincorrectlyadjusted,i.e.,toosmall. i.e., withhighestsequencenumber. Attackerreorders, i.e.,
Existing works propose more efficient implementations duplicatesandinjects(speedingitup),asegment6 withse-
of anti-replay window. In [17] the authors analyse cor- quencenumberi+n(segmentn+1intheTCPwindow),
rectnessofanti-replaywindowinmalicioussetting, where whichisthefirstsegmenttotherightoftheanti-replaywin-
they assume a MITM adversary that is located on the In- dow, such that it arrives before the first segment i in the
ternetandcaninjectduplicatesegments. Authorsconclude window. Thus upon receipt of the segment, IPsec imple-
thatanti-replaywindowisdesignedtopreventsuchattacks. mentationatthereceivinggatewayGW1advancestheanti-
Subsequentworks,[24,43],showthatseverereorderingof replaywindowwithsegmenti+nbeingtherightedgeof
messages, possibly maliciously by a MITM (e.g., control- thewindow,andpassesthissegmenttothereceiver. When
lingarouter),canresultindiscardedlegitimatepacketsby TCP at the client receives segment with sequence number
IPsecimplementation(duetoreordering)andsuggestalter- i+nitgeneratesaduplicateACKwithsequencenumberi,
native mechanisms that should reduce the number of dis- i.e., sequence number of the expected segment, indicating
cardedpackets,w.r.t. toIPsecanti-replaymechanisms. a gap in sequence numbers of the received segments. The
Inthissectionweshowthatifanti-replaywindowisnot rest k segments arrive intact, and are passed to the client.
correctlyadjusted, amoresevereperformancedegradation When the original segment with sequence number k + 1
could be induced to TCP flows, than not using anti-replay arrives,IPsecdetectsareplayanddiscardsit. Foreachsub-
windowatall. Wethenshowhowtocalculatecorrectwin- sequentlyreceivedsegment, withsequencenumbersinthe
dowsizeinSection4.3,giventherelevantnetworkparam- range between i+1 and i+n−1, the TCP at the client
eters.
5Thisisareasonableassumption. Inparticular,providednonetwork
congestion,TCPwindowislimitedonlybythreshold,whichistypically
4.1. Packets’ Reordering Attack: Stealth DoS on
setto65KB,accordingtoRFC2988[34].
ChannelwithSmallAnti-ReplayWindow 6Inthisattackweassumedforsimplicitythattheattackerspeeds-upa
singlesegment,sincethis(simpler)caseisbadenoughtomotivatecorrect
windowsize.Ifattackerspeedsuplsegments,thenthe‘recovery’ismuch
AnadversarycancauseanIPsecimplementationtodis-
slower,sinceeachofthelsegmentswillhavetoberetransmitted,andthus
cardvalidpacketsbyinjectingreplayedpacketswithhigher recoverywillrequireadditionalltransmissionrounds.generates a duplicate ACK, indicating that it is missing a firstattackepoch,aswellasthefrequencyatwhichtheat-
segment with sequence number i. A total of k duplicate tackscanbelaunched,dictatestheperformancedegradation
ACKs are returned to the sender. Packet loss is taken as inflicted by the attack, and the impact can range between
an indication of congestion and that the TCP window has degradation of service and complete denial of service. If
grown larger than the network can handle, hence TCP at TCPcongestionwindowislargerthanIPSecanti-replayby
the sender takes corrective steps by decreasing its sending 1segment,thenattackachievesaresultsimilartoreduction
rate, i.e., decreases the number of segments in a window. of quality (RoQ) attacks, in [18, 19]. In this case, it will
Denotebyt thetimeatwhichthesenderreceivesthreedu- take k+3 RTTstorestorethecongestionwindowfrom k−1
0 2 2
plicateACKs. AccordingtothespecificationinRFC2581 backtoitsoriginalvalue,beforethefirstattack,i.e.,k+1,
[3],uponreceiptof3duplicateACKs,fastretransmitalgo- since in every RTT the congestion window grows by one
rithm at the sender retransmits lost segment, i.e., segment segment. Butattackercannotkeepthecongestionwindow
withsequencenumberi;senderhalvesthecongestionwin- at steady state (like in Section 3.2), since next attack can
dowaddingthreeduplicateACKs,yieldingcongestionwin- be launched when TCP window grows larger than IPsec
dow of size: cwnd(t 0) = cwnd 2(t− 0) +3. Then the sender anti-replay window. Congestion window growth between
eachattackepoch(whichislaunchedwhenTCPwindowis
enters a fast-recovery phase until a non-duplicate ACK ar-
largerthanIPsecwindowispresentedinFigure9.
rives. At this stage the congestion window does not allow
transmission of new segments into the network, since the Alternately, if cwnd ≥ 2 ∗ W + 4 attacker can dis-
number of pending segments is larger than the congestion rupt the connection by causing the retransmission timeout
windowsize,i.e.,cwnd(t−)+1> cwnd(t− 0) +3. Foreach (RTO)toexpire,thusperformancedegradationinducedby
0 2 theattackissimilarinitsresulttothelowrateattackspre-
subsequent duplicate ACK the sender increments the con-
sentedin[29]. Inordertocauseconnectiontotimeout,at-
gestionwindowby1MSS.TheadditionofduplicateACKs
tacker will ‘speed-up’ (reorder) segment which will result
tothecongestionwindowartificiallyinflatesthewindowby
IPsecanti-replaywindowtomoveforwardawindownum-
the number of segments that have left the network and ar-
ber of segments, thus discarding segment(s) to the left of
rivedatthereceiver. Afterreceiptof
cwnd(t− 0)+1duplicate
2 thewindow. Whensenderre-transmitsthissegmentinnext
ACKs(sincet )thesendercanresumetransmissionofnew
0 transmissionround,attackerreorderssegmentsagain,such
segments; and 1cwnd(t−)−2 remaining duplicate ACKs
2 0 that the retransmitted segment is again discarded. At this
willarrive. ForeachduplicateACKthesendertransmitsa
time the sender is in fast recovery, and will only change
newsegmentintothenetwork. Inthistransmissionrounda
statewhenitreceivesanACKforare-transmittedsegment.
totalof 1cwnd(t−)segmentswillbesent.
2 0 HoweverthesenderkeepsreceivingduplicateACKs,there-
At time t 0 + RTT the sender should receive an ACK fore connection will eventually timeout, and move to slow
for the retransmitted segment. Once the sender receives start phase, and retransmit the segment again. But in re-
an ACK for new data7 congestion window is deflated, i.e., sponseitwillreceivealltheduplicateACKsthatwerepre-
setto cwnd(t− 0) ,andthesenderenterscongestionavoidance viouslytransmittedbyreceiver. IftheIPsecandTCPwin-
2
(CA)phase,duringwhichthecongestionwindowisincre- dows ratio is sufficiently large, attacker can cause timeout
mentedlinearly,i.e.,roughlybyonesegmentineveryRTT. again,whichwillresetconnection. Theminimalcwndand
W ratiowhichwouldresultintimeoutoftheretransmitted
4.2.PacketReorderingAttack: Analysis
(duetoreceiptofthreeduplicateACKs)segmenti,should
be computed as follows: let cwnd be the amount of trans-
mitted segments in the window prior to first attack epoch.
The throughput of the connection is kept low, since the
DenotebyP thenumberofsegmentsintransit(forwhich
adversary can resume the attack (if the attack frequency
thesenderhasnotyetreceivedacknowledgments),andde-
parameter allows it) every time the congestion window is
note by W the anti-replay window size. In order for the
largerthantheanti-replaywindow. TheratiobetweenTCP
attacktoresultinatimeoutthefollowinginequalityhasto
windowcwndandIPsecanti-replaywindowW beforethe hold:(cid:4)cwnd(cid:5)
+(cwnd−1)−P >W.Sincethenumberof
2
pending segments P is equal to the number of transmitted
7Westress,thatforalargerratioofTCPcongestionwindowandIPsec
segments,i.e.,P =cwnd,holds:
(cid:4)cwnd(cid:5)
−1>W.
anti-replaywindow,amoredevastatingattackispossible. Morespecifi- 2
cally,theattackerwillagainspeed-uptheretransmittedsegmenti,which
willagainbediscarded,andthusthesenderwillcontinuereceivingdupli-
4.3.AdjustingIPsecAnti-ReplayWindow
cateACKstillitencountersatimeoutevent. Afteratimeoutthesender
againretransmitsthe‘lostsegmenti’andentersaslowstart. However,
thenitreceivesduplicateACKsforithsegmentfromprevioustransmis-
In order to prevent denial/degradation of service (DoS)
sionround,andenterscongestionavoidance. Ifthecwndvs. W (IPsec
attackswepresented,alargeranti-replaywindowshouldbe
anti-replay)issufficientlylarge, andenoughduplicateACKsreturn, the
connectionwilleventuallybereset. used,andthequestionishowmuchlarger. Thelargestpos-Server GW2Attacker GW1 Client
TCP window i
cwnd(t 0—)=k+1 i+. ik. +. - kn..
. i
.A .C .K: i+k S t tshe heg e egm a m
a
ae n ne rn t
t
ei n i-t
-
r t
r
d( e s ei
i
+ p spto clk la
a
a
) y t
y
rha
d
w e wd
e
iv in l dnea d dfn to
o
c ow we f, s
i+k
i+k . . .i+k-n
i+k
3 dup ACKs: S de ug pm lie can tt
e
( ,i + ak n)
d
i s i+k-n
fast retransmit i thus discarded n-1
ACK: i i+k-1 ACKs
return for
each
3 1 .d faup st ACKs;t 0 ACK: i segment
retransmit (i+1)
T cwC nP d w (tin —d )=o kw + 1 i . . .i i
fast reco0very: i+k-n
for each dup ACK i
c Aw ftn ed r ( ct w0— n) d+ (+ t 0—)/2 n se+ g1 m ents . . . i
dup ACKs start sent
s se en gd min eg
n
tn sew ACK: i+1 i+k-n
i+k-n
t 0+RTT
ACK: i
i+k-1 n A- C1
K s
ACK: i return for
each
segment
Figure8:Packets’reorderingattack(Section4.1)onTCPexploitinganinsufficientsizeofIPsecanti-replaywindow(singleattackepoch).
InthisattackweassumefirstattackepochislaunchedwhencongestionwindowisofsizeW +1(whereW isIPsecanti-replaywindow).
cwnd WedifferentiatebetweenthesizeofthedatastructureN
cwndSSmax cwnSSmax=cwndSSmin RT TT−1 requiredtostoreandmaintainananti-replaywindowofsize
cwndSSmax= R2 TT T−2 W,i.e.,numberofpacketsthatanti-replaywindowofsize
cwndSSavg= 2R3T TT−3
2
N c Ta hn err eefl ae rc et w(o or rkre sp tr he as te an tt t) e.
mpttoachieveamoreefficient
cwndSSmin2
anti-replay window implementation requiring less storage
size, e.g., [24, 43, 17]. However, there are no works that
cwndSSmin=cwnd 2SSmax analyseanti-replaywindowsizeW inanadversarialsetting,
where attacker can maliciously adjust its strategy. More
... time
t0 t0+RTT t0+2RTT t0+3RTT t1=t0+T specifically, there are two issues that should be addressed
w.r.t. anti-replay mechanism: the number of packets that
Figure9: TCPcongestionwindowcwndanalysis,whenconnec- anti-replaywindowshouldreflect,inordertopreventpack-
tionisunderpackets’reorderingattack,asin Figure8,andTCP ets’ loss due to reordering, and the data structure to store
congestionwindowisbyonesegmentlargerthanIPsecanti-replay and manage this information efficiently. In this work we
window.
focus on window size (and not the size of its representa-
tion),andcomputeanupperboundonthenumberofpack-
etsW thattheanti-replaywindowshouldreflect,basedon
sibleIPsecanti-replaywindowisonethatcancontainallthe
theratesofthegivennetwork,inordertoavoiddiscarding
packets within a specific SA, i.e., window containing 232
segmentsbyIPsecimplementation(whensmallanti-replay
packets. Suchanti-replaywindowofmaximalsizeprevents
windowisused)duetoreordering,basedontheratesofthe
theattackspresentedinSection4.1,whichweremadepos-
givennetwork.
sible due to insufficient anti-replay window size. Namely,
even severe (whether malicious or benign) reordering will Claim4 Let R be transmission rate and L be min-
MIN
notresultindroppedpacketswhenanti-replaywindowsize imal packet size. Let delay be the minimal de-
MIN
isincreasedtomaximalsize.However,anaiveimplementa- lay and let delay be the maximal delay. Attacker
MAX
tionofanti-replaywindowcontaining232 packetsrequires can set delays to all packets to any value in the interval
232bits(anaverageof536Mega-Bytes)isinefficientandis [delay ,delay ] as long as legitimate packets ar-
MIN MAX
renderedimpracticalduetohighmemorycostandmainte- riveinFIFO(firstinfirstout). ThenIPsecanti-replaywill
nance. not discard reordered legitimate packets (due to packets’reordering attack) that are not duplicates of a previously 4.4.Singlevs. MultipleFlowSecurityAssociation
receivedpackets,ifIPsecanti-replaywindowsizeW is:
R×(delay −delay )
W ≥ MAX MIN
L The IPsec standard [27] specifies establishing a unidi-
MIN
rectional security association (SA) between the communi-
Proof Assume attacker’s delay delay MIN is 0, then anti- catingparties,butitdoesnotspecifywhethertoestablisha
replay window is W ≥ R×delayMAX, i.e., at least the size single SA in each direction or if to establish a distinct SA
LMIN
ofmaximalnumberofpacketsintransit. Inthiscaseeven for each traffic flow. A single SA for all flows is more ef-
maximal reordering of packets, i.e., last packet arriving ficient since the gateway is required to keep less state. In
before first in a window of transmitted packets, will not addition,singleSApreventsdistinguishingbetweendiffer-
resultindiscardedpacketsbyIPsec, sinceanti-replayisat ent communication flows. On the other hand it increases
leastthesizeofpacketsintransit. Alternately,ifattacker’s theriskforachosenplaintextattack(CPA)[5],sincetheat-
delaydelay MIN > 0,thenanti-replaywindowcanbeless tackercan‘use’otherflowstoattackatargetflow(thusfor
thanmaximalnumberofpacketsintransit,sinceattacker’s cryptographicpurposesitisrecommendedtouseadistinct
packets are also experiencing delay, and as a result it will SApereachflow). Furthermore,whenasingleSAisused
be limited in its ability to reorder packets. Thus the upper forallflowsourattackonsmallanti-replaywindowismore
bound on IPsec anti-replay window size is a function of devastating,andtheattackcanbelaunchedmorefrequently.
maximalpacketsintransitanddelayoftheattacker. (cid:3) AnSApereachflowallowsdistinguishingbetweendiffer-
ent flows, albeit when one flow is attacked, others are not
Since attacker’s delay is typically not known, in order effected. Ontheflipside,adistinctSAforeachconnection
to compute upper bound on anti-replay window size, we imposes a significant overhead, and requires larger mem-
assumeworstcase,i.e.,attackerwithzerodelay. Notethat ory resources. However, even when a single SA pair per
this is a rather conservative computation, since typically, connectionisestablishedreductionofperformanceattackis
the attacker’s speed will also be a function of the delay. stillpossible,albeitnotaseffectiveascomparedtoasingle
Therefore,IPsec’santi-replaywindowW shouldbeatleast SApair. Ifasinglesecurityassociation(SA)pairisestab-
thesizeofthemaximalnumberofpacketsintransitatany lished for all communication, then the attacker can mount
given time, to prevent the attacker from discarding out of theattackmorefrequently.
orderpackets,byadvancingIPsecanti-replaywindow.
For network with propagation delay delay of one
MAX
second, transmissionrateR of10Mega-Bytespersecond,
andmaximalpacketsizeL=1000Byte,themaximalnum- 5.IPsecwithLargeAnti-ReplayWindow
berofpacketsintransitis10,000.
Existingworks[43,17,24],investigateconstructionsof
optimalanti-replaymechanism,toreducetheresourcesre-
quiredtomaintainanti-replaywindow. Anaiveimplemen- IfIPsecanti-replaywindowisnotproperlyadjusted,i.e.,
tationwouldbetosetN =W,i.e.,therepresentationofthe toosmall,reorderingofpackets(e.g.,bymaliciousattacker)
datastructureofanti-replaywindowisthesameasthenum- candegradeperformanceofTCPconnections. However,as
berofpacketsthatthewindowrepresents. Whilethislower we show in this section, even sufficiently large IPsec anti-
boundonanti-replaywindowwillprevent(bothbenignand replaywindow,i.e.,computedinClaim4,doesnotprevent
malicious) reordering which advance the anti-replay win- throughput degradation attacks. In this section we assume
dow and result in discarded segments, it can be too large thatthereareavailableresourcestomaintainananti-replay
andinefficientforpracticalpurposes,i.e.,maintainingsuch windowoftherequiredsizetopreventattacksthatadvance
alargewindowcanbeachallenge,w.r.t.processingrequire- theanti-replaywindowresultinginpackets’loss. Wecon-
mentsandstorageresources(especiallyifadistinctSApair sider a (ρ,3)-limited stealth attacker, following the model
isestablishedpereachTCPflow). Thusthegoalistomain- in Figure 3, where attacker reorders segments, i.e., injects
tain a window of size N < W where W is the number duplicate packets and speeds them up, e.g., via a faster
ofpacketsintheanti-replaywindow. Typically,anti-replay route than the one available to the legitimate parties. This
windowisasparsevectorwithoccasionaloutoforderpack- isaslightlystrongerattackerthantheoneassumedinSec-
ets, and allocating large buffers may be alleviated with a tions 3.1 and 4.1. We show that the throughput degrada-
more efficient data structure. Naive solutions that attempt tion is identical to the one in Section 3, which shows that
to save resources by decreasing window size are suscepti- IPsecanti-replaymechanismdoesnotpreventdegradation-
ble to attacks, and may result in more damage than when of-serviceattacks,evenwhentheanti-replaymechanismis
implementingIPsecwithnoanti-replaymechanism. ofsufficientsize.5.1. Packets’ Reordering Attack: Stealth DoS on 65KB dividedbytheroundtriptime(RTT)).LetT bethe
ChannelwithLargeAnti-ReplayWindow attack epoch frequency, and T = 3, then for T = RTT
ρ
(T definedinSection2.2),theresultingaveragecongestion
Consider scenario in Figure 1, in which client behind windowis3MSS.
gatewayGW1requeststodownloadafilefromserverbe-
hind gateway GW2, and assume IPsec implementation is Claim5 SteadystatecongestionwindowcwndATK ofthe
MAX
using sufficiently large anti-replay window. We present a TCPsenderwhenunderpacketreorderingattack,withnet-
detailedattackonthisconnectioninFigure10.Servertrans- work and communication model as in Section 2.3, and at-
mitsawindowofk+1segmentstotheclient,andassume tacker model in Section 2.2, Figure 3, is cwndATK ≤
MAX
k ≥ 3. Attackerspeedsupthreesegments8 withhigherse- 3 +2
2RTT
quencenumbers,i.e.,(i+k−2),(i+k−1),(i+k). These
segments arrive before ith segment to the gateway. IPsec Proof Assumethatattimet 0 thesenderisinslowstartor
authenticates the segments, and verifies that they are not a in congestion avoidance state (in Figure 5) and it receives
replay of previously sent segments and passes them to the three duplicate ACKs. Let t− 0 be the time right before ar-
client. When client receives these out of order segments, rival of three duplicate ACKs, and t+ 0 be the time right
it detects a gap in sequence numbers of received packets, after the arrival of three duplicate ACKs, and denote by
i.e., the sequence number is higher than the one expected. cwnd(t− 0) the congestion window size at time t− 0 (this is
As a result, client generates a duplicate acknowledgment also the number of ACKs that will arrive following time
for next segment it expects to receive, i.e., segment with t− 0). For each duplicate ACK the dupACKcnt variable is
sequence number i. Once the sender receives three dupli- incremented, and once dupACKcnt = 3, the TCP at the
cate ACKs for the same segment, it retransmits the ‘lost’ sender transitions to fast recovery (steps (1.e) or (2.d) in
segment,halvesthecongestionwindow,andentersfastre- Figure 5): sets the ssthresh to 21cwnd(t− 0), and sets the
covery(step(2.d)ifTCPisinCAorstep(1.e)ifTCPisin congestionwindowtocwnd(t+) = ssthresh+3,fastre-
0
slowstart,seeFigure5). UponarrivalofanACKacknowl- transmitsthe‘missingsegment’,andswitchestofastrecov-
edgingnewdata,i.e.,ACKforsegment(i+1),(step(3.c) ery.WhenanACK(fornewdata)attimet 0,1arrives(phase
inFigure5)congestionwindowisdeflated, i.e., settohalf (3.c) in Figure 5), the sender sets the congestion window
ofitsvaluebeforethereceiptofthreeduplicateACKs,and to cwnd((t 0,1)+) = ssthresh, sets dupACKcnt = 0,
theserverenterscongestionavoidancephase,i.e.,increases and transforms to congestion avoidance. The number of
thecongestionwindowbyroughly1segmentineveryRTT pending(transmittedbutnotyetACKed)segmentsattime
(step(2.a)inFigure5). Note: nopacketsarediscardedby (t 0,1)+ is: cwnd(t− 0)+1, which is greater than the con-
IPsec implementation, since the anti-replay window is as- gestion window size: 1cwnd(t−), therefore, according to
2 0
sumedtobesufficientlylarge. Figure5,thesendercannottransmitnewsegmentsintothe
network(thesendercantransmitsegmentswhentheamount
5.2.Packets’ReorderingAttack: Analysis of transmitted but yet to be ACKed (a.k.a. pending) seg-
mentsislessthanthesizeofthecongestionwindow). Be-
low is an expression to calculate the number k of ACKs
InClaim5weshowthatanupperboundoncongestion
window at steady state when under attack is cwndATK ≤ requiredforthesendertoresumetransmissionofnewdata
6 (resulting in average congestion windowA sV izG e at segments: 21cwnd(t− 0) + k = cwnd(t− 0) + 1 =⇒ k =
ρ·RTT 1cwnd(t−)+1. Namely,thesendercanresumetransmis-
steadystateof 3T ). Wethenderive,inClaim6,thelong- 2 0
RTT sionafterreceiptof 1cwnd(t−)+1ACKs,i.e.,ACKsarriv-
term throughput of the connection when under packet re- 2 0
o tir od ner win hg enat tt ha eck w: iρ n· dR o6 T wT2 ke( ew pe si dg en co rr ee ast ih ne gp sa ir nt co ef it th ie sc no en gn lie gc i- - rin emga at i: nt in0, g1, A. C.., Kt 0 s, tk o,f ao rrr ivk e= is1 2 1 2c cw wn nd d( (t t− 0 − 0) )+ −1 5. ,T i.eh .e ,Anu Cm Kb se tr ho af t
blew.r.t. theoverallconnectionthroughput). Notethatthis willarriveattime: t 0,k+1,...,t 0,2k−1. Sinceincongestion
throughput is much lower than the average throughput of avoidance the congestion window grows linearly, roughly
TCPconnectionthatisnotunderattack,i.e.,throughputis byMSSMSS foreachACK(accordingtostep(2.a)inFig-
cwnd
the average TCP congestion window (which can be up to ure5),theamountofsegmentsthatthesenderwilltransmit
in [t+,(t +RTT)−] (and the congestion window size at
0 0
8Similarly to attack in Section 3, optimal amplification impact is time(t +RTT)−)isgivenby:
0
achieved when attacker speeds up exactly three segments. If less than
threepacketsarriveoutoforder, thesenderwillnotreducetheconges-
cwnd(t−) cwnd(t−)−4
tionwindowbutinsteadwillwaitforatimeout. However,sincetheseg- cwnd((t +RTT)−) < 0 + 0 =
mentstransmittedbythesendereventuallyarrive,andACKsforthemare 0 2 1cwnd(t−)
returned,notimeoutwilloccur.NotethatsomeTCPimplementationsmay 2 0
1 8
expectformorethanthreeduplicateACKsbeforereducingtransmission = cwnd(t−)+2−
rate;adoptingtheattacktothesecasesistrivial. 2 0 cwnd(t−)
0Since 8 > 0thenumberoftransmittedsegmentsin 5.3.ProtectingTCPfromStealthDoSAttacks
cwnd(t−)
0
interval[t+,(t +RTT)−]isatmost 1cwnd(t−)+2;and
0 0 2 0
cwnd((t + RTT)−) < 1cwnd(t−) + 2. At time t + Packetsreordering(whetherbymaliciousattackerordue
0 2 0 0
RTT an ACK for the segment (retransmitted at time t+) tobenignnetworkconditions)hasanegativeeffectonTCP
0
throughput. Upon receipt of three duplicate ACKs TCP
shouldarrive(sinceweassumenolossandconstantdelays),
followed by at most 1cwnd(t−)+2 ACKs in response to sender will trigger fast retransmit and will resend a ‘be-
2 0 lieved to be lost’ segment, resulting in wasted bandwidth,
earliertransmittedsegments, i.e., thesegmentstransmitted
ininterval[t ,(t +RTT)−]. Thecongestionwindow and reduction of sending rate at the sender. Two indepen-
0,k+1 0
dent directions can be pursued in order to address the re-
sizebytheendoftransmissionround(t +RTT)(attime
0
(t +2RTT)−),is orderingandspecificallytheattackinSection5.1. Onedi-
0
rectionistoadjustTCPtodiversenetworkconditions,i.e.,
cwnd((t +2RTT)−) < cwnd((t +RTT)−)+ toimmuneTCPtopacketreordering. AwiderangeofTCP
0 0
modifications has been proposed to improve robustness to
(cid:16)cwnd(t− 0) (cid:17) cwnd(t−)
+ 2 = 0 +3 reordering, e.g., [8,31,41,42,10,6,40,11,9]; seeasur-
cwnd(t−) 2 vey in [30] and an analysis in [8]. The main idea of all
0
2
thosesolutionsistodetectandignorefalseduplicateACKs.
Namely, congestion window, cwnd, increases by at most SenderhalvesthecongestionwindowuponduplicateACK,
one MSS in each transmission round (RTT). By next at- but then restores it back when receiver signals receipt of
tack epoch, at time t , the congestion window cwnd(t−) ‘supposedlylost’segment,thusresultinginaninsignificant
1 1
will have grown by at most T , and holds cwnd(t−) < slowdown. Yet none of the proposed solutions is widely
RTT 1
1cwnd(t−)+ T +1.Moregenerally,byithattackepoch adopted, mainly since changing TCP requires a change in
2 0 RTT
thecongestionwindowcwnd(t−)willbe: everyendhost,andmaytakeconsiderabletimetoadopt.
i
cwnd(t− ) T Algorithm1: ImplementationofthefixtoTCPinthesend-
cwnd(t−) < i−1 + +1=
i 2 RTT inggatewayGW2. GatewaywillinspectincomingACKseg-
ments and will delay response to congestion, i.e., duplicate
=
cwnd(t− 0) +(cid:88)i (cid:16) T
+
1 (cid:17)
= ACKs. If new ACK is received all duplicate ACKs are dis-
2i+1 (j+1)RTT 2j carded,otherwise,whentypicaldelayisreachedallACKseg-
j=0
mentsareforwardedtosendinghostbehindthegateway.
(cid:16) T (cid:17)
= 2 +1 + IncomingSegmentackfromInternet
RTT
ifack.SN ==SN then
1 (cid:16) T (cid:17)
+ cwnd(t−)−2( +1) //it’s a duplicate ACK
2i+1 0 RTT
ifdupACKctr ==0then
The whole expression approximates 2T , thus the bound delay ←set delay();
RTT
oncongestionwindowsizeattimet−iscwnd(t−)≤ 2T . timer ←set timer(delay);
For T = 3/ρ, cwnd(t−) ≤ 6 i . In additioi n, sincR eT fT or dupACKctr ←1;
i ρ·RTT
ifdupACKctr <2then
every t holds: cwinMAX ≤ cwnd(t ), the bound on the
i ATK i forward(ack);
steady state congestion window size when under attack is
cwinMAX ≤ 6 . (cid:3) dupACKctr++;
ATK ρ·RTT
ifack.SN >SN then
Claim6 Thethroughputofsteadystatecongestionwindow
SN ←ack.SN;
isatmost 6 .
ρ·RTT2 ifdupACKctr >0then
dupACKctr ←0;
Proof To compute throughput we take the average steady
stop timer();
state window size derived in Claim 5, and divide it by the
RTT:
iftimer ==timeoutthen
(cid:16) (cid:17) (cid:16) (cid:17) fori=dupACKctrto2do
2 T +1 + 1 cwnd(t−)−2( T +1)
RTT 2i+1 0 RTT forward(ack);
≤
RTT end
dupACKctr ←0;
6
≤ stop timer();
ρ·RTT2
(cid:3) endServer GW2 Attacker GW1 Client
TCP i IPsec window is
window i+1 advanced for each Receiver identifies a
cwin i+. 2
. .
s we itg hm i+e kn t b,
eing the
g da up
p
lia cn ad
te
s Ae Cnd Ks
f or i
right edge (next expected
Pending=cwnd
ii +i ++ kkk -- 12
i
i i+ +1
2
segment)
i+k-2
1. Fast retransmit segment i i+k-1
2. cwnd(t+)=cwnd(t-)/2 i+k
3. enter fa0 st recove0 ry A Ac ck k:
:
i
i
( ik +- i k+4 k) i+ - 1s ke -2g ments i i i+ + + i ik k k +- - 12 1
3 dup ACKs Ack: i i+2
at time t 0 Ack: i+1 . . .
Ack: i+2
t i i+k-3
0,0
t Ack: i+k+1
0,K i i+ +k k+ +1
2
i T toh sre ee
g
mse eg nm
t
(e i+n kts
)
up
t
0,2K-1 ii ++( (k k- -11 )) // 22-1 (k ii - +i+ 9+ (k 3k )+
/
k+ 21 -2
1
s )/e 2g
-1ments
a dr ise c d au rdp eli dcate and
Figure10:ThroughputdegradationattackoncommunicationoverTCPwithinfinitelylargeIPsecanti-replaywindow,i.e.,packetsarenot
discardedbyIPsecimplementationatthereceivinggateway.Attackerreorderssegments,thusgeneratingagapinsequencenumbersatthe
receiver,whichrespondswithduplicateACKs.UponreceiptofthreeduplicateACKs,thesenderreducesitssendingrate.Specifically,TCP
atthesendertransmitsawindowofk+1segments,andtheattackerspeedsuplastthreesegments,i.e.,segmentswithsequencenumbers
i+k−2,i+k−1,i+k,suchthattheyarrivebefore1stsegmentinthewindow,i.e.,segmentwithsequencenumberi.Thesesegments
arepassedbythegatewaytotheclient(sincetheyareauthenticandnotareplay),andtriggerthreeduplicateACKsforithsegmentatthe
receiver.UponreceiptofthreeduplicateACKsthesenderretransmitsthemissingsegmenti,andreducesitstransmissionrate.Attimet
0
thesenderreceivesthreeduplicateACKs(thisinitiatesfirstattackepoch);alsonotethatcwnd = pending. Thesenderfastretransmits
lostsegment,andreducesitstransmissionrate. Thesendercannotresumetransmissionoffurthersegmentssincethenumberofpending
segmentsislargerthanthecongestionwindowsize.AfterreceiptofsufficientnumberofACKsthesendercanresumetransmissionofnew
segments.
WefocusonasolutionthatrequiresamodificationtoIPsec afurtherresearch.
gateways. Solution in firewalls does not require changing The main idea of our proposition is to delay response
each host separately, but only to apply the modification to to congestion, i.e., duplicate ACK, in the sending gateway
thefirewall,andasaresulttoprotectsubnetofhosts. Many (w.l.o.g. GW2 in Figure 1) and not deliver to the send-
privatenetworksconnectedtotheInternetareprotectedby inghostbehindGW2untilmaximaldelayisreached. The
firewalls. Firewall protection is based on the idea that all sendinggatewayGW2willmeasuredelayofoutgoingseg-
packetsdestinedtohostsbehindafirewallhavetobeexam- ments9 betweenitselfandthereceivinggatewayGW1(for
ined by the firewall. The drawback of this approach is the every VPN), and will use these measurements to estimate
additionalprocessingdelayoneverypacket,andhavingthe typical delay for outgoing packets. In addition, gateway
firewall maintain state. On the other hand, many firewalls GW2 will store time, and sequence number of outgoing
examine TCP connections for security reasons, e.g., solu- segments. These can be maintained in an array, and upon
tiontoSYNattack,thusfirewallskeepstate. Therefore,we arrivalofanACK,thecorrespondingsampleisreleased. If
believethatouradditionisminimal. Oursolutionisapplied aduplicateACKforsomesegment, e.g., segmentwithse-
to the sending IPsec gateway (and no change to receiving quencenumberi, arrives, gatewayGW2willapproximate
gatewayGW1)andiscomprisedoftwophases: firstdetec-
tion,thenpreventionofanattack. Notethatoursuggestion 9Thegatewaywillestimateatypicaldelaybetweenitselfandthere-
ceivinggateway,similarlytoexistingapproachesthatestimateTCPtime-
canalsobeappliedtoTCPineveryhost,yetweleaveitas
out.the sending time, based on the stored samples, of segment [2] M. Allman, V. Paxson, and W. Stevens. TCP Congestion
i. Morespecifically,thegatewaywilllocateinthearraythe Control. RFC 2581 (Proposed Standard), Apr. 1999. Up-
intervalofthesendingtimeofmissingsegment(forwhicha datedbyRFC3390.
duplicateACKwasreceived);and(basedonthedelaymea- [3] M. Allman, V. Paxson, and W. Stevens. TCP Congestion
surements it recorded) will delay the duplicate ACK (and Control,RFC2581. Internetrequestforcomments,1999.
[4] J. Bellardo and S. Savage. Measuring packet reordering.
all subsequent duplicate ACKs for that segment) till typi-
In Proceedings of the 2nd ACM SIGCOMM Workshop on
cal(pluspossiblysomesafetymargin)delayisreached. If
Internetmeasurment,pages97–105.ACMNewYork,NY,
ACKwithhighersequencenumberarrivesbeforemaximal
USA,2002.
delay,allduplicateACKsarediscarded,andthenewACK
[5] M.Bellare,A.Desai,D.Pointcheval,andP.Rogaway. Re-
isforwardedtothesendinghost. HoweverifnonewACK
lationsamongnotionsofsecurityforpublic-keyencryption
arrives,oncemaximaldelayisreached,allduplicateACKs schemes. Lecturenotesincomputerscience,pages26–45,
arereleasedandforwardedtothesendinghost(seepseudo- 1998.
codeinAlgorithm1). [6] S.BhandarkarandA.Reddy. TCP-DCR:MakingTCPro-
Note that storing and maintaining duplicate ACKs may busttonon-congestionevents. LectureNotesinComputer
impose an overhead on the gateway, therefore we propose Science,pages712–724,2004.
thefollowingimplementation: sendinggatewayGW2will [7] S. Blake, D. Black, M. Carlson, E. Davies, Z. Wang, and
store the sequence number SN of the most recently re- W. Weiss. RFC2475: An Architecture for Differentiated
Services. RFCEditorUnitedStates,1998.
ceived ACK, and will maintain duplicate ACKs counter
[8] E.BlantonandM.Allman. OnmakingTCPmorerobustto
dupACKctr. For each subsequent duplicate ACK for the
packet reordering. ACM SIGCOMM Computer Communi-
same SN, the counter will be incremented. This addition
cationReview,32(1):20–30,2002.
requires the gateway only to store the sequence number
[9] E.BlantonandM.Allman. UsingTCPDuplicateSelective
(32bits)oflastcorrectlyreceivedpacket,andcounterwith
Acknowledgement (DSACKs) and Stream Control Trans-
number of duplicate ACKs for last correctly received seg- missionProtocol(SCTP)DuplicateTransmissionSequence
ment. Wedeferdetailedanalysisofthefixtofullversionof Numbers(TSNs)toDetectSpuriousRetransmissions. RFC
thepaper. 3708(Experimental),Feb.2004.
[10] S.Bohacek,J.Hespanha,J.Lee,C.Lim,andK.Obraczka.
6.FurtherResearchDirections TCP-PR: TCP for persistent packet reordering. In Dis-
tributedComputingSystems,2003.Proceedings.23rdInter-
nationalConferenceon,pages222–231,2003.
Belowwepresentseveralfutureresearchdirections:
[11] S.Bohacek,J.Hespanha,J.Lee,C.Lim,andK.Obraczka.
• Animportantfurtherresearchisdefiningsecurechan- ANewTCPforPersistentPacketReordering. IEEE/ACM
nelprotocolwithperformanceguarantees, thatwould TRANSACTIONSONNETWORKING,14(2):369,2006.
ensuresecurityandefficiencytotrafficaboveit, orto [12] R.CanettiandH.Krawczyk. UniversallyComposableNo-
tionsofKeyExchangeandSecureChannels.InProceedings
provethatnosuchchannelexists.
oftheInternationalConferenceontheTheoryandApplica-
• It is interesting to consider a weaker attacker with- tions of Cryptographic Techniques: Advances in Cryptol-
out speed-up advantage, i.e., attacker may be using ogy,pages337–351.Springer-VerlagLondon,UK,2002.
the same channel as the legitimate parties, or another [13] R. Chang. Defending against flooding-based distributed
with the same delay, and to perform analysis of per- denial-of-serviceattacks:Atutorial.IEEECommunications
Magazine,40(10):42–51,2002.
formance degradation (and probabilities given distri-
[14] T. Dierks and E. Rescorla. The Transport Layer Security
butionontraffic).
(TLS)ProtocolVersion1.2.RFC5246(ProposedStandard),
• Furtherworkisrequiredtoanalyseoursuggestedfixto Aug.2008.
TCPinIPsecgatewayasasolutiontobenign(aswell [15] G. Dommety. Key and Sequence Number Extensions to
asmalicious)packetreorderingonInternet. Inpartic- GRE. RFC2890(ProposedStandard),Sept.2000.
ular,toperformsimulations,andexperimentsshowing [16] Y. Gilad and A. Herzberg. Lightweight opportunistic tun-
neling(lot). InESORICS,pages104–119,2009.
theimpactonefficiencywhenunderattack,aswellas
[17] M.Gouda,C.Huang,andE.Li. Anti-replaywindowproto-
underbeningnetworkreordering.
colsforsecureIP. InComputerCommunicationsandNet-
works, 2000. Proceedings. Ninth International Conference
References
on,pages310–315,2000.
[18] M.Guirguis,A.Bestavros,andI.Matta.Exploitingthetran-
[1] I. Aad, J. Hubaux, and E. Knightly. Denial of service re- sients of adaptation for RoQ attacks on Internet resources.
silienceinadhocnetworks. InProceedingsofthe10than- In Network Protocols, 2004. ICNP 2004. Proceedings of
nualinternationalconferenceonMobilecomputingandnet- the12thIEEEInternationalConferenceon,pages184–195,
working,pages202–215.ACMNewYork,NY,USA,2004. 2004.[19] M. Guirguis, A. Bestavros, I. Matta, and Y. Zhang. Re- [37] C. Schuba, I. Krsul, M. Kuhn, E. Spafford, A. Sundaram,
duction of quality (RoQ) attacks on Internet end-systems. andD.Zamboni. AnalysisofaDenialofServiceAttackon
In Proceedings IEEE INFOCOM 2005. 24th Annual Joint TCP. In 1997 IEEE Symposium on Security and Privacy,
ConferenceoftheIEEEComputerandCommunicationsSo- 1997.Proceedings.,pages208–223,1997.
cieties,volume2,2005. [38] W. Stevens. TCP/IP illustrated (vol. 1): the protocols.
[20] G. Hellstrom. RTP Payload for Text Conversation. RFC Addison-Wesley Longman Publishing Co., Inc. Boston,
2793 (Proposed Standard), May 2000. Obsoleted by RFC MA,USA,1993.
4103. [39] P.Syverson. Ataxonomyofreplayattacks[cryptographic
[21] A. Herzberg and I. Yoffe. The layered games framework protocols]. In Computer Security Foundations Workshop
forspecificationsandanalysisofsecurityprotocols. Inter- VII,1994.CSFW7.Proceedings,pages187–191,1994.
national Journal of Applied Cryptography, 1(2):144–159, [40] F.Wang and Y. Zhang. Improving TCP performance over
2008. mobilead-hocnetworkswithout-of-orderdetectionandre-
[22] K.HickmanandT.Elgamal. TheSSLprotocol. Netscape sponse. InProceedingsofthe3rdACMinternationalsym-
CommunicationsCorp,1995. posium on Mobile ad hoc networking & computing, pages
[23] K. Houle, G. Weaver, N. Long, and R. Thomas. Trends 217–225.ACMNewYork,NY,USA,2002.
indenialofserviceattacktechnology. CERTCoordination [41] M.Zhang, B.Karp, S.Floyd, andL.Peterson. Improving
Center,2001. TCP’sPerformanceunderReorderingwithDSACK. Inter-
national Computer Science Institute, Berkeley, Tech. Rep.
[24] C.HuangandM.Gouda. Ananti-replaywindowprotocol
TR-02-006,2002.
withcontrolledshift. InProceedingsofthe10thIEEEIn-
[42] M. Zhang, B. Karp, S. Floyd, and L. Peterson. RR-TCP:
ternationalConferenceonComputerCommunicationsand
A reordering-robust tcp with dsack. In 11th IEEE Inter-
Networks,2001.
nationalConferenceonNetworkProtocols,2003.Proceed-
[25] C.Kaufman,R.Perlman,andB.Sommerfeld. DoSprotec-
ings,pages95–106,2003.
tion for UDP-based protocols. In Proceedings of the 10th
[43] F. Zhao and S. Wu. Analysis and improvement on IPSec
ACM conference on Computer and communications secu-
anti-replaywindowprotocol.InComputerCommunications
rity,page7.ACM,2003.
and Networks, 2003. ICCCN 2003. Proceedings. The 12th
[26] S.KentandR.Atkinson. SecurityArchitecturefortheIn-
InternationalConferenceon,pages553–558,2003.
ternetProtocol. RFC2401(ProposedStandard),Nov.1998.
ObsoletedbyRFC4301,updatedbyRFC3168.
[27] S.KentandK.Seo. SecurityArchitecturefortheInternet
Protocol. RFC4301(ProposedStandard),Dec.2005.
[28] J.Kurose,K.Ross,andK.Ross. Computernetworking: a
top-downapproachfeaturingtheInternet. Addison-Wesley
Reading,MA,2003.
[29] A. Kuzmanovic and E. Knightly. Low-rate TCP-targeted
denial of service attacks: the shrew vs. the mice and ele-
phants. In Proceedings of the 2003 conference on Appli-
cations,technologies,architectures,andprotocolsforcom-
putercommunications,pages75–86.ACMNewYork,NY,
USA,2003.
[30] K.Leung, V. Li, and D. Yang. Anoverview of packetre-
orderingintransmissioncontrolprotocol(TCP):problems,
solutions, and challenges. IEEE Transactions on Parallel
andDistributedSystems,18(4):522–535,2007.
[31] R.LudwigandR.Katz. TheEifelalgorithm: makingTCP
robust against spurious retransmissions. ACM SIGCOMM
ComputerCommunicationReview,30(1):30–36,2000.
[32] X. Luo and R. Chang. On a new class of pulsing denial-
of-service attacks and the defense. In Proceedings of the
ISOCSymposiumonNetworkandDistributedSystemsSe-
curity(SNDSS),pages61–79,2005.
[33] M.MaximandD.Pollino. Wirelesssecurity. McGraw-Hill
OsborneMedia,2002.
[34] V. Paxson and M. Allman. RFC2988: Computing TCP’s
RetransmissionTimer. RFCEditorUnitedStates,2000.
[35] J.Postel. TransmissionControlProtocol. RFC793(Stan-
dard),Sept.1981. UpdatedbyRFCs1122,3168.
[36] K.Ramakrishnan,S.Floyd,andD.Black. Theadditionof
explicitcongestionnotification(ECN)toIP,2001.