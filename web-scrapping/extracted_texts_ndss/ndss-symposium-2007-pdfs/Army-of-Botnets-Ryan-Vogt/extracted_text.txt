Army of Botnets
RyanVogt,JohnAycock,andMichaelJ.Jacobson,Jr.
DepartmentofComputerScience,UniversityofCalgary
2500UniversityDriveN.W.,Calgary,Alberta,CanadaT2N1N4
{vogt,aycock,jacobs}@cpsc.ucalgary.ca
Abstract small,independentbotnets.Bythemselves,thesmallerbot-
netscanbeexploitedbytheadversaryintheusualway,such
The trend toward smaller botnets may be more danger- asbeingrentedtospammers. Thediscoveryanddisabling
ous than large botnets, in terms of large-scale attacks like ofsomeoftheadversary’sbotnetsisnotaconcern, either,
distributed denials of service. We examine the possibility becausethebotnetsareindependentandnumerous.
of “super-botnets,” networks of independent botnets that The new threat arises if the botnets are designed to be
canbecoordinatedforattacksofunprecedentedscale. For coordinated into a network of botnets, which we call a
an adversary, super-botnets would also be extremely ver- super-botnet. For example, an adversary could command
satile and resistant to countermeasures. As such, super- thesuper-botnettolaunchamassiveDDoSattackonacho-
botnets must be examined by the research community, so sen target, or to pummel a critical piece of the Internet’s
that defenses against this threat can be developed proac- infrastructure like the DNS. A super-botnet design poten-
tively. Our simulation results shed light on the feasibility tially allows an adversary to surreptitiously amass enough
andstructureofsuper-botnetsandsomepropertiesoftheir machinesforattacksofenormousscale.
command-and-controlmechanism.Newformsofattackthat Intheremainderofthispaperweexploresuper-botnets
super-botnets can launch are explored, and possible de- and potential defenses against them. Section 2 describes
fensesagainstthethreatofsuper-botnetsaresuggested. workrelatedtosuper-botnets. Section3discussesthevul-
nerabilitiesinherentintraditionalbotnetdesign,tomotivate
whyadversarieswouldutilizeasuper-botnet. Section4ad-
1 Introduction dresses whether it is feasible for adversaries to construct
largesuper-botnets, andSection5discussesthecommuni-
cation mechanisms employed in such super-botnets. Sec-
Big botnets are big news. Botnets involving over
tion6discussesanewtypeoftime-delayedattackthatcan
100,000 zombie computers have been claimed [6, 8, 21],
belaunchedusingasuper-botnet. Section7discusseshow
andtherewasevenonecaseinvolving1.5millioncompro-
defenders can combat both this new form of attack, and
mised computers [19]. However, from an adversary’s per-
super-botnetsingeneral. Finally, weconcludeanddiscuss
spective,1 big botnets are bad from the standpoint of sur-
futureresearchdirectionsinSection8.
vivability: someoneislikelytonoticeabigbotnetandtake
stepstodismantleit.
Therecenttrendistowardsmallerbotnetswithonlysev- 2 RelatedWork
eral hundred to several thousand zombies [5]. This may
reflect better defenses — the malware creating new zom- Many different command-and-control (C&C) mecha-
bies may not be as effective — but it may be a conscious
nisms for botnets are being seen and suggested [5]. For
decisionbyadversariestolimitbotnetsize,andtrytoavoid
example, an IRC server could be used to send commands
detection. It has also been suggested that the wider avail-
tocompromisedmachines;or,azombiecouldevenreceive
abilityofbroadbandaccessmakessmallerbotnetsascapa-
commandscovertlybymakingaDNSrequesttoadomain
bleasthelargerbotnetsofold[5].
undertheadversary’scontrol[9]. Thereiscontinuousevo-
We suggest that there is a new threat posed by smaller
lutionofthecontrolmechanismsusedwithinabotnet.
botnets: namely,anadversarycancreatealargenumberof
Control mechanisms for co-ordinating multiple botnets
1Inthispaper,wegenericallyrefertopeoplecreatingandusingbotnets have also been discussed in the literature. Nazario et al.
asadversaries. talkaboutcommunicatingwormsthatisolatethemselvesinsmallgroups,tolimittheimpactofaninfectedmachinebe- whereGooglefindssuchawebsitemayprovidealead
ingdiscovered[12]. Thepossibilityofindependentbotnets astothewhereaboutsoftheadversary. Inturn,anad-
being operated in a tree-like structure has also been sug- versarymaytrytoobfuscatetheirtrailbyissuingbot-
gested[16]. Dagonetal. classifieddifferentbotnetsstruc- netcommandsthroughproxiesoranonymitynetworks
tures into a taxonomy [6], and the super-botnet structure likeTor[7].
(described in detail in Section 5) constitutes a special case
ofarandomgraphbotnet.Empiricalstudieshaveevenbeen
2. Revealalltheinfectedmachines.Again,ifthezombies
doneonthedifferentconnectivitymodelsofbotnets[14].
arepollingaknownlocationfortheadversary’scom-
AlsodescribedinSection5, asuper-botnet’scommuni-
mands, then the polling activity will reveal infected
cation structure can be formed through opportunistic data
machines. Meetingthisgoalandthepreviousonemay
exchangesbetweenindividualbotnetsthatoccurduringre-
requirecooperationbetweenlawenforcementandthe
dundant infection attempts. A similar idea for worms was
privatesector.
briefly mentioned in [18]. Other methods of exchanging
information between infected hosts, such as Chen and Ji’s
3. Command the botnet. A defender could attempt to
client-servermodel[4],havealsobeendiscussed.
send a command to the botnet to shut it down. A re-
Becauseofthemyriadofrelatedbotnetmechanismsal-
lated concern for the adversary is that another adver-
ready available to adversaries, super-botnets must be con-
sarymaytrytousurpcontrolofthebotnet. Forthese
sideredasapossiblefutureevolutionoftoday’sbotnets. As
reasons, as pointed out by Staniford et al. [18],2 the
such,itisnecessarytoinvestigatewhatthreatsuper-botnets
adversary must digitally sign or encrypt botnet com-
will pose in the future, and what defenders can do proac-
mandsusingasymmetricencryption(describedinSec-
tivelytoprotectthemselvesandothers.
tion8.1ofMenezesetal.[11,p.283]),sothatthecom-
promiseofaninfectedmachinedoesnotrevealasecret
3 VulnerabilitiesofTraditionalBotnets key. Generating a public/private key pair in advance,
theadversarycouldsendthepublickeyalongwiththe
Beforeweconsiderwhyatrendtowardsuper-botnetsis worm,solvingthekeydistributionproblem.
dangerous, it is first important to understand some weak-
nessesexhibitedbytraditionalbotnets.Byrecognizinghow 4. Disable the botnet. If a defender can shut down the
thetraditionalbotnetsofoldcanbedetectedanddisabled,it C&C channel (along with any redundant channels),
willbecomeclearerwhyadecentralizedsuper-botnetposes the entire botnet will be rendered useless in a single
suchathreat. blow. Withthezombiesunabletoreceivecommands,
A traditional botnet uses some C&C channel to receive thebotnetwillceasetooperate.
commands: forinstance,anIRCserver. Alternately,abot-
netmayperiodicallypollaninformationsourcethatisun-
5. Disruptbotnetcommands. IftheC&Cchannelisone
likely to be blocked or raise suspicion, such as accessing
thatcannoteasilybeshutdown,suchasGoogle,other
a web site (perhaps located via a web search engine), or
defense methods can be employed. The adversary’s
making a DNS request to a domain under the adversary’s
commandscanbeintentionallygarbledbyadefender
control[9].
regardless of whether or not they are encrypted or
It is this command-and-control mechanism that consti-
signed — changing a few bits is sufficient to achieve
tutes a weak point for defenders to target. There are five
this goal, leaving the adversary unable to control the
maingoalsthatdefenderscouldhave:
botnet. This defense can be applied locally, e.g., by
IPS/firewallrules,orgloballyifadefenderhasenough
1. Locate or identify the adversary. The adversary is
accesstothebotnet’scommandsource.
vulnerabletodetectionwhentheyissuecommandsto
the botnet via this C&C channel. Defenders may not
know the nature of the adversary’s commands in ad- Largetraditionalbotnetsarevulnerabletodefendersbe-
vance, but assuming some of the zombies have been cause of the easily-targeted C&C channel. The benefits to
detected and analyzed, the source of the adversary’s the adversary of decentralizing their botnet into a super-
commandswillbeknownandalarmscanbetriggered botnet — a network of independent botnets — are clear.
when commands are sent. For example, a defender But, we must still explore whether it is feasible for an ad-
may know that botnet commands will be found by versarytocreatealargesuper-botnet.
periodically performing Google searches for “haggis
gargling” and sifting through the avalanche of results 2Stanifordetal.presentedtheirworkinthecontextofupdatingworms,
for the adversary’s commands. Monitoring when and butthetechniquecouldbeappliedtocontrollingbotnets.4 Super-BotnetFeasibility
Are large super-botnets feasible? To answer this ques-
tion, we must consider how a super-botnet can be con-
D(x,y)
structed. Webeginbyabstractingawaysomedetails:
1 BDistributexfairlyintoyslots
1. Forsimplicity,weassumethatthesuper-botnetiscon- 2 fori←0toy−1
structed using only one worm. This does not imply 3 do L[i]← x/y
that the worm’s code is uniform across infections, of 4 fori←0to(x mod y)−1
course, because the worm could be polymorphic or 5 do L[i]← L[i]+1
metamorphicinnature. 6 returnL
More than one worm may be involved in practice. A
singleadversarycouldcreatemultipleworms,orworm
variants; multiple adversaries could conspire to cre-
P(nti,bts,cc)
ate multiple worms based on a common super-botnet 1 Bnti−1isthenumberofnewhoststoaddtothis
specification. Neither possibility is farfetched. For Bbotnet
some malware, creating variants is practically a cot- 2 Bbtsisthenumberofnewbotnetsthatneedtobe
tageindustry—Spybot,forexample,hasthousandsof Bstarted
variants[3]. Adversarieshavecollaboratedinthepast 3 BccistheIPaddressoftheC&Cserver
on malware [20], and N-version programming [2] of
worms by adversaries within a single organization is 4 if nti=0
definitely possible in the context of information war- 5 thenBEstablishanewC&Cserver
fare. Implementationdiversitycanmakewormdetec- 6 bts←bts−1
tionmoredifficultforsignature-baseddetectionmeth-
7 StartIRCserver
ods. 8 cc←myIPaddress
9 nti←  
2. Theinfectionvector(s)thewormusesarenotrelevant 10 else BUseexistingC&Cserver
to the analysis and are not considered. We also ig-
11 Connecttocc
nore failures to propagate in our simulations. While
theseconsiderationsareimportantinrealwormprop- 12 nti ←D(nti−1,)
child
agation, we are only interested in the resulting super- 13 bts ←D(bts,)
child
botnetstructure.
14 fori←0to−1
3. The exact C&C mechanism(s) used within individual
15 doif nti [i]=0andbts [i]=0
botnetsdoesnotmatter.WeassumeacentralizedIRC- child child
16 thencontinue
basedC&Cforconcreteness,butitcouldjustaseasily
17 repeat target←ahostchosenbyarandom
beapeer-to-peerarchitectureorsomeothermethod.
scan
Onewaytoestablishasuper-botnetiswithatwo-phase 18 untiltargetisavulnerable,uninfectedhost
process. Inthefirstphase,awormisreleasedwhichmakes 19 Infecttarget
everynewinfectionaC&Cmachineforanew,independent 20 targetrunsP(nti child[i],bts child[i],cc)
botnet. In the second phase, after enough C&C machines
have been created, new infections populate the C&C ma-
chines’botnets. Thismethodisriskyforanadversary, be-
I-I()
causethe“backbone”ofthesuper-botnet’sC&Cinfrastruc- 1 BThecoderunbytheinitialinfection
tureisallestablishedbydirectinfections;discoveryofone 2 P(0,,0.0.0.0)
C&C machine can easily lead to others using information
fromfirewalllogs,forexample.
Instead,weuseatree-structuredalgorithmthatisdepen- Figure1.Wormpseudocodeforsuper-botnet
dent on three constants: BOTNETS, HOSTS_PER_BOTNET, creation.
and SPREAD. This algorithm creates BOTNETS individual
botnets, each consisting of HOSTS_PER_BOTNET zombies.
As each zombie is infected, it learns how many additional
zombies it will be responsible for adding to its botnet (toditionally, the adversary must have some estimate of the
number of vulnerable hosts in order to choose an initial
valueforBOTNETS.However,theseconcernsarejustlimita-
tionsofthepseudocode. Inpractice,anadversarycanseed
multipleinitialinfections,andusewell-studiedwormself-
T T T stopping mechanisms [10] to control super-botnet growth
0 1 2
instead of relying on information being propagated from
worm to worm, thereby avoiding both of these issues. We
chose to keep the spread algorithm simpler for exposition,
so we could focus our study on the structure and use of
… super-botnets. However, as will become apparent, the sit-
uationlooksbadfordefenders,evenunderthesesimplecir-
cumstances.Futuresimulationsofgreatercomplexitycould
yieldevenworseresults,fromtheperspectiveofadefender.
T T Wesimulatedthewormpseudocode, allowingonescan
3 6
per active machine per time step. Starting with a single
seed, the simulation established 15,000 botnets with 100
Figure 2. Worm infection pattern with 3 machinesapiece—asuper-botnet1.5millionstrong. Fig-
hosts/botnet, 4 botnets, and a spread of 2. ure3chartsthegrowthofinfectionsandC&Cserversover
ShownareC&Cservers( ),non-C&Cinfected time, both for a SPREAD value of 2 and a more generous
machines (•), new infections (solid arrows), value of 25. One interesting anomaly is that, even though
links to C&C servers (dashed arrows), and the C&C growth curve is the least smooth for a spread of
botnetsformed(greyblobs). 2,aspreadof3infects1.5millionmachinesthefastest. In
allcases,itisclearthatasuper-botnetcanbeestablishedin
shortorder.
One question remains, though: how can the adversary
bring the size of its botnet up to HOSTS_PER_BOTNET), as
issuecommandstosomeoralloftheindependentbotnets,
wellashowmanyC&Cmachinesfornew,independentbot-
therebyleveragingthefullpowerofthesuper-botnet? The
netsthatitmustinfect(tobringthenumberofbotnetsupto
adversarydoesnothaveadirectwaytoissuecommandsto
BOTNETS). If a zombie is not a C&C machine for a new
thebotnetsand,asshown,theadversarywillnotevenknow
botnet,italsolearnsthelocationofitsbotnet’sC&Cserver.
how to locate individual botnets. In the next section, we
However, each zombie infects at most SPREAD new
exploreadvancedcommunicationmethods.
hosts, with priority given to adding zombies to its botnet.
BychoosingasmallerSPREADvalue,theadversarycannar-
5 Inter-BotnetCommunication
row the breadth of the tree-structured growth of the super-
botnet, thereby reducing suspicious traffic and helping to
avoidratelimitingdefenses[17].Sinceagivenzombiemay The adversary may try to send commands along the
beresponsibleforaddingmanyadditionalhoststoitsbotnet super-botnet itself, to avoid having externally-issued com-
and starting many new botnets (i.e., performing more than mandsbesubjecttoattack.Inthissection,weconsiderhow
SPREADinfections), thezombiedelegatesanequalamount thistaskisaccomplished.
of the remaining work to each of the (up to SPREAD) new Following [18], we assume that an adversary will want
hostsitinfects. toencryptcommunicationsbothwithineachbotnetandbe-
When a new botnet/C&C server is created, all infor- tween botnets. When a new C&C server is created during
mation about the previous botnet is discarded, leaving wormpropagation,itcangenerateanewsymmetricencryp-
each botnet isolated. Furthermore, new C&C servers tionkey,aswellasanewpublic/privatekeypair. Thesym-
are placed as far away from one another as the bal- metrickeyispassedalongtonewinfectionswithinthebot-
anced tree structure allows: for nontrivial values of net,andisusedtoencryptcommunicationwithinthebotnet.
HOSTS_PER_BOTNET,C&Cserversareseparatedbyatleast Thepublickeyisusedtoasymmetricallyencryptmessages
blog HOSTS PER BOTNET−1cintermediateinfections. sent to the botnet from other botnets, so the routing infor-
SPREAD
This behavior is described more formally in the pseu- mationneededforbotnetAtotalktobotnetBisthepair
docode shown in Figure 1, and a small example of the
(publickey ,C&CIPaddress ).
B B
growthisshowninFigure2.
Intercepting a worm close to an initial infection can The adversary’s problem: propagating routing information
prune a large number of botnets in this pseudocode. Ad- around the super-botnet. No one botnet can be allowed10000000
1000000
100000
10000
1000
100
10
1
0 5 10 15 20 25 30 35 40 45
)elacs
gol(
senihcam
fo
rebmuN
10000000
1000000
100000
10000
1000
100
Infected machines 10
C&C servers
1
0 20 40 60 80 100 120
Time (simulation steps)
)elacs
gol(
senihcam
fo
rebmuN
Infected machines
C&C servers
Time (simulation steps)
Figure3.Wormsimulation: spreadof2(left)andspreadof25(right).
to have complete information about the super-botnet, be-
cause the complete structure of the super-botnet would be
revealedifabotnetwithcompleteroutinginformationwere
compromised by a defender. Each botnet can have par-
tial routing information instead, and know how to contact
a small finite set of its “neighbors.” But how can partial
informationbegatheredbyabotnet?
One obvious time for a botnet to gather partial routing
informationiswhenitsC&Cserveriscreated,fromthebot-
netthatinfectedit. Oneless-obvioustimeiswhenaworm E(A,B)
tries to infect an already-infected machine. Normally this
1 if >1
isconsideredsomethinganadversarywouldwanttoavoid
— worm contention is a waste of effort — but, for super- 2 thenN ←randomvalue∈[1,−1]
3 else N ←1
botnets,thisisanidealopportunitytoexchangeroutingin-
4 ArandomlypartitionsM intoX andY ,
formation. Such exchanges would presumably only occur A A A
where|X |= N
whilethesuper-botnetwasbeingconstructed,sothatade- A
5 BrandomlypartitionsM intoX andY ,
fender could not trivially extract routing information later B B B
where|X |= N
bypretendingtobeaworm,orfloodthesuper-botnetwith B
routinginformationpointingtoahoneypot.
6 BAandBswaptheirchosenN piecesofrouting
NotethatweabstractlyconsiderC&Cserverstobeper-
Binformation
formingtheroutinginformationexchangehere. Inpractice,
7 AsendsX toB
aC&Cserver’sclientswouldbeperformingroutinginfor- A
8 BsendsX toA
mationexchangestoo,andsendingnewinformationtotheir B
9 M ←theconcatenationofY andX
C&Cserver. A A B
10 M ←theconcatenationofY andX
Intheremainderofthissection,wesimulateandanalyze B B A
aroutinginformation-exchangealgorithmoverapopulation
of1.5millionvulnerablemachines. Thewormpseudocode
Figure4.Routinginformationexchangeinthe
from Figure 1 is used, assuming infection targets are cho-
hockeycardalgorithm.
sen randomly, i.e., a random-scanning worm is simulated.
Routing information exchange occurs in both of the above
scenarios: creationofanewC&Cserver,andoneinfected
machine locating another during its random scan. We de-
notebotnetA’sandbotnetB’sroutinginformationbyaand
b,respectively.
Intuitively, our information-exchangealgorithm mimics
how children exchange sports trading cards; we refer to it
asthehockeycardalgorithm. EachC&CserverhasMslots
for routing information, and a newly-created C&C serverfor botnet A begins with all its slots (M ) initialized to a. discovery.
A
Thereafter,wheneitherofthetwoopportunitiesarisetoex- TheresultsareshowninFigure5, forbothhigh-degree
changeinformationbetweenbotnets Aand B, thetwobot- first targeting and random selection. We have only pre-
netsfirstagreeonarandomnumber N, then Aand Beach sented the data for 25 hosts per botnet here, because the
select N random slots and trade them as described in Fig- results were almost identical for the different numbers of
ure 4. This code maintains M links to each botnet within hosts per botnet we ran. Results were averaged over five
thesuper-botnet. Althoughabotnetmayendupwithdupli- runstocompensateforrandomness.
cates and self-links, our simulations showed that this does Thestrategyusedbythedefenderdoesnotseemtomat-
nothaveanynegativeeffects. ter. OnceM ≥5,adefenderabletodisableone-thirdofthe
We assume that the adversary knows the addresses of botnets in a super-botnet still leaves the adversary able to
seed infections, and that they will want to communicate contactone-third oftheir originalbotnets fromsome seed,
through the super-botnet as surreptitiously as possible. In on average. This is still enough for a sizeable attack to be
otherwords,theadversarywillnotbroadcastacommandto launched with the super-botnet. Two conclusions can be
all seeds, but will select one seed and send a super-botnet drawn:
commandthroughit. Theimportantmetrictotheadversary
• The adversary would set M to at least 5. However,
isthustheamountofconnectivityfromsomeseed. Thatis,
there is a tradeoff between robustness and disclosure.
howmanybotnetswillacommandreach?
Toolargeavaluefor M wouldrevealthelocationofa
To evaluate this metric, we fixed three simulation pa-
largenumberofotherbotnets, ifadefenderdiscovers
rameters on the basis that the adversary would want
onebotnet.
a large, quickly-constructed super-botnet: 15,000 bot-
nets, 100 seeds, and a spread of 3 — so, the initial • Communication through a super-botnet is robust to a
code run by each seed, with reference to Figure 1, is defender’s countermeasures. Finding and disabling
PROPAGATE(0, 150, 0.0.0.0). Two parameters were 5000 botnets, randomly or otherwise, would be a dif-
adjusted, however. First, the value of M was varied from ficult task. The only defense that is deployed widely
1to30inincrementstoascertainitseffectonconnectivity. enoughtofeasiblydothisisanti-virussoftware.
Second, the number of hosts per botnet was varied in in-
This simulation also assumes that an adversary will
crements from 25 to 100 to study different probabilities of
only communicate through one of the initial seeds.
finding other botnets during propagation. All simulations
Botnets could announce their (encrypted) routing in-
wererepeatedfivetimestominimizetheeffectsofrandom-
formationtoanadversaryinstead;thiswouldgivethe
ness.
adversarymanymorecommunicationendpointstouse
Theresultsweredramatic.Ineverysimulationrunwhere attheriskofleakinginformationtoadefender. Anad-
M wasgreaterthan1,theamountofconnectivityfromany versarymayalsouseasmallnumberofseedsforcom-
singleseedwas100%. Anadversarywouldbeabletocom- munication, rather than just one, or alternate which
mandallthebotnetscomprisingthesuper-botnetusingany seed receives the command each time a command is
oneseed. sent. Either variation by the adversary should reduce
M does play a role in the resistance of the super-botnet theeffectivenessofthedefender’scountermeasures.
todefensivemeasures. Inparticular,adefendermaytryto
Theseconclusionssuggestthatnew,large-scaledefenses
prevent an adversary from commanding their super-botnet
areneededforthesuper-botnetthreat. Wediscussdefenses
by reducing connectivity. Here we define the degree of a
againstthesuper-botnetthreatinSection7. First,however,
botnettobethesumofitsusefulin-andout-degrees,which
wediscussanovelapplicationofthesuper-botnet’sdecen-
are the links remaining once self-links and duplicate links
tralized structure that allows for a new form of attack to
areremoved.
be launched. Understanding how this new form of attack
Following research on attacks against both random and
workswillfurtherrevealthemethodologythatmustbeused
scale-free networks [1], we consider a defender who will
todefendagainstsuper-botnets.
try to disable a super-botnet using two different strategies.
First,adefendermaydisablehigh-degreebotnetsfirst. This
isanefforttoreducesuper-botnetconnectivitymorequickly 6 TimeBombs
thansimplydisablingbotnetsatrandom. Itisimportantto
stress that this is the absolute best case, where a defender Evenwiththedecentralizedstructureofthesuper-botnet,
has oracular knowledge of the super-botnet’s connectivity. the adversary is still vulnerable to detection when a com-
Second, a defender may disable botnets at random. This mandisinjectedintothesuper-botnet. Whentheadversary
isperhapsamorelikelycase,whereuncoordinateddefend- gives the command, “Attack CNN’s website” to a seed in-
erswouldsimplybeshuttingdownbotnetsrandomlyupon fection,theseedwillpassthecommandontootherbotnets,Mean connectivity Mean connectivity
15000 15000
10000 10000
5000 5000
0 0
30 30
25 25
20 20
0 1000 2000 3000 5 10 15 M 0 1000 2000 3000 5 10 15 M
4000 5000 0 4000 5000 0
Botnets disabled Botnets disabled
Figure5.Meanconnectivitydecreasewhenhigh-degreebotnetsaretargeted(left)andwhenbotnets
arerandomlytargeted(right).
andwillthenlaunchitspartintheattack. Analysisoftraf- allcommandswithS,therebyensuringthatthebotnetsex-
ficlogswilllikelycorrelatetheincomingmessagewiththe ecuteonlytheadversary’scommands.
proceedingmassivebandwidthusage. We now take the application of asymmetric encryption
Ofcourse,theincomingmessagetoaseedfromthead- one step further. Let C > 1 be a constant, and let the ad-
versarywilllooknodifferentthanthemessagebeingpassed versary generate an additional C key pairs. That is, the
along from one botnet to another. Be that as it may, the adversarygenerateskeypairs{P,S},{P ,S },...,{P ,S }.
1 1 C C
adversary may still worry about detection. In essence, the Instead of including only P with the worm, the adversary
adversary would like to be “as far away as possible” from includes {P,P ,...,P }. That is, each botnet receives and
1 C
the super-botnet when the attack begins, to minimize the passesonC+1publickeys. However,afteragivenbotnet
chanceofdetection. creates all of the new C&C servers that it is required to, it
Itwouldbesaferfortheattackertoissuethecommand, deletesallbutoneoftheextraC publickeys. Specifically,
“Attack CNN’s website six hours from now” to the super- thebotnetchoosesarandomnumberi∈[1,C],anditsaves
botnet. Though this method of commanding the super- P and P; all of the other public keys are wiped from that
i
botnetdoesnotmaketheadversaryimpervioustodetection botnet.
—forexample,aseedinfectioncouldhavebeendisinfected NotethateverybotnetwillbeinpossessionofP. There-
and replaced with a honeypot, or a defender could capture fore, if the adversary wishes to issue a command upon
thismessageatsomepoint,waitfortheattacktooccur,then which the super-botnet should act instantly, the command
lookbacksixhoursinthelogsforsuspiciouscommunica- shouldbesignedwithS.
tion—itdoesincreasethedifficultyofcorrelatingthecom- The additional C key pairs are used for time bomb at-
munique´ totheresultingattack. Unfortunately,theattacker tacks. Assume that the adversary has some command, K,
cannotsimplysignthistimebombcommandwithaprivate anddesiresthatthesuper-botnetexecuteitafteradelayof
key(assumingthebotnetspossessthecorrespondingpublic T time. First, theadversaryusesasecretsplittingscheme,
key for the purpose of verifying commands) and release it as described in Section 12.7 of Menezes et al. [11,p.524],
into the super-botnet. If a defender compromises a single todivide K intoC pieces: K ,...,K . Individually,anyof
1 C
botnet,thetimebombwouldbediscoveredwellinadvance thepiecesaremeaningless. Infact, evenpossessingC −1
oftheattack,andthefuturevictimcouldbewarned. of theC pieces does not reveal K; allC pieces are needed
In this section, we describe a method which uses the to reconstruct K. We treat the secret splitting scheme as
super-botnet’sstructuretoallowtheadversarytoinjecttime a black box; any scheme that meets the aforementioned
bomb commands into the super-botnet, with minimal risk requirements would suffice. One simple implementation,
thatthecommandwillbeuncoveredaheadoftimebyade- from Section 12.7.1 of Menezes et al. [11,p.525], would
fender. be to choose random values for K for all i∈[1,C−1],
i
Until now, we have implicitly assumed that the adver- andsetK
C
= K⊕K 1⊕...⊕K C−1.Amoregeneralscheme,
saryhasapublic/privatekeypair(callthepublickeyPand which could even allow K to be reconstructed from any
theprivatekeyS),andthateverybotnetinthesuper-botnet N of the pieces, for some fixed N ≤ C, was described by
possessesP(whichcouldhavebeen,forexample,included Shamir[15].
inthewormthatinfectedthezombies).Theadversarysigns Regardless of what secret splitting scheme is used, theadversary constructs the following message after the com- goals, and that botnets are compromised or disabled ran-
mandissplit: domly(astheyarefoundbythedefender),howmanybot-
netscanthedefenderexpecttohavetolocateandattack,on
{D S1(D S(K 1)),...,D SC(D S(K C)),D S(T)}, average,beforeaccomplishingeitherofthegoals?
We can answer these questions probabilistically. Com-
where D S(x) is a digital signature scheme with message puting an expected value for the number of botnets that a
recovery, using private key S on message x, that incor- defender must compromise to reconstruct the command is
porates a suitable, non-multiplicative redundancy func- the subject of Appendix A.1, and computing an expected
tion. One example of such a scheme is RSA with valueforthenumberofbotnetsthatadefendermustdisable
ISO/IEC 9796 formatting, described in Section 11.3.5 of to destroy one part of the command is the subject of Ap-
Menezesetal.[11,pp.442–444]. Theredundancyfunction pendix A.2. Numerical simulations support the results de-
isnecessarysincethepiecesof K lookrandom;withoutit, rivedintheappendices.
itwouldbeimpossibletodistinguishavalidsignaturefrom AsanexampleoftheanalysisinAppendixA.1andAp-
garbage[11,p.430]. pendix A.2, let us assume that there are 15,000 botnets in
Thismessageisdeliveredintothesuper-botnetasusual, the super-botnet, and that the command is split into 100
and each botnet decodes what part of the message it can. pieces(so,thevaluesofRandCusedintheappendicesare
Sinceeachbotnetpossessesonlyasingle,randomly-chosen 150 and 100, respectively). To reconstruct the command,
P i, it can decrypt only the corresponding D S(K i). That is, adefenderwouldhavetocompromise, onaverage, 509.38
after the message has travelled through the entire super- botnets — roughly 3.4% of the entire super-botnet. This
botnet, each botnet will be in possession of a signed copy sizeable task would likely be beyond the capabilities of a
ofT,andasignedcopyofoneoftheCpiecesofK. singledefender. Destroyingasinglepieceofthecommand
After a delay of T has elapsed, each botnet floods its wouldrequirethedefendertodisable,onaverage,14491.62
D S(K i)intothesuper-botnet. SinceK i issignedbyS,each botnets — roughly 96.6% of the entire super-botnet. This
botnet can confirm that any piece of K that it receives is, numberissolargethat, inpractice, thesuper-botnetstruc-
in fact, one of the original C pieces created by the adver- turewouldbecomesopartitionedbeforethedefendersuc-
sary. AfterreceivingandconfirmingallCpiecesofK,each ceeded in eradicating one piece of the command, that the
botnetcanperformthecommand. commandcouldnotbereassembledanyway.
This scheme is highly resistant to attacks by individual Clearly, defending against creative uses of the super-
defenders. Therearetwotasksthatadefendermaywishto botnet structure is beyond the capabilities of a single
accomplishagainstthisscheme: defender, or multiple defenders working without shared
knowledgeorco-ordination.Tocombatthisnewthreat,new
• Reconstruct the command before it is executed. To defensesmustbedeveloped.
do so, the defender would require all C public keys,
P ,...P . Itwouldbedifficultforadefendertocap-
1 C 7 DefenseAgainstSuper-Botnets
ture all C public keys during the construction of the
super-botnet. Each botnet deletes all but one of these
We now turn to defense. There would be no sense for
valuesafteritfinishesspreading,andcompromisinga
an adversary to build a super-botnet for immediate use; a
botnet to extract all C keys while it is still spreading
traditional worm would be more effective in that scenario.
would require either a honeypot capturing the worm
Thestrengthofthedecentralizedsuper-botnetdesignis,af-
while it spreads, or near-instantaneous response from
ter all, its resistance to defenders’ attacks over time. It is
adefendertoaninfection. Shortofahoneypotcaptur-
reasonable to assume, therefore, that super-botnets would
ing the worm, a defender’s best chance for capturing
bedeployedinadvanceofanattack. Traditionalanti-virus
allC keys(or,allC ofthe D (K))is,foreachpublic
S i
softwarewouldthusbeusefulagainstsuper-botnets,asanti-
key,tocompromiseatleastonebotnetthatknowsthat
virussoftwarewouldhavetimeforupdatesanddetection.
key. Then,thekeycanbeextractedfromthecompro-
Asidefromtheobvioususeofanti-virussoftware,what
misedbotnet.
defenses can be constructed to specifically target super-
• Destroyatleastonepartofthecommandinthesuper- botnets? Asrevealedbytheresistanceofthesuper-botnet’s
botnet, so that the command cannot be reconstructed communicationstructuretothefailureofindividualbotnets
andexecuted. Todoso,adefenderwouldhavetodis- (discussed in Section 5), and the super-botnet’s ability to
ableeachbotnetthatknowsP forsomei∈[1,C]. distribute its attack plans beyond the reach of a single de-
i
fender(discussedinSection6),super-botnetscannotbedis-
Assumingthatadefenderdoesnothaveoracularknowl- abledbyasingledefender.
edgeabouthowtofindbotnetsthatmatchoneofthesetwo Onesolutiontothethreatofsuper-botnetsiscentralizedsuper-botnets:
1. Locate or identify the adversary. The adversary may
issueacommandtothesuper-botnetinawidevariety
hop 1 ofplaces. Onlythroughcentralanalysisofcommuni-
hop 2 cationlogsandcapturedroutinginformationcouldthe
adversary’sdirectcommunicationsbeidentified.
2. Revealalltheinfectedmachines. Thisgoalispromis-
ing:bycollectingroutinginformationfromdisinfected
machines,acentraldefenseshouldbeabletoconstruct
Figure 6. Tracking infections backwards: the atleastapartialimageofthesuper-botnet’sstructure.
two-hopweakness.
3. Command the super-botnet. Obviously, an adversary
whosignsorencryptscommandswilleffectivelyelim-
inate any possibility of defenders injecting their own
defense. When anti-virus software locates a super-botnet commandsintothesuper-botnet.
infection with routing information, it could pass the rout-
4. Disablethesuper-botnet. WithitsdecentralizedC&C
ing information along to a central defense location. Given
structure, a defender simply cannot disable the entire
enough disinfections, this tactic should reveal a sizeable
super-botnet in a single stroke. There is no point at
portionofthesuper-botnet’sstructure.Infact,givenenough
whichtheC&Cmechanismcanbeattackedtoprevent
information, a centralized defense location may be able to
commandsfromreachingallofthebotnets.
locatetheadversarycommandingthesuper-botnet. Ifcom-
munication logs are available from the disinfected C&C 5. Disrupt super-botnet commands. Even if a defender
servers of the individual botnets, potential suspects to be compromises a botnet, garbling super-botnet com-
the adversary are all those machines for which routing in- mandsisunlikelytoworkwell. Thesamerandomness
formation has not been collected at the central defense lo- thatmakesthesuper-botnet’scommunicationstructure
cation, but which have sent a super-botnet command to a soresistanttodisabledindividualbotnetsalsomakesit
disinfectedmachine. Afterall, acommandsentbythead- resistanttodisruptedcommands. Thereisnoguaran-
versarylooksjustlikeacommandpassedontooneindivid- teethattheadversary’scommandsmusttravelthrough
ual botnet from another, except that no botnet has routing the compromised botnet, so the majority (if not all)
informationpointingtotheadversary. ofthesuper-botnetislikelytoreceivetheadversary’s
Defenders should also not underestimate the value of commandsintact.
studying the algorithm by which a given super-botnet im-
Though a centralized defense does not aid defenders
plementationspreads. Ourwormpseudocode,forexample,
with all five goals, it will give defenders a much needed
spacesoutC&Cserversalongthe(tree-structured)infection
edge against this coming evolution in botnets. Unfortu-
path. If infections can be tracked backwards from a C&C
nately, itisimpossibletopredictallformsoffuturesuper-
server to the machine that infected it, then there are up to
SPREAD−1 other C&C servers two hops away (Figure 6). botnet; consequently, itisdifficulttoknowifacentralized
defense will always work. However, a centralized defense
Theadversaryhasaclearincentivetochoosesmallspread
valuesandtodestroyanyinformationthatmightlinkdiffer- willbeapplicableagainstallformsofsuper-botnetinwhich
individual botnets remember routing information, because
entbotnets.
this information can be extracted when a botnet is discov-
Asidefromdiscerningthestructureofthesuper-botnet,
ered, and delivered to the central defense. Hence, security
a centralized defense location would also aid attempts to
vendorsandorganizationswouldbewell-advisedtoprepare
decipher time bombs before they are executed. When a
centralizeddefensemechanismsinthenearfuture.
machine is disinfected, any public keys that are captured,
as well as any un-executed time bombs, can be sent to the
central defense. Capturing all of the public keys (thereby 8 FutureWorkandConclusions
giving advance warning of all future time bombs sent into
the super-botnet) is a less daunting task when all available Future work will focus on adding more features to our
defenderscombinetheirknowledge. simulation,toexplorehowsuper-botnetsbehaveinamore
Infact,revisitingthefivegoalsforadefenderdescribed complex environment. This work includes studying how
in Section 3, we see that a centralized defense mechanism self-stopping mechanisms can be applied to super-botnets,
can give defenders a starting point against the threat of andhownetworkcharacteristics,suchastheuseofnetworkaddresstranslation,canaffectthespreadofasuper-botnet, [11] A. J. Menezes, P. C. van Oorschot, and S. A. Vanstone.
possibly providing an additional line of defense [13]. We Handbook of Applied Cryptography. CRC Press, 5th edi-
also wish to examine in more detail the relative strengths tion,2001.
and weaknesses of a super-botnet design, relative to peer- [12] J. Nazario, J. Anderson, R. Wash, and C. Connelly. The
futureofInternetworms. InBlackHatUSA,2001.
to-peerbotnets,bothfortheadversaryandfordefenders.
[13] M.Rajab,F.Monrose,andA.Terzis. Ontheimpactofdy-
In any form, super-botnets provide adversaries with an
namicaddressingonmalwarepropagation. InProceedings
enormous amount of virtual firepower that is easy to con-
of the 2006 ACM Workshop on Recurring Malcode, pages
structyethardtoshutdown,asthereisnosingleC&Cchan-
51–56,2006.
nel for defenders to target. The loss of individual botnets
[14] M.Rajab, J.Zarfoss, F.Monrose, andA.Terzis. Amulti-
(which can, by themselves, be farmed out for spamming facetedapproachtounderstandingthebotnetphenomenon.
andothertraditionaluses)isnotcatastrophic. InProceedingsofthe6thACMSIGCOMMonInternetmea-
Thetrendtowardsmallerbotnetscanbeseenasanevo- surement,pages41–52,2006.
lutionarystepleadingtosuper-botnets. Thismeansthatat- [15] A.Shamir. Howtoshareasecret. Communicationsofthe
tacks by millions of machines on the Internet’s infrastruc- ACM,22(11):612–613,1979.
[16] A. Solomon and G. Evron. The world of botnets. Virus
ture can appear from nowhere, as multiple small botnets
Bulletin,pages10–12,September2006.
join forces. Super-botnets must be considered a serious
[17] S. Staniford, D. Moore, V. Paxson, and N. Weaver. The
threat that must be defended against with new centralized
topspeedofflashworms. InProceedingsofthe2004ACM
defensemechanisms.
WorkshoponRapidMalcode,pages33–42,2004.
[18] S. Staniford, V. Paxson, and N. Weaver. How to 0wn the
9 Acknowledgments Internet in your spare time. In Proceedings of the 11th
USENIXSecuritySymposium,pages149–167,2002.
[19] T.Sterling. ProsecutorssayDutchsuspectshacked1.5mil-
Theauthors’researchissupportedinpartbygrantsfrom
lion computers worldwide. Associated Press, 20 October
theNaturalSciencesandEngineeringResearchCouncilof
2005.
Canada. The authors would also like to thank the anony-
[20] P. Szo¨r and P. Ferrie. Hunting for metamorphic. In Virus
mous reviewers for their helpful comments for improving
BulletinConference,pages123–144,2001.
thispaper.
[21] United States v. Ancheta. Case CR05-1060, Indictment,
U.S.DistrictCourt,CentralDistrictofCalifornia,February
References 2005.
[22] Coupon collector’s problem – from Wolfram Math-
World. http://mathworld.wolfram.com/
[1] R. Albert, H. Jeong, and A.-L. Baraba´si. Error and attack
CouponCollectorsProblem.html, last accessed 31
toleranceofcomplexnetworks.Nature,406:378–382,2000.
August2006.
[2] A.Aviz˘ienis. TheN-versionapproachtofault-tolerantsoft-
ware. IEEE Transactions on Software Engineering, SE-
11(12):1491–1501,1985. AppendixA StatisticalAlgorithms
[3] J.Canavan. TheevolutionofmaliciousIRCbots. InVirus
BulletinConference,pages104–114,2005.
[4] Z.ChenandC.Ji. Aself-learningwormusingimportance Assume that there are B individual botnets in a super-
scanning. In Proceedings of the 2005 ACM Workshop on botnet, and that a secret is split into C pieces, with each
RapidMalcode,pages22–29,2005. botnetknowingonerandompieceofthesecret. Howmany
[5] E. Cooke, F. Jahanian, and D. McPherson. The zombie botnetswouldadefenderhavetocompromise,onaverage,
roundup: Understanding,detecting,anddisruptingbotnets. to learn the entire secret? How many botnets would a de-
InUSENIXSRUTIWorkshop,pages39–44,2005.
fenderhavetodisable, onaverage, todestroyonepieceof
[6] D.Dagon,G.Gu,C.Zou,J.Grizzard,S.Dwivedi,W.Lee,
thesecretentirely?
andR.Lipton. Ataxonomyofbotnets. Unpublishedpaper,
Solongaswhichpieceofthesecreteachbotnetknowsis
c.2005.
[7] R. Dingledine, N. Mathewson, and P. Syverson. Tor: The chosenrandomly,thereareapproximatelyR= B/Cbotnets
second-generationonionrouter. InProceedingsofthe13th thatknoweachpieceofthesecret.
USENIXSecuritySymposium,pages303–320,2004. As such, the problems of how many botnets need be
[8] A.HouseholderandR.Danyliw.Increasedactivitytargeting compromisedordisabledreducetomoreeasily-statedprob-
Windowsshares. CERTAdvisoryCA-2003-08, 11March lems. Namely, assume that there are C different colors of
2003.
marbles,andRmarblesofeachcolorareplacedintoabag.
[9] N.IanelliandA.Hackworth.BotnetsasaVehicleforOnline
Whatistheexpectednumberofmarblesthatwouldhaveto
Crime. CERTCoordinationCenter,2005.
[10] J.Ma,G.M.Voelker,andS.Savage. Self-stoppingworms. be drawn from the bag, without replacement, until at least
InProceedingsofthe2005ACMWorkshoponRapidMal- one of each color of marble has been drawn? Similarly,
code,pages12–21,2005. whatistheexpectednumberofmarblesthatwouldhavetobe drawn from the bag, without replacement, until all the R marbles of color C
marblesofonecolorhavebeendrawn?
While one could analyse both of these problems using
C-1 C C C
ageometricdistribution,thatformofanalysisassumesthat
eachmarbleisplacedbackintothebagafterbeingdrawn.
So, while using a geometric distribution would provide a
good approximation to the expected number of marbles
R+1 placement spots
that would have to be drawn, the following methods are
more accurate. We have confirmed the analysis with two
independently-coded simulations of drawing marbles from Figure 7. Marble placement spots for the
abagwithoutreplacement. missingmarblesofcolorC-1.
AppendixA.1 OneofEachColor
missing marbles must appear to the right of the lone mar-
First, we investigate the problem of how many marbles
bleofcolorC−1. However,asdemonstratedbyFigure7,
one would expect to draw in order to have drawn at least thereareR+1distinctplacementpositions(relativetothe
oneofeachcolor. Wepresentasolutiontothisproblem,a
remainingmarblesofcolorC)totherightofthelonemar-
non-trivialvariantofthecollector’sproblem[22].
ble of color C −1 into which any of the missing marbles
Imaginethat,insteadofstoppingdrawingmarblesfrom
ofcolorC −1couldbeplaced(notethatmultiplemissing
thebagonceoneofeachcolorhasfinallybeendrawn, the
marblesmayoccupyasingleplacementpositiononcethey
marblesaredrawnoneatatimefromthebagandplacedon
arereturnedtothetable). Namely,amissingmarblewillbe
a table from left to right, until there are no marbles left in
placedtotheleftofλmarblesofcolorC,whereλ∈[0,R].
the bag. Denote the first color of marble that is drawn as NotethatonlyoneofthoseR+1positionsistotheleft
color 1. One may or may not draw additional marbles of ofallofthemarblesofcolorC. So, weexpectthat 1 of
color 1 before drawing a different color. Denote this next R+1
themissingmarbleswillappeartotheleftofthemarblesof
color as color 2. Continue as such, denoting the final new
colorC.SincethereareR−1missingmarbles,weconclude:
colorofmarblethatisdrawnascolorC.
Usingthisnotation,wehaveawayofdescribingT,the 1
E(e )= ·(R−1).
totalnumberofmarblesdrawnbeforewehaveatleastone C−1 R+1
of each color. Namely, T is the number of marbles drawn
up to and including the first time a marble of colorC was Asimilarargumentcanbemadetocomputethevalueof
drawn. E(e C−2)(forexpositorypurposes,weassumeC ≥ 3). This
Obviously, T ≥ C, since we need to draw at least one time, when we start with all of the marbles on the table,
marbleofeachcolor.Thequestionis:howmanyextramar- sorted from left to right by draw order, we take a slightly
blesofcolors1...C−1aredrawnbeforethefirstmarbleof differentcourseofaction. Wetakeawayallofthemarbles
colorC? Wedenotethenumberofextramarblesofcolori
exceptthoseofcolorsCandC−1,andtheleftmostmarble
drawnase. Hence: ofcolorC−2. Wherewouldweexpecttofindthemissing
i
R−1marblesofcolorC−2weretheyreplaced? Thistime,
XC−1 thereare2R+1possibleplacementlocationsforthemissing
T =C+ e i marbles. But, how many of them lie to the left of the first
i=1 marbleofcolorC?
Obviously the location directly to the right of the lone
wheree ≥0∀i∈[1,C−1].
i
marbleofcolorC−2,aswellasthelocationdirectlytothe
To compute the expected value of T, denoted E(T), we
rightofthefirstmarbleofcolorC−1bothmeetthiscriteria.
needonlycomputetheexpectedvaluesforthee,E(e). We
i i
Donotforget,however,thatweexpecttofindE(e )extra
startbycomputingE(e ). C−1
C−1
marbles of color C −1 to the left of the marbles of color
Envisionthemarbleslyingonthetable,sortedfromleft
C; the locations directly to the right of those marbles are
torightintheordertheyweredrawn. Now,takeawayallof
also on the left side of the marbles of color C. As such,
themarblesexceptthoseofcolorCandtheleftmostmarble
2+E(e )ofthepossible2R+1placementlocationsfor
ofcolorC−1. IfweweretoputtheR−1missingmarbles C−1
theR−1missingmarblesarelocatedtotheleftofthefirst
ofcolorC−1backonthetablewheretheywerejustlying,
marbleofcolorC,yielding:
wherewouldweexpecttofindthem?
Since all R−1 of those marbles must have been drawn 2+E(e )
fromthebagafterthefirstmarbleofcolorC−1,allofthe E(e C−2)= 2R+C 1−1 ·(R−1).R marbles of color 1
C-ET(C,R)
1 sum←0
1 1 1 2
2 fori←1toC−1
3 do sum← sum+(sum+i)(R−1)/(iR+1)
4 returnsum+C
R+1 placement spots
Figure8.AfastalgorithmforcomputingE(T).
Figure 9. Marble placement spots for the
missingmarblesofcolor2.
Thegeneralformoftheaboveargumentyields:
i+Pi−1
E(e )
E(e )= j=1 C−j ·(R−1). Similartobefore,wewishtocalculateE(S)bycomput-
C−i iR+1
ingtheE(x). WestartwithE(x ).
i 2
Insertingthenow-computablevaluesfortheE(e)into Envisionthemarbleslyingonthetable,sortedfromleft
i
torightintheordertheyweredrawn. Now,takeawayallof
XC−1 themarblesexceptthoseofcolor1andtherightmostmarble
E(T)=C+ E(e)
i ofcolor2. IfweweretoputtheR−1missingmarblesof
i=1
color2backonthetablewheretheywerejustlying,where
yieldsthefinalsolutiontoourproblem. Afastpseudocode wouldweexpecttofindthem?
algorithmforcomputingE(T)isincludedinFigure8. Since all R−1 of those marbles must have been drawn
from the bag before the last marble of color 2, all of the
AppendixA.2 AllofOneColor missingmarblesmustappeartotheleftofthelonemarble
ofcolor2. However,asdemonstratedbyFigure9,thereare
Next, we investigate the problem of how many marbles
R+1distinctplacementpositions(relativetotheremaining
onewouldexpecttodrawinordertohavedrawnallofthe marbles of color 1) to the left of the lone marble of color
marblesofonecolor. Thesolutionis,infact,quitesimilar 2 into which any of the missing marbles of color 2 could
inform. beplaced(asbefore,multiplemissingmarblesmayoccupy
Again,imaginethatthemarblesaredrawnoneatatime a single placement position once they are returned to the
from thebag and placed ona table from leftto right, until table). Namely,amissingmarblewillbeplacedtotheleft
therearenomarblesleftinthebag. Wenumberthecolors
ofλmarblesofcolor1,whereλ∈[0,R].
from 1 toC; however, this time we use a different scheme NotethatallbutoneofthoseR+1positionsistotheleft
toassignthenumbers. Denotethefirstcolorofmarblefor of some of the marbles of color 1. So, we expect that RR +1
whichwesucceedindrawingallRmarblesascolor1. The ofthemissingmarbleswillappeartotheleftofamarbleof
next color of marble for which we drew all R marbles is
color1.SincethereareR−1missingmarbles,weconclude:
denoted color 2. Continuing as such, the color of the last
R
marbledrawnisdenotedascolorC. E(x 2)=
R+1
·(R−1).
Using this numbering scheme, we want to describe S,
the total number of marbles drawn before we have all the Unsurprisingly,asimilarargumentcanbemadetocom-
marblesofonecolor. Namely, S isthenumberofmarbles putethevalueofE(x 3)(asbefore,forexpositorypurposes,
drawnuptoandincludingthelasttimeamarbleofcolor1 weassumeC ≥3). Thistime,whenwestartwithallofthe
wasdrawn. marblesonthetable,sortedfromlefttorightbydraworder,
As before, we have an obvious lower bound: S ≥ R, wetakeawayallofthemarblesexceptthoseofcolors1and
sincethereareRmarblesofcolor1. Thequestionis: how 2,andtherightmostmarbleofcolor3.Wherewouldweex-
many marbles of colors 2...C are drawn before the last pecttofindthemissingR−1marblesofcolor3werethey
marble of color 1? We denote the number of marbles of replaced? This time, there are 2R+1 possible placement
coloridrawnbeforethelastmarbleofcolor1asx. Hence: locationsforthemissingmarbles. But,howmanyofthem
i
lietotheleftofthelastmarbleofcolor1?
XC
Obviously,thelocationsdirectlytotheleftofanyofthe
S =R+ x
i marbles of color 1 meet this criteria. Do not forget, how-
i=2
ever,thatweexpecttofind E(x )marblesofcolor2tothe
2
wherex ≥0∀i∈[2,C]. left of the last marble of color 1; the locations directly to
iThegeneralformoftheaboveargumentyields:
C-ES(C,R)
1 sum←0
E(x)=
R+Pi j− =1 2E(x j)
·(R−1).
2 fori←1toC−1 i (i−1)R+1
3 do sum← sum+(sum+R)(R−1)/(iR+1)
4 returnsum+R Insertingthenow-computablevaluesfortheE(x i)into
XC
E(S)=R+ E(x)
Figure 10. A fast algorithm for computing i
i=2
E(S).
yieldsthefinalsolutiontoourproblem. Afastpseudocode
algorithmforcomputingE(S)isincludedinFigure10(the
theleftofthosemarblesarealsoontheleftsideofthelast forloophasbeenchangedfromi ∈ [2,C]toi ∈ [1,C−1]
marbleofcolor1.Assuch,R+E(x )ofthepossible2R+1 tosimplifythei−1intoaniinsidetheloop).
2
placement locations for the R−1 missing marbles are lo-
catedtotheleftofthelastmarbleofcolor1,yielding:
R+E(x )
E(x )= 2 ·(R−1).
3 2R+1