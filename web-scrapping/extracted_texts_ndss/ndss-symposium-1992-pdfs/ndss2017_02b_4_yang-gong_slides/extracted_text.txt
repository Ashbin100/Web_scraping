Fake Co-visitation Injection Attacks to
Recommender Systems
Guolei Yang, Neil Zhenqiang Gong, Ying CaiCo-visitation Recommender System is Popular
We show co-visitation recommender systems can be spoofed to
recommend items as an attacker desiresBrief Intro to Co-visitation Recommender System
l Key idea: Items that are frequently visited together in the past are likely to be
visited together in the future
Video A
Recommend
Video A
videos
View
Video B
View Video B
Show
In the pastKey Data Structure: Co-visitation Graph
Each vertex represents an item
Item 2
Item 1
Item 5
Item 3 Item 4Key Data Structure: Co-visitation Graph
Number of views
of Item 1 (Popularity)
Item 2
Item 1
Item 5
Item 3 Item 4Key Data Structure: Co-visitation Graph
Number of co-visitations
between Item 1 and 2
Item 2
Item 1
Item 5
Item 3 Item 4Two Recommendation TasksItem-to-Item Recommendation
Compute Generate
Rank items by
item-item recommendation
similarity
similarity list
For Item 1:
Include items
1. Item 2
1) with high similarity
2. Item 4
e.g., On YouTube 2) satisfy popularity
𝑓(​𝑤↓𝑖 ,​𝑤↓𝑗 )=​𝑤↓𝑖 ∗​𝑤↓𝑗
3. Item 3
threshold
Item 2
Item 1
View Item 1
Recommend
items
Item 2
Item 5
Item 3 Item 4Related Work
l Xing et al. (USENIX Security’13) proposed pollution attacks to the user-to-item
recommendation
n Relies on Cross-Site Request Forgery (CSRF)
n Not applicable to item-to-item recommendation
l Profile injection (Shilling) attacks to recommender systems via user-item rating
matrices
n Not applicable to co-visitation recommender systems which do not rely on user-item rating
matrix.
l Relationship to adversarial machine learning
l Our attack is data poisoning attack to recommender systemsRoadmap
l Threat model
l Proposed attacks
l Evaluations on synthetic data
l Evaluations on real-world recommender systems
l CountermeasuresThreat Model
l Attacker’s background knowledge
High knowledge Medium knowledge Low knowledge
Co-visitation Recommendation Recommendation
Graph Lists Lists
Knowledge
Popularity Item
Threshold Popularity
Scenario Insider YouTube … Amazon, eBay…
l Attacker’s goal
n User Impression (UI) : The probability that a random visitor will see the item
n Increase UI of a target item
n Decrease UI of a target itemProposed Attacks
l Promotion attack
n Goal: Increase UI of a Target Item
n Make the target Item appear in the recommendation lists of as many items
as possible
Recommend
items
+
View +
Recommend
items
Target Item
+
Recommend
itemsProposed Attacks
l Promotion attack
n Goal: Increase UI of a Target Item
n Make the target Item appear in the recommendation lists of as many items
as possible
Recommend
items
+
+
Recommend
items
Target Item
+
Recommend
itemsProposed Attacks
l Promotion attack
n Goal: Increase UI of a Target Item
n Make the target Item appear in the recommendation lists of as many items
as possible
Anchor Item
Recommend
items
+
Anchor Item
+
Recommend
items
Target Item
+
Anchor Item
Recommend
itemsProposed Attacks
l Demotion attack
n Goal: Decrease UI of a Target Item
n Remove the target Item from the recommendation lists of as many items as
possible
Anchor Item
Recommend
items
X
Anchor Item
X
Recommend
items
Target Item
X
Anchor Item
Recommend
itemsKey Challenge
l Given a target item and a limited number fake co-visitations
n How to select the anchor item(s) to attack?
n How many fake co-visitations to insert for each anchor item?Key Challenge
l Given a target item
n How to select the anchor item(s) to attack?
n How many fake co-visitations to insert for each anchor item?
l Solution: Formulate the attack as an optimization problem
n Select the best anchor items to attack
n Determine how many fake co-visitation is needed to attack each anchorPromotion Attack – High Knowledge Attacker
Attacker’s Goal: Promote Item 3
Select anchor items
Item 2
Item 1
Recommend
items
Item 2
Item 5
Item 4
Item 3
Recommend
items
Original Co-visitation Item 2
graphPromotion Attack – High Knowledge Attacker
Attacker’s Goal: Promote Item 3
Insert 10 fake
co-visitations Item 2
of Item1 & 3
Item 1
32
14
Item 5
21
Item 4
Item 3
Attacked Co-visitation
graphPromotion Attack – High Knowledge Attacker
Attacker’s Goal: Promote Item 3
Item 2
Item 1
Insert 10 fake
32
co-visitations
of Item 3 & 4
14
Item 5
31 17 45
Item 4
Item 3
Attacked Co-visitation
graphPromotion Attack – High Knowledge Attacker
Attacker’s Goal: Promote Item 3
Item 2
Item 1
Recommend
items
32
Item 3
14
Item 5
31 17 45
Item 4
Item 3
Recommend
items
Attacked Co-visitation Item 3
graphPromotion Attack – High Knowledge Attacker
Attacker’s Goal: Promote Item 3
Item 2
Item 1
Recommend
itemsl Medium knowledge attacker can be converted into high
32
knowledge attacker by estimating edge weight
Item 3
14
l Low knowledge attacker can be converted into medium
knowledge attacker by estimating vertex weightI tem 5
31 17 45
Item 4
Item 3
Recommend
items
Attacked Co-visitation Item 3
graphDemotion Attack – High Knowledge Attacker
Attacker’s Goal: Demote Item 4
Recommend
items
Item 4
Item 2
Recommend Item 1
items
Recommend
Item 4 items
Item 4
Item 5
Item 4
Item 3
Original Co-visitation
graphDemotion Attack – High Knowledge Attacker
Attacker’s Goal: Demote Item 4
Recommend
items
Item 5
Item 2
Recommend Item 1 35
items
Recommend
26
Item 1 15 items
Item 2
21
9
Item 5
15
Item 4
Item 3
Attacked Co-visitation
graphEvaluation on Synthetic Data
l Question we aim to answer
n How does attacker’s background knowledge impact our attacks
n How does the co-visitation graph structure impact our attacks?
n How does the number of inserted fake co-visitations impact our attacks?Impact of Attacker’s Background KnowledgeImpact of Co-visitation Graph StructureImpact of Number of Fake Co-visitationsEvaluation on Real-World Recommender Systems
48 ~ 72 hours
Select Insert fake Exam
Initialization
anchor items co-visitations results
Repeated for approx. 21 daysResults on YouTubeResults on YouTubeCountermeasures
l Limiting background knowledge
n The website can discretize item popularities
Funny Video Funny Video Funny Video
3827 Views 3500+ Views 2000+ Views
Shows exact Discretize Granularity Discretize Granularity
popularity = 500 = 2000Countermeasures
l Limiting background knowledge
n The website can discretize item popularitiesConclusion
l Recommender systems are vulnerable to Fake Co-visitation Injection Attacks
l An attacker can use our attacks to spoof a recommender system to make
recommendations as the attacker desires.Parameter Estimation
l Convert medium/low knowledge attackers into high knowledge attacker
l The missing knowledge is estimated based on publically available information
Insert a fake item
as probe
Fake Item
Insert co-visitations
until it appears in the
recommendation list
of an item
?
?
?
? ?
?
?Parameter Estimation
l Convert medium/low knowledge attackers into high knowledge attacker
l The missing knowledge is estimated based on publically available information
Insert a fake item
as probe
Insert co-visitations
until it appears in the
6
recommendation list
of an item
>= 6
?
?
>= 6 >=? 6
?
?Proposed Attack Algorithm
l General steps
Select items Insert fake Exam
Initialization
to attack co-visitations results
Knowledge Construct & Repeatedly
acquire view selected
solve the
items in the
optimization
Parameters
same browser
estimation problem session
No Goal
achieved?
Yes
TerminateExperiments on Real-world Recommder Systems
l Results on YouTubeExperiments on Real-world Recommder Systems
l Results on eBayExperiments on Real-world Recommder Systems
l Results on Amazon
l Results on YelpExperiments on Real-world Recommder Systems
l Results on LinkedInCountermeasures
l Limiting fake co-visitations
n Use CAPTCHA
n Fake co-visitation detection
n Using co-visitations from registered users only