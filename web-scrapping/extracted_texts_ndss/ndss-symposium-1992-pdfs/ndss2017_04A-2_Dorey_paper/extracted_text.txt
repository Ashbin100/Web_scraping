Indiscreet Logs: Diffie-Hellman Backdoors in TLS
Kristen Dorey Nicholas Chang-Fong Aleksander Essex
Western University, Canada Western University, Canada Western University, Canada
kdorey@uwo.ca nchangfo@uwo.ca aessex@uwo.ca
Abstract—Software implementations of discrete logarithm typically chooses these parameters and communicates them
basedcryptosystemsoverfinitefieldstypicallymaketheassump- to the other party via an authenticated channel. However, we
tion that any domain parameters they encounter define cyclic examine a number of possible scenarios in which weakened
groupsforwhichthediscretelogarithmproblemisassumedtobe parameters could be maliciously injected for the purposes of
hard.Inthispaperweexplorethistrustassumptionandexamine
creating a persistent backdoor.
situationswhereitmaynotbejustified.Inparticularwefocuson
groupsforwhichtheorderisunknownandnoteasilydetermined, Significance. We argue backdoored parameters are interesting
and explore the scenario in which the modulus is trapdoored to for a number of reasons:
make computing discrete logarithms efficient for an entity with
knowledge of the trapdoor, while simultaneously leaving its very
• Efficient. Optimally weak parameters can be chosen
existence as matter of speculation to everyone else.
to allow near instantaneous recovery of DH shared
We conducted an investigation of discrete logarithm domain secrets;
parametersinuseacrosstheInternetanddiscoveredamultitude
of instances of groups of unknown order in use in TLS and • Pervasive. Attacks work on the examined implemen-
STARTTLS spanning numerous countries, organizations, and tationswithnomodificationtoexistingsourcecode—
implementations. Although our disclosures resulted in a number at either end point;
of organizations taking down their suspicious parameters, none
were able or willing to rule out the possibility that their • Surreptitious. Implementations provide little or no
parameters were trapdoors, and obtaining conclusive evidence means of validating parameters following their initial
in each case could be as hard as factoring an RSA modulus, creation, and therefore detecting weak parameters is
highlighting a key feature of this attack method—deniability. potentially difficult.
• Deniable. The very existence of a backdoor can be
I. INTRODUCTION
deniable. We uncovered a number of composite mod-
Finite fields underlie a number of cryptographic primitives uli online and organizations we contacted declined to
andprotocolssuchasDH/DHEkeyexchange,DSAsignatures, comment on how the parameters came to be used.
ElGamal encryption, and others. DHE in particular, though in
steady decline over recent years, is still widely supported. In Summary of Results. We found major implementations of
contrast to elliptic curve variants of these cryptosystems, it is finite field based discrete logarithms have a systematic vulner-
common for finite field crypto implementations not only to abilitytoweakgroupsandusebadparameterhygiene,andwe
support custom groups, but to accept almost any group pa- examine the resulting security ramifications:
rameters they are presented with. The potential consequences
of working in weak groups are well known: the discrete • We conducted an Internet wide survey of DHE sup-
logarithm problem is efficient when groups are of sufficiently port uncovering hundreds of TLS- and STARTTLS-
low or smooth order. Being able to ascertain the size and enabledwebandmailserversusingcompositemoduli
primality of a group’s order, therefore, would seem to be a with no smooth factors. These potentially backdoored
critical functionality. It is not. All implementations of finite parameterswerefoundacrossarangeofprotocols,in-
fieldcryptographyweexaminedperformlittleornovalidation cludingHTTPS,SMTP,SMTPS,IMAPS,andPOP3S,
whatsoever. and spanned over 30 countries and a diverse set of
organizations. Some of these servers used generators
What this means is software implementations implicitly
ofpartiallysmoothorder,whichallowedustorecover
trust that the given parameters form a cyclic group of suf-
large portions of the private key. We additionally
ficiently large, non-smooth order. At first glance this seems
found 1.6M servers offering non-safe prime groups
a reasonable assumption, since the party with the private key
of unknown order.
• We discuss how TLS 1.2 and earlier is vulnerable to
Permission to freely reproduce all or part of this paper for noncommercial DHE “downgrade” style attacks, in which an adver-
purposes is granted provided that copies bear this notice and the full citation
sary that can exploit trapdoored parameters can force
on the first page. Reproduction for commercial purposes is strictly prohibited
without the prior written consent of the Internet Society, the first-named author a DHE ciphersuite to be negotiated as long as both
(for reproduction of an entire paper only), and the author’s employer if the parties support it. We present several possible attack
paper was prepared within the scope of employment. vectors to deliver these malicious parameters: directly
NDSS ’17, 26 February - 1 March 2017, San Diego, CA, USA
attacking the server or TLS endpoint, or by attacking
Copyright 2017 Internet Society, ISBN 1-891562-46-0
http://dx.doi.org/10.14722/ndss.2017.23006 the software upstream.• We disclosed the vulnerability to 17 companies, re- both the client and server to prefer a DHE ciphersuite, which
sulting in a security advisory (CVE-2016-5774). In- limitstheattackpotentialsincecurrenttelemetrydataindicates
terestingly, the organizations we spoke to declined to DHE key exchanges account for 1% of TLS handshakes.1
explain how composite moduli came to be used in In§IV-Cwedescribehowanattackercanexploitbackdoored
their DHE configurations. parameters to force a DHE ciphersuite to be selected if both
parties support it. Additionally we explain how one of the
WecannotbecertainthatbackdooredDHEparametersare trapdoor constructions presented could be reversed in O(22(cid:96))
inuseontheInternettoday.Abackdooredmodulusisdeniable, operations instead of the expected O(2(cid:96)). We also conducted
therefore its existence cannot be known absolutely without
a number of vulnerability disclosures and discuss vendor
external confirmation or complete factorization. However, our
responses in § VI.
surveyandsubsequentanalysisshowthatbackdoorusecannot
be ruled out.
C. Trapdoors Based on Number Field Sieves
Theremainderofthispaperisorganizedasfollows.In§II
Lenstra [29] and Gordon [24] observed that even if it was
we discuss related work. In § III we discuss the mechanics of
establishedthataparticulargrouphadasufficientlylargeprime
creating TLS backdoors, and present a survey of composite
order and that all relevant values were members of the group,
DHE parameters in TLS and STARTTLS identifying potential
it is not necessarily sufficient to ensure the hardness of the
backdoors. In § IV we demonstrate how weak parameters can
discrete logarithm problem if p was maliciously chosen to be
be accepted by web clients and show how to exploit this
“nice” in the context of the generalized number field sieve.
scenario. In § V we discuss possible vectors of attack for
Here, a trapdoored prime modulus could be constructed using
injecting weakened parameters. In § VI we report on vul-
a polynomial of low-degree and constrained coefficients for
nerability disclosures we conducted with organizations found
the purposes of greatly accelerating the generalized number
using composite moduli. Finally in § VII we discuss potential
field sieve (GNFS) sieving and descent steps. Given only
mitigation strategies.
p, a verifier would need to deduce this polynomial in order
to establish the existence of a backdoor. This approach to
II. RELATEDWORK
buildingtrapdooredDHparameterswaspreviouslyconsidered
A. Inadequate DH Parameter Validation too computationally intensive to perform in practice. Fried
et al. [21], however, recently demonstrated the creation of a
The insecurity of working in small or smooth order sub- 1024-bit trapdoored prime modulus using the special number
groupshasbeenknownfordecades[31],[7],[39].Despitethis field sieve. Number field sieving can even be applied in some
many popular implementations of discrete logarithms do little situations wherethe group wasnot attackercontrolled. Adrian
or no parameter validation. Concurrent but independent work et al. [6] demonstrated a modified version of the GNFS in
by Valenta et al. [38] presents a number of complementary which an attacker could recover DH private keys from export
findings regarding the prevalence of weak parameters on the strength groups.
Internet. Whereas our paper focuses on the possibility of
trapdoors stemming from small subgroups of hidden order,
III. COMPOSITEDHMODULI
theirwork focuseson howthe lackofparameter checkingcan
be exploited in the context of DSA style groups. In this section we discuss how trapdoored DH parameters
could be used as a result of poor parameter validation, and
In other recent work exploiting improper parameter check-
outline the potentially trapdoored composite DH parameters
ing in this setting, Bhargavan et al. [13] demonstrated triple
found in TLS.
handshake attacks on TLS-DHE that relied on the use of non-
prime groups which went unchecked on the client end. In
a follow-up paper [12] the authors conduct small subgroup A. Preliminaries
attacks on TLS, SSH, and IKEv2 that exploit the lack of
We briefly review some important properties of finite-field
public key validation. Mavrogiannopoulos et al. [32] defined baseddiscretelogarithms.LetG beacyclicgroupoforderq.
q
a TLS attack used when a server supports explicit elliptic
An element 1<x<p has order q if q is the smallest number
Diffie-Hellman (ECDH) curves. The attack is made possible such that xq modp = 1. Let p = qr+1 for p,q prime, and
throughincorrectDHparametervalidation,astheclientviews let g = hr modp (cid:54)= 1 for some 1 < g,h ≤ p−1. We say g
theECDHparametersasDHparameters.Althoughrecoveryof generatesG .Bysafeprimegroupwedenotethecasewherep
q
theDHpre-mastersecretispossible,thisattackisverylimited
is a safe prime, i.e., r =2. Typically implementations choose
as explicit ECDH curves are not supported in the majority of g ∈ Z∗, i.e., as having order p−1 as opposed to (p−1)/2.
TLS implementations due to their open-source nature. p
By non-safe prime group (also known as a Schnorr group,
or DSA group) we denote the case where r > 2, i.e. the
B. Trapdoors Based on Subgroups of Hidden Order cyclic subgroup G of Z∗. Typically q (cid:28)p allowing for more
q p
efficient operations.
Henry and Goldberg [27] used trapdoor discrete logarithm
groups as a component of privacy preserving reputation sys- Applicationsofthediscretelogarithmproblem(DLP)over
tems in anonymizing networks. Recent concurrent but inde- finite fields, such as Diffie-Hellman, are defined by a set of
pendent work by Wong [41] found examples of composite domain parameters (cid:104)p,q,g(cid:105), where p is the prime modulus,
DHE moduli over HTTPS in the wild. Our study, however, q is the group order, and g is a generator of G . Let G
q q
reports on considerably more specimens across a wider range
of protocols. In addition, the exploitation by Wong required 1https://telemetry.mozilla.org
2be a cyclic group of large, prime order. Given two elements As an example, we set p as the product of all primes up
g,y ∈G the DLP is the problem of finding the unique value to 1471, excluding 2 and 5 (so it is not obviously prime from
q
0 ≤ x < q such that gx = y modp, and is believed to inspection in base 2 or 10). This number is 2043 bits and has
be computationally infeasible when q is sufficiently large and 231 factors. Multiplying it by 19 will bring the length to a
contains no small factors. The computational Diffie-Hellman standard2048bits.Inthiscase,oneofthefactorswillbe192.
assumption states that given the values g,ga,gb ∈ G , it Table I shows an example of a safe prime modulus and our
q
should be computationally infeasible to compute gab. Finally, smooth composite modulus. The lack of proper validation de-
the decisional Diffie-Hellman assumption states that given scribedin§III-BmeansOpenSSHconnectswithboththesafe
g,ga,gb ∈ G , it is believed to be computationally infeasible prime modulus and our composite modulus designed to allow
q
to distinguish between gab and a random element in G . efficient DLs. The discrete logarithm of a number relative to
q
an arbitrary base (e.g., 2) can be computed individually across
each of the factors of p and reassembled using the Chinese
B. Validating Domain Parameters
remainder theorem (CRT). The discrete log in each of the
Verifyingthevalidityofthedomainparametersissufficient subgroups can be pre-computed. Computing a discrete log,
to detect the kinds of weakened or backdoored parameters therefore, can be reduced to 231 look-ups in this dictionary,
consideredbythispaper.Mostofthesoftwareimplementations followed by a single CRT of 231 congruences. Implementing
we examined, however, skip one or more of the following this in Sage we were able to compute discrete logarithms in
checks: 4ms on a laptop.
• Length: Check that |p| and |q| are sufficiently large
(i.e.|p|≥2048-bits,|q|≥224-bitsaspercurrentNIST D. Constructing Trapdoors in Groups of Hidden Order
guidelines [9]);
Working in small subgroups is efficient from the attacker’s
• Primality: Check p and q are both prime;2 perspective, but comes with two downsides: (1) others can
alsoexploittheweakgroup,andperhapsmoreimportantly(2)
• Group Order: Check q|(p − 1). No mechanism is
strongevidenceexiststhattheparametersarecompromised.A
provided in TLS to communicate group order [19],
more interesting scenario is to trapdoor the modulus such that
[34];
onlytheattackercanexploititwhilemakingitsveryexistence
• Group Membership: Check any asserted group ele- a matter of speculation. In this setting the attacker can use a
ment i.e. generator g, public key, etc. is a member of composite(e.g.,RSA)modulustoconstructatrapdoorinstance
the group (i.e. m∈G ). Specifically, check 1<m< ofthediscretelogarithmproblem.Letn=pq forlargeprimes
q
p−1andmq modp=1.Notem=p−1isexplicitly p,q with φ = (p−1)(q−1). The idea is to work in small
excludedbytheassociatedNISTstandard[8],sinceit subgroupsofhiddenandsmoothorder,i.e.,suchthat(p−1)and
alwaysonlyhasanorderof2,regardlessofthechoice (q−1)containsmoothfactors.Ageneratoristhenselectedso
of p. Safe prime groups working in Z∗ can omit the as to have reasonably low order modulo p and q respectively,
p
exponentiation by the group size, since all elements allowing the person knowing the factorization of n to solve
1<m<p−1 are part of this group. several independent and efficient discrete logarithms.
Related Constructions. Concurrent and independent to us,
C. Successful Connections with Valid-looking Moduli
Wong [41] also proposes using a hidden subgroup of a com-
Abackdooredmodulusmaypossiblyremainundetectedfor posite modulus in the context of trapdoored Diffie-Hellman
longer if the weak modulus at least looks valid, e.g., does not key agreement. Let p = 2p 1p 2+1 and q = 2q 1q 2+1 where
end with an even digit. To demonstrate this, we investigated p 1,q 1 are sized small enough to allow efficient computation
the visual similarity between a safe prime modulus and a of the discrete log in subgroups of order p 1 and q 1, but large
deliberately weak modulus, and showed that lack of proper enough to prevent brute forcing the discrete logarithm in a
validation allows software implementations to connect with subgroup of hidden order p 1q 1, while p 2,q 2 are large so as to
both moduli. As a demonstration, we modified the OpenSSH prevent factorization attacks, such as Pollard’s p-1 attack. Let
\etc\moduli file to use a deliberately weak modulus. The |p 1|=|q 1|=(cid:96).Ageneratorg ischosenoftheuniquesubgroup
defaultOpenSSHmodulifileconsistsofsafeprimeswithshort G<Z∗
n
of order p 1q 1.
generators like 2 or 5. Although the software does not check
Theorderofghaslength2(cid:96).Theordersofgmodulopand
group validity, an attack in the context of a version update
q respectively are (cid:96)-bits in length each. Computing a discrete
should allow the parameters to pass casual inspection. The
attacker’sgoalisthentocreateparametersthatalsohaveshort
logarithmseparatelymodulopandq takes22(cid:96) operationseach
usinggeneraldiscretelogarithmalgorithms(e.g.,Pollard’srho,
generators (and thus are valid looking), but are still efficient
etc.). With knowledge of the trapdoor, therefore, the attacker
to solve. Schnorr groups are unlikely to have short generators
of small subgroups, and large generators (i.e. the same length can compute a discrete logarithm in 22(cid:96)+1 operations. Without
as the modulus) would be overtly suspicious. Since OpenSSH knowledgeofthegrouporder,Wongarguesanattackerwould
does not verify the primality of the modulus, we can instead require 2(cid:96) operations to compute a discrete logarithm. As an
workwithsmoothcompositemoduli.Herediscretelogarithms example, Wong suggests that if g had an order of 200 bits
canbemadetobeefficientlysolvableforanygeneratorofany in length (i.e., where (cid:96) = |p 1|= |q 1|= 100), then an observer
subgroup. wouldrequire2200 operationstocomputeadiscretelogarithm,
whileanattackercouldsolvethediscretelogarithmsseparately
2Technicallyq onlymustcontainasufficientlylargefactor. modulo p and q, requiring 2·21 200 =251 operations.
3# Time Type Tests Tries Size Generator Modulus
20160522030737 2 6 100 2047 2 DB36277B45EA5615C782C08BF6A290A3D61E6B9690E4A147042113FC1BFC0AE
EC5FB0FF82FC1FEA86E273F667EC387FEF3421FFFC617A70C34B1987986C6B35C715713914AB75932A3D1942ECC0F
324D81BF00D59916B3BFDC7BA432AF5C5DFCF30BF4A2C80B8CA52A9B80E989D3A852BD81A8BD3ADC97497F43C6F0A
90882D9CFA165CF1F735C96428BF9BC32A58B71CF1D4FD48A6D2C616E91BB6E07C5CB0DF0C59DAF79D659C6E53007
843497BBEE5B341D27DE2E2543B8DFEB4DDAE6328EAD441C3F36509C1FA689FE494B0426ADCAF9E567A1C5A330168
9C5CCC55EC4002FAA5D254C2F3C0F8636BEA7019D1CD212B74EE4F273E0B9997720E8AEC5D76B
20160522030739 2 6 100 2047 2 8A4F17035FD10C065879FCC6C6632C15F18E15B6F88CAE2BA8C40D23E3DC2FD
68E8897E12F9FD6C3447B72C1595B2EF56C103162BB6C15AA64761C4258E56D47FE156832F6BB4273A106D2E6310A
9D5E54C497517A928A988A359FB0032BED2FEF690487F6AC6F0B3659A43643A316F601DE73E563F7BC2C37A67E751
DE1916B08FBE92FB9E32E35DC5FD051E9EBC4B2256BC4021DACD2CA816F46C7A5C5D1B298A259C925AB0DC404BCF7
2FDAF04C849DCA4C2F6576FCC586A5B942188312787D971D9BE6D70896A8E8458F3D75D6C8F97CE289688A175F699
B938DBFFC7A349D4130558794936E67C349EF96B83517CB647BADBF012E9BF1B4890E72B70849
TABLEI. OPENSSHMODULIFILE.ONEMODULUSISAVALIDSAFEPRIME(OSTENSIBLY)GENERATEDBYDEVELOPERS.THEOTHERISASMOOTH
COMPOSITEALLOWINGEFFICIENTDISCRETELOGARITHMS.OPENSSHWILLSUCCESSFULLYCONNECTWITHEITHER.
Thisexpectation,asitturnsout,isfalseasshownbyCoron Our Trapdoor Construction. Like Groth’s attack, Coron et
etal.[17]inthecontextofthecryptosystemduetoGroth[25], al.’s attack exploits the overall order of g, but cannot directly
whichworksinsmallRSAsubgroupsofhiddenorder.Groth’s exploit the order’s factorization (since it is unknown). Our
constructioniseffectivelyidenticaltoWong’strapdoordiscrete strategy,therefore,makestheoverallorderofglargeenoughto
logarithm construction, except is being applied in the context make factorization attacks infeasible, while smooth enough to
of an encryption scheme. Once again let n = pq for p = stillallowefficientcomputationofDLsbythetrapdoorowner.
2p p +1 and q =2q q +1 for p,q,p ,p ,q ,q prime, and
1 2 1 2 1 2 1 2 Let p = 2p ...p r + 1 and q = 2q ...q r + 1
let g generate the unique subgroup G<Z∗ of order p q . Let 1 k p 1 k q
n 1 1 for prime p,q. Let each p ,q be distinct, randomly chosen
h generate a subgroup of order p p q q . The values (n,g,h) i i
1 2 1 2 primes of length (cid:96). Let r ,r be distinct randomly chosen
form the public key. The values (p ,q ) form the private key. p q
1 1 primes. We choose g to generate a group G < Z∗ of order
A message m is encrypted as follows: n
p ...p q ...q , which gives g an overall order of 2k(cid:96) bits.
1 k 1 k
Enc(m)=grhm modn.
Wesize(cid:96)tobelargeenoughtoprecludefactorizationofn
using Pollard’s p−1, while small enough that solving discrete
for random r. Decryption is accomplished as follows: logarithm instances in subgroups of order approximately 2(cid:96)
Dec(c)=cp1q1 =(gr)p1q1(hm)p1q1 =(hp1q1)m modn. is efficiently computable. Using Pollard’s p−1 factorization
method, n can be factored as follows. Choose some a ∈ Z∗.
n
Let ρ be the i-th prime. For each ρ <2(cid:96) :
The discrete log of (hp1q1)m is computed to recover m. This i i
can be efficient if m is small, although Groth also proposed 1) Set a←aρi modn
a variant in which p 2 and q 2 are smooth, allowing for the 2) Ifgcd(a−1,n)(cid:54)=1and(cid:54)=n,outputfactor,otherwise
discrete logarithm to be efficiently computed using Pohlig- continue.
Hellman. The best attack proposed by Groth [25] factorizes
n in time O(2(cid:96)), and works as follows. Recall g has order Factorization is guaranteed after all primes ρ i < (cid:96) b have
p 1q
1
and that gp1 ≡ 1modp and that gq1 ≡ 1modq. This been exponentiated in, corresponding to approximately li(2(cid:96)b)
gives modularexponentiations,whereli(·)isthelogarithmicintegral.
gcd(gp1 −1,n)=q HenryandGoldberg[27]studiedsolvingdiscretelogarithmsin
smooth-order groups using optimized GPU implementations,
and andsuggest(cid:96) =55assufficient,requiring1500yearsof(non-
b
gcd(gq1 −1,n)=p. parallelizable) wall-clock time to factor n, while requiring
less than two minutes to compute the discrete logarithm with
Thusncanbefactorizedbycomputinggcd(gi−1,n)starting
knowledge of the trapdoor.
at i = 2(cid:96) and incrementing until a factor is found, requiring
at total of min(p ,q )−2(cid:96) operations. Note this approach is Wesizek tobelargeenoughtoprecludefactorizationofn
1 1
independent of the size of factors p
2
and q 2, basedontheorderofg(asinCoronetal.’sattack),i.e.,2k 2(cid:96) op-
erationsiscomputationallyinfeasible.FollowingCoronetal.’s
Similar to Wong, Groth proposed (cid:96) = |p |= |q |= 100
1 1 suggestionwehavek(cid:96)≥160.Asaconcreteparameterchoice,
as a trade-off between security and efficiency. Coron et al.,
let p,q each be 1024-bit primes where p = 2p p p r +1
however,demonstratedanattackonGroth’sschemerecovering 1 2 3 p
and q = 2q q q r + 1 where p ,p ,p ,q ,q and q , are
the factors of n in time O(22(cid:96)) instead of the expected O(2(cid:96)).
distinct,
rand1 om2 53 5q
-bit primes
and1
r
,2
r
3 are1 dis2
tinct,
ra3
ndom
Notice here that g in Groth’s scheme has the same order as g p q
primes of a length sufficient for p,q respectively to be 1024
inWong’sscheme,andthusanyattackonGroth’sschemethat
bits. A generator g is chosen of order p p p q q q . Given a
canrecoverthefactorsofnbasedong canbedirectlyapplied 1 2 3 1 2 3
DH public value gx modn, recovering private key x requires
toWong’sschemerevealingthetrapdoor.Coronetal.proposes
6 separate discrete logarithms to be computed in subgroups of
Groth’s scheme use (cid:96) ≥ 160. This is problematic if applied order255,foratotalofapproximately6·25 25 ≈230 operations.
to our trapdoor setting, since it would require the trapdoor
owner to compute two discrete logarithms on the order of 280 Plausible Deniability. One of the most desirable aspects of
operations. this attack paradigm is the ability for an attacker to construct
4adiscrete-logtrapdoorwhilemaintainingplausibledeniability. Modulus
Number Affected
It is easy to tell that a modulus is composite (when you’re Number ofIPs Size Protocols Modulus
(Bits)
looking), but determining group structure without knowledge
1 265 512 SMTP da583c16...4774e833
of the factorization, and hence the likelihood of the existence
of a trapdoor, can be made to be computationally infeasible. 2 242 2048 HTTPS c28992c5...d4681697
Asweexplainin§IV,noneofthevendorswecontactedabout 3 28 4255 HTTPS 4d494942...41674543
the composite moduli we discovered were able or willing to 4 5 1102 POP3S 30818702...47020105
either confirm or deny the existence of a trapdoor—precisely 5 2 1024 HTTPS a7790db6...288a9773
as an attacker might hope!
6 2 1024 HTTPS cc17f2dc...8e073c6d
One possible explanation for the origin of a composite 7 2 2048 HTTPS 8dd38f77...a8fdca8f
modulus is that it was simply a random number chosen by 8 1 904 HTTPS 9ce85640...2220dc53
accident, or perhaps began as a prime and had a digit or two 9 1 1024 IMAPS, 98ea99db...ab2b1b33
flippedinaneditor.Inthiscasewewouldexpecttheresulting SMTP
value to have a distribution of factors similar to that of a ran- 10 1 1024 HTTPS d67de440...24218eb3
domcompositenumber.Wediscussedsettingn=pq forlarge 11 1 2048 HTTPS f5a3da75...f564c113
primes p,q, but this might arouse suspicion, beyond simply
being composite, because it would contain no small factors. 12 1 2048 S SM MT TP P, S ad85473c...3b2d764b
Small factors up to some bound b may be recoverable using 13 1 4096 HTTPS 9152ba0b...85fab358
elliptic curve factorization, and the probability that a random
composite number is b-rough (i.e., contains no factors smaller TABLEII. THEFREQUENCY,AFFECTEDPROTOCOLS,ANDOTHER
than b) could be used as evidence toward the determination
PROPERTIESOFTHECOMPOSITEDHMODULIUSEDINTHEWILD.
of the existence of a backdoor. One option would be for an
attacker to use an RSA modulus as before but multiply in a AffectedProtocol NumberofIPs Nationality
sequence of naturally increasing factors up to bound b. We Austria,Bahrain,Bolivia,Canada,
leave a heuristic for creating convincing random-looking but Chile, Czech Republic, France,
Germany,India,Iraq,Israel,Italy,
trapdoored moduli for future work.
Japan, Lebanon, Malaysia, Mex-
HTTPS 280
ico, Netherlands, Nicaragua, Pak-
E. Overview of Affected Protocols and Countries istan,Poland,Romania,SaudiAra-
bia,Singapore,SouthKorea,Spain,
Sweden,Taiwan,UnitedStates
Methodology. In order to find potential backdoors in discrete
logarithm implementations, we collected Diffie-Hellman data IMAPS 1 Japan
from two sources. For HTTPS, we downloaded Censys IPv4 POP3S 5 Ukraine
scans [20] where only DHE ciphersuites were offered by the SMTP 267 China
client.ForDHE-onlyscansinSMTP/S,POP3/S,andIMAP/S, SMTPS 1 Russia
we ran our own zgrab3 scans. We investigated both non-
TABLEIII. COMPOSITEDHEMODULIBYPROTOCOLANDCOUNTRY.
safe and composite DH moduli in HTTPS, and focused on
compositemodulionlyinSMTP/S,POP3/S,andIMAP/S.This
section focuses on composite moduli; non-safe prime moduli
the HTTPS moduli were spread around the world while the
are discussed in § IV-E.
SMTP moduli were only located in China. In HTTPS, North
Affected Protocols. Overall, there were over 500 IP ad- AmericanandEuropeancountriesweremostheavilyseen.The
dressesin31countriesusingpotentiallybackdooredcomposite locationspreadinHTTPSandtherelativemoduliabundancein
moduli. A summary of moduli properties and the affected SMTPincreasesthelikelihoodthatthesemoduliarebackdoors
protocols are seen in Table II. Out of the seven protocols rather than random composites.
investigated, composite moduli were found in five: HTTPS,
IMAPS,POP3S,SMTP,andSMTPS.Almostallofthemoduli F. Composite Moduli Used By Web Servers
were one of two numbers: a 512-bit modulus used in SMTP
or a 2048-bit modulus used in HTTPS. This recycling of WefirstdownloadedaCensysIPv4scantoinvestigateDH
parameters is common practice; while it does not directly moduli in HTTPS. In April 2016, there were approximately
suggest backdoor use, having the same backdoor in hundreds 43MIPaddressesintheHTTPSspace,ofwhichapproximately
of IP addresses is advantageous for an attacker. At the very 11M supported DH. Over 300,000 distinct DH moduli were
least, this moduli reuse proves that weak DH parameters are observed across these 11M. We observed 5,783 unique non-
used in the wild due to lack of DH parameter validation. safe prime moduli across 1.6M IPs, which will be further
Table II also shows three moduli with nonstandard lengths of discussed in § IV-E. We observed 9 unique composite moduli
4255-, 1102-, and 904-bits, indicating further carelessness in across 280 IPs. We did a comparison to ECDHE and found
parameter choice. thatof32millionIPs,allusedastandardSECPcurve,andthat
the server public key was a valid point on the curve. This, of
Affected Countries. To see the impact of these compos- course, is consistent with expectation. Discovering composite
ite moduli, we determined each IP address’ location using DHE moduli, on the other hand, was not.
WHOIS queries. The results are seen in Table III. Nearly
all the composite moduli were used in HTTPS or SMTP, but None of the composite moduli observed in HTTPS were
export-grade;allwereatleast904-bitsinlength.InMay2016,
3https://github.com/zmap/zgrab 46% of these IP addresses chose a Diffie-Hellman ciphersuite
5Server NumberofUses displayed on the webpage. We decided to focus on companies
Apache 95 associated with multiple IP addresses or with at least one
Apache-Coyote/1.1 3 active webpage. This left us with 21 companies: A1 Telekom
Austria(A1),AmazonWebServices(AWS),BancodeCrédito
Apache/2.2.9(Debian) 3
(BCP), Bloomberg, Blue Coat Systems, Centre national de
Apache/2.2.12(Linux/SUSE) 1
la recherche scientifique (CNRS), Deutsche Reisebüro (DER)
Apache/2.2.15(CentOS) 3
Touristik, ELITE, Expedia, Eyou.net, FTSE Russell, JAMF
Apache/2.2.15(RedHat) 3
Software, KDS, KPN, Nederlandse Spoorwegen (NS), NH
Apache/2.2.16(Debian) 1
Hotel Group, Nordea Bank, Santa Clara University (SCU),
Apache/2.2.22(Debian) 1 TravelTainment Germany, United Parcel Service (UPS), Uni-
Apache/2.2.22(RedHat) 2 versalSompoGeneralInsurance,andUniversidadNacionalde
Apache/2.2.22(Ubuntu) 2 Educación a Distancia (UNED).
Apache/2.4.3(Unix) 3
We completed vulnerability disclosures to companies with
httpd/1.00 8
atleastoneactivewebpageinHTTPSandwhichprovidedap-
Microsoft-IIS/7.5 2
propriate contact information; these disclosures are discussed
Microsoft-IIS/8.0 1
in§VI.Wealsocontactedthecompanywithmultipleaffected
Microsoft-IIS/8.5 6 IPaddressesinSMTP.Companiesinthetourismindustry,such
OracleApplicationServer10g 1 as TravelTainment and DER Touristik, accounted for about
Lighttpd 1 50% of the IP addresses. The remaining companies were in
Nginx 24 variousindustrieslikeeducationandfinance.Mostcompanies,
Nginx/1.6.3 1 noticeablythosewithmoreaffectedIPaddresses,hadanactive
Nginx/1.9.10 1 webpage.
Others 16
Todeterminethelongevityofcompositemoduli,wetested
NotSpecified 103 the 280 IP addresses three times during the course of writing
to see if composite moduli were still used. In May 2016, 88%
TABLEIV. TYPESOFWEBSERVERSUSINGCOMPOSITEDHEMODULI.
of the IP addresses still used the same composite modulus
as before. Of the remaining 12% of IP addresses, about half
switched to a prime modulus and half no longer connected
by default, meaning forcing DHE (as described in § IV-C) is under Diffie-Hellman. In June 2016, these statistics remained
not needed in those cases. approximately constant. However, by August 2016, only 39%
still used the same composite modulus and 53% used a prime
Todetermineifthesecompositemoduliweretheresultofa
modulus.Theremaining8%nolongerconnectedunderDiffie-
specific server implementation, we looked at the types of web
Hellman, almost the same amount from May and June 2016.
servers using these moduli. The breakdown of these servers
The decrease in composite moduli used could be attributed to
can be seen in Table IV. Apache servers were used by 125 IP
our vulnerability disclosures and, independently, Wong’s [41].
addresses, which accounted for 45% of the IP addresses using
This assumption seemed to coincide with company responses,
composite moduli in HTTPS. Almost the same percentage of
as many companies changed from composite moduli to prime
IP addresses (37%) did not specify a server. The remaining
as their primary response. Despite this, many composite mod-
21% of servers were spread over Microsoft, Oracle, Lighttpd,
uli remained in use over months, indicating backdoored DH
Nginx, and other servers specified by their company name.
parameters could go unnoticed for long periods of time.
Although Apache accounted for almost half the servers, the
version numbers varied or did not exist. This trend was also
seen in the other servers specified. Therefore the variety of G. Composite Moduli Used By Mail Servers
serversandversionsindicatethatnooneserverimplementation
was responsible for the composite moduli. Since Censys did not have DH scans for mail servers, we
ranzgrabscansinJuly2016onSMTP/S,POP3/S,andIMAP/S
The existence of composite moduli cannot be explained
in TLS and STARTTLS looking for composite DH moduli.
by poor entropy during generation, although poor entropy
Wefound272IPaddresseswithcompositeDHmodulispread
could potentially explain a systematic prime modulus. While
throughoutIMAPS,POP3S,SMTPS,andSMTP.Theseresults
it is possible that these composite moduli are pseudoprimes,
doubledthetotalnumberofcompositemodulifound,showing
enablingthemtoerroneouslypassaprobabilisticprimalitytest,
the problem extends beyond HTTPS.
pseudoprimes occur so infrequently that they would not be a
result of poor entropy. This fact coupled with the variety of IMAPS. Although there was only one IP address in IMAPS
server implementations means these moduli were potentially with a composite modulus, this IP address used the same
generated on purpose. modulus in SMTP. This modulus is number 9 in Table II. The
address is linked to a transportation company in Japan, which
Wethenexaminedthepublicownershipinformationofthe
supportsthetrendofHTTPScompaniesthatarenotrelatedto
affectedIPsinpublicdatabasesandinthecontentofanypublic
security and thus provide an advantageous attack target.
web pages. When the IP address owners and webpage content
differed, both companies were considered identifiers for the POP3S. There were five IP addresses in POP3S that all used
IP address. For example, if one organization was supplied the same composite modulus. This modulus is number 4 in
softwarebyanother,thesecondorganizationcouldhavealogo Table II. Although the company could not be determined
6accurately, the range of IP addresses suggested that only one A. ParameterHygieneinDiscreteLogarithmImplementations
Ukrainian company was involved.
Most finite-field based implementations of the discrete
SMTPS. Although there was only one IP address in SMTPS logarithm cryptosystems we examined inherently treat domain
with a composite modulus, this IP address used the same parameters as trusted. Many of the necessary checks (e.g.,
modulusinSMTP.Thismodulusisnumber13inTableII.This primality,groupmembership,etc.)aredonewhentheparame-
address is linked to a real estate company in Russia, which is ters are generated, but at no point thereafter. For example, the
also an industry that provides an advantageous attack target. OpenSSL implementation of DSA does not check parameters
during key generation, signing, or verification and we were
SMTP. Almost all the composite moduli in mail protocols
abletoconstructacceptinguniversalforgerieswithmaliciously
were seen in SMTP. Out of 267 IP addresses with composite
constructedparameters.Thiswouldn’tposeaprobleminmost
moduli, 265 used the same composite modulus (number 1
cases since usually the expectation is that the signer would
in Table II). The remaining two were the IP addresses seen
generate their own parameters, but this strategy does not
already in IMAPS and SMTPS. The 265 IP addresses were
always work out. One related example arose in OpenSSL
spread out across China, but all connected to an email service
when using non safe-prime groups (i.e., X9.42 groups) in
providercalledEyou.net[1].Thiscompanywasalsocontacted
Diffie-Hellman key exchanges where the server’s private key
in the vulnerability disclosures described in § VI.
was reused e.g., in static DH modes, or simply when, for
efficiency sake, exponents were reused across more than one
H. DH Moduli Factorization
connection. By not checking the received client public value
While a well-implemented DHE trapdoor would not be was in the intended group (i.e., G ), a malicious client could
q
exploitable,wesetaboutconductingwhatpartialfactorizations partiallyorfullyrecovertheserver’sprivatekey.Thisresulted
of composite moduli we could. We used CADO-NFS and our in CVE-2016-0701, and now OpenSSL performs a group
own custom implementation of Pohlig-Hellman/Pollard’s P-1 membership test of client public keys on the server side—
to recover, in many cases, numerous bits of a private key. We but only when an X9.42 group is ostensibly in use. In the
factored the 512-bit composite SMTP modulus (number 1 in case of maliciously injected parameters, OpenSSL will still
Table II) revealing 5 factors: successfullyproceedwithDHkeyagreementsusingcomposite
moduli, small groups, etc.
114356381100738840153121389513746326020580788713898181372 \\
757840692493482634612304277048270052450717458185043187444 \\ Manyofthefinite-fielddiscretelogarithmimplementations
98415461673127855611205755830392736507955 we examined work in Z∗, as opposed to a prime order
p
= 5 * 11 * 3130497666273667404271 * 132398438917079824212 \\ subgroup. The trend seems to have begun with the Handbook
370893794766672908033 * 501650748974370233413468006002745 \\ of Applied Cryptography (cf. Section 4.6.1 of [33]), and
013076943662195591458981539797641214671553476408791132267
manyimplementationsexplicitlyciteit.OpenSSL’sdefaultDH
parameters and parameters generation utilities, for example,
We then factored (f−1) of each factor f revealing the
intentionally work in Z∗, noting in a code comment that
overall underlying group structure. The largest factor has p
“actually there is no reason to insist that ‘generator’ be a
a 280-bit subgroup, which prevented us from performing a
generator.4 It’s just as OK (and in some sense better) to use a
completediscretelogarithmasthegeneratorhadordercloseto
generator of the order-q subgroup.” One reason that working
p−1.Wewere,however,abletorecover129bitsoftheprivate
in G is better than working in Z∗ with a generator of order
keyusingPohlig-Hellman.Theserversweexaminedappeared q p
2q is that the latter needlessly leaks a bit of the private key: it
nottobeusingshortexponents.If,however,aserverdidusea
is easy for anyone to check if the private key was even or odd
shortexponentsuchas160-bits,thisSMTPprimewouldmake
bycheckingrespectivelywhetherthepublickeyisaquadratic
an efficient trapdoor: the first 129-bits could be recovered as
residue or not.
described, and the remaining bits could be recovered from
the 280-bit subgroup using Pollard’s P-1 method in time Nominally there is little risk to the CDH assumption
approximately 2160− 2129 ≈216. if p−1 contains a sufficiently large factor and full length
We conducted a partial factorization of the 904-bit com- exponents are used, i.e., the private exponent is also sampled
posite modulus (number 8 in Table II) and found a number of from Z∗, although Boneh et al. suggest related attacks in this
p
suspiciously smooth factors: setting [14]. A major risk comes about when developers, in
the interest of performance, use short exponents (e.g., 160,
5 * 23 * 474289 * 726101 * 72240863 * 48794510505931 224, or 256 bits), and the Pohlig-Hellman attack may become
* 70980749229449041 * 5093965413985867 * 2763354329179
* 1711955530550801 * 71015949150893819 * ... applicable depending on the subgroup structure.
But we argue working in Z∗ with a generator of order
This site used an improper generator of 4, which allowed p
2q is simply bad parameter hygiene (why leak anything when
us similarly to recover 372 bits of the private key. With
you don’t have to?), and it sets a bad precedent for developers
eithershortexponentsorknowledgeofcompletefactorization,
who might be tempted to apply this thinking to seemingly
greater and more efficient recovery is possible.
similar but subtly different situations. For example, we found
the libgcrypt, pycrypto and bouncycastle implementations of
IV. DHPARAMETERTESTING
ElGamal all by default work in Z∗ with a generator of order
p
Inthissection,wediscussthepoorparametervalidationof 2q, which is conspicuous since it breaks the DDH assumption
web clients, describe a man-in-the-middle attack in TLS that and hence semantic security.
allows an attacker to take advantage of this, and outline the
non-safe prime DH parameters found in TLS. 4i.e.,ageneratorofZ∗
p
7GPG, for example, uses libgcrypt and the authors con- browser cases, the connection was successfully established
firmed their GPG public ElGamal encryption keys all leak with weak parameters or composite moduli, and no warnings
onebitoftheirrespectiveprivatekeys.Althoughthisdoesnot were shown except in certain special cases. For example,
leaddirectlytoanattackbecausetheplaintextinthissettingis Chrome generated an error when served moduli below 512-
(largely)arandomvalue,itisbothunnecessaryandpotentially bits, even prior to the Logjam disclosure.
a sign of additional crypto issues. For example, GPG makes
Interestingly browsers do perform a kind of limited pri-
curiousparameterchoicesandanElGamalkeypairatthe2048-
mality test on the modulus and will reject even numbers.
bitlevelconsistsofaprimeinwhichp−1consistsofa340-bit
When presented with an even modulus, most browsers would
privatekeyina235-bitsubgroup.Althoughmanyoftheappli-
generate an error, then switch to RSA for key exchange and
cationsusingtheselibrariesseemnottorequireDDH,focusing
proceed with the connection. In all cases the browsers would
instead on things like encrypting random nonces, neither do
not accept obviously trivial values such as public keys or
the libraries come with the caveat that the implementations
generatorsequaling1orp−1,meaningtheydodefendagainst
are not semantically secure as one might nominally expect
working in the trivial group G . The next smallest possible
of an ElGamal implementation. This is probably fine when 2
subgroupisoneoforder3,inwhichtheserverpublickeycan
encryptingasessionkey,butisnotasfineifthelibrarywereto
be either 1, g or g2. Working in this group will generate a
beusedaspartofanimplementationofacryptographicvoting
browser error approximately one third of the time (i.e., when
system encrypting ballot choices. For example, Chang-Fong
g =1), but in the interest of reliability many browsers would
andEssexrecentlyexploitedsmallsubgroupsinHelios[16],an
attempt the connection several more times and would succeed
Internet voting system that provides end-to-end cryptographic
verification. Finally we note the use of Z∗ with a generator with high probability, and no errors would be displayed to
p the user. A 2-bit key is obviously an extreme example, and a
of order 2q is not universal. In contrast to the more ad hoc
realattackercanmakefailureextremelyunlikelybyselectinga
approach to parameter generation of many implementations,
slightlylargersubgroupwhilestillkeepingdiscretelogarithms
standardized parameters such as the MODP and Oakley safe-
computable in real-time.
primegroupsusegeneratorsthatdonotleakabit.Weconsider
working with safe prime groups with short exponents to be a As a concrete example we used the following parameters in
good balance between security and efficiency. our browser test:
p = 22048−1557
B. DHE Support by Browsers
g = 2(p−1)/3 modp
3
WedeterminedDHEsupportbybrowsers,thentestedtheir
Hereprepresentsthelargest2048-bitprimeandg isagener-
parameter validation by serving them weak DHE parameters. 3
ator of a subgroup of order 3, i.e., the smallest possible non-
ManymajorwebclientsstillsupportDHE,althoughSafarihas
trivial subgroup a browser would need to perform validation.
removed DHE support. Chrome is in the process of removing
As an illustration in Figure 1 we show a successful con-
support [10], but in the interest of interoperability connects
nection in Chrome with the server presenting the parameters
with DHE if it is the only key exchange mode offered by
(p,g ,y =g ).InthedevelopertoolsChromewarnsthatDHE
the server. First it sends the ClientHello without DHE 3 3
isdeprecated,butdoesnotnoticetheweakgroup.Thisresultis
ciphersuites, and if that fails it will re-attempt with DHE
expected, as TLS contains no explicit field for communicating
ciphersuites added back in. This is largely in response to the
a group’s order.
difficulty in guaranteeing large moduli bit lengths following
the results of Logjam, which we discuss further in § VI. Insummary,thebrowserswetestedwereunabletodefend
Additional factors include the slower performance relative to against a variety of weak parameters (small or smooth order),
ECDHE,althoughthisgapisexacerbatedbythepredominance aswellastrapdooredgroupsinvolvingcompositemoduli.The
of safe-prime implementations using full-length exponents. limited forms of checking that are performed are interesting
Based on the current market share DHE is still supported in from our perspective, as they constitute a kind of tacit ac-
approximately87%ofbrowsers,5 thoughthiswilldropsteeply knowledgment that parameter validation is important—just so
to about 22% once Chrome removes support. Based on our long as it is efficient.
own survey approximately 26% of servers support DHE over
HTTPS (see § IV for more). C. Forcing DHE in TLS
We tested major web browsers to see to what extent Based on current telemetry data, ciphersuites using DHE
they would accept weak DHE parameters. We configured for key exchanges currently account for approximately 1% of
OpenSSL’s s_server to accept only DHE ciphersuites and TLS handshakes6, limiting the potential for the attacker to
serve custom generated Diffie-Hellman parameters. We wrote exploit weak groups passively. Fortunately for the attacker,
a program to generate malicious DH parameters and encode the message sequence of TLS makes it possible for someone
them in OpenSSL’s ASN.1 / pem format. We tested a number knowing the master secret to actively modify the handshake
ofdifferentcompositemoduliaswellasnon-safeprimegroups to force DHE to be chosen if both parties support it. This is
of low order. in contrast to SSH, which is not vulnerable to an active attack
of this kind due to a differing message order (see § IV-D).
Tested browsers include Chrome, Safari, Firefox, Internet
Explorer, and Microsoft Edge. At the time of testing all The client initiates a TLS handshake providing a list of
browsers still supported DHE ciphersuites. In each of the supported ciphersuites. The man-in-the-middle modifies the
5https://www.w3counter.com/trends 6https://telemetry.mozilla.org
8Fig.1. Two-bitSecurityinTLS.AsuccessfulDHEconnectioninChromeusingageneratoroforder3.Duringthisrunthegeneratorhappenedtoequalthe
publickey,indicatingtheprivatekeywascongruentto1mod3.
client hello removing all but DHE ciphersuites. The client Popularity Modulus(bits) Subgroup(bits) Source
and server exchange keys as normal, except the attacker is 76.9% 1024 160 MODP(RFC5114)[30]
able to exploit the weak or trapdoored parameters to compute 11.3% 1024 160 AmazonWebServices
the discrete logarithm of the client or server public values
7.5% 768 160 sun.security.provider
and compute the pre-master secret gab, from which they can
3.2% 1024 160 sun.security.provider
computethemastersecret.Withacarefulchoiceofparameters
0.3% 2048 224 MODP(RFC5114)[30]
the attacker can compute the discrete log in real-time. Finally
0.1% 2048 224 sun.security.provider
using the master secret, the attacker forges fake client- and
~1% – – (others)
server-finished messages tricking the respective parties into
believing the other party only supported DHE ciphersuites,
TABLEV. THEDISTRIBUTIONANDSOURCESOFNON-SAFEDHE
andthustherewasnootherchoicebuttoconnectunderDHE.
MODULI.
Furthermore, because the master secret is only a function of
thepre-mastersecretandtheclient-andserver-randomvalues,
both endpoints will derive the same master secrets, allowing
theattackertocontinuepassivelyeavesdroppingtheconnection messages than the server and would abort the connection, and
the attacker could not forge this message without the server’s
from this point forward. This attack is illustrated in Figure 2.
signing key. This is outside our threat model. If either party
does not support ECDHE, but both parties support Diffie-
D. Attack Limitations in SSH
Hellman group-exchange, then they will connect under DH.
The SSH protocol [43] specifies two fixed groups for
Diffie-Hellman exchange: the 1024-bit Oakley group 2 [26] E. Non-Safe Prime Moduli Used By Web Servers
and the 2048-bit Oakley group 14 [28]. In major implemen-
In addition to the composite moduli found in the HTTPS
tations of SSH, such as OpenSSH, these groups are included
scan, we also found non-safe prime moduli used by 1.6M
directlyinthesourcecode,althoughanextensionofSSHdoes
IPs. Of the 5,783 distinct non-safe primes we found, 5,409
providetheoptionforaservertomaintainitsownlistofgroup
were unique to a single IP. Six primes accounted for ap-
parameters [22]. Although the SSH standard calls specifically
proximately 99% of sites. The distribution of non-safe primes
fortheuseofsafeprimegroups[22],olderOpenSSHversions
is seen in Table V. MODP groups were seen in 77% of
explicitly name Schnorr primes as an option7.
IP addresses using non-safe primes. Parameters used in the
However in addition to SSH version restriction, an at- sun.security.provider package by Java were seen in
tacker would also have to force DHE during the connection. 11% of IPs using non-safe primes. This package has had
OpenSSH now prefers ECDHE for key exchange, so an previous instances of misconfigured DH groups [6]. At the
attackerwishingforthepartiestouseDHEinsteadwouldneed time of writing AWS load balancers no longer offer DHE
to man-in-the-middle the handshake. Owing to the message ciphersuites following a security policy update.
sequence in SSH, being able to recover a DHE shared secret
Safe-prime groups have the property that all values in the
is not sufficient for this attack.
range 1 < g < p−1 are generators of groups of large order
In SSH, the client chooses its preferred key-exchange (either q or 2q), and that an arbitrary value in this range
method based on the server’s indicated support [43]. An is an element of Z∗ with probability approaching P = 1,
p 2
attackercouldattempttomodifythisinitialservermessage,but meaningimplementorsarefreetopickjustaboutanygenerator
thentheattackwouldfailattheendofthehandshakewhenthe they wish, and often opt for the smallest possible value
serverprovidesasignedhashoftheprotocolmessages.Atthis (e.g., 2, 3, etc). Non safe-prime groups, on the other hand,
stagetheclientwoulddetectthatitsawadifferentsequenceof generally should be more select in their choice of generator,
especially when the order of Z∗ contains smooth factors. If a
p
7http://man.openbsd.org/OpenBSD-4.3/cat5/moduli.0 group element has an order containing smooth factors, partial
9Client MitM Server
cr,[...,DHE,...] cr,[DHE]
sr,DHE
certS,sign(cr|sr|p|g|ys=gb)
yc=ga
(cid:16) (cid:17) (cid:16) (cid:17) (cid:16) (cid:17)
(ms,kc,ks)=kdf (ys)a,cr|sr b=log g(ys), (ms,kc,ks)=kdf (yc)b,cr|sr (ms,kc,ks)=kdf (yc)b,cr|sr
finished(ms,viewC−M) finished(ms,viewM−S)
finished(ms,view C−M(cid:48)) finished(ms,view M−S(cid:48))
authenc (data)
kc
authenc (data)
ks
Fig. 2. Forcing DHE in TLS. A man-in-the-middle with the ability to exploit weak or trapdoored parameters can force the parties to select a DHE cipher
suiteagainsttheirnaturalpreferences.
recoveryoftheprivatekeyispossible.Forarandomnonsafe- moduli,therewere43projectswith23uniquemoduli.Similar
prime group with an n-bit modulus and m-bit prime order to 1024-bit moduli, the only 2048-bit modulus that was not a
subgroup G , the probability an arbitrary value is a generator safe prime was a MODP group with 256-bit subgroup [30].
q
of G is approximately 2n−m. Thus we shouldn’t generally For 3072-bit moduli, there were 3 unique safe primes spread
q
expect to see generators like 2 or 3 used in non safe-prime over 4 projects. For 4096-bit moduli, there were 8 unique safe
groups. We can expect such groups to leak more information primes spread over 28 projects. Overall no weak moduli were
abouttheexponentthantheonebitofsomesafeprimegroups. found to be used, but parameter injection through an open-
source project remains a possible attack vector for backdoors
Of the 1.6M IPs offering non safe-prime groups, we found
(see § V).
1,270 IPs using small generators. Generator values of 2 and
5 were most common but we also found cases of all prime
numbers up to 31, as well as even values like 4 and 6. This
V. ATTACKVECTORS
doesn’t directly break DHE so long as (a) the order of the The previous sections provided examples of potentially
generator contains a large prime factor and (b) full-length backdoored DH moduli in the wild and discussed the subse-
exponents are used. This is a precarious situation, since the quentimplications.Wenowproposethreescenariosthatenable
typical reason for using non safe-prime groups is precisely an attackerto positionweak parameters foruse asa backdoor.
for the purpose of using short exponents (e.g., X9.42 groups). If the target uses these parameters to perform cryptographic
It also speaks to the notion of parameter hygiene in which operations (i.e. key generations, signatures, key agreements,
choices appropriate for one setting i.e., small generators of encryptions,etc.),theassociatedsecurityguaranteesnolonger
safe prime groups, is misapplied to another setting. hold. Since Diffie-Hellman group parameters are infrequently
modified, attacking them can lead to persistent backdoors,
Like with composite moduli, we also were able to conduct
even if the keys themselves are ephemeral. The proposed
partial key recoveries in non safe-prime groups with improper
threat vectors include dropping the parameters onto a server,
generators.Inoneimproperexport-gradenonsafe-primegroup
incorporating the parameters in an open-source project, and
wewereabletorecoverafullhalfoftheprivatekey(assuming
installing the parameters on a network appliance that ships to
a full-length exponent), though obviously for export moduli,
customers.
Logjam would be a more efficient general attack strategy.
A. Attacking the Server
F. Survey of Open-source Projects
The most intuitive way to get backdoored parameters
Todetermineifopen-sourceprojectsuseanyweakmoduli,
in use is to install them at the source. First, the attacker
wesurveyedthedefaultmoduliofoverahundredopen-source
createstheweakparametersandchoosesatargetthatsupports
projects on GitHub. We used search terms based on common
DH byte array names (e.g., dh1024_p, etc.). Out of the 95 Diffie-Hellman ciphersuites. Second, the attacker injects these
parametersasabackdoorpayloadontothedesiredserver.This
projects supporting export grade 512-bit moduli, we found 16
step does require root access to the server, presumably in the
distinct moduli, of which one was found in 44 projects. The
context of a broader exploit. Having root access enables other
most common modulus observed in Logjam was found in 9
attacks, such as stealing the server’s private RSA signing key.
projects.Allweresafeprimes.Across120projectssupporting
This RSA attack would produce a similar outcome as the
1024-bit moduli, there were 32 unique moduli. All the moduli
were safe primes except for two: one reused from OpenSSL,8 backdoored moduli, as efficient man-in-the-middle attacks are
also possible for an attacker with the server’s RSA signing
and a MODP group with 160-bit subgroup [30]. For 2048-bit
key. However, obtaining and using the private RSA key has
8https://github.com/openssl/openssl/blob/master/test/ssltest_old.c two disadvantages. In many enterprise situations, the private
10RSA key is stored on a hardware security module (HSM) [2] C. Attacking the Network
attached to the server [15]. Since HSMs are designed to
Thefinalthreatscenarioinvolvesinstallingbackdooredpa-
provide additional security to cryptographic keys, it would be
rametersontoanetworkappliancethatisshippedtocustomers.
difficult for an attacker to steal a key stored on an HSM even
Network appliances such as load balancers and traffic shapers
with root access to the server. The second disadvantage to
areoftenusedbycompaniestooptimizeapplicationornetwork
using the private RSA key is that it requires an active man-in-
performance.Loadbalancersoptimizeapplicationperformance
the-middle attack. An active attack is also necessary to force
bydistributingtrafficacrossmanyservers,whichdecreasesthe
DHE ciphersuites when not preferred, but only during the
load on individual servers. This traffic can be application or
handshake. However, as seen in § III-F, half the IP addresses
networktraffic.BalancersalsoprovideSSLterminationsothat
thatusecompositemoduliinHTTPSpreferDHEciphersuites.
servers do not have to perform encryption and decryption [5].
Therefore an attacker could choose attack targets that prefer
Although this invites man-in-the-middle attacks, the servers
DHE ciphersuites, allowing for passive eavesdropping. This
and balancer are often located on the same internal network
typeofpassiveattackisonlypossiblewithbackdooredmoduli;
which decreases this possibility. Another network appliance is
using the RSA signing key always requires an active attack.
trafficorpacketshapers,whichoptimizenetworkperformance
Dropping the weak parameters onto the server requires no by delaying less important network packets. Various applica-
source code modification and creates a persistent backdoor; tions can be shaped differently, a process called application-
becauseofthis,thebackdoormaypersistsourcecodeupdates. based traffic shaping or deep packet inspection (DPI). Since
The lack of parameter validation explained in § III-B and DPI allows users to look at layers 2 through 7 of the OSI
the examples of persistent composite moduli in § III-F mean model, it is possible to view the ServerKeyExchange mes-
thatbackdooredDHmodulicouldremainundetectedforsome sage [37]. DPI also provides the possibility of packet payload
time. tampering [40].
This threat scenario requires the attacker to be a company
employee who creates the weak parameters. The employee
B. Attacking the Application
theninstallsthebackdooredparametersontotheloadbalancing
The second threat scenario involves submitting the back- network appliance sold by his company. Blue Coat’s Packet-
doored parameters to an open-source project rather than at- Shaper S-Series, a traffic shaping network appliance, can be
tacking the server directly. First, the attacker creates the weak connectedwithanotherPacketShapertoprovideloadbalancing
parameters and finds an open-source project that supports capability [3]. The load balancer equipped with backdoored
Diffie-Hellman. Second, the parameters are submitted as a parameters is then sold to a customer. The balancer sends
patch to that repository. Once the repository accepts the decryptedtraffictothechosenserver,thenencryptstheserver’s
change, the persistent backdoor would then be installed for response and sends it to the client as usual. Therefore the
users of that project. Conversely, the attacker could create a success of this scenario depends mostly on the trust placed
new project that already contains the backdoored parameters. in the load balancer to securely encrypt and decrypt traffic.
SincetheLogjamdisclosure,manyGitHubprojectshavebeen
updating their Diffie-Hellman parameters to remove 512-bit VI. VULNERABILITYDISCLOSURES
moduli and modify 1024-bit moduli. This widespread change
Asmentionedin§III-F,weissuedvulnerabilitydisclosures
could ironically provide a reason for an attacker to submit a
to companies that were using composite moduli in HTTPS.
patch.
Security contact information for each company was searched
for in the HackerOne directory,9 although only one company
Socat, an open-source data transfer relay, recently pub-
had such information. Only companies with at least one
lished a security advisory [36] that outlines a similar scenario,
activewebpagewerecontacted,sincewebpageidentifierswere
and was one of the motivations behind Wong’s recent pa-
important in determining the company associated with the IP
per [41]. Here a hard-coded 1024-bit composite DH modulus
address.Outofthe21companieslistedin§III-F,only17were
was discovered in the OpenSSL implementation. The Socat
contacted.Only47%ofthecontactedcompaniesrespondedto
commitlogsshowthatthecompositemoduluswasintroduced
our disclosure.
in January 2015 [35], and the security advisory was published
more than a year later in February 2016, and the origin Blue Coat Systems was the first company contacted, and
of the modulus remains unclear. Interestingly we also found we communicated on several occasions with a number of
this modulus twice in the HTTPS space (see modulus 6 in high-ranking employees within the company on the matter.
Table II). This gap between implementation and detection A patch for the affected product, PacketShaper S-Series 11.5,
indicates backdoored moduli could remain undetected for a was released in June 2016. A few weeks later on July 12,
long time. The individual associated with the commit deleted 2016, a CVE was released for this vulnerability under the
much of his Internet presence on the day the advisory was labelCVE-2016-5774[4].ThisCVE hasahighseverityscore
published [42]. Attempts to factor the modulus suggest that in CVSS v3 but only a medium score in CVSS v2, as v2
there are large factors, which could indicate a backdoor emphasizes percentage of impacted systems rather than level
configuration like those suggested in § III-D. Although we of impact like v3. Therefore although composite DH moduli
didn’t find any suspicious parameters in the GitHub projects are not abundant in the wild, these moduli have a high degree
mentionedin§IV-F,theSocatexamplesuggeststhatstartinga ofimpactonaffectedsystems.Aninterestingsideeffectofour
malicious open-source project is one potential delivery vector, disclosure was that it inadvertently uncovered a number of
andthattheadhocnatureofparametercheckingwouldhinder
detection. 9https://hackerone.com/directory
11improperly configured web-facing administrator login pages, Diffie-Hellman parameters correctly, using named DH groups,
whichallowedBlueCoattofollowupwithaffectedcustomers. or modifying the ServerKeyExchange message to sign all
previously seen messages.
After disclosure, the other 16 companies were split into
three groups depending on the status of the vulnerability fix: Deprecate DHE. One option is to follow the example of
completed, partially completed, or not started. The vulnera- Safari and Chrome and deprecate finite field Diffie-Hellman
bility was fixed by 56% of these companies, although not altogether. In our opinion, this option makes sense in certain
all responded to us and three had implemented fixes prior to situations, but not as a general solution. As we saw with
our disclosure. These independent solutions could have been Dual_EC_DRGB,thereisatrade-offbetweentrustandconve-
a result of Wong’s disclosures[41]. The solution implemented nience through standardization. With that in mind, Bernstein
by most companies involved changing the composite moduli et al. [18] added a new name to the standards of Alice and
to prime, although one company simply removed its DHE Bob: Jerry, an authority who generates curve parameters such
ciphersuitesaltogether.Ofthe19%ofcompanieswhopartially that his attack cost is decreased. With the deprecation of RSA
completed the vulnerability fix, all are progressively changing key exchange coming in TLS 1.3, DHE ciphersuites represent
composite moduli to prime. The remaining 25% of companies the only alternative key exchange method.
did not respond to our disclosure and have not modified their
Diffie-Hellman parameters. One of these companies had the Verifyparametersproperly.Ourpreferredoptionwouldbeto
highest number of affected IP addresses by far. A language simply implement the necessary domain parameter validation
barrier existed for some companies, which could have con- to begin with. The first issue, however, is computational cost.
tributed to this result. In order to verify that a generator or DHE public key has the
intended order, modular exponentiation must be performed at
WespoketoseniormanagementatBlueCoatandtechnical runtime for each connection. Similarly p must be tested for
staff at many other companies. Despite this, all companies we
primality, and, importantly, if general Schnorr groups are to
had discussions with declined to provide us with information
be permitted, the TLS and SSH protocols must provide an
on the source of the potentially backdoored parameters. Blue explicitmeanstocommunicategrouporderq.Aswediscussed
Coat more specifically stated that the information could not
in§II-A,basiccheckingisnotsufficienttopreventallattacks.
be provided due to security reasons. Another company ex-
plained that its composite modulus was attributed to cipher Use named parameters. A third solution is to develop stan-
modifications made by the company, but no specifics were dardized, named parameters like those in an ECC setting. The
given. Two others provided broad information on their load RFC proposed by Gillmor [23] and supported in the TLS 1.3
balancing, but not in the context of the specific vulnerability. draft[34]involvesstandardizingparametersintheFFCsetting
As we were unable to receive external confirmation that these to augment the MODP groups. As we see in ECC, named
moduli were backdoored and could not completely factor parameters are a feasible mitigation strategy used in the real
the moduli to prove it, we cannot say unequivocally that world. One issue of restricting moduli to only safe primes
these moduli are backdoored. We have discovered everything is performance: private key lengths are 10 times larger than
possible about each company’s vulnerability using publicly NIST recommended minimum standards. One performance
availableinformation.Withoutadditionalinformationfromthe optimization Gillmor suggests is to compromise by using safe
companies themselves, we cannot speculate further on topics prime groups with short, DSA-like exponents.
such as the cause of the vulnerability.
ChangeTLS.ThelastsolutionistomodifytheServerKeyEx-
changemessagesothatallpreviouslyexchangedmessagesare
VII. DISCUSSION
also signed. The MitM attack from § IV-C works because the
There is a growing consensus that Diffie-Hellman nego- ServerKeyExchange message only signs the DH parameters,
tiations are less secure than previously thought. Safari has ServerHello.random, and ClientHello.random. If the list of ci-
removed DHE ciphersuites altogether, and Chrome plans to phersuitessuggestedinClientHelloandthechosenciphersuite
remove them in upcoming versions [10]. However, during inServerHellowerealsosigned,thentheciphersuitetampering
the time of writing Chrome continued to offer DHE cipher- would be discovered upon receiving the ServerKeyExchange
suites if all other ciphersuites offered were not accepted by message.ThissolutionwasalsoproposedbyMavrogiannopou-
the server. The current TLS 1.3 draft [34] proposes using los et al. [32] to prevent their cross-protocol attack.
named DHE groups [23], similar to the named ECDHE
groups currently used. These named DHE groups are used in Finally,arecentproposalbyBhargavanetal.[11]proposes
the supported_groups and key_share extensions, and an elegant method for downgrade resilience in TLS 1.3, and
would not be susceptible to the kinds of attacks described in was incorporated into the draft as of Version 11. In their
this paper. strategy, the server puts the highest version of TLS supported
by the client into the ServerHello.Random, which will be
Information on using Diffie-Hellman properly has been
incorporated into the signed ServerKeyExchange message. If
extensively discussed by Adrian et al. [6], who suggest using
a client supports TLS 1.3, but is being man-in-the-middled in
atleast2048-bitDHgroupswithsafeprimemoduli.Therefore
the context of a downgrade attack such the one described in
we restrict our discussion to mitigation strategies for the
§V,themaninthemiddlewillbeunabletomodifythesigned
outlined vulnerability.
ServerKeyExchange message, and the client will see that the
server believes the client does not support TLS 1.3, which is
A. Mitigation Strategies
falsesothehandshakeisaborted.Thismethod,combinedwith
We propose four strategies for mitigating regrouping the use of named safe-prime DHE groups in TLS 1.3, would
attacks: deprecating Diffie-Hellman ciphersuites, verifying solve the issue of trapdoored groups.
12VIII. CONCLUSION [14] D.Boneh,A.Joux,andP.Nguyen,“Breakingplainelgamalandplain
rsaencryption,”inAsiacrypt,2000.
In this paper we demonstrated a serious, systematic prob-
[15] K. Cairns, J. Mattsson, R. Skog, and D. Migault, “Session Key
lem with real-world discrete logarithm implementations. A
Interface (SKI) for TLS and DTLS,” 2015. [Online]. Available:
lack of parameter validation allows attackers to use weak https://tools.ietf.org/html/draft-cairns-tls-session-key-interface-01
or trapdoored groups to create persistent DHE backdoors in [16] N.Chang-FongandA.Essex,“Thecloudiersideofcryptographicend-
TLS. Hundreds of IP addresses in the wild were found to use to-endverifiablevoting:Asecurityanalysisofhelios,”inACSAC,2016.
potentiallybackdooredmoduli,andbothwebandmailservers [17] J.-S. Coron, A. Joux, A. Mandal, D. Naccache, and M. Tibouchi,
were equally affected, leading us in some cases to recover CryptanalysisoftheRSASubgroupAssumptionfromTCC2005,2011,
significantportionsoftheprivatekeyevenwithoutknowledge pp.147–155.
of the trapdoor. We proposed several threat scenarios that [18] D. J. Bernstein, T. Chou, C. Chuengsatiansup, A. Hülsing, , E. Lam-
would enable an attacker to inject backdoored parameters. booij, T. Lange, R. Niederhagen, and C. van Vredendaal, “How to
manipulate curve standards: a white paper for the black hat,” 2014,
Vulnerabilitydisclosureswerecompletedtoover15companies
http://bada55.cr.yp.to/bada55-20150927.pdf.
worldwide resulting in CVE-2016-5774. This study found
[19] T.DierksandC.Allen,“TheTLSProtocolVersion1.0,”Jan.1999.
evidence to suggest trapdoored DHE parameters are in use
[20] Z.Durumeric,D.Adrian,A.Mirian,M.Bailey,andJ.A.Halderman,
on the Internet today. Minding our Ps and Qs, it would seem,
“AsearchenginebackedbyInternet-widescanning,”inProceedingsof
has proven more elusive that previously thought. the22ndACMConferenceonComputerandCommunicationsSecurity,
Oct.2015.
ACKNOWLEDGEMENTS [21] J. Fried, P. Gaudry, N. Heninger, and E. Thomé, “A kilobit hidden
snfsdiscretelogarithmcomputation,”CryptologyePrintArchive,Report
The authors wish to thank Jeremy Clark, Jakub Dalek, 2016/961,2016,http://eprint.iacr.org/2016/961.
Matt Green, Ian Goldberg, Adam Senft, and Greg Zaverucha [22] M. Friedl, N. Provos, and W. Simpson, “Diffie-Hellman Group
for their helpful input. This work was supported by the ExchangefortheSecureShell(SSH)TransportLayerProtocol,”2006.
NationalScienceandEngineeringResearchCouncilofCanada [Online].Available:https://tools.ietf.org/html/rfc4419
(NSERC) Discovery Grant and Canada Graduate Scholarship [23] D. Gillmor, “Negotiated Finite Field Diffie-Hellman Ephemeral
Parameters for TLS,” 2015. [Online]. Available: https://tools.ietf.org/
programs.
html/draft-ietf-tls-negotiated-ff-dhe-10
[24] D.M.Gordon,“Designinganddetectingtrapdoorsfordiscretelogcryp-
REFERENCES tosystems,”inADVANCESINCRYPTOLOGY–CRYPTO’92. Springer-
Verlag,1993,pp.66–75.
[1] “Company Overview of Eyou.net,” 2016. [Online]. Avail-
able: http://www.bloomberg.com/research/stocks/private/snapshot.asp? [25] J.Groth,“Cryptographyinsubgroupsofz*n,”inTCC,2005.
privcapId=113374953 [26] D. Harkins and D. Carrel, “The Internet Key Exchange (IKE),” 1998.
[2] “Hardware security module,” 2016, https://www.ibm.com/support/ [Online].Available:https://tools.ietf.org/html/rfc2409
knowledgecenter/SS9H2Y_7.5.0/com.ibm.dp.doc/hsm2.html. [27] R.HenryandI.Goldberg,“Solvingdiscretelogarithmsinsmooth-order
[3] “Standby Feature with High Availability Clusters,” 2016. groupswithCUDA,”inSHARCS,2012.
[Online].Available:https://bto.bluecoat.com/packetguide/11.6/Content/ [28] T. Kivinen and M. Kojo, “More Modular Exponential (MODP)
PDFs/standby.pdf Diffie-Hellman groups for Internet Key Exchange (IKE),” 2003.
[4] “Vulnerability Summary for CVE-2016-5774,” 2016. [Online]. Avail- [Online].Available:https://tools.ietf.org/html/rfc3526
able:https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-5774 [29] A. Lenstra, “Constructing trapdoor primes for the proposed dss,”
[5] “What is an SSL Load Balancer?” 2016. [Online]. Available: ÉcolepolytechniquefédéraledeLausanne,Tech.Rep.EPFL-REPORT-
https://www.nginx.com/resources/glossary/ssl-load-balancer/ 164559,1991.
[6] D. Adrian, K. Bhargavan, Z. Durumeric, P. Gaudry, M. Green, J. A. [30] M. Lepinski and S. Kent, “Additional Diffie-Hellman Groups
Halderman,N.Heninger,D.Springall,E.Thomé,L.Valenta,B.Van- for Use with IETF Standards,” 2008. [Online]. Available: https:
derSloot,E.Wustrow,S.Zanella-Béguelin,andP.Zimmermann,“Im- //tools.ietf.org/html/rfc5114
perfectforwardsecrecy:HowDiffie-Hellmanfailsinpractice,”in22nd
[31] C. H. Lim and P. J. Lee, “A Key Recovery Attack on Discrete Log-
ACM Conference on Computer and Communications Security, Oct.
basedSchemesUsingaPrimeOrderSubgroup,”Crypto,vol.1294,pp.
2015.
249–263,1997.
[7] R. Anderson and S. Vaudenay, “Minding Your P’s and Q’s,” in ASI-
[32] N. Mavrogiannopoulos, F. Vercauteren, V. Velichkov, and B. Preneel,
ACRYPT,1996,pp.26–35.
“A cross-protocol attack on the TLS protocol,” ACM Conference on
[8] E. Barker, L. Chen, A. Roginsky, and M. Smid, “Recommendation ComputerandCommunicationsSecurity,pp.62–72,2012.
for Pair-Wise Key Establishment Schemes Using Discrete Logarithm
[33] A. Menezes, P. van Oorschot, and S. Vanstone, Handbook of Applied
Cryptography,”Tech.Rep.,2013.
Cryptography. CRCPress.
[9] E.BarkerandA.Roginsky,“Transitions:RecommendationforTransi-
tioningtheUseofCryptographicAlgorithmsandKeyLengths,”Tech. [34] E. Rescorla, “The Transport Layer Security (TLS) Protocol
Rep.,2015. Version 1.3,” 2016. [Online]. Available: https://tools.ietf.org/html/
draft-ietf-tls-tls13-14
[10] D. Benjamin, “Intent to Remove: DHE-based ciphers,” 2016,
https://groups.google.com/a/chromium.org/forum/#!topic/security-dev/ [35] G. Rieger, “FIPS requires 1024 bit DH prime,”
sVq6r0i-CZM. 2015. [Online]. Available: http://repo.or.cz/socat.git/commitdiff/
281d1bd6515c2f0f8984fc168fb3d3b91c20bdc0
[11] K.Bhargavan,C.Brzuska,C.Fournet,M.Green,,M.Kohlweiss,and
S.Zanella-Béguelin,“Downgraderesilienceinkey-exchangeprotocols,” [36] ——,“Socatsecurityadvisory7-Creatednew2048bitDHmodulus,”
inIEEESymposiumonSecurityandPrivacy,2016. 2016. [Online]. Available: http://www.openwall.com/lists/oss-security/
2016/02/01/4
[12] K. Bhargavan, A. Delignat-Lavaud, C. Fournet, A. Pironti, and P.-
Y. Strub, “Triple handshakes and cookie cutters: Breaking and fixing [37] W. G. Sanchez, “SLOTH Downgrades TLS 1.2
authenticationoverTLS,”inIEEESymposiumonSecurityandPrivacy, Encrypted Channels,” 2016. [Online]. Available:
2014. http://blog.trendmicro.com/trendlabs-security-intelligence/
sloth-downgrades-tls-1-2-encrypted-channels/
[13] K.Bhargavan,A.Delignat-Lavaud,andA.Pironti,“Verifiedcontribu-
tivechannelbindingsforcompoundauthentication,”inNDSS,2015. [38] L. Valenta, D. Adrian, A. Sanso, S. Cohney, J. Fried, M. Hastings,
13J.A.Halderman,andN.Heninger,“Measuringsmallsubgroupattacks
againstdiffie-hellman,”inNDSS,2017.
[39] P.C.vanOorschotandM.J.Wiener,“Ondiffie-hellmankeyagreement
withshortexponents,”inEUROCRYPT,1996.
[40] N.Vratonjic,J.Freudiger,J.-P.Hubaux,andM.Felegyhazi,“Securing
OnlineAdvertising,”Tech.Rep.,2008.
[41] D.Wong,“Howtobackdoordiffie-hellman,”CryptologyePrintArchive,
Report2016/644,2016,http://eprint.iacr.org/2016/644.
[42] ——, “Socat? What? (timeline of events),” 2016, https://github.com/
mimoo/Diffie-Hellman_Backdoor/tree/master/socat_reverse.
[43] T.Ylonen,“TheSecureShell(SSH)TransportLayerProtocol,”2006.
[Online].Available:https://tools.ietf.org/html/rfc4253
14