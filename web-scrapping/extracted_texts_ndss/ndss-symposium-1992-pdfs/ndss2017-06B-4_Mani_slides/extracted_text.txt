HisTorŒµ: Differentially Private and Robust
Statistics Collection for Tor
Akshaya Mani, Micah Sherr
Georgetown University
1Tor is an anonymity service,
used by N people to do ?, ?, and ?
2Tor is an anonymity service,
used by N people to do ?, ?, and ?
3Who uses Tor, and for what?
According to the Tor Project:
Ordinary Internet users Journalists Whistleblowers
for more private browsing to safely report the news to report wrongdoings
4Who uses Tor, and for what?
According to others:
5Motivation
SafelyM meeaassuurree hhooww TToorr iiss uusseedd
+!
6A Na√Øve Solution
E.g. How many exit relays forward traffic to google.com?
!
. . .
Na√Øve solution: keep log of websites visited
!
Significantly endangers users‚Äô anonymity /
!
antithetical to Tor‚Äôs mission
Measurement framework should not risk anonymity
!
7Safe Tor Measurements with Differential Privacy
100
50
0
0-19 20-39 . . . 130-149
.
.
No. of Client Connections
.
8
fo
.oN
sdrauG
Q: How many
R
1
client connections
in last epoch?
R
21
2 Privatized
Analysis
28
Distribution of
R
3
client connections
35
seen by guards
.
.
.
+
. . . Noise
53
R
n
DatabaseA 30 Second Primer on Differential Privacy
Differential Privacy
[Dwork ICALP‚Äô 06]
!
. . .
Result
‚âÉ
R does not
R submits a 1
1 submit a
response
response
Minimizes and quantifies the privacy risk
!
Provides good accuracy
!
Makes no assumptions on knowledge of attacker
!
9Privacy != Integrity
E.g. How many exit relays forward traffic to google.com?
!
PrivEx , PrivCount
[Elahi et al. CCS‚Äô14] [Jansen et al. CCS‚Äô 16]
!
Raises the bar for safe Tor measurements
!
But‚Ä¶ a malicious relay can drive aggregate to arbitrary value
!
10
snoitcennoc
fo
.oN
100
75
. . .
50
25
0
google.comsnoitcennoc
fo
.oN
Privacy != Integrity
E.g. How many exit relays forward traffic to google.com?
!
100
75
. . .
50
25
0
google.com
PrivEx , PrivCount
[Elahi et al. CCS‚Äô14] [Jansen et al. CCS‚Äô 16]
!
Raises the bar for safe Tor measurements
!
But‚Ä¶ a malicious relay can drive aggregate to arbitrary value
!
111050
900
750
600
450
300
150
0
1 2 3 4 5 6 7 8
12
snoitcennoC
tneilC
fo
.oN
Actual
1050
Actual
900
750
600
450
300
150
0
1 2 3 4 5 6 7 8
Website No.
snoitcennoC
tneilC
fo
.oN
Manipulating Privex
No. of visits destined to 15 particular websites
!
Manipulating PrivEx
Actual
Noised
Website No.
Website #5 is popular Website #3 & #5 are popular
! !HisTorŒµ
Histogram query for Tor with (Œµ, ùõø) differential privacy
!
Provides strong integrity guarantees
!
Resistant to ‚Äúcompulsion attacks‚Äù
!
Highly accurate
!
Incurs low overheads
!
13Compulsion Attack
Reveal your logs
I cannot decrypt or else
my counter. you‚Äôre FIRED!
Gathering statistics poses privacy risk
!
Performing logging at relays inherently increases privacy risks
!
If relays keep logs, they can be compelled to reveal them
!
Measurement system should resist compulsion attacks by obliviously
!
storing local counters
14HisTorŒµ at 25,000 ft
100
75
50
Analyst
25
0
0-19 20-39 . . . 80-99
No. of Client Connections
+
. . . Noise
21 28 35 53
. . .
Relays Mixes
15
fo
.oN
sdrauG
E.g. How many client
connections have the guards
seen?
[0 - 19] [20 - 39] . . . [80 - 99]HisTorŒµ at 25,000 ft
100
75
50
Analyst
25
0
. . .
0-19 20-39 . . . 80-99
No. of Client Connections
E.g. How many client
connections have the guards
seen?
. . .
[0 - 19] [20 - 39] . . . [80 - 99]
+
. . . Noise
21 28 35 53
. . .
Relays Mixes
16
fo
.oN
sdrauGTrust Assumptions
Malicious participants‚Ä¶
!
‚Ä¶disobey protocols, and/or refuse to participate
!
17Trust Assumptions
Malicious participants‚Ä¶
!
‚Ä¶disobey protocols, and/or refuse to participate
!
18Maintaining Oblivious Counters
100
75
50
25
0
0-19 20-39 . . . 80-99
No. of Client Connections
+
. . . Noise
21 28 35 53
. . .
Relays Mixes
19
fo
.oN
sdrauG
Analyst
. . .
How many client connections
have the guards seen?
. . .
[0 - 19] [20 - 39] . . . [80 - 99]Maintaining Oblivious Counters
Q: What is the distribution of client connections seen by guards?
!
100
50
0
0-19 20-39 40-59 60-79
No. of Client Connections
20
fo
.oN
sdrauG
0 1 0 0
[0-19] [20-39] [40-59] [60-79]
Each relay maintains an encrypted binary vector
!
At most one bin is set to 1
!
Each binary element is GM-encrypted using the public key of a mix
!
Probabilistic public key bit encryption
!
Xor homomorphic
!Robustness
100
. . . 50
0
0-19 20-39 40-59 60-79
No. of Client Connections
c Relays
HistorŒµ‚Äôs integrity guarantees:
!
GM encryption ensures that legitimate values are either 0 or 1
!
Each relay can contribute at most 1 to each bin in its counter
!
Maximum influence is thus bounded by the number of malicious relays
!
21
fo
.oN
sdrauG
Malicious relays may report erroneous data
!Robustness
100
. . . 50
0
0-19 20-39 40-59 60-79
No. of Client Connections
f Malicious Relays
22
fo
.oN
sdrauG
100
50
0
0-19 20-39 40-59 60-79
No. of Client Connections
fo
.oN
sdrauG
Malicious relays may report erroneous data
!
HistorŒµ‚Äôs integrity guarantees:
!
GM encryption ensures that legitimate values are either 0 or 1
!
Each relay can contribute at most 1 to each bin in its counter
!
Maximum influence is thus bounded by the number of malicious relays
!Incrementing Oblivious Counters
100
75
50
25
0
0-19 20-39 . . . 80-99
No. of Client Connections
+
. . . Noise
21 28 35 53
. . .
Relays Mixes
23
fo
.oN
sdrauG
Analyst
. . .
How many client connections
have the guards seen?
. . .
[0 - 19] [20 - 39] . . . [80 - 99]Incrementing Oblivious Counters
1 0 0 0
[0-2] [3-5] [6-8] [9-11]
New Packet!! t = 0
Initialize all but the first element to encryptions of 0
!
Initialize low order counter t to 0
!
When a relay observes the ‚Äústatistic of interest‚Äù (e.g. client connections)
!
right shift the encrypted 1 whenever t reaches the bin width
!
24Incrementing Oblivious Counters
1 0 0 0
[0-2] [3-5] [6-8] [9-11]
New Packet!! t = 1
Initialize all but the first element to encryptions of 0
!
Initialize low order counter t to 0
!
When a relay observes the ‚Äústatistic of interest‚Äù (e.g. client connections)
!
right shift the encrypted 1 whenever t reaches the bin width
!
25Incrementing Oblivious Counters
1 0 0 0
[0-2] [3-5] [6-8] [9-11]
New Packet!! t = 2
Initialize all but the first element to encryptions of 0
!
Initialize low order counter t to 0
!
When a relay observes the ‚Äústatistic of interest‚Äù (e.g. client connections)
!
right shift the encrypted 1 whenever t reaches the bin width
!
26Incrementing Oblivious Counters
Right-Shift
1 0 0 0
[0-2] [3-5] [6-8] [9-11]
t = 3
Initialize all but the first element to encryptions of 0
!
Initialize low order counter t to 0
!
When a relay observes the ‚Äústatistic of interest‚Äù (e.g. client connections)
!
right shift the encrypted 1 whenever t reaches the bin width
!
27Incrementing Oblivious Counters
Right-Shift
0 1 0 0 0
[0-2] [3-5] [6-8] [9-11]
t = 3
Initialize all but the first element to encryptions of 0
!
Initialize low order counter t to 0
!
When a relay observes the ‚Äústatistic of interest‚Äù (e.g. client connections)
!
right shift the encrypted 1 whenever t reaches the bin width
!
28Incrementing Oblivious Counters
Right-Shift
0 1 0 0 0
[0-2] [3-5] [6-8] [9-11]
t = 3
Initialize all but the first element to encryptions of 0
!
Initialize low order counter t to 0
!
When a relay observes the ‚Äústatistic of interest‚Äù (e.g. client connections)
!
right shift the encrypted 1 whenever t reaches the bin width
!
reset counter t to 0
!
29Incrementing Oblivious Counters
0 1 0 0
[0-2] [3-5] [6-8] [9-11]
t = 0
Initialize all but the first element to encryptions of 0
!
Initialize low order counter t to 0
!
When a relay observes the ‚Äústatistic of interest‚Äù (e.g. client connections)
!
right shift the encrypted 1 whenever t reaches the bin width
!
reset counter t to 0
!
30Compulsion Attack
Reveal your logs
All I know is t! or else
you‚Äôre FIRED!
0 1 0 0
[0-2] [3-5] [6-8] [9-11] t = 1
Oblivious counters minimize the amount of information leaked
!
Relays cannot decrypt the counters on their own
!
Leaks counter t
!
31Relays
100
75
50
25
0
0-19 20-39 . . . 80-99
No. of Client Connections
+
. . . Noise
Mixes
32
fo
.oN
sdrauG
Analyst
. . .
E.g. How many client
connections have the guards
. . . seen?
[0 - 19] [20 - 39] . . . [80 - 99]
21 28 35 53
. . .
RelaysRelays
Q: How many client connections have the guards seen?
[0 - 19] [20 - 39] [40 - 59] [60 - 79] [80 - 99]
Analyst
21 28
0 1 0 0 0 Mix 1 0 1 0 0 0 Mix 1
0 1 0 0 0 Mix 2 0 1 0 0 0 Mix 2
0 1 0 0 0 Mix 3 0 1 0 0 0 Mix 3
R R
1 2
35 53
0 1 0 0 0 Mix 1 0 0 1 0 0 Mix 1
0 1 0 0 0 Mix 2 0 0 1 0 0 Mix 2
0 1 0 0 0 Mix 3 0 0 1 0 0 Mix 3
R R
3 4
33Relays
Q: How many client connections have the guards seen?
[0 - 19] [20 - 39] [40 - 59] [60 - 79] [80 - 99]
Analyst
21 28
0 1 0 0 0 Mix 1 0 1 0 0 0 Mix 1
0 1 0 0 0 Mix 2 0 1 0 0 0 Mix 2
0 1 0 0 0 Mix 3 0 1 0 0 0 Mix 3
R R
1 2
35 53
0 1 0 0 0 Mix 1 0 0 1 0 0 Mix 1
0 1 0 0 0 Mix 2 0 0 1 0 0 Mix 2
0 1 0 0 0 Mix 3 0 0 1 0 0 Mix 3
R R
3 4
34Mix & Analyst
100
75
50
25
0
0-19 . . .
No. of Client Connections
How many client connections
have the guards seen?
[0 - 19] [20 - 39] . . . [130 - 149]
+
. . . Noise
25 40 33 71
. . .
Relays Mixes
35
fo
.oN
sdrauG
Analyst
. . .
. . .Mix
R 0 1 0 0 0
1
R 0 1 0 0 0
2
R 0 1 0 0 0
3
R 0 0 1 0 0
4
36Mix
Decrypt Add Noise
R 0 1 0 0 0 0 1 0 0 0
1
R 0 1 0 0 0 .
1 . 0 1 0 0 0 0 1 0 0 0
.
0 1 0 0 0 0 1 0 0 0
R 0 1 0 0 0
2 R 0 0 1 0 0 0 0 1 0 0
4
0 1 0 0 0
R 0 1 0 0 0
+
3 0 0 0 1 0
0 0 0 1 0
R 0 0 1 0 0
1 0 1 0 0 0
4
2 0 0 0 1 0
3 0 0 0 1 0 [Chen et al. NSDI‚Äô 12]
37Mix
Decrypt Add Noise Shuffle
R 0 1 0 0 0 00 11 00 00 00
1
R 0 1 0 0 0 .
1 . 0 1 0 0 0 00 11 00 01 00
.
0 1 0 0 0 00 11 01 00 00
R 0 1 0 0 0
2 R 0 0 1 0 0 00 00 10 00 00
4
00 10 00 00 00
R 0 1 0 0 0
3
+ 00 01 00 10 00
00 00 00 11 00
R 0 0 1 0 0
1 0 1 0 0 0
4
2 0 0 0 1 0
3 0 0 0 1 0 [Chen et al. NSDI‚Äô 12]
38
e siw-nmuloC Column-wiseAnalyst
De-obfuscate Aggregate Reduce Noise
00 11 00 00 00
Mix
00 11 00 11 00
00 11 11 00 00 0 4 1 2 0 0 4 1 2 0
-
00 00 00 00 00
00 00 00 00 00
-3
00 11 00 00 00
00 00 00 11 00 2
=
0 2 0 0 0
39Evaluating HisTorœµ
Q: How many client connections have the guards seen?
Analyst
Run Experiments !
No. of guards
&
Guard selection probability 28
Assign client
21
connections
. . .
53
35
No. of direct users
Ôøº40Accuracy
500
450
400
350
300
250
200
150
100
50
0
41
sdrauG
fo
.oN
152
-
0
205
-
252
357
-
305
4001
-
457
5521
-
5001
6051
-
6521
7571
-
7051
8002
-
8571
9522
-
9002
0152
-
0622
1672
-
1152
2103
-
2672
3623
-
3103
4153
-
4623
5673
-
5153
6104
-
6673
7624
-
7104
8154
-
8624
9674
-
9154
3997181
-
0774
No. of client connections as seen by guards
!
Distance No. of Client Conn Guard BW Exit BW
Actual
0.98290
R2 0.98466 0.96970 Noised
0.01179 0.02542 Bhattacharyya 0.0182
No. of Client ConnectionsMix
Analyst
Relay
10 20 40 80 160 320 640 1280
Number of Bins in Histogram
42
)
BK(
tsoC
noitacinummoC
Communication Cost
HisTorŒµ incurs very little bandwidth overhead
!
107
106
B M
5
9
Roughly
105
B 42 Bps
M
6
104
for each relay
103 B
K
1
5
1
102
101Summary
Histogram query for Tor with (Œµ, ùõø) differential privacy
!
Provides strong integrity guarantees
!
Maximum influence is bounded by the number of malicious relays
!
Provides strong privacy guarantees
!
Resistant to ‚Äúcompulsion attacks‚Äù
!
Highly accurate
!
Incurs low overheads
!
HisTorŒµ: Differentially Private and Robust Statistics Collection for Tor
Akshaya Mani, Micah Sherr Georgetown UniversitySummary
Histogram query for Tor with (Œµ, ùõø) differential privacy
!
Provides strong integrity guarantees
!
Maximum influence is bounded by the number of malicious relays
!
Provides strong privacy guarantees
!
Resistant to ‚Äúcompulsion attacks‚Äù
!
Highly accurate
!
Incurs low overheads
!
HisTorŒµ: Differentially Private and Robust Statistics Collection for Tor
Akshaya Mani, Micah Sherr Georgetown University