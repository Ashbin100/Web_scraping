Avoiding The Man on the Wire:
Improving Tor’s Security with
Trust-Aware Path Selection
Aaron Johnson (U.S. Naval Research Laboratory)
Rob Jansen (U.S. Naval Research Laboratory)
Aaron D. Jaggard (U.S. Naval Research Laboratory)
Joan Feigenbaum (Yale University)
Paul Syverson (U.S. Naval Research Laboratory)
Febraury 28th, 2017
Network and Distributed System Security Symposium (NDSS 2017)Talk Overview
1. Problem
2. Background
3. Attack on Prior Approach
4. Solution #1: Use Trust
5. Solution #2: Cluster
6. Trust-Aware Path Selection
7. Conclusion
2Problem
Users Destinations
Tor is a popular system for anonymous communication.
• > 1.5 million daily users
• > 80 Gbit/s aggregate traffic
3Problem
4Problem
5Problem
6Problem
7Problem
Traffic Correlation Attack
8Problem
Traffic Correlation Attack
Other attacks
• Website fingerprinting • Congestion attacks
• Application-layer leaks • Throughput attacks
• Latency leaks • Denial-of-Service attacks
9Talk Overview
1. Problem
2. Background
3. Attack on Prior Approach
4. Solution #1: Use Trust
5. Solution #2: Cluster
6. Trust-Aware Path Selection
7. Conclusion
10Background: Using Circuits
Relays
11Background: Using Circuits
1. Clients begin all connections with a given guard.
12Background: Using Circuits
1. Clients begin all connections with a given guard.
2. Relays define individual exit policies.
13Background: Using Circuits
1. Clients begin all connections with a given guard.
2. Relays define individual exit policies.
3. Clients construct onion-encrypted circuits.
14Background: Using Circuits
1. Clients begin all connections with a given guard.
2. Relays define individual exit policies.
3. Clients construct onion-encrypted circuits.
4. Clients multiplex streams over a circuit.
15Background: Using Circuits
1. Clients begin all connections with a given guard.
2. Relays define individual exit policies.
3. Clients construct onion-encrypted circuits.
4. Clients multiplex streams over a circuit.
5. New circuits replace existing ones periodically.
16Background: Using Circuits
1. Clients begin all connections with a given guard.
2. Relays define individual exit policies.
3. Clients construct onion-encrypted circuits.
4. Clients multiplex streams over a circuit.
5. New circuits replace existing ones periodically.
6. Clients randomly choose proportional to bandwidth.
17Background: Threat Model
Adversary is local and active.
18Background: Threat Model
Adversary is local and active.
• Adversary may run relays
19Background: Threat Model
Adversary is local and active.
• Adversary may run relays
• Adversary may run destination
20Background: Threat Model
Adversary is local and active.
• Adversary may run relays
• Adversary may run destination
• Adversary may observe subnetworks
21Background: Traffic Correlation
Traffic-correlation threats
22Background: Traffic Correlation
Traffic-correlation threats
• Relays
23Background: Traffic Correlation
AS9
AS6 AS8
AS7
AS1 AS3 AS4 AS5
AS2
IXP2
IXP1
Traffic-correlation threats
• Relays
• Autonomous Systems (ASes): the networks that compose the Internet
• Internet Exchange Points (IXPs): facilities at which many ASes
simultaneously connect
24Talk Overview
1. Problem
2. Background
3. Attack on Prior Approach
4. Solution #1: Use Trust
5. Solution #2: Cluster
6. Trust-Aware Path Selection
7. Conclusion
25Prior Approach to Prevent Traffic Correlation
Idea: Choose Tor circuits so that no single AS or IXP appears
between client and guard and between exit and destination.
26Prior Approach to Prevent Traffic Correlation
Idea: Choose Tor circuits so that no single AS or IXP appears
between client and guard and between exit and destination.
1. N. Feamster and R. Dingledine, “Location diversity in anonymity
networks,” in Workshop on Privacy in the Electronic Society,
2004.
2. M. Edman and P. Syverson, “AS-awareness in Tor path
selection,” in ACM Conference on Computer and
Communications Security, 2009.
3. M. Akhoondi, C. Yu, and H. V. Madhyastha, “LASTor: A low-
latency AS-aware Tor client,” in IEEE Symposium on Security &
Privacy, 2012.
4. R. Nithyanand, O. Starov, P. Gill, A. Zair, and M. Schapira,
“Measuring and mitigating AS-level adversaries against Tor,” in
Network & Distributed System Security Symposium, 2016.
27Prior Approach to Prevent Traffic Correlation
Idea: Choose Tor circuits so that no single AS or IXP appears
between client and guard and between exit and destination.
1. N. Feamster and R. Dingledine, “Location diversity in anonymity
networks,” in Workshop on Privacy in the Electronic Society,
2004.
2. M. Edman and P. Syverson, “AS-awareness in Tor path
selection,” in ACM Conference on Computer and
Communications Security, 2009.
3. M. Akhoondi, C. Yu, and H. V. Madhyastha, “LASTor: A low-
latency AS-aware Tor client,” in IEEE Symposium on Security &
Privacy, 2012.
4. R. Nithyanand, O. Starov, P. Gill, A. Zair, and M. Schapira,
“Measuring and mitigating AS-level adversaries against Tor,” in
Network & Distributed System Security Symposium, 2016.
28Prior Approach to Prevent Traffic Correlation
Astoria [Nithyanand et al. 2016]:
1. For new circuit, consider all pairs of guards and exits
a. If pair exists without same AS on both sides, choose
randomly among such pairs proportionally to
bandwidth
b. Else, choose pairs to minimize the maximum
probability that any given AS can perform traffic
correlation
2. Reuse existing circuit created for destination in same AS
29Prior Approach to Prevent Traffic Correlation
Astoria [Nithyanand et al. 2016]:
1. For new circuit, consider all pairs of guards and exits
a. If pair exists without same AS on both sides, choose
randomly among such pairs proportionally to
bandwidth
b. Else, choose pairs to minimize the maximum
probability that any given AS can perform traffic
correlation
2. Reuse existing circuit created for destination in same AS
Problems:
1. Adversaries need not only observe at an AS.
2. Location-based path selection leaks information about
client and destination locations.
30Chosen-Destination Attack
Chosen-Destination Attack on Astoria
31Chosen-Destination Attack
Chosen-Destination Attack on Astoria
1. Client makes initial
connection to malicious
website.
32Chosen-Destination Attack
Chosen-Destination Attack on Astoria
1. Client makes initial
connection to malicious
website.
33Chosen-Destination Attack
Chosen-Destination Attack on Astoria
1. Client makes initial
connection to malicious
website.
2. Client connects to
sequence of malicious
servers in other ASes to
download resources linked
in webpage.
34Chosen-Destination Attack
Chosen-Destination Attack on Astoria
1. Client makes initial
connection to malicious
website.
2. Client connects to
sequence of malicious
servers in other ASes to
download resources linked
in webpage.
35Chosen-Destination Attack
Chosen-Destination Attack on Astoria
1. Client makes initial
connection to malicious
website.
2. Client connects to
sequence of malicious
servers in other ASes to
download resources linked
in webpage.
36Chosen-Destination Attack
Chosen-Destination Attack on Astoria
1. Client makes initial
connection to malicious
website.
2. Client connects to
sequence of malicious
servers in other ASes to
download resources linked
in webpage.
3. Client eventually reveals
guard(s) by choosing
malicious middle relay.
37Chosen-Destination Attack
Chosen-Destination Attack on Astoria
1. Client makes initial
connection to malicious
website.
2. Client connects to
sequence of malicious
servers in other ASes to
download resources linked
in webpage.
3. Client eventually reveals
guard(s) by choosing
malicious middle relay.
4. Guard(s) and pattern of
exits leaks client AS.
38Chosen-Destination Attack
• 5 popular Tor client ASes
• Entropy over 400 popular Tor client ASes vs.
number of random attack destination ASes
• Attack can succeed in seconds
39Talk Overview
1. Problem
2. Background
3. Attack on Prior Approach
4. Solution #1: Use Trust
5. Solution #2: Cluster
6. Trust-Aware Path Selection
7. Conclusion
40Network Trust as a Solution
Problem: Adversaries need not only observe at an AS.
41Network Trust as a Solution
42Network Trust as a Solution
Less trusted
43Network Trust as a Solution
44Network Trust as a Solution
Trust belief: probability distribution on adversary location
• Tor relays
• Virtual links: client-guard and destination-exit links
Trust policy:
• Trust belief per adversary
• Weight per adversary indicating concern level 45Network Trust as a Solution
A.D. Jaggard, A. Johnson, S. Cortes, P. Syverson, and J. Feigenbaum,
“20,000 In League Under the Sea: Anonymous Communication, Trust,
MLATs, and Undersea Cables”, In Proceedings on Privacy Enhancing
Technologies, Vol. 2015, Number 1, April 2015.
Trust Factors
• Relays: operator, uptime, country
• Links: AS, IXP, undersea cable, country
Trust Sources
• Default (provided by Tor)
• Trusted authorities (e.g. EFF)
• Social networks
46Talk Overview
1. Problem
2. Background
3. Attack on Prior Approach
4. Solution #1: Use Trust
5. Solution #2: Cluster
6. Trust-Aware Path Selection
7. Conclusion
47Cluster Locations
Problem: Location-based path selection leaks
information about client and destination locations.
48Cluster Locations
• Locations are ASes (could also be IP prefixes)
• Tor clusters client and destination locations
• Cluster members act like the cluster representative
• Distance between locations is sum over guards/exits of
expected weight of adversaries that appear on one
virtual link but not the other
AS1
AS2
49Clustering algorithm
Modified k-means to choose balanced clusters
50Talk Overview
1. Problem
2. Background
3. Attack on Prior Approach
4. Solution #1: Use Trust
5. Solution #2: Cluster
6. Trust-Aware Path Selection
7. Conclusion
51Trust-Aware Path Selection (TAPS)
TrustAll
• All users use TAPS.
TrustOne
• Most users use “vanilla” Tor instead of TAPS.
• Exits may be chosen as in vanilla Tor to blend in
(guards are chosen much less frequently).
• Tighter security parameters because load-balancing
won’t be as affected.
52Trust-Aware Path Selection (TAPS)
Guard selection
1. Score guards.
2. Randomly choose
guard with score close
enough to highest.
53Trust-Aware Path Selection (TAPS)
Guard selection
1. Score guards.
0.99
2. Randomly choose
guard with score close
0.99
enough to highest.
0.8
0.8
0.1
54Trust-Aware Path Selection (TAPS)
Guard selection
1. Score guards.
0.99
2. Randomly choose
guard with score close
0.99
enough to highest.
0.8
0.8
0.1
55Trust-Aware Path Selection (TAPS)
Guard selection
1. Score guards.
0.99
2. Randomly choose
guard with score close
0.99
enough to highest.
Circuit reuse/creation
0.8
1. Score exit routers.
2. Reuse circuit with exit
0.8
score close enough to
highest, else randomly
0.1
choose such an exit.
3. If needed, randomly
choose middle and
construct circuit.
56Trust-Aware Path Selection (TAPS)
Guard selection
1. Score guards.
0.99 0.2
2. Randomly choose
guard with score close
0.99 0.1
enough to highest.
Circuit reuse/creation
0.8 0.99
1. Score exit routers.
2. Reuse circuit with exit
0.8 0.8
score close enough to
highest, else randomly
0.1 0.1
choose such an exit.
3. If needed, randomly
choose middle and
construct circuit.
57Trust-Aware Path Selection (TAPS)
Guard selection
1. Score guards.
0.99 0.2
2. Randomly choose
guard with score close
0.99 0.1
enough to highest.
Circuit reuse/creation
0.8 0.99
1. Score exit routers.
2. Reuse circuit with exit
0.8 0.8
score close enough to
highest, else randomly
0.1 0.1
choose such an exit.
3. If needed, randomly
choose middle and
construct circuit.
58Trust-Aware Path Selection (TAPS)
Guard selection
1. Score guards.
0.99 0.2
2. Randomly choose
guard with score close
0.99 0.1
enough to highest.
Circuit reuse/creation
0.8 0.99
1. Score exit routers.
2. Reuse circuit with exit
0.8 0.8
score close enough to
highest, else randomly
0.1 0.1
choose such an exit.
3. If needed, randomly
choose middle and
construct circuit.
59Trust-Aware Path Selection (TAPS)
Guard selection
1. Score guards.
0.99 0.2
2. Randomly choose
guard with score close
0.99 0.1
enough to highest.
Circuit reuse/creation
0.8 0.99
1. Score exit routers.
2. Reuse circuit with exit
0.8 0.8
score close enough to
highest, else randomly
0.1 0.1
choose such an exit.
3. If needed, randomly
choose middle and
construct circuit.
60TAPS Experiments: Path Simulations
TrustAll
• Users engage in typical Web behavior (browse, search,
social network, etc.), accessing 135 destination IPs
TrustOne
• User visits a single IRC chat server
Pervasive adversary “The Man”
(possible default)
• Each AS/IXP organization independently compromised with
probability 0.1
• Each relay family compromised with probability .02 ≤ p ≤ .1
decreasing with uptime of relays
61TAPS Experiments: Path Simulations
Time to first compromised connection from
most popular client AS (6128) over 7 days
62TAPS Experiments: Shadow Simulations
Simulated network
• 400 relays
• 1380 clients: 1080 Web, 120 bulk, 180 ShadowPerf
• 500 file servers
• 1 simulated hour
TAPS simulation
• Implemented TAPS in Tor
• TrustAll algorithm
• The Man trust policy
• Varied αω parameter of bandwidth fraction of highest-
scoring relays to select from (αω=0.2 in path simulations)
63TAPS Experiments: Shadow Simulations
1.0
0.8
0.6
0.4
0.2
0.0
0 5 10 15 20 25 30
Download Time (s)
320KiB file download
64
noitcarF
evitalumuC vanilla
↵w = 1.0
↵w = 0.7
↵w = 0.4
↵w = 0.1Talk Overview
1. Problem
2. Background
3. Attack on Prior Approach
4. Solution #1: Use Trust
5. Solution #2: Cluster
6. Trust-Aware Path Selection
7. Conclusion
65Conclusion
Conclusion
• Tor can be deanonymized via timing correlation.
• We present an attack on previous defense.
• We propose the Trust-Aware Path Selection (TAPS)
algorithm that is not vulnerable to our attack.
• We demonstrate TAPS can improve user security
without major cost in performance.
66Cross-Circuit Attack
Cross-Circuit Attack on Astoria
1. Client makes initial connection to honest website (1).
2. Client downloads linked resource from other server. Needs to use
different guard for (2) than used for (1).
3. Malicious AS can perform correlation attack across circuits using
known download pattern for website.
(1)
AS1
(2)
AS1
67Cross-Circuit Attack
• Repeatedly simulated Astoria visits to Alexa top
5000 websites from top 400 Tor client Ases
• Median frequency cross-circuit attack: 0.2
• Median frequency of direct-circuit attack: 0.03
68Trust-Aware Path Selection (TAPS)
Relay security scoring
• G S (client_loc, guard): Expected weight
UARD ECURITY
of adversaries not between client_loc and guard
69Trust-Aware Path Selection (TAPS)
Relay security scoring
• G S (client_loc, guard): Expected weight
UARD ECURITY
of adversaries not between client_loc and guard
0.99
70Trust-Aware Path Selection (TAPS)
Relay security scoring
• G S (client_loc, guard): Expected weight
UARD ECURITY
of adversaries not between client_loc and guard
0.99
0.99
71Trust-Aware Path Selection (TAPS)
Relay security scoring
• G S (client_loc, guard): Expected weight
UARD ECURITY
of adversaries not between client_loc and guard
0.99
0.99
0.1
72Trust-Aware Path Selection (TAPS)
Relay security scoring
• G S (client_loc, guard): Expected weight
UARD ECURITY
of adversaries not between client_loc and guard
• E S (client_loc, dst_loc, guard, exit):
XIT ECURITY
Expected weight of adversaries unable to perform
correlation attack
73Trust-Aware Path Selection (TAPS)
Relay security scoring
• G S (client_loc, guard): Expected weight
UARD ECURITY
of adversaries not between client_loc and guard
• E S (client_loc, dst_loc, guard, exit):
XIT ECURITY
Expected weight of adversaries unable to perform
correlation attack
0.9
74Trust-Aware Path Selection (TAPS)
Relay security scoring
• G S (client_loc, guard): Expected weight
UARD ECURITY
of adversaries not between client_loc and guard
• E S (client_loc, dst_loc, guard, exit):
XIT ECURITY
Expected weight of adversaries unable to perform
correlation attack
0.9
0.8
75Trust-Aware Path Selection (TAPS)
Relay security scoring
• G S (client_loc, guard): Expected weight
UARD ECURITY
of adversaries not between client_loc and guard
• E S (client_loc, dst_loc, guard, exit):
XIT ECURITY
Expected weight of adversaries unable to perform
correlation attack
0.9
0.8
0.05
76TAPS Experiments: Path Simulations
Fraction of compromised connections
from most popular AS (6128) over 7 days
77TAPS Experiments: Countries
Streams compromised by any country for typical
usage over 7 days from most popular AS (6128)
(except from US where AS 6128 is).
78TAPS Experiments: Shadow Simulations
1.0
0.8
0.6
0.4
0.2
0.0
40 60 80 100 120
Throughput (MiB/s)
79
noitcarF
evitalumuC vanilla
↵w = 1.0
↵w = 0.7
↵w = 0.4
↵w = 0.1
Aggregate relay throughput