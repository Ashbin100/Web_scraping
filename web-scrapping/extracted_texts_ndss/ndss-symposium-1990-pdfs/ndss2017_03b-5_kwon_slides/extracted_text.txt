BEEWOLF
Catching Worms, Trojan Horses and PUPs:
Unsupervised DetecJon of Silent Delivery
Campaigns
BumJun Kwon, Virinchi Srinivas,
Amol Deshpande, Tudor Dumitraș
University of Maryland—College Park
1Malware Delivery Campaigns
• Business model
– Charge fees for delivering malware or PUPs
• Key method
– Orchestrate Silent delivery campaigns
Payloads DNS
Downloaders
Domain
Host
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 2Silent Delivery Campaigns
Payloads Downloaders
DNS
download
manager.exe Domains
Host1
2013-11-15
ppdownload.com
smart.exe
2013-11-22
Host2
greatarcade
hits.com
mobogenie.exe
2013-12-05
download2
download
desktop.com
manager2.exe
Host3
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 3Silent Delivery Campaigns
Payloads Downloaders
DNS
download
manager.exe Domains
Host1
IdenJf2y0 m13a-1li1c-io15u s
domaipnps download.com
smart.exe [Antonakakis+ 2010]
Detect malicious
downloaders on the 2013-11-22
Host2
client side greatarcade
[Kwon+ 2015] hits.com
mobogenie.exe
2013-12-05
Malware families disseminated
download2
download
[Invernizzi+ 2014]
desktop.com
manager2.exe
Host3 Milk PUP payloads
[Caballero+ 2011, Thomas+ 2016]
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 4Lockstep Behavior
[Beutel+ 2013, Cao+ 2014, Jiang+ 2015]
DNS
Downloaders
Domains
• Require seed nodes
• Require interpreWng
events defined by
mulWple features
• Not designed for
streaming data
PresentaJon Title (change on all masters) 5We Introduce Beewolf
DNS • Propose an
Downloaders
Domains
unsupervised and
determinisWc technique
• Orthogonal to the work
that use machine
learning
• Operate on a stream of
download events
• Reveal the indirect
relaWonships
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 6Understanding Indirect RelaJonships
Indirect
RelaWonship
• Expose hidden
Direct RelaWonship
dependencies in the
underground economy
• Suggest suitable
intervenWons for
disrupWng the malware
delivery
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 7Outline
•• SSyysstteemm oovveerrvviieeww
• Lockstep analysis
– A\ribuWon
– ObservaWons
• EvaluaWon
– Streaming
• Conclusion
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 8System Overview
• Beewolf
– Two modes: offline/streaming
– Input: download event data
– WhitelisWng: download events from benign downloaders
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 9Data Set: Download AcJvity in The Wild
• Download acWvity
– Kwon et.al. The Dropper Effect paper (CCS’15)
– Download event: downloader, second level domain name
(domain), payload, sever Wmestamp
– Year 2013
• Ground truth for labeling
– VirusTotal
– NSRL (NaWonal Sohware Reference Library)
– Underground forums, Reason Labs knowledge base
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 10System Overview Cont’
• Beewolf
– Detect lockstep pa‘erns
• Offline: from the enWre input dataset
• Streaming: from the stream of data
– Four core components
• Star DetecWon, Galaxy graph, FP tree, Lockstep DetecWon
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 11Goal
Downloaders
root!
Domains
a!
A!
B! c b a d!
b!
B!
Lockstep : [c,b,a] [B,C,A]
C! c b e!
c!
C! A! c b a!
d! Detect near-bicliques with Jme constraints
D! c d e!
D!
e!
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 12Star DetecJon
Downloaders
root!
Domains
a!
A!
B! c b a d!
b!
B!
C! c b e!
c!
C! A! c b a!
d!
D! c d e!
D!
e!
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 13Galaxy Graph
Downloaders
root!
Domains
aa!!
AA!!
B! c b a d!
bb!!
BB!!
C! c b e!
cc!!
CC!! A! c b a!
dd!!
D! c d e!
DD!!
ee!!
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 14Frequent Pa‘ern Tree
Downloaders
root!
Domains
a!
A!
B!
B! c b a d!
b! c!
B!
C! c b e!
c!
B!
C! A! c b a!
b!
d!
D! c d e!
D!
B!
e! a!
B!
d!
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 15Frequent Pa‘ern Tree
Downloaders
root!
Domains
a!
A!
B, C, A, D!
B! c b a d!
b! c!
B!
C! c b e!
c! B, C, A!
C! A! c b a!
b! d! D!
d!
D! c d e!
D!
e! a! B, A! e! C! e! D!
B!
d!
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 16Lockstep DetecJon
root!
Complete Biclique: [c,b] [B,C,A]
a!
A!
B, C, A, D!
B! c b a d!
b! c!
B!
C! c b e!
c! B, C, A!
C! A! c b a!
b! d! D!
d!
D! c d e!
D!
e! a! B, A! e! C! e! D!
B!
d!
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 17Addressing LimitaJons (1)
Lockstep : [c,b,a] [B,C,A] root!
a!
A!
HeurisJc for detecJng near-bicliques
B, C, A, D!
B! c b a d!
b! c!
B!
C! c b e!
c! B, C, A!
C! A! c b a!
b! d! D!
d!
D! c d e!
D!
e! a! B, A! e! C! e! D!
B!
d!
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 18Addressing LimitaJons (2)
root!
a!
A!
B, C, A, D!
B! c b a d!
b! c!
B!
C! c b e!
c! B, C, A!
C! A! Supple cm be an ! taJon phase
b! d! D!
d!
D! c d e!
D!
e! a! B, A! e! C! e! D!
Complete Biclique: [c,b,e] [C]
B!
d!
Complete Biclique: [c,d,e] [D]
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 19Outline
• System overview
• Lockstep analysis
– A\ribuWon
– ObservaWons
• EvaluaWon
– Streaming
• Conclusion
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 20Lockstep Analysis
• Beewolf in offline mode
• Time window ∆t of 3 days
– Shorter than the typical reacWon Wme of domain blacklist
• Summary
– Locksteps: 67,094
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 21Label by Publisher
• IdenWfy the organizaWon
• RepresentaJve publisher (rep-pub)
– A publisher that accounts more than 50% of the signed
downloaders in the lockstep
ex) [OutBrowse, OutBrowse, MindAd LTD] OutBrowse
– Cannot idenWfy rep-pub: mixed
• CategorizaWon (rep-pub)
– PUP, PPI, benign(BN), other, mixed, unknown(UK)
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 22Label by Publisher Result
• IdenWfied 335 rep-pubs
• InvesWgate the top 50 rep-pubs
• Large porWon of the locksteps correspond to the
Mixed category followed by PUP
Difficult to place in a specific category
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 23Label by Payload
• Understand the purpose of the lockstep
• DetecWon performance evaluaWon
• First, label the downloader by the payload they
distribute
– Malware downloader (MD)
– PUP downloader (PD)
– Benign downloader (BD)
– Unknown downloader (UD)
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 24Label by Payload Cont’
Suspicious
• Malware downloader lockstep (MDL): lockstep that
include at least one MD
• PUP downloader lockstep (PDL): contains PD but no MD
• Unknown downloader lockstep (UDL): no suspicious
downloader
• Benign downloader lockstep (BDL): no suspicious
downloader, contain BD
Benign
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 25Label by Payload Result
• Higher success rate in labeling (2.33% UDLs)
• MDL occupy more than 80% of the total lockstep
while BDL are low (4.82%)
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 26Overlap Between Malware and PUP Delivery
Ecosystems
• Overlap of downloaders
– Large overlap
• 36.7% of the downloaders are present in both MDLs and PDLs
• Associated with 97.8% of all the PDLs
• Malsign blacklist
– 1,926 downloaders signed by 212 publishers in locksteps
– Involved in 66.8% of MDLs and 37.2% of PDLs
Many PUP publishers are likely involved in malware delivery
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 27Overlap Between Malware and PUP Delivery
Ecosystems Cont’
• Recent measurements of commercial PPIs
(Kotzias+ 2016, Thomas+ 2016)
– Did not find substanWal overlap
• Key disWncWon
– Geographical distribuWon
• Hosts from 72 different countries
– Different observaWon period / malware set
– Locksteps detect indirect relaWonships
• UWlize unsigned downloaders for malicious payloads
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 28Business RelaJonships
• Publishers appearing together in locksteps
– UWlize the same server side infrastructure
• Reflects a relaWonship among the corresponding distribuWon
networks
– Two different publisher relaWonships
• Partner: downloaders in downloaded-by relaWonship
• Neighbor: No direct download relaWonship
– OrganizaWon that use mulWple code signing cerWficate
– RelaWonships with a common third party
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 29Business RelaJonships Cont’
PUP, PPI, benign(BN), other
• Business relaWonship graph
of top 13 rep-pubs
– Node: publisher
– Edge: business relaWonship
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 30Business RelaJonships Cont’
PUP, PPI, benign(BN), other
Expose organizaJons uJlizing cerJficate polymorphism
• Example
– Outbrowse LTD
OrganizaJons sharing the same third party infrastructure
• AdverWsers or the affiliates
of the Outbrowse PPI
• Variants of the rep-pub’s
cerWficate
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 31Outline
• System overview
• Lockstep analysis
– A\ribuWon
– ObservaWons
• EvaluaWon
– Streaming
• Conclusion
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 32Streaming Setup
• Batch of Download events from the year 2013
– Download events in Wme window Δt = 3 days per batch
– 122 batch in total
– Check the computaWon cost (Wme) growth
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 33Streaming Performance: Serial
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 34Streaming Performance: Serial
Overhead of supplementaJon phase
Slowdown: 7.7s / batch Up to 20min
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 35Streaming Performance: OpJmal Parallelism
SupplementaJon processes are independent => Run in parallel
Slowdown: 0.1s / batch
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 36Outline
• System overview
• Lockstep analysis
– A\ribuWon
– ObservaWons
• EvaluaWon
– DetecWon performance
– Streaming
• Conclusion
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 37Conclusion
• We introduce Beewolf
– Unsupervised and determinisWc system, operates on stream
of data
– Discover indirect relaWonships (reflect PUP/malware
overlap)
• ImplicaWon beyond malware detecWon
– Beewolf can detect other kinds of coordinated acWons
(Beaconing, C&C commucaWon, posWng in SNS)
• Data release
– h\p://www.beewolf.org
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 38Thank you!
BumJun Kwon
bkwon@umd.edu
h\p://www.beewolf.org
PresentaJon Title (change on all masters) 39Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 40The DetecJon Lag
• Downloaders
– Downloading is not a sign of inherently malicious intent
– Signed downloaders
AnJvirus DetecJon Lag
Average 71.6 days before discovery
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 41DetecJon Performance
MDL 54,497 (81.22%)
PDL 7,800 (11.63%)
BDL 3,231 (4.82%)
UDL 1,566 (2.33%)
False posiJve fewer than 5%
True posiJve (suspicious locksteps)
account for 92.85% of locksteps
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 42DetecJon Lead Time
• How early we can detect suspicious downloaders or
domains that are previously unknown?
– Downloaders: detect unknown executables in lockstep
before their first submission to VirusTotal
median detecJon lead Jme of 165 days
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 43DetecJon Lead Time Cont’
• How early we can detect suspicious downloaders or
domains that are previously unknown?
– Downloaders: detect unknown executables in lockstep
before their first submission to VirusTotal
– Domains: flag unknown domains in lockstep before listed
to public URL blacklists
median detecJon lead Jme of 196 days
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 44Frequent Pa‘ern Tree (1)
2
a! Get the degree for the nodes
3
A!
3
b!
B! 4
LHN
RHN
4
c!
C! 3
d!
2
D! 3
e!
2
• Pre-setup
– Bipartite graph of downloaders and second
level domain names (domains)
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 45Frequent Pa‘ern Tree (1)
2
a!
3
A!
3
b!
B! c b a d!
B! 4
4 C! c b e!
c!
C! 3
A! c b a!
d!
2
D! 3 D! c d e!
e!
2
• Adjacency list
– Sorted in degree-descending order
(First sort RHNs, then for each RHN sort its
neighbor LHNs)
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 46Frequent Pa‘ern Tree (2)
root!
B! c b a d!
B, CB!!
c!
C! c b e!
A! c b a!
B,CB!! b!
D! c d e!
BB!! a! e! C!
Perform inserJon (node: LHN)
Create the root of an FP-tree
1) Not the child: insert as child
BB!!
d!
2) Add the RHN to the visited list
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 47Frequent Pa‘ern Tree (2)
root!
B! c b a d!
B, C, AB, ,DC!!
c!
C! c b e!
A! c b a!
B, CB,, CA!!
b! d! D!
D! c d e!
BB,, AA!! a! e! CC!! e! D!
Perform inserJon (node: LHN)
1) Not the child: insert as child
BB!!
2) Add the RHN to the visited list d!
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 48Frequent Pa‘ern Tree (3)
root!
Lockstep: [c,b] [B,C,A]!
B, C, A, D!
c!
B, C, A! b! d! D!
B, A! a! e! C! e! D!
Lockstep: [c b a] [B,A]!
, ,
B!
d!
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 49Outline
• DetecWng silent delivery campaigns
– Lockstep behavior
– How to detect locksteps: Frequent pa\ern tree
– Dataset
– Lockstep a\ribuWon
• System
• Silent distribuWon campaigns
– ProperWes of locksteps
– Overlap between malware and PUP delivery ecosystems
– Business relaWonships
• EvaluaWon
• Conclusion
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 50Lockstep Behaviors
Lockstep
MINIBAR-!
2013-01-06!
MASTER.EXE!
bigspeedpro.com!
BI_RUN!
ONCE.EXE!
2013-01-13!
2013-01-24!
BISEHUP!
bispd.com!
35464.EXE! cloudfront.net!
At t = [0, ∆t]! At t = [3δt, ∆t + 3δt]! At t = [6δt,∆t + 6δt]!
• Lockstep behavior
– Downloader - Domain interaction
– Temporal pattern: access the same domain within a
bounded time period ∆t
– Coordinated downloads that do not experience random
delays
Lockstep behavior exposes remotely controlled downloaders
and reveals the domains involved in subsequent campaigns
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 51Frequent Pa‘ern Tree (1)
a!
A!
b!
B!
LHN
RHN
c!
C!
d!
D!
e!
• Pre-setup
– Bipartite graph of downloaders and second
level domain names (domains)
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 52Frequent Pa‘ern Tree (1)
2
a!
3
A!
3
b!
B! c b a d!
B! 4
4 C! c b e!
c!
C! 3
A! c b a!
d!
2
D! 3 D! c d e!
e!
2
• Adjacency list
– Sorted in degree-descending order
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 53Frequent Pa‘ern Tree (2)
root!
Visited List of c
B! c b a d!
B, CB!!
c!
C! c b e!
A! c b a!
B,CB!! b!
D! c d e!
BB!! a! e! C!
Perform inserJon (node: LHN)
Create the root of an FP-tree
1) Not the child: insert as child
BB!!
d!
2) Add the RHN to the visited list
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 54Frequent Pa‘ern Tree (2)
root!
B! c b a d!
B, C, A, D!
c!
C! c b e!
A! c b a!
B, C, A!
b! d! D!
D! c d e!
B, A! a! e! C! e! D!
Perform inserJon (node: LHN)
1) Not the child: insert as child
B!
2) Add the RHN to the visited list d!
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 55Frequent Pa‘ern Tree (3)
root!
Lockstep: [c,b] [B,C,A]!
B, C, A, D!
c!
B, C, A! b! d! D!
B, A! a! e! C! e! D!
Lockstep: [c b a] [B,A]!
, ,
B!
d!
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 56How to Detect Silent Delivery Campaigns Cont’
DNS
Downloaders
Domains
Lockstep behavior:
• Coordinated downloads
without random delays
• Downloaders-domains in
near-bicliques
Remotely controlled downloaders
and the domains involved in subsequent campaigns
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 57Star DetecJon
• Detect Stars
– Complete biparWte graph of a single domain and at least 2
downloaders
– Star corresponds to the row of the adjacency list
• Collect all stars within Wme window ∆t
– For each domain, aggregate the adjacent downloaders
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 58Galaxy Graph
• BiparWte graph of set of stars
• Update the galaxy graph incrementally
– For each star, add the central node and its adjacent nodes
to the graph
– Discard if the star is a subset of some exisWng star
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 59FP Tree
• LimitaWons
– Does not return near-bicliques
• HeurisWc for detecWng near-bicliques
– Misses part of complete bicliques
• Independent supplementaJon phase
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 60Lockstep DetecJon
• Traverse the FP tree from the root and collect all the
locksteps
• Assign idenWfiers to the detected locksteps
Catching Worms, Trojan Horses and PUPs: Unsupervised DetecJon of Silent Delivery Campaigns 61