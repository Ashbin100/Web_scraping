Integrating Security, Mobility, and Multi-homing in a HIP Way
Pekka Nikander, Jukka Ylitalo, and Jorma Wall
Ericsson Research NomadicLab
Abstract hoc networks will soon lead to a situation where the major-
ity of computing hosts are multi-homed and mobile, and
The current trend in mobile networking is towards mo bile have no static addresses.
hosts that have multiple network interfaces, e.g., WL AN In addition to the nature of hosts, also the nature of us-
and GPRS. However, when the current Internet architec- ers have changed during the years. For many years, the In-
ture was originally designed, neither mobility nor multi- ternet was basically used by a fairly homogenous user
homing were considered. In the current architecture a n IP community where everybody more or less trusted every one
address represents both a host’s identity and the host’s top- else. Not so any more. Trustworthiness must now be
ological location. This overloading has led to several secu- proved through explicit cryptographic mechanisms.
rity problems, including the so called address owner ship In a word, the environment has changed. Looking f rom
problem, making IP mobility and multi-homing unneces- the 1980’s point of view, the requirements for mobility and
sarily hard from the security point of view. multi-homing, together with the host-to-host signalling se-
In this paper we show how the Host Identity Pay load curity, are new. Addressing these within the limitation s of
(HIP), being discussed at the IETF, can be used to simulta- the current architecture has turned out to be hard; theref ore,
neously solve the security problems, and many of the prac- it may be necessary to do some radical re-engineering for
tical problems, related to end-host multi-homing and end- the architecture to bring the TCP/IP protocol suite in par
host mobility. Basically, HIP introduces a new crypto- with the new requirements. The intention of this paper is to
graphic name space and protocol layer between netw ork work as a vehicle in that re-design discussion.
and transport layers, breaking the fixed binding betw een
identities and locations. The approach is especially suita- Many of the issues discussed in this paper are in no way
ble for large open networks, where no pre-existing trust re- new, but have been floating around for a number of ye ars.
lationships can be assumed. We also report our e arly Our main contributions stem from addressing mob ility,
implementation experiences. multihoming and related security at the same time, and ar-
guing how they can be handled in a fairly orthogonal w ay.
In particular, we define an orthogonal end-host mob ility
1. Introduction
and multihoming architecture, where the properties for
end-points, parallel communication paths (i.e. multi-hom-
When the TCP/IP protocol suite was originally designe d in ing), mobility, and related security1 are neatly separ ated
the late 1970’s and early 1980’s, it was hardly imagin able
into different dimensions.
that most of the world’s computers would eventually be
The rest of this paper is organized as follows . In
mobile and have several distinct network connections a t the
Section 2 we discuss the nature of mobility and multi-hom-
same time. Thus, the protocol suite was designed with sin-
ing, thereby paving the way for the forthcoming discus-
gly-homed statically located hosts in mind. In that wo rld,
sion. Section 3 includes brief summary of the m ost
the location bound IP addresses served beautifully as iden-
important related work. Section 4 defines the proposed new
tifiers for the hosts, since hosts rarely if ever moved be-
architecture in detail, and Section 5 discusses it from the
tween locations.
security point of view. Section 6 reports our current imple-
Years ago, with the introduction of dynamic address as-
mentation status. Finally, Section 7 concludes this paper.
signment in PPP and DHCP, the assumption that an IP ad-
1 To be more precise, in this context “security” means mobility
dress would uniquely identify a host was broken, and the
and multi-homing related signalling authorization, i.e. access
situation was further worsened by the introduction of pri-
control on believing in the contents of received mobility or
vate IP address spaces and NAT [1][2]. Currently it lo oks multi-homing signalling messages. Especially, it does not de-
like that the emergence of ubiquitous computing and ad note generic application-level end-to-end security.2. Background As a consequence of these assumptions, whenev er a
node moves, its network layer address necessarily chan ges.
Thus, in order to continue to communicate, the host m ust
In this section we summarize the necessary background for
be able to signal the changes in its addresses to its ac tive
the following discussion. We limit this background discus-
peers. Furthermore, this signalling must be secure since un-
sion to analysing mobility and multihoming from an end-
secured signalling can lead to a unauthorized traffic diver-
host point of view, illustrating the resulting security prob-
sion and denial-of-service attacks.
lems. Later, in Section 4, we return to these concepts; t here
we show that they are actually quite similar and, under cer-
2.2. Multihoming
tain circumstances, may be taken as duals of each other.
2.1. Mobility Multi-homing refers to a situation where an end-point has
several parallel communication paths that it can use. Usu-
ally multi-homing is a result of either the host having sev-
For the purposes of this paper, we define mobility to de note
eral network interfaces (end-host multi-homing) or due to a
the phenomenon where an entity moves while keepin g its
network between the host and the rest of the network hav-
communication context active (see e.g. [2]). With tha t we
ing redundant paths (site multi-homing). In this paper we
mean that an end-host, i.e. a computational unit hosti ng a
concentrate on end-host multihoming.
number of communicating processes, changes its topologi-
From our theoretical point of view, a multihomed end-
cal point of attachment. At the same time, however, we
host is a node that has two or more points-of-attachm ent
want to make sure that all active communication cont exts
with the rest of the network. This is illustrated in Figu re 2.
remain active, and the processes do not see mobility o ther
This situation can be characterized as the node being reach-
than, possibly, in changes to the actually experienced qual-
able through several topological paths; the node is simulta-
ity of service.
neously present at several topological locations. A s a
To reflect reality, we assume that there are a numbe r of
consequence, it also has several network layer addres ses,
mobile nodes that attach to a relatively fixed network (see
each of which reflects one of the topological location s. In
Figure 1). Furthermore, we assume that the network l ayer
the general case, the addresses are completely indepen dent
address prefixes are structurally determined by the net-
of each other.
work. That is, we assume that the network topology deter-
mines the routing related portion of the IP layer addres ses.
2.3. The security problems
This assumption reflects the fact that in a large network it is
important, in order to keep the routing table sizes managea-
ble, to keep routing prefixes consistent with the network to- There are a number of security problems associated with
pology. Furthermore, for the sake of simplicity, the mobility and multi-homing. These problems stem from the
considerations for link local, site local, anycast, and multi- need of assigning several IP addresses to a single host, and
cast addresses are beyond the scope of this paper. Tha t is, from the desire of using these addresses in an interchange-
we assume that all addresses are globally routable, un less able way. That is, in an ideal mobility and multi-hom ing
explicitly stated otherwise. solution the hosts can use any of their peer’s addre sses
without having to worry about the validity of the address.
Mobile hosts Possible points of attachment Singly-homed hosts Possible points of attachment
Topologically Topologically
slowly changing slowly changing
internetwork internetwork
A host in transit A multihomed host
Figure 1: The mobility model Figure 2: The multi-homing modelFalse location updates:
10.10.1.1 -> 192.168.0.1
Peer node
Target node Peer node
Peer node
Wrong 10.1.1.1
Normal
packet flow Flooding
packet flow
packet flows
False location update:
New address 10.1.1.1 -> 192.168.0.1
192.168.0.1
Target address
192.168.0.1
10.10.1.1
Attacker
Figure 3: Address stealing attack. The peer Attacker
believes that 10.1.1.1 is now at 192.168.0.1
Figure 4: Flooding attack
Given this, there are two basic security problems: ad- the address, topology wise. That is, when Bob is communi-
dress stealing and address flooding. In an address stea ling cating with someone that Bob thinks is at an addres s A,
attack a malicious node claims to “own” an address that Bob cannot be sure that someone is actually at A and n ot at
some other node is currently using, with the intentio n of some topologically intermediate point between A and B ob,
launching a masquerade, man-in-the-middle or denial-of- or at a point close to A or Bob, thereby being able hea r all
service attack against the owner of the given address. I n an the messages that Bob sends to A.
address flooding attack a malicious node (or group of Since the IP addresses are used as the primary identifi-
nodes) makes a large number of innocent peer nodes to be- ers today, Bob cannot explicitly say that he wants to tal k to
lieve that the attacker has become (better) available at a tar- Alice, but he must simply send packets to the address that
get address, causing the peer nodes to flood the ta rget he believes that Alice has. Thus, if Bob wants to talk to the
address with unwanted traffic. Alice, supposedly at A, and ends up talking to Caro l at
Based on the mobility and multi-homing models, it is some intermediate point, Carol can easily tell Bob that she
easy to see how an attacker can launch the first attac k. It has moved to a new address D even if reachability ch ecks
simply informs the peer node(s) of the target node tha t the are used.
target node has moved into a new address. Unless the re- Within the scope of the current architecture, the only re-
cipient of this location update is able to securely verify that ally secure solution would be to provide a credential infra-
the sender of the update indeed was earlier at the target ad- structure binding addresses to public keys, thereby crea ting
dress, all the future traffic destined to the target addre ss is the possibility of binding nodes and addresses in a stro nger
directed elsewhere, resulting in masquerade, denial-of- sense. However, providing such an infrastructure woul d be
service, or man-in-the-middle situation, depending on the extremely hard due to practical reasons.
other actions and the actual location of the attacker. This
attack is illustrated in Figure 3. 3. Related work
The second attack results from failing to check that the
sender of an address update is indeed reachable at the
As we already mentioned, our work is mostly based on the
claimed new address. If a recipient of an address up date
HIP drafts [1][7][8], with quite a lot of influence from N oel
blindly starts to send messages to the new address, the
Chiappa’s and Steven Bellovin’s writings [2][3], the I RTF
messages may be delivered to an innocent third party that
NSRG report [4], and our work in securing Mobile I Pv6
now receives excess traffic. While one node sending bo gus
[5][11][12][13]. The real background was laid out by Jer-
packets may not be that bad, hundreds or thousand s of
ome Saltzer in his seminal works [14][15], but he was
nodes sending extra traffic at the same time are likely to fill
clearly ahead of his time.
the communication link causing denial-of-service. See
In addition, there are a number of less related exis ting
Figure 4.
and proposed approaches to address end-host mobility and
While these security problems can be solved to an ex-
multi-homing. In this section we give a brief overview of
tend with reachability checking [27], it is hard to com-
the other works that we know of, starting from well estab-
pletely solve the problems within the current architect ure.
lished approaches, and proceeding to more adventu rous
There is no way of checking that a node claiming to be a
proposals.
given address is actually the node that is indeed locate d atSCTP. Stream Control Transport Protocol (SCTP) is an head. The basic idea was fairly similar to SCTP, but the im-
IETF proposed standard transport protocol, which may plementation was placed on the network layer instea d of
eventually replace TCP and perhaps also UDP. In it, e ach the transport layer. The project did not properly address the
communication process is associated with several IP ad- involved security problems; instead, the security considera-
dresses. While the SCTP approach is sound as such, the tions lead to the definition of the address ownership prob-
proposed mobility extensions [16] are bound to be plag ued lem [12][22].
with the same security problems that Mobile IPv6 was re-
TCP Migrate. Snoeren and Balakrishnan [23] propos e an
cently hit (see below). Since SCTP does not include ex-
extension to the TCP protocol that allows the TCP end-
plicit end-point identifiers, solving the security issues in a
points to migrate from an address to another. Being struc-
scalable way may be even harder than with Mobile IPv6.
turally fairly similar to Huitema’s Multi-Homed TCP, the
Mobile IPv6. In Mobile IP, a static address is assigne d to approach solves the security issue through using unauthen-
each node. Mobile IP does not currently address end- host ticated Elliptic Curve (EC) Diffie-Hellman to genera te a
multi-homing, but there are informal proposals floa ting session key, separately for each TCP session. Howe ver,
around how a single mobile node could use multiple h ome they do not solve the double jump problem, and rely on
addresses and multiple care-of-addresses at the same time Dynamic DNS for initial contact.
[17]. Until recently, the largest unsolved problem in Mo-
bile IPv6 was achieving a scalable security solution. The 4. Architecture
currently proposed solution is based on the ideas of rel ying
on the routing infrastructure to check that a mobile nod e is
This section defines our Host Identifier based multi-hom-
reachable both at its claimed home address and its clai med
ing, mobility, and security architecture. In Section 4.1 , we
current address (care-of-address) (Return Routability, R R).
outline the overall architecture as a layered structure . In
This approach is not very secure, even though it is clai med
Section 4.2 we give the exact definitions for the requ ired
to be (almost) as secure as the current IPv4 internet. T hus,
terminology and components. As it turns out, just defi ning
there are discussions going on about better proposals, e.g.
the terminology in a new way naturally leads to lookin g at
hashing a public key and other information to the low o rder
the mobility and multi-homing situation from a new p oint
bits of an IPv6 address (Cryptographically Generated Ad-
of view. That, in turn, leads to the new architecture, and
dresses, CGA) [9][13].
provides the basic facilities for multi-homing and mob ility
Multi-homed TCP. Multi-Homed TCP [18] was a pro- trivially, as discussed in Section 4.3. The end of this sec-
posal by Christian Huitema to extend the TCP protoco l to tion discusses the fine points of the architec ture
handle end-host multi-homing and mobility. The basic idea (Section 4.4) as well as the resulting API (Section 4 .5),
was to replace the port numbers (TLIs) with a single 32 bit while in Section 5 we show how the new architecture also
Protocol Control Block Identifier, which becomes inde- solves the security problems currently hampering mob ility
pendent of the IP addresses used. On the security side , the and multihoming.
work did not really address the authentication or denial-of-
service problems; we believe that addressing them w ould 4.1. Layered structure
have led to an architecture more or less similar to the pre-
sented one.
It is easiest to describe our new architecture by compa ring
LIN6. LIN6 [19] is an approach somewhat similar to the it to the existing one. Figure 5 describes the current archi-
8+8 or GSE [20]. The basic idea is that each host has a 64 tecture. In that, processes are bound to transport layer sock-
bit globally unique identifier, called LIN6 ID, whic h is ets, and the sockets are identified by using IP addresses and
present in the IPv6 interface identifier portion of all IP ad- ports. More formally, the ports may be called Trans port
dresses used by the node. At this writing, the largest un- Layer Identifiers (TLI). As a result, this structure binds the
solved problems in LIN6 are related to the scalab ility processes to a specific topological location, thereby mak-
aspects in the security side. The address update mess ages ing process migration, end-host mobility, and multi-hom-
are protected with IPsec AH, thereby requiring some kind ing hard.
of global infrastructure in order to establish the required se- The new structure is described in Figure 6. In the new
curity associations. architecture, the transport layer sockets are no lo nger
named with IP addresses but with separate host identifiers.
Homeless Mobile IPv6. Homeless Mobile IPv6 [21] was
The host identity layer translates the host identifiers int o IP
an idea by Nikander et. al. of adding end-host multi-hom-
addresses. This is achieved by binding a Host Identifie r to
ing to Mobile IPv6, and at the same time getting ri d of
one or more IP addresses. This binding may be a tempo-
home addresses and much of the extension header over-
rally dynamic relationship, resulting in mobility supp ort,Process Bindings in the Bindings in the
current architecture new architecture
sockets
Process Socket Process Socket
Transport layer <IP addr, port> pairs
Internetworking layer IP addresses
End-point End-point HI
translation
dynamic
(ARP or ND) IP address
binding
Link layer addresses, e.g.
Link (network) layer
Ethernet MAC addresses
Location Location IP address
Figure 5: The current architecture Figure 7: Bindings
and simultaneously a one-to-many relationship, provi ding Packet structure. At the logical level, the new architec ture
multi-homing support. also requires changes to the packet structure. That is, e ach
packet must logically include the Host Identifiers of the
Bindings. Compared to the current architecture, the new
sender and recipient. However, whenever IPsec is used , the
architecture results in different bindings between the enti-
IPsec Security Associations can be used as a short-cu t for
ties and identifiers. This is illustrated in Figure 7. In the
Host Identifiers, resulting in packets that are simila r to
current architecture, IP addresses are used to denote both
those used today. This is illustrated in Figure 8, and fur ther
hosts (end-points) and topological locations. In the new ar-
discussed in Section 5.2
chitecture, these functions have been separated, and the
hosts (end-points) are denoted with Host Identifiers. Fur-
4.2. Components in detail
thermore, the binding between a Host Identifier and th e IP
address(es) is made dynamic. As we explain in Sectio n 5,
due to the cryptographic nature of the Host Identifiers, it is To make the architecture definition both definite and ro oted
fairly easy to secure the signalling messages needed to up- to reality, we next precisely define the relevant conc epts
date this binding. and terminology. The relationships between the conc epts
are also described pictorially in Figure 9.
Interface. A network interface. Usually a network inter-
face is a physical piece of equipment that a host use s to
Process connect to a network. For example, an Ethernet NI C is
sockets such a piece of equipment. However, an interface may also
be completely virtual.
Transport layer <HI, port> pairs
Each interface can be assigned one or more addres ses.
The address(es) depend on the location(s) of the interf ace.
Even though the actual assignment mechanism is irrele-
Host identity layer Host identifiers
Logical new packet structure
IP HbH RH HIP DO ESP Upper layer
translation
Internetworking layer IP addresses Packet structure in practise when ESP is used
translation IP HbH RH DO ESP Upper layer
(ARP or ND)
Link layer addresses, e.g. HbH = Hop-by-Hop Header
Link (network) layer
Ethernet MAC addresses RH = Routing Header
DO = Destination Option Header
Figure 6: The proposed new architecture Figure 8: The packet structuresvant, it is important to understand that the assignment is ei- Topological path. A path, through the internetwork, f rom
ther determined or at least heavily influenced by its one location to another location. We only consider th ose
topological point-of-attachment, i.e. location. paths separate that can be distinguished on a level above
the routing infrastructure. That is, parallel links and redun-
End-point. The logical end-point of communication, i .e. a
dant routes appearing within the routing function are not
participant in an end-to-end communication. [2][15][ 25].
considered separate topological paths. A topological path
In most cases end-points are identical to hosts, and it is
can be named with an address pair.
usually safe to think about hosts when reading the architec-
ture description. That is, typically a physical node hos ts a Multi-homed end-point. An end-point that is simultane-
single end-point. ously reachable at more than one location. Usually this is a
result of the end-point having multiple interfaces, each sep-
Process. A communicating process. Usually an end-p oint
arately connected to different locations in the network . In
hosts a number of processes. Sometimes an end-point h osts
the case of site multihoming, however, the whole site ap-
only one process, but even then the end-point and the proc-
pears at two (or more) topologically distinct locations . In
ess should be conceptually separated. Within an end-po int,
this latter case, the end-point may have just one interf ace,
the processes are distinguished with Transport Level Iden-
but that interface is considered to be simultaneousl y at
tifiers (TLI), e.g. TCP and UDP ports.
more than one location, and therefore assigned more than
Location. A topological point-of-attachment at the net- one address.
work. An end-point is said to be reachable at a certain loca-
Mobile end-point. An end-point that is serially reach able
tion if packets sent to that location are delivered to the end-
at more than one location. Usually this is a result of an end-
point. In [2] and [14] these are called (Network) Attach-
point changing the location of (one of) its interface(s). In a
ment Points.
sense, mobility is the dual of multi-homing in the s ame
Each location is assigned an address by the network . We
sense serialism is the dual of parallelism.
consider these addresses static, or at least very slo wly
changing. In the case a single network provides sev eral Host Identifier. A public key of a key pair, used to iden tify
global addresses for each host attached to the network (site an end-point. We use the term Host Identifier (HI) ins tead
multi-homing), we consider that particular network to rep- of the more accurate term end-point identifier, mainly be-
resent several topological locations, one location per ad- cause we rely quite heavily on the HLP/HIP proposal and
dress. want to be consistent with its terminology.
Each physical node is assumed to generate one or m ore
Address. A name of a location. In addition to acting as lo-
public key pairs. The public key of such a pair is use d to
cation names, addresses also function as (partial) rou ting
identify an end-point hosted on that node. For the purp oses
selectors. That is, the routers within the internetwork use
of this paper, it is safe to think that each host is uniq uely
the address (and possibly other data) in making the deci-
identified with a single key pair, and therefore is iden tical
sion where a packet is passed next.
to a single end-point. However, there are reasons (suc h as
anonymity, see [26]) to allow a host to represent itself as a
set of end-points, and to allow the end-points to move be-
Process
tween hosts; see [1].
*
are hosted by>
1 4.3. Mobility and multihoming
1 1
Host ID End-point
names>
It should be obvious by now that basic mobility and multi-
1
homing becomes trivial in the new architecture. That i s, to
has>
support mobility all that is needed is to make sure tha t the
* binding between (an interface belonging to) a Host ID and
Interface
IP address(es) is dynamic. Respectively, to support multi-
0..1 homing all that is required is to make the binding in to a
is at> one-to-many relationship. In practice, dynamism and mul-
* tiplicity are achieved with signalling, see Section 5.2.
1 1 2 *
Address Location Path To be more specific, in the presented architecture the
names>
Host Identifiers are used to identify the communica tion
end-points, and they have no permanent relationship with
Figure 9: The conceptual model, in UML
locations or IP addresses. IP addresses, on the other h and,are used to identify only the topological locations, not end-
Virtual interfaces
points. Thus, as a result, the actual addresses used in a
packet don’t matter so much as they do in the current archi-
tecture, since the end-points are not identified with th em.
All that is required is that the end-points are able to deter-
mine the addresses currently used by their active peers.
Furthermore, if the packets are integrity protected with Physical interfaces
e.g. ESP or AH, the recipient is always able to verify th at a
received packet was sent by the alleged peer no m atter
what the source and destination addresses are. Thus , by
binding IPsec Security Associations to Host Identifiers in-
stead of IP addresses, the destination address becomes pure
routing information, and the source address becomes al- Forwarding paths
most obsolete [24]. Only during connection setup, w hen
the hosts haven’t authenticated each other, does the so urce Figure 10: The virtual interface model
address pay substantial role. Once the peer hosts have se-
of the end-point, or it may be the location served b y a
cure bindings between the HIs and addresses, the so urce
packet forwarding agent. In the latter case, the packet for-
address is not needed any more by the hosts, and its only
warding agent is considered to act as a virtual interface for
function becomes to carry information about the topologi-
the end-point. The situation is illustrated in Figure 10.
cal path the packet has taken [24].
Packet forwarding agents. In the architecture, basic mo- 4.4. Architectural elements
bility support requires that the moving end-point sends sig-
nalling messages (location updates) to its peers. T hese
Now we are ready to define the functional component s of
inform the peer about the changes in the addresses th at it
our architecture. The basic components are the internet-
can use to reach the host. Thus, in the basic case exp licit
work, the communicating end-points, and the (tempor ary)
packet forwarding is not needed, since the hosts are ab le to
packet forwarding agents. Additionally, we need two exter-
send packets directly to each other. However, this le aves
nal services and four protocols. Firstly, there must b e a
two problems unaddressed. Firstly, there must be a mecha-
service and corresponding protocols that allow an end-
nism that allows an end-point to be contacted indepen dent
point to learn the current set of addresses that another end-
of its current location. Secondly, if two end-points mov e at
point has, i.e., an address discovery service. Secondl y, a
the same time, it is possible that the signalling mess ages
protocol is needed to allow end-points to inform their p eers
cross each other and never reach their intended destinat ion.
about changes in the addresses and status of their inter-
This is usually called the double-jump problem [18]. Intro-
faces. Finally, a protocol is needed for creating new pa cket
ducing packet forwarding agents allows us to solve t hese
forwarding agents, and to signal changes to them. The ar-
two problems. Thus, we define a packet forwarding agent
chitecture is described pictorially in Figure 11.
as a network node that forwards all packets sent to a g iven
IP address (virtual address) to another IP address (real ad- Internetwork. The internetwork is based on stateles s IP
dress). level routers just as today. No changes are needed in the
We now generalize the concept of packet forwar ding network itself. All the currently used IP routers will con-
agents and, at the same time, fold them into our architec- tinue to function without any changes. This allows the new
ture. As discussed before, a multi-homed host is consid ered
End-point
to be present at several locations at the same time. In func- Forwarding control protocol
t
p h
a
Ti
la
ao
hsc
nn
o
uk
da
se
a,l
,
t bi
ist
f
nl
e
es w
r
e
am
ten
o
s
s
t h
e
,
rt a
neot
v
c
sh
e
eesa
e
iat
v
tv
h
ee
pm
e
r a
p
ae
c
pala
k
acn
d e
k
cs
i t kef ef f
tt
e so
th
r
ra
s
fe w
ot
en
rnatt
w
r
th
I d
ae
P ti
o
rn
dah
g td
io
h
nads
e
ggt
r e fe
aoi
s
ns
gs rt we
e,a
s nt
ab
. h
t
rl
eO
de
c
e
aent
dn
n
o
t d h
a
b-r
de h
ee
d
oc
o
r
ce
st
e
oh
ti sv
ne i
se
s -r
.
Forwarding a
E
g
n
de -tn ot
-e n d
sig n Ia nlli ten rg
n
p er to
wto oc ro kl
uA pd dd ar te ess
protocol
sidered to represent a virtual interface of the end-po int,
and that the end-point is virtually present at the locatio n of Address discovery protocol
Peer end-point
the forwarding agent.
Address
Thus, we define that the location of an end-point is the directory
topological point through which the end-point is able to re-
Figure 11: The elements of the architecture
ceive packets. It may be the location of a physical inter facearchitecture to be taken into use gradually, as the h osts
adopt the new functionality. Node
End-points. The communicating end-points are hoste d in End-point End-point
network nodes.The end-points are able to communicat e in
ProcessProcess Process
two ways. Firstly, they may send plain IP packets just as to-
day. In this case, the IP addresses are used to name the tar- Transport layer
get and origin locations, and the end-point is suppose d to
Host Identity layer
stay at the same location long enough to receive rep lies.
Address selection policy
This form is suitable for fast low cost transactions, suc h as
DNS queries. Secondly, the end-points may run the H ost Network layer
Layer Protocol (HLP), thereby authenticating the H ost
Physical Multihomed Virtual
Identifiers of each other as explained in Section 5.2. This interface interface interface
allows the end-points to communicate with added secu rity,
mobility, and reliability. IP addressIP address Forwarding
IP address
Packet forwarding agents. The packet forwarding ag ents agent
are hosted within the internetwork; for example, in a typi-
IP address
cal case an access router would be willing to provide s uch
an function (see Section 5.3). They allow, in a contro lled Figure 12: The structure of an end-point
way, end-points to receive packets that are sent to an ad-
dress (virtual address) that the end-point does not curre ntly of IP addresses. Finally, the communicating proce sses
control but that the forwarding agent does. function as today. The only difference is that instead o f IP
addresses they use Host Identifiers. This is achieved in a
Address discovery. An initial contact between two end-
completely backward compatible way, where all well writ-
points requires that the initiating end-point learns at l east
ten (IPv6) applications will continue to function wit hout
one IP address of the other end-point. This discovery func-
recompilation. The basic idea is to reserve a large frac tion
tion is supposed to be implemented by a directory serv ice,
(actually half) of the IPv6 address space to represent host
such as the DNS. The details of such a service are bey ond
identifiers [8]. That is, the IPv6 compatible format w ould
the scope of this paper.
be that of an Host Identity Tag (HIT), which basically is the
End-to-end signalling. The updates in the end-point inter- result of applying a hash function on the Host Identifier.
face status must be signalled to the peer end-points. Th is is In an HIP aware host the DNS resolver library would re-
accomplished using the HIP Readdress Packets (REA) [7]. turn an HIT if one is available, and otherwise an IPv6 ad-
The REA packets are protected in the Host Identity Secu- dress. Transport protocols can then handle the HIT s or
rity Context; see Section 5.2 for details. IPv6 addresses transparently. In the case of HITs, the host
Forwarding control. The protocol to signal packet for- identity layer would then perform the appropriate conver-
warding is a function not defined in the HIP specificati ons, sion to both incoming and outgoing packets in a way th at is
and therefore we discuss the situation in Section 5.3. very similar to the so called host NAT [3].
4.5. Internal interfaces and APIs 5. Security
The conceptual structure of a node hosting end-poin ts is In the original TCP/IP architecture, a host’s identity is im-
depicted in Figure 12. The node has a number of interfa ces, plicitly authenticated by the routing infrastructure. Tha t is,
both physical and virtual. Within the host, the netw ork since the hosts are identified with IP addresses, and s ince
layer implementation takes care of routing, interface selec- IP addresses are the fundamental piece of data used in rout-
tion and other functions as today. The new host iden tity ing, the very definition of the internetwork assures tha t the
layer implements the new functionality. It is responsible for IP packets are indeed sent to the intended hosts. (See also
implementing the HLP/HIP end-to-end signalling proto col, [24].) In the new architecture, there is no implicit bin ding
and also the forwarding control and directory query and between the host identifiers and the routing infrastruct ure.
update protocols. Thus, the implicit authentication does not exist any m ore,
The transport layer implements transport protocols, e.g. and must be replaced with an explicit one. Additionally , we
TCP and UDP, like today. The only difference is that the must address the problems of address stealing and add ress
transport layer sockets are bound to Host Identifiers ins tead flooding that were described in Section 2.3.The address stealing and address flooding problems are Initiator Responder
not introduced with the end-point concept or the new host I1: <HITI, HITR or NULL>
identifiers. Instead, they originate from the dynamic bind-
ing between the hosts themselves and their IP addres ses. R1: <HITI, HITR, challenge>
Thus, they exist already in environments that use dyna mic
I2: <HITI, HITR, response, authentication>
IP address assignment: the address stealing and floo ding
problems are present even in plain vanilla Mobile IP. Fortu- R2: <HITI, HITR, authentication>
nately, introducing public key cryptography based host
Security Context established
identifiers that are public keys makes it easier to add ress
these problems. In this section we look at the situa tion
more closely, starting from the nature of the new identifi-
ers, and continuing to the properties of the new signal ling
protocols and new functions.
5.1. Host Identifiers Figure 13: A typical HIP session
Most importantly, the HLP/HIP protocol performs mu-
The cryptographic nature of the Host Identifiers is the se-
tual end-to-end authentication. This is accomplished w ith a
curity cornerstone of the new architecture. Each end-p oint
four-way handshake, consisting of messages I1, R1, I2 and
generates exactly one public key pair. The public key o f the
R2. After exchanging the initial HLP messages, both com-
key pair functions as the Host Identifier. The end-poi nt is
municating hosts know that at the other end-point there in-
supposed to keep the corresponding private key secret and
deed is an entity that possesses the private key that
not to disclose it to anybody. (Note, however, that e.g. due
corresponds to its Host Identifier. Additionally, the ex-
to privacy reasons a single user may want to be represe nted
change creates a pair of IPSEC Encapsulated Security Pay-
by several end-points at the network.)
load (ESP) security associations, one in each direction. The
The use of the public key as the name makes it poss ible
hosts are supposed to use the ESP security association s to
to directly check that a party is actually entitled to use the
protect the integrity of the packets flowing between th em;
name. A simple public key authentication protocol, suc h as
optionally, ESP can also be used to encrypt the packets.
the one included in the HIP exchange, is sufficient for that.
More formally, the initial HLP/HIP message excha nge
Compared to solutions where names and cryptogra phic
creates an Host Identity Security Context that contains the
keys are separate, the key-oriented naming does not req uire
public keys of the communicating end-points, the ESP se-
any external infrastructure to authenticate identity. In o ther
curity associations, and implicit knowledge that the pu blic
words, no explicit Public Key Infrastructure is nee ded.
keys were authenticated and present when the context was
Since the identity is represented by the public key it self,
created. The flow of a typical HIP session is illustrate d in
and since any proper public key authentication prot ocol
Figure 13. Note that in the first message (I1) the re-
can be used to check that a party indeed possesses the pri-
sponder’s HIT may be NULL, indicating opportunistic
vate key corresponding to a public key, a proper authentica-
mode of operation.
tion protocol suffices to verify that the peer indee d is
In addition to protecting the network layer integrit y of
entitled to the name.
the payload traffic, the Host Identity Security Contex t is
This property of being able to verify the identity of any
used to secure the signalling messages exchanged betw een
party without any explicit external infrastructure is the very
the end-points. For example, once the initial messages are
cornerstone of our architecture. It allows the architectu re to
exchanged and the security context is in place, the end-
scale naturally, without requiring extra administrative over-
points inform their peers about the interfaces they have and
head.
the current IP addresses assigned to the interfaces. In ef-
fect, this shares information about the current multi-hom-
5.2. Host Layer Protocol (HLP)
ing situation of the end-points. Each end-point has
complete freedom to select which interfaces to announc e to
The Host Layer Protocol/Host Identity Payload (HLP/H IP)
the peer.
is the end-point to end-point signalling protocol in our ar-
To the peer, it is immaterial whether the announced in-
chitecture. The details of the current protocol proposa l are
terfaces are real or virtual. All it needs to know is to m ake
available as internet drafts [1][7][8] and beyond the sc ope
sure that the end-point is indeed reachable through the
of this paper. However, the security properties of the proto-
claimed IP addresses. The reachability needs to be
col are significant and explained briefly.
checked, or otherwise the mechanism may be used to
exchange
Initial
ESP protected messageslaunch a number of complicated Denial-of-Service atta cks. checking that the requestor is indeed the same end-p oint
At the IETF mobile-ip Working Group, the reachab ility that the address was assigned to.That is, the forwarding re-
verification requirement has been extensively studied, and quest needs to be signed by the end-point, and the ac cess
recently named Return Routability (RR). router simply checks that the signature matches with the
Thus, initially all announced addresses should be con- address owner’s public key.
sidered as unverified. Using an RR protocol the peers can Unfortunately the simple signature check does not com-
verify the reachability of the addresses given. Since the re is pletely protect against packet flooding denial-of-serv ice,
already a pair of ESP Security Associations, the simp lest and therefore a Return Routability challenge-respons e is
way of implementing RR is to send an ESP protected chal- still needed.
lenge packet to the given address, and making sure tha t an
Arbitrary node as Forwarding Agent. To support pa cket
ESP protected response is received. Once a challenge-re-
forwarding at an arbitrary location, e.g. for Local Mob ility
sponse pair has been exchanged for a given address, the ad-
Management (LMM), one possibility is to devise vir tual
dress can be marked functional.
access routers. A virtual access router would be a ro uter
that serves addresses for forwarding purposes only. Tha t is,
5.3. Packet forwarding
any node in the network could ask for an address from it,
and if given an address, ask packets sent to that addres s to
From the security point of view, packet forwarding cre ates be forwarded to another address. Thus, an end-point need-
new security vulnerabilities. Firstly, packet forwar ding ing a virtual interface at a location served by such a vir tual
could allow packets going to a legitimate host to be di- access router would contact the virtual access router f or a
verted either to an attacker or to a bogus location. For ex- new address. The access router assigns an unused add ress
ample, if an access router acts as a packet forwarder, this to the end-point, and the end-point requests that pac kets
kind of attack could be used to create Man-in-the-Mid dle, sent to that address are forwarded another address, the end-
masquerade, or Denial-of-Service situations against any points current real address. The access router then ch ecks
host behind the access router. Secondly, packet forwar ding that the end-point is really reachable at the forward destina-
could be used to divert existing packet streams to a host tion, and given so, starts forwarding packets.
that is a target of a Distributed Denial-of-Service att ack,
see e.g. [11][27]. Thus, before starting to forward pack ets, 5.4. Privacy
the forwarding agent must make sure that there is nob ody
else but the requestor who wants to receive packets sen t to
Using public keys as primary identifiers is clearly a poten-
the intercepted address, and that the requestor itself is able
tial source of privacy problems. If each user had just a sin-
to receive packets sent to the new destination.
gle public key and that key is repeatedly used by the u ser,
To generalize, we want to have an architecture whe re a
the very nature of public key cryptography leads to a situa-
mobile host may ask for a forwarding agent to be estab-
tion where it is fairly easy to link together all the transac-
lished (almost) anywhere in the network, and may estab lish
tions made by the user. In the case of the HLP/ HIP
a temporary virtual interface with the help of such a for-
architecture, the situation does not need to be that bad.
warding agent. However, from the security point of vie w, it
Since a single computer may host several end-points and
is easier to ask a current or former Access Router to act as a
therefore have several Host Identifiers, it is easy for a user
packet forwarder than to request a generic node to pro vide
to have several public keys instead of just one. One pu blic
packet forwarding service. We next look at these two situa-
key can be used as a more permanent identifier, allow ing
tions.
others to contact the user, while other keys can be com-
Access Router as Forwarding Agent. If an end-p oint pletely temporary and periodically replaced with new o nes.
wants to use its current or recent Access Router as a pa cket A temporary Host Identifier needs to be valid only as long
forwarder, the case is security wise slightly easier than the as there are active connections associated with it.
generic case. As we discussed earlier, in our architec ture
we assume that the network assigns addresses (or at l east 5.5. Security summary
routing prefixes) to the interfaces. Now, under these ar-
rangements, the Access Router could easily know to w hom From the discussion so far it should be clear that address-
it has assigned (or who has claimed ownership over) an ad- ing the mobility and multi-homing related security issu es is
dress and for how long. Thus, if the end-point later, w hile much easier with the presence of cryptographic Host Iden-
the address assignment is still valid, requests the Ac cess tifiers than without them. Basically, we have two secu rity
Router to start forwarding packets sent to that address , the issues that we have to address: firstly, we have to take care
Access Router can protect against address stealing jus t by of basic identity authentication and related issues, and sec-Table 1: Explanations for Figure 15
Daemon
application
dT Initiator generates I1
1
dT Packet transit delay
2
Socket Layer
dT Responder generates R2t
3
HLP kernel
TCP/UDP module dT 4 Packet transit delay
dT Initiator processes R1, solves the puzzle,
IP + IPsec 5
and generates I2
dT Packet transit delay
Figure 14: Implementation architecture 6
dT Responder processes I2 and generates R2
ondly we must take care of packet forwarding security . As 7
an added benefit, we are also able to enhance privacy. dT 8 Packet transit delay
Since we are using public keys as the names for end- dT Initiator processes R2
9
points, identity authentication is trivial. All that is requ ired
is a good authentication and key agreement protocol ; no work before performing the computationally expen sive
certificates or external entities are needed. Basic multi- public key operations. Thus, if the responder is under a re-
homing and mobility brings in the requirement of chec king source exhausting DoS attack, it can partially mitigate the
each new IP address for reachability, to make sure tha t the effects of the attack by requiring legitimate initiator s to
host currently is reachable at the IP addresses it claim s to make some work that allows it to cheaply distinquish legit-
be at. imate initiators from DoS packets. The idea is that if the at-
Packet forwarding brings forth a couple of new secu rity tacker would start making the work, it would slow d own
issues, and the node receiving a forwarding request m ust the attack since the attacker would need to spend a h uge
take care of these. Firstly, the forwarding agent either m ust number of CPU cycles to pass the puzzle test.
know that the intercepted address really has been assig ned Figure 15 illustrates the protocol run and the meas ured
to the requesting node and that the assignment is still v alid, times; see also Table 1. In our current implementation the
or it must know that the address is currently completely un- responder always generates R1 in response to a received I1.
assigned, and that it therefore can be securely assigne d to It is possible to move R1 generation into precomputa tion
the requesting node. step, thereby reducing dT by a large factor.
3
The second issue with packet forwarding is to m ake The measurements were made between two 800 M Hz
sure that the requestor is reachable at the address where the Pentium III PCs, running over a lightly loaded 100 M bps
forwarded packets should be sent to. The easy way to take switched Ethernet. The results are depicted in Tables 2 and
care of that is to use a challenge-response protocol to ch eck 3. The figures consist of averages over 5 test runs ± one
that the requestor is reachable at the target address.
Initiator Responder
6. Implementation status dT1
dT2
I1
We have implemented HLP/HIP for NetBSD 1.6. The de-
dT3
sign consists of the daemon and loadable kernel mod ule;
R1
see Figure 14. The kernel module registers hooks at th e IP
dT4
and socket layers. The core protocol state-machine and ac-
tual packet handling are implemented in the kernel w hile
dT5
the multi-threaded daemon takes care of cryptographic cal-
culations. Communication between the daemon and ke rnel
is asynchronous.
To get an idea about performance, we measured the time dT6
taken by the four-way handshake, with different pu zzle I2
challenge values K [1]. The K is sent by the responde r to dT7
R2
the initiator, and a larger K value forces the initiato r to dT8
make more work before the responder is ready to ac cept
dT9
the connection. The idea is that the responder can ea sily
check that the initiator has indeed performed the requ ired
Figure 15: The times measuredTable 2: Average message processing time in ms how to solve the involved security problems in a way that
does not require any additional infrastructure. Furtherm ore,
K dT dT dT dT dT
1 3 5 7 9 we have briefly touched the backward compatibility and
0 1.4±0.3 115±9 300±12 176±10 26±3 API issues.
7 1.4±0.3 121±12 503±99 177±10 34±6 To sum up, the HLP/HIP approach provides new end-
point names that are public keys. For convenience, the pub-
8 1.1±0.0 117±8 573±250 185±16 35±5
lic keys are usually represented by tags derived by taki ng a
9 1.4±0.3 134±6 2300±1370 158±3 30±7 cryptographic hash function over the key. The tags are u sed
10 1.2±0.0 129±5 1810±470 178±14 45±5 instead of IP addresses when representing the communicat-
ing parties to the applications. Along with the new nam es, a
standard deviation. While this gives good estimates for the new layer is established between the network and trans port
other time periods, the numbers for dT are slightly mis- layers. This layer takes care of establishing secure connec-
5
leading. That is, solving the puzzle is an indetermin istic tion between any two end-points, translating the outg oing
operation, requiring a random number of trials. Get ting end-point names into IP addresses and determining the
good numbers for dT would require a large number of tri- names from the security associations on incoming pack ets,
5
als, in the order of thousands of runs. and securely modifying the translation state to reflect the
As can be seen from the results, the total protocol run current multi-homing and mobility status. Addition ally,
takes about 600 ms. About 500 ms of this is spent on the since the communication context is bound to the end-p oint
cryptographic operations. The introduction of a low pu zzle identifiers instead of IP addresses, the architecture also
factor K increases the average time by 200...300 ms; with makes it easier to support several routing realms and to es-
K=10 the average protocol run takes still less than 3 sec- tablish state with any node in the network. On the o ther
onds while requiring almost always over 1 second of C PU hand, the security context is not, as such, suitable as a ge-
time for solving the puzzle. Our earlier tests indicate that neric application level end-to-end security solution. To
when K > 10 the time required starts to grow fast, reac hing achieve application level semantics, the end-points n eed
100 seconds with K = 15. additional assurances about their peers.
While the base HIP/HLP implementation seems sim ple From the architectural point of view, in our architec ture
enough, cleaning up and handling all the performance opti- it is sufficient to have just one mechanism to solve the
mizations on the TCP side requires extensive modifica tion reachability, double-jump, and local signalling optimiza-
to the kernel. Basically, it looks like many of the TCP algo- tion problems. From the security point of view, no sepa rate
rithms must be modified to understand that the data may mechanism is needed to secure mobility related signal ling
take different paths through the network, thereby compli- since the security inherent to the architecture suffices. In a
cating the statistics gathering and prediction algorith ms. companion paper [6] we have shown how the architec ture
On the other hand, we expect that the SCTP implemen tors can be extended to address the network mobility problem.
have already faced these problems, and our intention is to
analyse the recently released kernel based SCTP imple- Acknowledgements
mentation to see how the problems are addressed there.
This work would have been impossible without the pio-
7. Conclusions neering work performed by a number of senior researc hers
and engineers at the IETF, IRTF, and elsewhere. We are es-
pecially indebted to the insights of J. Noel Chiappa, and
The focus on this paper has been on modifying the TC P/IP
their application in the form of the HLP/HIP proposal s by
architecture to include a new cryptographic name sp ace
Robert Moskowitz. The insights made by the IRTF N ame
and a new protocol layer. We have provided one poss ible
Space Research Group have allowed us to further refine our
design, heavily based on the HLP/HIP approach. We h ave
thinking.
also shown how the HLP/HIP approach can be easily ex-
We want to thank our colleagues Catharina Cando lin,
tended to handle end-host multi-homing and mobility, and
Miika Komu, Yki Kortesniemi, Glenn Morrow, Te emu
Rinta-Aho, Göran Schultz, Vesa Torvinen, Zoltan Tura nyi,
Table 3: Average packet delay in milliseconds
and especially Juha Heinänen, Erik Nordmark, and J arno
dT dT dT dT Rajahalme, for their constructive comments on various ver-
2 4 6 8
0.12 0.32 0.34 0.13 sions of this paper. We also want to thank Petri Jokela and
Tony Jokikyyny for their contributions to the actual text.References 317. Also available as RFC 1498, University of Sout hern
California, Information Sciences Institute, Marina Del Rey,
[1] R. Moskowitz, Host Identity Payload Architecture, wo rk in
Calif., August 1993.
progress, Internet Draft (expired), February 2001, http://
[15] J. H. Saltzer, David Reed and David Clark, “End-To-End Ar-
homebase.htt-consult.com/draft-moskowitz-
guments in System Design”, ACM Transactions on Compu-
hip-arch-02.txt
ter Systems, Vol. 2, No. 4, November 1984.
[2] J. N. Chiappa, Endpoints and Endpoint Names: A Prop osed
[16] R. Stewart et al., “Stream Control Transmission Pro tocol
Enhancement to the Internet Architecture, unpublished note
(SCTP) Dynamic Address Reconfiguration”, Internet D raft
available at http://users.exis.net/~jnc/tech/
draft-ietf-tsvwg-addip-sctp-06.txt, work in progress, I ETF,
endpoints.txt
September 2002.
[3] S. Bellovin, EIDs, IPsec and HostNAT, a presentation gi ve at
[17] N. Montavont, T. Noel, and M. Kassi-Lahlou, “MIPv6 for
41st IETF in Los Angeles, California. Steven Bello vin,
Multiple Interfaces”, work in progress, Internet Draft draft-
March 1998, http://www.research.att.com/~smb/
montavont-mobileip-mmi-00.txt, July 2002.
talks/hostnat.pdf
[18] C. Huitema, Multi-homed TCP, work in progress, Int ernet
[4] E. Lear, What's In A Name: Report from the Name S pace
Draft (expired), May, 1995, http://www.chem.uc la.
Research Group, work in progress, Internet Draft draft-irtf-
edu/~beichuan/etcp/huitema-TCP.txt
nsrg-report-02.txt, Internet Research Task Force, Febr uary
[19] F. Teraoka et. al., LIN6: A Solution to Mobility and Multi-
2002.
Homing in IPv6, work in progress, Internet Draft draft-ter-
[5] E. Nordmark, MIPv6: from hindsight to foresight?, wo rk in
aoka-ipng-lin6-01.txt, 16 August 2001.
progress, Internet Draft draft-nordmark-mobileip-mipv6-
[20] M. Crawford et. al., Separating Identifiers and Locato rs in
hindsight-00.txt, IETF November 14, 2001.
Addresses: An Analysis of the GSE Proposal for IPv6, w ork
[6] P. Nikander and J. Arkko, “Delegation of Signalling Rights,”
in progress, Internet Draft (expired), draft-ietf-ipngwg-esd-
a position paper presented at the 10th Annual Worksho p on
analysis-05.txt, October 1999, http://www.ie tf.
Security Protocols, Cambridge, April 17–19, 2002.
org/proceedings/99nov/I-D/draft-ietf-
[7] R. Moskowitz, Host Identity Payload and Protocol, wo rk in
ipngwg-esd-analysis-05.txt
progress, Internet Draft draft-moskowitz-hip-05.txt, Novem-
[21] P. Nikander, C. Candolin, and J. Lundberg, “From add ress
ber 2001, http://homebase.htt-consult.com/
orientation to host orientation,” in Réseaux et syst èmes
draft-moskowitz-hip-05.txt
répartis, calculateurs parallèles, ISSN 1260-3198, Sp ecial
[8] Robert Moskowitz, Host Identity Protocol Implementa tion,
Issue on Mobility and Internet, Volume 13, Nr:o 2, He rmes
work in progress, Internet Draft (expired) draft-moskowitz-
Science Publications, Paris, France, December 2001.
hip-impl-01.txt, Feb 2001, http://homebase.htt-
[22] P. Nikander, “An Address Ownership Problem in IP v6,”
consult.com/draft-moskowitz-hip-impl-01.txt
work in progress, Internet-Draft (expired), February 2 001,
[9] G. Montenegro and C. Castelluccia, SUVC Identifiers and
http://www.tml.hut.fi/~pnr/publications/
Addresses, work in progress, Internet Draft draft-montene-
draft-nikander-ipng-address-ownership-
gro-sucv-02.txt, November 2001.
00.txt
[10] P. Bhagwat, C. Perkins and S. Tripathi, “Network Layer Mo-
[23] A. C. Snoeren and H. Balakrishnan, “An End-to-End Ap-
bility: an Architecture and Survey”, IEEE Personal Commu-
proach to Host Mobility”, Proc. of the Sixth Annual ACM/
nications Magazine, June 1996.
IEEE International Conference on Mobile Computing and
[11] A. Mankin et. al., Threat Models introduced by Mobile IPv6
Networking, August 2000.
and Requirements for Security in Mobile IPv6, wor k in
[24] C. Candolin and P. Nikander, “IPv6 Source Addresses Con-
progress, Internet Draft draft-ietf-mobileip-mipv6-scrty-
sidered Harmful,” in Hanne Riis Nielson (ed.), Proceed ings
reqts-02.txt, November 2001.
of NordSec 2001, Sixth Nordic Workshop on Secure IT Sys-
[12] P. Nikander, Denial-of-Service, Address Ownership, and
tems, November 1-2, Lyngby, Denmark, Technical Re port
Early Authentication in the IPv6 World, presented at Cam-
IMM-TR-2001-14, pp. 54-68, Technical University of Den-
bridge Security Protocols Workshop 2001, April 25 -27,
mark, November 2001.
2001, Cambridge University. To be published in the work-
[25] B. Carpenter, “Architectural Principles of the Internet”, RFC
shop proceedings at the LNCS series.
1958, IETF June 1996.
[13] G. O’Shea and M. Roe, Child-proof Authentication for
[26] R. Moskowitz, The Need for a new Internet Namespace, in-
MIPv6 (CAM), ACM Computer Communications Rev iew,
formal note in circulation, Robert Moskowitz, Novem ber
Volume 31, Number 2, ISSN # 0146-4833, ACM April 2001.
1999.
[14] J. H. Saltzer, “On The Naming and Binding of Network Des-
[27] T. Aura and J. Arkko, “MIPv6 BU Attacks and Defen ces”,
tinations,” in Local Computer Networks, edited b y P.
work in progress, Internet Draft draft-aura-mipv6-bu-at-
Ravasio et al., North Holland, Amsterdam, 1982, pp. 311-
tacks-00.txt, November 2001.