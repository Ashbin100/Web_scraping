Key Regression: Enabling Efficient Key Distribution for Secure Distributed
Storage
KevinFu SenyKamara TadayoshiKohno
U. Mass.Amherst JohnsHopkinsUniversity U.C. San Diego
Abstract mediately re-encrypt all pre-existing content since the
evictedmembercouldhavealreadycachedthatcontent.
The Plutus file system introduced the notion of key ThecontentpublishercanusetheCDN todistribute
rotationasameanstoderiveasequenceoftemporally- the encrypted content, but without the aid of a trusted
related keys from the most recent key. In this paper server,thecontentpublishermustdistributeallthecryp-
we show that, despite naturalintuition to the contrary, tographickeystomembersdirectly.Topreventthepub-
key rotation schemes cannotgenerically be used to key lisher’sconnectionfrombecomingabottleneck,thePlu-
other cryptographicobjects; in fact, keying an encryp- tusfilesystem[32]introducedanewcryptographicob-
tionschemewiththeoutputofakeyrotationschemecan ject called a key rotationscheme. Plutus uses the sym-
yield a composite system that is insecure. To address metric key K to encrypt content during the i-th time
i
these shortcomings, we introduce a new cryptographic period,e.g., beforethei-theviction. Ifa user becomes
object called a key regression scheme, and we propose amemberduringthei-thtimeperiod,thenPlutusgives
threeconstructionsthatareprovablysecureunderstan- that member the i-th key K . From [32], the critical
i
dardcryptographicassumptions. We implementkeyre- properties of a key rotation scheme are that given the
gression in a secure file system and empirically show i-th key K it is (1) easy to compute the keys K for
i j
that key regression can significantly reduce the band- all previous time periods j < i, but (2) computation-
width requirements of a content publisher under real- ally infeasible to compute the keys K for future time
l
isticworkloadsusinglazyrevocation. Ourexperiments periods l > i. Property (1) enables the content pub-
also serve as the first empirical evaluation of either a lishertotransferonlyasinglesmallkeyK tonewmem-
i
keyrotationorkeyregressionscheme. berswishingtoaccessallcurrentandpastcontent,rather
thanthepotentiallylargesetofkeys{K ,K ,...,K };
Keywords: Key regression, key rotation, lazy revoca- 1 2 i
thispropertyreducesthebandwidthrequirementsonthe
tion,keydistribution,contentdistributionnetwork,hash
contentpublisher. Property(2)isintendedto preventa
chain,securityproofs.
memberevictedduringthei-thtimeperiodfromaccess-
ing (learningthe contents of) contentencryptedduring
thel-thtimeperiod,l >i.
1 Introduction
1.1 Overviewofcontributions
Contentdistribution networks(CDNs) such as Aka-
mai [3], BitTorrent [14], and Coral [20] enable con-
In this work we uncovera designflaw with the def-
tentpublisherswithlow-bandwidthconnectionstomake
inition of a key rotation scheme. To address the defi-
single-writer, many-reader content available at high
ciencies with key rotation, we introduce a new cryp-
throughput. When a CDN is untrusted and the content
tographic object called a key regression scheme. We
publishercannotrely on the networkto enforce proper
present RSA-based, SHA1-based, and AES-based key
accesscontrol,thecontentpublishercanachieveaccess
regressionschemes. Weimplementandanalyzetheper-
control by encrypting the content and distributing the
formanceofkeyregressioninthecontextofasecurefile
cryptographic keys to legitimate users [22, 25, 30, 32,
system. The followingparagraphssummarizeourcon-
39, 42]. Under the lazy revocation model for access
tributionsinmoredetail.
control [22, 32], following the eviction of a user from
the set of members, the content publisher will encrypt Negativeresultsonkeyrotation.Webeginbypresent-
future content with a new cryptographic key and will, ingadesignflawwiththedefinitionofkeyrotation: for
upon request, distribute that new key to all remaining any realistic key rotation scheme, even thougha mem-
andfuturemembers.Thecontentpublisherdoesnotim- ber evicted during the i-th time period cannot predict(cid:9) (cid:10) (cid:11) (cid:17)
(cid:0) (cid:1)(cid:2) (cid:3)
(cid:9) (cid:10) (cid:11) (cid:12)
(cid:9) (cid:10) (cid:13) (cid:12)
(cid:5)
(cid:14) (cid:12)
(cid:6) (cid:7) (cid:3) (cid:6)
(cid:4)
(cid:8)
(cid:0)
(cid:2)
(cid:1)(cid:2)
(cid:0)
(cid:3)
(cid:1)(cid:2) (cid:3)
(cid:9) (cid:10) (cid:11) (cid:15)
(cid:9) (cid:10) (cid:13) (cid:15)
(cid:5)
(cid:14) (cid:15)
(cid:6) (cid:7) (cid:3) (cid:6)
(cid:4)
(cid:8)
(cid:0)
(cid:2)
(cid:1)(cid:2)
(cid:0)
(cid:3)
(cid:1)(cid:2) (cid:3)
(cid:9) (cid:10) (cid:11) (cid:16)
(cid:9) (cid:10) (cid:13) (cid:16)
(cid:5)
(cid:14) (cid:16)
(cid:6) (cid:7) (cid:3) (cid:6) (cid:8)
Figure 1. Key regression overview; stp and stm respectively represent the i-th publisher and
i i
memberstates.
(exceptwithnegligibleprobability)subsequentkeysK, rectly, the content publisher would give the member a
l
l > i, the evicted member can distinguish subsequent memberstatestm .Fromthememberstate,themember
i
keys K from random. The lack of pseudorandomness couldderivetheencryptionkeyK forthei-thtimepe-
l i
followsfromthefactthatifanevictedmemberisgiven riod,aswellasallpreviousmemberstatesstm ,j < i.
j
therealkeyK,thenbydefinition(i.e.,byproperty(1)) By transitivity, a member given the i-th member state
l
the evicted member can recover the real key K ; but could also derive all previous keys K . By separating
i j
givena randomkey instead of K , the evictedmember the member states from the keys, we can build key re-
l
willwithhighprobabilityrecoverakeyK0 6= K . The gression schemes where the keys K , l > i, are pseu-
i i l
differencebetweenunpredictabilityandlackofpseudo- dorandomto evicted memberspossessing only the i-th
randomness can have severe consequences in practice. memberstate stm . Intuitively,the trick thatwe use in
i
To illustrate the seriousness of thisdesign flaw, we de- ourconstructionstomakethekeysK pseudorandomis
l
scribe a key rotation scheme and a symmetric encryp- toensurethatgivenbothK andstm ,itisstillcompu-
l i
tionschemethatindividuallymeettheirdesiredsecurity tationallyinfeasiblefortheevictedmembertocompute
properties (property (2) for key rotation and IND-CPA the l-thmemberstate stm . Viewedanotherway, there
l
privacy for symmetric encryption [7]), but when com- isnopathfromK tostm inFigure1andvice-versa.
l i
bined(e.g.,whenacontentpublisherusesthekeysfrom
Our constructions. We refer to our three preferred
the key rotation scheme to key the symmetric encryp-
key regression schemes as KR-RSA, KR-SHA1, and
tionscheme)resultinasystemthatfailstoprovideeven
KR-AES. Rather than rely solely on potentially error-
aweakformofprivacy.1
proneheuristicmethodsforanalyzingthesecurityofour
Fixing key rotation with key regression. While the constructions, we prove under reasonable assumptions
abovecounterexampledoesnot imply thatall systems that all three are secure key regression schemes. Our
employing key rotation will fail just as drastically, it security proofs use the reduction-based provable secu-
doesmotivatefindingakeyrotation-likeobjectthatstill rityapproachpioneeredbyGoldwasserandMicali[27]
achievesproperty(1) (or somethingsimilar) but (prop- andliftedtotheconcretesettingbyBellare,Kilian,and
erty(20))producesfuturekeysthatarepseudorandomto Rogaway [8]. For KR-RSA, our proof is based on the
evictedmembers(asopposedtojustunpredictable).As- assumptionthatRSAisone-way. Fortheproofofboth
sumingthenewobjectachievespseudorandomness,one KR-RSAandKR-SHA1,weassumethatSHA1isaran-
could use it as a black box to key other cryptographic dom oracle [9]. For the proof of KR-AES, we assume
constructswithoutworryingaboutthe resulting system thatAESisasecurepseudorandompermutation[8,35].
failingasdrasticallyastheonedescribedabove. Akey
Implementationandevaluation.Weintegratedkeyre-
regressionschemeissuchakeyrotation-likeobject.
gression into a secure file system to measure the per-
Todescribekeyregression,wemustenactaparadigm formancecharacteristicsof key regressionin a real ap-
shift:ratherthangiveanewmemberthei-thkeyK idi- plication. Our measurementsshow that key regression
can significantlyreducethe bandwidthrequirementsof
1Westressthatthenovelty hereisinidentifying thedesignflaw a publisher distributing decryption keys to members.
withkeyrotation,notinpresentingaspecificcounterexample.Indeed,
On a simulated cable modem, a publisher using key
thecounterexamplefollowsnaturallyfromourobservationthatakey
rotationschemedoesnotproducepseudorandomkeys. regression can distribute 1000 keys to 181 clients/secwhereaswithoutkeyregressionthecablemodemlimits 1.2 Relatedwork
the publisher to 20 clients/sec. The significant gain in
throughputconservationcomesatnoobservablecostto The key rotation scheme in Plutus [32] inspired our
clientlatency,eventhoughkeyregressionrequiresmore research in key regression. Bellare and Yee [10] in-
client-side computation. Our measurements show that troduce the notion of a forward-secure pseudorandom
key regression actually reduces client latency in cases bitgenerator(FSPRG).Onecanroughlyviewforward-
of highly dynamic group membership. Our study rep- secure pseudorandom bit generation as the mirror im-
resentsthefirstempiricalmeasurementsofeitherakey ageofkeyregression.Whereasakeyregressionscheme
regressionorkeyrotationscheme. isdesignedtopreventanevictedmemberinpossession
Contrarytoconventionalwisdom,onourtestbedwe ofstm i fromdistinguishingsubsequentencryptionkeys
find thatKR-AEScan performmorethanfourtimesas K l, l > i, from random, a FSPRG is designed to pre-
many unwinds/sec than KR-SHA1. Our measurements vent an adversary who learns the state of the FSPRG
can assist developers in selecting the most appropriate atsomepointintimefromdistinguishingpreviousout-
keyregressionschemeforparticularapplications. putsoftheFSPRG fromrandom. Inoursecurityproof
forKR-AES,wemaketherelationshipbetweenkeyre-
Applications. Key regression benefits publishers of
gressionandFSPRGsconcretebyfirstprovingthatone
popular content who have limited bandwidth to their
can build a secure key regressionscheme from any se-
trusted servers, or who may not always be online, but
cure FSPRG by essentially running the FSPRG back-
who can use an untrusted CDN to distribute encrypted
wards. Abdalla and Bellare formally analyze methods
content at high throughput. Our experimental results
forrekeyingsymmetricencryptionschemes[1],andone
show that a publisher using key regression on a low-
oftheirconstructionsisaFSPRG.
bandwidth connection can serve more clients than the
As pointed out by Boneh et al. [13], one possible
strawmanapproachofhavingthepublisherdistributeall
mechanism for distributing updated content encryption
keys{K ,K ,...,K }directlytomembers.Moreover,
1 2 i keys for a secure file system is to use a broadcast en-
ourexperimentalresultssuggestthatkeyregressioncan
cryption scheme [17, 18, 19, 40]. Indeed, one of the
besignificantlybetterthanthestrawmanapproachwhen
mainchallengesfacedbyanencryptedfilesystemisthe
i is large, as might be the case if the publisher has a
distributionoftheencryptionkeystotheremaining(not
highmembershipturnoverrate. Suchapublishermight
evicted)setofusers,andbroadcastencryptionprovides
be anindividual,a startup, ora cooperativewith popu-
an ideal solution. We note, however, that key distribu-
lar contentbutwith few networkresources. The possi-
tion is orthogonalto the specific problemaddressedby
bilities for such content range from blogs and amateur
key regression; a key regression scheme is a key gen-
press to operating systems and variousforms of multi-
eration algorithm as opposed to a key distribution al-
media.Toelaborateononesuchformofcontent,operat-
gorithm. Key regression simply assumes the existence
ingsystems,MandrivaLinuxcurrentlyusestheBitTor-
ofasecuredistributionchannel,ofwhichbroadcasten-
rentCDNtodistributeitslatestLinuxdistributionstoits
cryptionis one possible instantiation. Self-healingkey
MandrivaClubmembers[37].Mandrivacontrolsaccess
distribution with revocation [48] protocols are resilient
to these distributionsbyonlyreleasingthe .torrent
evenwhenbroadcastsarelostonthenetwork. Onecan
files to its members. Using key regressionand encryp-
viewkeyregressionashavingtheself-healingproperty
tion for access control, Mandriva could exercise finer-
inperpetuity.
grained access control over its distributions, allowing
Inconcurrentwork,andalsomotivatedbythekeyro-
membersthroughtimeperioditoaccessallversionsof
tationschemeinPlutus[32],Backes,Cachin,andOprea
theoperatingsystemincludingpatches,minorrevisions
formalize the notion of key-updating for lazy revoca-
and new applications added through time period i, but
tion schemes [6] and consider the composition of key-
no additionsto the operatingsystem after the i-th time
updating for lazy revocation schemes with other cryp-
period.2
tographicobjects[5]. Thenotionofa key-updatingfor
Versions. Thisisanextendedabstract. Thefullversion lazy revocationschemein [6] is essentially identicalto
of thispaperappearson the IACRePrintArchive[24]. our notion of a key regression scheme. Using our par-
PartofthisworkalsoappearsasChapter4of[22]. lance,in[6]theyalsoproposeseveralwaysofbuilding
keyregressionschemes;oneoftheirproposalsisidenti-
caltoourKR-PRGconstruction(Construction7.3),and
2WhileMandriva maywishtoexercise access control over non-
security-criticalpatchesandupgrades,Mandrivawouldlikelywishto anotherproposalisanaturalextensionofourconstruc-
allowallMandrivausers,includingevictedMandrivaClubmembers, tionKR-RSA-RO(Construction10.1). Althoughwere-
accesstoallsecurity-criticalpatches.Toenablesuchaccess,Mandriva mark on the existence of a tree-based key regression
could encrypt all security-critical patches with the key for the time
scheme in Section5, [6] take the idea of a tree-based
periodtowhichthepatchisfirstapplicable,orMandrivacouldsimply
notencryptsecurity-criticalpatches. keyregressionschemefurtherbyformallydefiningandproving the security of a slightly different tree-based thedesiredsecuritypropertyofakeyrotationschemeis
construction. In [6] the authors also observe that one that, given only K and pk, it should be computation-
i
can use the keys output by a key regression scheme allyinfeasibleforanevictedmember(theadversary)to
as the randomness source for the setup algorithm of a computeK , for anyl > i. The Plutusconstructionin
l
(possiblydifferent)keyregressionscheme;thisobserva- Figure2 has this propertyunderthe RSA one-wayness
tionenablesthecompositionofmultiplekeyregression assumption(definedinSection10),andtheconstruction
schemes. inFigure3hasthispropertyifonereplacesSHA1with
arandomoracle[9].
2 Notation Theproblem.InSection1weobservedthatthel-thkey
output by a key rotation scheme cannot be pseudoran-
dom,i.e.,willbedistinguishablefromarandomstring,
Ifx andy arestrings, then|x| denotesthelengthof
to an ex-memberin possession of the keyK for some
xin bitsandxky denotestheirconcatenation. Ifxand i
previoustimeperiodi < l.3 Weconsiderthefollowing
yaretwovariables,weusex←ytodenotetheassign-
exampleto emphasizehowthis lackof pseudorandom-
mentofthevalueofy tox. IfY isaset,wedenotethe
nessmightimpactthesecurityofarealsystemthatcom-
selectionofarandomelementinY anditsassignmentto
xasx ←$ Y. Iff isadeterministic(resp.,randomized) binesakeyrotationschemeandasymmetricencryption
schemeasablackbox.
function,thenx ← f(y)(resp.,x ←$ f(y))denotesthe
For our example, we first present a key rotation
processofrunningf oninputyandassigningtheresult
schemeKOandanencryptionschemeSE thatindividu-
tox. Weusethespecialsymbol⊥todenoteanerror.
allysatisfytheirrespectivesecuritygoals(unpredictabil-
We use AES (M)to denotetheprocessofrunning
K ityforthekeyrotationschemeandIND-CPAprivacy[7]
the AES block cipher with key K on input block M.
forthesymmetricencryptionscheme).TobuildKO,we
We use SHA1(M) to denote the process of running
start with a secure key rotation scheme KO; KO out-
the SHA1 hash function on input M. An RSA [43]
putskeystwiceaslongasKO. TheKO windingalgo-
key generator for some security parameter k is a ran-
rithmwndkeyinvokesKO’swindingalgorithmtoobtain
domized algorithm K that returns a triple (N,e,d).
rsa akeyK;wndkeythenreturnsKkKasitskey.Oninput
Sinceouranalysesareintheconcretesetting,we write
a keyKkK,unwndkeyinvokesKO’sunwindingalgo-
(N,e,d) ←$ K rsa ratherthan (N,e,d) ←$ K rsa(k). The rithmwithinputK toobtainakeyK0; unwndkeythen
modulusN istheproductoftwodistinctoddprimesp,q returnsK0kK0 asitskey. Ifthekeysoutputbywndkey
suchthat2k−1 ≤N <2k;theencryptionexponente∈
are unpredictableto evicted members, then so must be
Z∗
ϕ(N)
andthedecryptionexponentd∈Z∗
ϕ(N)
aresuch
thekeysoutputbywndkey. TobuildSE,westartwitha
thated≡1modϕ(N),whereϕ(N)=(p−1)(q−1). securesymmetricencryptionschemeSE;SE useskeys
Section10describeswhatitmeansforanRSAkeygen- that are twice as long as SE. The SE encryption and
eratortobeone-way. decryptionalgorithms take the key K, split it into two
halves K = L kL , and run the respective algorithms
1 2
3 Problems withkey rotation ofSE withkeyL 1⊕L 2. IfthekeyKisrandom,thenthe
key L ⊕L is randomand SE runs the SE encryption
1 2
algorithm with a uniformly selected random key. This
A key rotation scheme [32] consists of three al-
meansthatSE satisfies thestandardIND-CPA security
gorithms: setup, wndkey, and unwndkey. Figure2
goalifSE does.
shows the original (RSA-based) Plutus key rotation
Despite the individualsecurity of bothKO and SE,
scheme [32]. Following Plutus, and as Naor, Shen-
when the keys output by KO are used to key SE, SE
hav,andWoolalsoobserve[41],onefamiliarwithhash
will always run SE with the all-zero key; i.e., the con-
chains[34] andS/KEY[29]mightdesignthekeyrota-
tent publisher will encrypt all content under the same
tion scheme in Figure3. Such a scheme is more effi-
constant key. An adversary can thus trivially compro-
cientthantheschemeinFigure2,butislimitedbecause
mise the privacy of all encrypted data, including data
itcanonlyproduceMW(“maxwind”)keys,whereMW
is a parameter chosen by the implementor or at con- 3Technically, theremaybepathological examples wherethel-th
figuration time. A content publisher runs the setup al-
keyispseudorandomtoamembergiventhei-thkey,buttheseexam-
plesseemtohaveotherproblemsoftheirown.Forexample,consider
gorithm to initialize a key rotation scheme; the result
akeyrotationschemeliketheoneinFigure3,butwhereSHA1isre-
is public information pk for all users and a secret sk
1
placedwithafunctionmappingallinputstosomeconstantstringC,
for the content publisher. The content publisher in- e.g.,theall0key.NowsetMW=2,i=1,andl=2.Inthispatho-
vokeswndkey(sk )toobtainthekeyK andanewsecret
logicalexampleK2isclearlyrandomtotheevictedmember,meaning
i i (betterthan)pseudorandom. Butthis construction stillclearly lacks
sk i+1. AnyuserinpossessionofK i,i > 1,andpkcan ourdesiredpseudorandomness property sincethekeyK1 isalways
invoke unwndkey(K i,pk) to obtain K i−1. Informally, theconstantstringC.Alg.setup Alg. wndkey(sk=hK,N,di)
Alg. unwndkey(K,pk=hN,ei)
(N,e,d)←$ K ; K ←$ Z∗ K0 ←Kd modN
pk←hN,ei;r ssa k←hK,NN
,di sk0 ←hK0,N,di
ReturnKe modN
Return(pk,sk)
Return(K,sk0
)
Figure2.ThePlutuskeyrotationscheme;K isanRSAkeygenerator.
rsa
Alg.setup
K
MW
←$ {0,1}160; pk←ε Alg.wndkey(sk=hi,K 1,...,K MWi) Alg. unwndkey(K,pk)
Fori=MWdownto2do Ifi>MWreturn(⊥,sk) //ignorepk
K i−1 ←SHA1(K i) sk0 ←hi+1,K 1,...,K MWi K0 ←SHA1(K)
sk←h1,K 1,...,K MWi Return(K i,sk0 ) ReturnK0
Return(pk,sk)
Figure3.Ahashchain-basedkeyrotationscheme.
encryptedduringtimeperiodsl > iafterbeingevicted. rowsinFigure1suggest,givenstm ,amembercaneffi-
i
Although the construction of KO and SE may seem cientlycomputeallpreviousmemberstatesandthekeys
somewhatcontrived(thoughwehopelesscontrivedthan K ,...,K . Although it would be possible for an ex-
1 i
some other possible counter examples), this example membertodistinguishfuturememberstatesstm ,l>i,
l
shows that combining a key rotation scheme and an from random (the ex-memberwould extend our obser-
encryptionschememayhaveundesirableconsequences vationonthelackofpseudorandomnessinkeyrotation
and, therefore,thatitis notwise to use(evena secure) schemes),becausethereisnoefficientpathbetweenthe
keyrotationschemeasablackboxtodirectlykeyother future keys K and the ex-member’slast member state
l
cryptographicobjects. stm , it is possible for a key regressionscheme to pro-
i
duce future keys K that are pseudorandom (indistin-
l
4 KeyRegression guishable from random). We present some such con-
structionsinSection5.
The negativeresult in Section3 motivates our quest
On an alternative: Use key rotation carefully.
to find a new cryptographicobject, similar to key rota-
Figure1 might suggest an alternative approachfor fix-
tion, but for which the keys generated at time periods
ing the problems with key rotation. Instead of using
l > i are pseudorandom to any adversary evicted at
thekeysK fromakeyrotationschemetodirectlykey
i
timei. Hereweformalizesuchanobject: akeyregres-
other cryptographic objects, use a function of K , like
i
sion scheme. Following the reduction-based practice-
SHA1(K ), instead. If one modelsSHA1 as a random
i
oriented provable security approach [8, 27], our for-
oracle and if the key rotation scheme produces unpre-
malisms involve carefully defining the syntax, correct-
dictable future keys K , then it might seem reasonable
l
nessrequirements,andsecuritygoalofakeyregression
to concludethatan ex-membergivenK shouldnotbe
i
scheme. Theseformalismsenableusto, inSections8–
abletodistinguishfuturevaluesSHA1(K ),l>i,from
l
10,provethatourpreferredconstructionsaresecureun-
random. While this reasoning may be sound for some
derreasonableassumptions.Wedesireprovablesecurity
specific key rotation schemes (this reasoning actually
over solely ad hoc analyses since, under ad hoc meth-
serves as the basis for our derivative of the construc-
ods alone, one can never be completelyconvincedthat
tion in Figure2, KR-RSA in Construction5.3) we dis-
a cryptographic construction is secure even if one as-
likethisapproachforseveralreasons. First, webelieve
sumes that the underlying components (e.g., block ci-
thatitisunreasonabletoassumethateveryengineerwill
phers,hashfunctions,RSA)aresecure.
knowtoorremembertousethehashfunction. Further,
Overviewofkeyregression. Figure1givesanabstract eveniftheengineerknewtohashthekeys,theengineer
overviewofakeyregressionscheme. Thecontentpub- mightnotrealizethatsimplycomputingSHA1(K )may
l
lisher has content publisher states stp from which it not work with all key rotation schemes, which means
i
derives future publisher and member states. When us- thattheengineercannotuseakeyrotationschemeasa
ing a key regression scheme, instead of giving a new blackbox. Forexample,whileSHA1(K )wouldwork
l
member the i-th key K , the content publisher would fortheschemeinFigure2,itwouldcauseproblemsfor
i
givethememberthei-thmemberstatestm . Asthear- the scheme in Figure3. We choose to consider a new
icryptographicobject,keyregression,becausewedesire tion may use multiple random oracles, but since one
a cryptographic object that is not as prone to acciden- can always obtain multiple random oracles from a sin-
talmisuse. Additionally,byfocusingattentiononanew gle randomoracle [9], our definitions assume just one.
cryptographic object, we allow ourselves greater flexi- It is straightforward to modify our syntax, correctness
bilityinhowweconstructobjectsthatmeetourrequire- requirements,and(subsequent)securitydefinitiontoac-
ments. Forexample,oneofourpreferredconstructions commodate key regression schemes for which the ran-
(KR-AES, Construction5.2) does not use a hash func- dom oracle depends on the output of setup. We stress
tion and is therefore secure in the standard model in- thatMWisacorrectnessparameterofKR,notasecu-
steadoftherandomoraclemodel;seealsoKR-FSPRG rityparameter,meaningthateventhoughthecorrectness
(Construction6.1)andKR-PRG(Construction7.3). criteria musthold forMW invocationsof wind, the se-
curitygoalmaynot.Onecanalsofurthergeneralizeour
4.1 Syntaxandcorrectnessrequirements definition and allow unwind and keyder to be random-
ized, though we do not envision such constructions in
practice.
Syntax.Hereweformallydefinethesyntaxofakeyre-
gression scheme KR = (setup,wind,unwind,keyder).
4.2 Securitygoal
Let H be a random oracle; for notational consistency,
all fouralgorithmsare givenaccess to the randomora-
For security, we desire thatif a member(adversary)
cle, though the algorithmsfor some constructionsmay
isevictedduringthei-thtimeperiod,thentheadversary
not use the random oracle in their computations. Via
stp ←$ setupH,therandomizedsetupalgorithmreturns willnotbeabletodistinguishthekeysderivedfromany
subsequentmemberstatestm ,l>i,fromrandomlyse-
a publisher state. Via (stp0,stm) ←$ windH(stp), the l
lectedkeys.Definition4.1capturesthisgoalasfollows.
randomized winding algorithm takes a publisher state
Weallowtheadversarytoobtainasmanymemberstates
stp and returns a pair of publisher and member states
asitwishes(viaaWindOoracle).TheWindOoraclere-
or the error code (⊥,⊥). Via stm0 ← unwindH(stm)
turnsonlyamemberstateratherthanbothamemberand
the deterministic unwindingalgorithm takes a member
publisherstate. Oncetheadversaryisevicted,itsgoalis
statestmandreturnsamemberstateortheerrorcode⊥.
tobreakthepseudorandomnessofsubsequentlyderived
Via K ← keyderH(stm) the deterministic key deriva-
keys. Tomodelthis, weallowtheadversaryto querya
tion algorithm takes a member state stm and returns a
keyderivationoracleKeyderO. Thekeyderivationora-
key K ∈ DK, where DK is the derived key space for
clewilleitherreturnrealderivedkeys(viainternalcalls
KR. LetMW∈{1,2,...}∪{∞}denotethemaximum
to wind and keyder) or random keys. The adversary’s
numberofderivedkeysthatKRisdesignedtoproduce.
goalistoguesswhethertheKeyderOoracle’sresponses
We do not define the behavior of the algorithms when
arerealderivedkeysorrandomkeys.
inputtheerrorcode⊥.
Correctness.Ourfirstcorrectnesscriterionforakeyre- Definition4.1 [Securityforkeyregressionschemes.]
gressionschemeisthatthefirstMWtimesthatwindis Let KR = (setup,wind,unwind,keyder) be a key re-
invoked,italwaysoutputsvalidmemberstates, i.e.,the gression scheme. Let A be an adversary. Consider
outputs are never ⊥. Our second correctness require- theexperimentsExp Kkr R-b ,A, b ∈ {0,1},andtheoracles
ment ensures that if stm
i
is the i-th member state out- WindOandKeyderO bbelow.Theadversaryrunsintwo
put by wind, and if i > 1, then from stm , one can stages,memberandnon-member,andreturnsabit.
i
derive all previous member states stm j, 0 < j < i. ExperimentExpkr-b
Formally, let stp ←$ setup and, for i = 1,2,..., KR,A
0 PickrandomoracleH
let (stp i,stm i) ←$ windH(stp i−1). For each i ∈ i←0; stp←$ setupH
{1,2,...,MW}, we require that stm 6= ⊥ and that,
fori≥2,unwindH(stm i)=stm i−1. i bst
0
←← $$ AA KW ei yn dd eO rO,H b,( Hm (e nm onb -e mr)
ember,st)
Remarks. Although we allow wind to be randomized, Returnb0
the wind algorithms in all of our constructions are de-
OracleWindO
terministic. We allow wind to return (⊥,⊥) since we
i←i+1; Ifi>MWthenreturn⊥
onlyrequirethatwindreturnnon-errorstatesforitsfirst
(stp,stm)←$ windH(stp)
MW invocations. We use the pair (⊥,⊥), rather than
Returnstm
simply ⊥, to denotean error fromwind since doingso
OracleKeyderO
makes our pseudocode cleaner. We allow unwind to b
return ⊥ since the behavior of unwind may be unde- i←i+1; Ifi>MWthenreturn⊥
fined when input the first member state. A construc- (stp,stm)←$ windH(stp)Ifb=1thenK ←keyderH(stm) KR-RSA. Table1summarizessomeoftheirmainprop-
Ifb=0thenK ←$ DK erties. KR-SHA1 is a derivative of the key rotation
ReturnK scheme in Figure3 and KR-RSA is a derivative of the
Plutus key rotation scheme in Figure2. The primary
TheKR-advantageofAinbreakingthesecurityofKR differences between the new key regression schemes
isdefinedas KR-SHA1 and KR-RSA and the original key rotation
schemesaretheadditionofthenew,SHA1-basedkeyder
Advkr
KR,A algorithmsandtheadjustingofterminology(e.g.,mem-
= Pr
Expkr-1
=1 −Pr
Expkr-0
=1 .
berstatesinthesekeyregressionschemescorrespondto
h KR,A i h KR,A i keys in the originalkey rotation schemes). KR-AES is
new but is based on one of Bellare and Yee’s forward-
Under the concrete security approach [8], we say that
securepseudorandombitgenerators(FSPRGs)[10].
KR isKR-secure if foranyadversaryAattackingKR
with resources (running time, size of code, number of
oraclequeries)limited to “practical”amounts, the KR- 5.1 TheKR-SHA1construction
advantageofAis“small.”
Construction5.1 details ourKR-SHA1 construction.
Remarks. Since the publisher is in charge of winding IntheconstructionofKR-SHA1,weprependthestring
and is not supposed to invoke the winding algorithm 08 to the input to SHA1 in keyder to ensure that the
more than the prescribed maximum number of times, inputs to SHA1 never collide between the keyder and
MW, the WindO and KeyderO oracles in our security unwind algorithms; note that the stm variable always
definitiononlyrespondtothefirstMWqueriesfromthe denotesa160-bitstring.
adversary. Alternatively, we could remove the condi-
tionalcheckfori > MWinthepseudocodeforWindO
Construction5.1 [KR-SHA1.] The key regression
and KeyderO and instead ask that the underlyingwind
scheme KR-SHA1 = (setup,wind,unwind,keyder) is
algorithm behave appropriately if invoked more than
definedas follows. MW is a positive integer and a pa-
MW times, e.g., by maintaining the counter internally.
rameteroftheconstruction.
Sinceakeyregressionschemewillhavemultiplerecip-
ients of member keys, we must consider coalitions of Alg. setup
adversaries;i.e.,cantwoormoreadversariescolludeto stm ←$ {0,1}160
MW
obtainadditionalinformation? Becauseoftheproperty
Fori=MWdownto2do
that given any member state one can derive all previ-
ousmember states, multiple colludingadversariescan-
stm i−1 ←unwind(stm i)
stp←h1,stm ,...,stm i
notobtainmoreinformationthanasingleadversarywho 1 MW
Returnstp
makesthemostWindOandKeyderOoraclequeries. In
Alg. wind(stp)
addition to desiring that future derived keys be pseu-
Ifstp=⊥thenreturn(⊥,⊥)
dorandom to evicted members, we desire that all the
Parsestpashi,stm ,...,stm i
derived keys be pseudorandom to adversaries that are 1 MW
Ifi>MWreturn(⊥,⊥)
nevermembers.Ifakeyregressionschemeissecureun-
stp0 ←hi+1,stm ,...,stm i
der Definition4.1, then the key regressionscheme also Return(stp0,stm )1 MW
i
satisfies this weaker security goal since one can view
Alg. unwind(stm)
adversaries that are never members as adversaries that
stm0 ←SHA1(stm); Returnstm0
makezeroWindOoraclequeries. Unlikewithkeyrota-
Alg. keyder(stm)
tion schemes (Section3), the pseudorandomnessof fu-
K ←SHA1(08kstm); ReturnK
ture keys means that a content publisher can use the
keys output by a secure key regression scheme to key
The derived key space for the scheme KR-SHA1 is
other cryptographic objects like symmetric encryption DK={0,1}160.
schemes [7] and MACs [8]; as [1, 10] do for rekeying
schemesandFSPRGs, [5] makesthisreasoningformal
InpracticeweassumethattheMWmightbesomerea-
forkeyregressionschemes.
sonablevalue like 220. We give a proofof security for
KR-SHA1 in Section9. In our proof of security we
5 Ourpreferred constructions
viewthe applicationofSHA1(·) in unwindasoneran-
domoracleandtheapplicationofSHA1(08k·)inkeyder
We are now in a position to describe our three pre- as another random oracle. The proof of security for
ferredkeyregressionschemes,KR-SHA1,KR-AESand KR-SHA1isthusintherandomoraclemodel[9].KR-SHA1 KR-AES KR-RSA
MW=∞ No No Yes
Randomoracles Yes No Yes
setupcost MWSHA1ops MWAESops 1RSAkeygeneration
windcost nocrypto nocrypto 1RSAdecryption
unwindcost 1SHA1op 1AESop 1RSAencryption
keydercost 1SHA1op 1AESop 1SHA1op
Table1.Ourpreferredconstructions. Therearewaysofimplementingtheseconstructionswith
different wind costs. The “random oracles” line refers to whether our security proof is in the
randomoraclemodelornot.
5.2 TheKR-AESconstruction schemethatwecallKR-PRG.KR-AESisthenaninstan-
tiationofKR-PRGwith a PRG that, oninputa 128-bit
Our next preferred construction, KR-AES, uses the stringstm,outputsAES stm(0128)kAES stm(1128). Since
AESblockcipherandisprovablysecureinthestandard the constructions KR-FSPRG and KR-PRG have mul-
model, meaning without random oracles but assuming tiple possible instantiations, we consider them to be of
thatAESisasecurepseudorandompermutation[8,35]. independentinterest. DetailsinSections6through8.
Remark. On can also view KR-SHA1 as an instan-
Construction5.2 [KR-AES.] The key regression
tiation of KR-PRG with a PRG (in the random ora-
schemeKR-AES=(setup,wind,unwind,keyder)isde-
cle model) that, on input a string stm ∈ {0,1}160,
finedasfollows. MWisapositiveintegerandaparam-
outputs SHA1(stm)kSHA1(08kstm). In Section9 we
eteroftheconstruction.
prove KR-SHA1 directly, rather than by instantiating
Alg. setup KR-PRG,inordertoobtaintighterbounds.
stm ←$ {0,1}128
MW
Fori=MWdownto2do 5.3 TheKR-RSAconstruction
stm i−1 ←unwind(stm i)
stp←h1,stm ,...,stm i
1 MW Our final preferred construction, KR-RSA derives
Returnstp
fromthekeyrotationschemeinFigure2. KR-RSAdif-
Alg. wind(stp)
fers from KR-SHA1 and KR-AES in that MW = ∞,
Ifstp=⊥thenreturn(⊥,⊥)
meaningthatacontentprovidercaninvoketheKR-RSA
Parsestpashi,stm ,...,stm i
1 MW windingalgorithmanunboundednumberoftimeswith-
Ifi>MWreturn(⊥,⊥)
out violating the correctness properties of key regres-
stp0 ←hi+1,stm ,...,stm i
1 MW sion schemes. This ability is particularly useful be-
Return(stp0,stm )
i cause it means that an implementor need not fix MW
Alg. unwind(stm)
tosome finitevalueatimplementationorconfiguration
stm0 ←AES (0128); Returnstm0
stm time.Nevertheless,oursecurityproofinSection10sug-
Alg. keyder(stm)
gestthatinpracticeacontentpublishershouldlimitthe
K ←AES (1128); ReturnK
stm number of times it invokes wind to some reasonable
value. AsanothermotivationforKR-RSA,wenotethat
ThederivedkeyspacefortheschemeKR-AESisDK=
{0,1}128. if MW is large, then maintaining the publisher states
for KR-SHA1 and KR-AES may require a non-trivial
As with KR-SHA1, we assume that the MW might be amountofspace(ifthepublisherstorestheentirevector
some reasonable value like 220. We prove the secu- stp)ortime(ifthepublisherre-derivesstpduringevery
rityofKR-AESinstages. Wefirstshowhowtobuilda windoperation).
secure key regressionscheme fromany forward-secure
pseudorandombitgenerator(FSPRG)[10];wecallour Construction5.3 [KR-RSA.] The key regression
constructionKR-FSPRG. WethenrecalloneofBellare schemeKR-RSA=(setup,wind,unwind,keyder)isde-
andYee’s[10]methods(FSPRG-PRG)forbuildingse- finedasfollows. LetK beanRSA keygeneratorfor
rsa
cure FSPRGs from standard pseudorandombit genera- some security parameter k and let m: Z 2k → {0,1}k
tors(PRGs)[10,11,51]. InstantiatingKR-FSPRGwith denotethestandardbig-endianencodingoftheintegers
FSPRG-PRGyieldsasecurePRG-basedkeyregression inZ 2k tok-bitstrings.Alg. setup SHA1, particularlybecausethecontentpublisheristhe
(N,e,d)←$ K ; S ←$ Z∗ ; stp←hN,e,d,Si entity responsible for determining the inputs to SHA1
rsa N
Returnstp and, under our model, the content publisher would not
Alg. wind(stp) wish to intentionally compromise the pseudorandom-
ParsestpashN,e,d,Si; S0 ←Sd modN nessofitskeys. Alternatively,onecouldreplacetheuse
stp0 ←hN,e,d,S0i; stm←hN,e,Si of SHA1 in our constructions with another hash func-
Return(stp0,stm) tion,perhapsahashfunctionthatbehaveslikearandom
Alg. unwind(stm) oracle assuming that the underlyingcompressionfunc-
ParsestmashN,e,Si tionisarandomoracle[15].
S0 ←Se modN ; stm0 ←hN,e,S0i
Returnstm0
6 Keyregression from FSPRGs
Alg. keyder(stm)
ParsestmashN,e,Si; K ←SHA1(m(S))
ReturnK
Toward proving the security of KR-AES, we first
ThederivedkeyspaceforKR-RSAisDK = {0,1}160. show how to construct a key regression scheme
Inourexperiments,we setk = 1024,andK returns from a forward-secure pseudorandom bit generator
rsa
e=3astheRSApublicexponent. (FSPRG) [10]. We call our construction KR-FSPRG;
see Construction6.1. Since there are multiple pos-
TheproofofsecurityforKR-RSAisinSection10. The
sible ways to instantiate KR-FSPRG, we believe that
proofisintherandomoraclemodelandassumesthatthe
KR-FSPRGmaybeofindependentinterest. Moreover,
RSA keygeneratorisone-way;wedefineone-wayness
our result in this section suggests that future work in
inSection10.
forward-securepseudorandombitgeneratorscouldhave
usefulapplicationstokeyregressionschemes.
5.4 Discussion
6.1 Forward-securepseudorandomgenerators
Alternateconstructions. BesidesKR-SHA1,KR-AES,
and KR-RSA, there are numerous possible ways to
build key regression schemes, some of which are sim- Bellare and Yee [10] define stateful pseudorandom
ple variants of the more general constructions that we bitgeneratorsanddescribewhatit meansfora stateful
present in subsequent sections (KR-FSPRG, KR-PRG, pseudorandombitgeneratortobeforward-secure. Intu-
KR-RO,andKR-RSA-RO). Usingadvancedtree-based itively a stateful PRG is forward-secure if even adver-
schemes[4,6,36,38], apublishercouldgiveaccessto sariesthataregiventhegenerator’scurrentstatecannot
anycontiguoussequenceofkeysusingonlya logarith- distinguishpreviousoutputsfromrandom.
mic numberof nodesfrom a key tree. We do not con-
sider keytrees here because one of ourprimarydesign Syntax. A stateful PRG consists of two algorithms:
goals is to minimize the size of the member states that SBG = (seed,next). The randomizedsetup algorithm
thecontentpublishermusttransmittomembers.Forin- returnsaninitialstate;wewritethisasstg←$ seed. The
stance,itisdesirabletohaveconstant-sizedmetadatain deterministic next step algorithm takes a state as input
filesystems. andreturnsa newstate andanoutputfromOutSp ,
SBG
or the pair (⊥,⊥); we write this as (stg0,K) ←
OntheuseofSHA1. Wecompletedthebulkofourre-
next(stg). We require that the set OutSp is effi-
searchpriortoWang,Yin,andYu[49]showinghowto SBG
findcollisionsinSHA1fasterthanbruteforce. There-
cientlysamplable.MaxLen
SBG
∈{1,2,...}∪{∞}de-
notesthemaximumnumberofoutputblocksthatSBG
sultofWang,Yin,andYuraisesthequestionofwhether
isdesignedtoproducefromacorrectness(notsecurity)
oneshouldcontinuetouseSHA1inrealconstructions,
perspective.
includingKR-SHA1andKR-RSA. Thisconcerniswell
justified,particularlybecauseotherresearchers[31,33] Correctness. The correctness requirement for state-
have shown how to extend certain types of collision- ful PRGs is as follows: let stg ←$ seed and, for
0
finding attacks against hash functions to break cryp- i = 1,2,...,let(stg ,K )←$ next(stg ). Werequire
tosystemsthat,atfirstglance,appeartodependonlyon i i i−1
aweakerpropertyoftheunderlyinghashfunction(like
thatfori≤MaxLen SBG,(stg i,K i)6=(⊥,⊥).
second-preimage resistance) and therefore initially ap- Security. LetSBG = (seed,next)beastatefulbitgen-
peartobeimmunetocollision-findingattacks. Still,we erator.LetAbeanadversary.Considertheexperiments
currently suspect that our constructions will resist im-
Expfsprg-b,
b ∈ {0,1},andtheoraclesNextO below.
SBG,A b
mediate extensions to collision-finding attacks against Theadversaryrunsintwostages: findandguess.ExperimentExp Sfs Bpr Gg ,- Ab OracleNextO
b
Return(stp0,stg i)
stg←$ seed (stg,K)←next(stg) Alg. unwind(stm)
(stm0,K)←next(stm); Returnstm0
st←$ ANextOb(find) Ifb=0then
b0 ←$ A(guess,stg,st) K ←$ OutSp SBG Alg (s. tk me 0y ,d Ker )(s ←tm n) ext(stm); ReturnK
Returnb0 ReturnK
The derived key space for KR-FSPRG is DK =
TheFSPRG-advantageofAinbreakingthesecurityof
OutSp .
SBG isdefinedas SBG
Advfsprg Inorderforsetupandwindtobe“efficient,”weassume
SBG,A that MW has some “reasonable” value like 220; in the
= Pr Expfsprg-1 =1 −Pr Expfsprg-0 =1 . asymptoticsetting we wouldrequirethatMW be poly-
h SBG,A i h SBG,A i
nomialinsomesecurityparameter.
Undertheconcretesecurityapproach,theschemeSBG Security. The theorem below states that if SBG
issaidtobeFSPRG-secureiftheFSPRG-advantageof is a secure forward-secure pseudorandom bit gen-
alladversariesAusingreasonableresourcesis“small.” erator (i.e., is FSPRG-secure), then the resulting
key regression scheme KR-FSPRG built from SBG
6.2 AnFSPRG-basedkeyregressionscheme via Construction6.1 will be secure (i.e., KR-secure).
Specifically, Theorem6.2 says that given an adversary
WedefineKR-FSPRGinConstruction6.1below. At A against KR-FSPRG, one can construct an adversary
ahighlevel,onecanviewKR-FSPRG’ssetupalgorithm B against SBG such that B uses reasonable resources
as running the FSPRG SBG backward, meaning setup (ifAdoesandifMW issmall)andEquation(1)in the
runsseedandtheoutputofseedbecomesKR-FSPRG’s theoremstatementholds;qistheminimumofMWand
MW-th memberstate. From the MW-th memberstate, the maximum number of wind and key derivation ora-
setup invokesnext toobtainthe (MW−1)-stmember clequeriesthatAmakes. Thesepropertiesimplysecu-
state; setup continuesin this manner untilderiving the rityforKR-FSPRGsince,ifSBG isFSPRG-secureand
1-st memberstate. The setup algorithmthen outputsa if A uses reasonable resources, then Advfsprg and q
SBG,B
contentpublisherstatestpconsistingofanindexi,ini- must both be small, which means that Advkr , the
KR,A
tially 1, and the MW member states. The wind algo- advantageofAinattackingKR-FSPRG,mustbesmall
rithm,oninputapublisherstatestpwithindexi≤MW,
aswell.
outputsthei-thmemberstateinthevectorandoutputsa
revisedpublisherstatestp0 withindexi+1. Oninputa
Theorem6.2 IfSBG isFSPRG-secure,thenKR built
memberstatestm,thewindandkeyderalgorithmsboth
from SBG via KR-FSPRG (Construction6.1) is KR-
invokenextonstmtoobtainapair(stm0,K);windthen
secure.Concretely,givenanadversaryAattackingKR,
outputs the revised member state stm0 whereas keyder
we can construct an adversary B attacking SBG such
outputsthekeyK.
that
Construction6.1 [KR-FSPRG.] Given a stateful Advkr ≤(q+1)·Advfsprg (1)
KR,A SBG,B
generator SBG = (seed,next), we can con-
struct a key regression scheme KR-FSPRG = whereqistheminimumofMWandthemaximumnum-
(setup,wind,unwind,keyder) as follows. MW ≤ ber of wind and key derivation oracle queries that A
MaxLen isapositiveintegerandaparameterofthe makes.BmakesuptoMWqueriestoitsoracleanduses
SBG
construction. withina smallconstantfactorofthe otherresourcesof
Aplusthetimetorunthesetupalgorithm.
Alg. setup
stg ←$ seed Intuitively, Theorem6.2 follows from the fact that
MW
Fori=MWdownto2do KR-FSPRG runs SBG backward, which means that if
(stg i−1,K i−1)←next(stg i) anadversaryAagainstKR-FSPRGinpossessionofthe
stp←h1,stg ,...,stg i first i member states can distinguish a key K , l > i,
1 MW l
Returnstp fromrandom,thenanadversaryB againstSBG inpos-
Alg. wind(stp) session of the (MW −i)-th state output of next could
Ifstp=⊥thenreturn(⊥,⊥) distinguish the (MW − l)-th key output of next from
Parsestpashi,stg ,...,stg i random.TheactualproofinvolvesBguessingthenum-
1 MW
Ifi>MWreturn(⊥,⊥) berofWindOoraclequeriesthatAwillmake. Thefull
stp0 ←hi+1,stg ,...,stg i proofisin[24].
1 MW7 Keyregression from standard PRGs and we allow the trivial case that q = 0. Lemma7.2
statesthatifGisasecurePRG,thenthestatefulbitgen-
We proceedbyshowinghowto buildsecurekeyre- erator FSPRG-PRG built from G via Construction7.1
gression schemes from standard (not forward-secure) will also be secure. Specifically, if G is a secure PRG,
pseudorandom bit generators; we call our PRG-based thenAdvprg mustbesmallforalladversariesBusing
G,B
construction KR-PRG. Our approach capitalizes on a reasonableresources. Further,ifanadversaryAagainst
methodfromBellareandYee[10]forbuildingFSPRGs FSPRG-PRG uses reasonable resources, then the num-
fromstandardPRGs; we recalltheBellare-Yeemethod beroforaclequeriesq thatitmakesmustalsobesmall
inSection7.1. AswithKR-FSPRGfromSection6,we andB mustalsousereasonableresources. Theseprop-
believethatKR-PRGwillbeofindependentinterest. erties,coupledwithEquation(2),meansthattheadvan-
tage of all adversariesA against FSPRG-PRG that use
7.1 FSPRGs from pseudorandom bit genera- reasonable resources must be small; i.e., FSPRG-PRG
tors mustbeFSPRG-secure.
Lemma7.2 [Theorem2.3of[10].] LetG : {0,1}k →
Pseudorandom bit generators. A pseudorandom bit {0,1}k+l be a PRG, and let SBG be the FSPRG built
generator(PRG)[10,11,51]isafunctionG: {0,1}k → usingGaccordingtoConstruction7.1.Givenanadver-
{0,1}k+l that takes as input a k-bit seed and returnsa sary A attacking SBG that makes at most q queries to
stringthatislongerthantheseedbylbits,k,l≥1.The itsoracle,wecanconstructanadversaryBsuchthat
standardsecuritynotionforaPRGisasfollows. IfAis
Advfsprg ≤2q·Advprg (2)
anadversary,welet SBG,A G,B
where B uses within a small constant factor of the re-
Advprg
F,A sourcesofAandcomputesGuptoqtimes.
= Pr K ←$ {0,1}k; x←G(K) : A(x)=1
h i 7.2 APRG-basedkeyregressionscheme
−Pr x←$ {0,1}k+l : A(x)=1
h i
CombiningKR-FSPRGandFSPRG-PRGinthenat-
ural way yields a key regression scheme that we call
denotethePRG-advantageofAinattackingG. Under
KR-PRG. ForconcretenesswedescribeKR-PRGinde-
theconcretesecurityapproach,Gissaidtobea“secure
tailbelow.
PRG” if the PRG-advantageof all adversariesA using
reasonableresourcesis“small.”
Construction7.3 [KR-PRG.] Let G: {0,1}k →
A PRG-based FSPRG. Bellare and Yee [10] show {0,1}k+l be a pseudorandom bit generator. We
how to construct an FSPRG from a standard PRG. can construct a key regression scheme KR-PRG =
We dub their scheme FSPRG-PRG and recall it in (setup,wind,unwind,keyder) from G as follows. MW
Construction7.1below. TheFSPRG-PRG’sseed algo- isapositiveintegerandaparameteroftheconstruction.
rithmselectsarandomk-bitinitialseed. Thenextalgo-
rithm,oninputak-bitstringstg,computesthe(k+l)-bit Alg. setup
stringG(stg)andoutputsthefirstkbitsofG(stg)asthe stm ←$ {0,1}k
MW
nextstateandtheremaininglbitsasthekey. Fori=MWdownto2do
stm i−1 ←unwind(stm i)
Construction7.1 [FSPRG-PRG, Construction 2.2 of
stp←h1,stm ,...,stm i
1 MW
[10].] Given a PRG G : {0,1}k → {0,1}k+l we can
Returnstp
constructaFSPRGSBG =(seed,next)asshownbelow
Alg. wind(stp)
Ifstp=⊥thenreturn(⊥,⊥)
Alg. next(stg )
Alg. seed i Parsestpashi,stm ,...,stm i
r ←$ G(stg ) 1 MW
stg ←$ {0,1}k i Ifi>MWreturn(⊥,⊥)
0 stg ←firstkbitsofr
returnstg i+1 stp0 ←hi+1,stm ,...,stm i
0 K ←lastlbitsofr 1 MW
Return(stp0,stm )
return(stg ,K) i
i+1 Alg. unwind(stm)
The outputspace of SBG is OutSp = {0,1}l and x←G(stm); stm0 ← firstkbitsofx
SBG
MaxLen
SBG
=∞.
Returnstm0
Alg. keyder(stm)
ThefollowinglemmacomesfromBellareandYee[10] x←G(stm); K ← lastlbitsofx
except that we treat q as a parameter of the adversary ReturnKThederivedkeyspaceforKR-PRGisDK={0,1}l. Pseudorandom permutations. Let E: {0,1}k ×
{0,1}l → {0,1}l beablockcipherandletPerm(l)de-
Inorderforsetupandwindtobe“efficient,”weassume note the set of all permutations on {0,1}l. If A is an
that MW has some “reasonable” value like 220; in the adversarywithaccesstoanoracle,welet
asymptoticsettingwe wouldrequirethatMW be poly-
Advprp
nomialinsomesecurityparameter. E,A
Security. ThetheorembelowstatesthatifGisasecure = Pr K ←$ {0,1}k : AEK(·) =1
h i
PRG,thentheresultingkeyregressionschemeKR-PRG
built from G via Construction7.3 will be KR-secure. −Pr g ←$ Perm(l) : Ag(·) =1
h i
Specifically, Theorem7.4 says that given an adversary
A againstKR-PRG thatuses reasonableresources,and denotethePRP-advantageofAinattackingE. Under
assumingthatMWissmall,onecanconstructanadver- theconcretesecurityapproach,Eissaidtobea“secure
saryB againstGsuchthatB usesreasonableresources PRP” if the PRP-advantage of all adversaries A using
andEquation(3)inthetheoremstatementholds;qisthe reasonableresourcesis“small.”
minimumofMWandthemaximumnumberofwindand
Instantiating KR-AES from KR-PRG. As noted
keyderivationoraclequeriesthatAmakes. Theseprop-
above,itisstraightforwardtoinstantiateKR-AESfrom
erties imply security for KR-PRG since, if G is PRG-
KR-PRG. Numerous other instantiations exist, e.g., to
secureandsinceAusesreasonableresources,Advprg
G,B use a block cipher E with k > l, one might define G
andqmustbothbesmall,whichmeansthatAdvk Kr R,A, as G(X) = E X(α 1)kE X(α 2)k... where α 1,α 2,...
theadvantageofAinattackingKR-PRG,mustbesmall are distinct l-bit strings. Since KR-AES is one of our
aswell. preferredconstructions,westate thefollowingtheorem
specificallyforKR-AES; itisstraightforwardtoextend
Theorem7.4 If G: {0,1}k → {0,1}k+l is a secure our result to other natural instantiations of KR-PRG.
PRG, then the key regression scheme KR built from ThesecurityproofforKR-AESisinthestandardmodel
G via KR-PRG (Construction7.3) is KR-secure. Con-
andassumesthatAESisasecurepseudorandompermu-
cretely, given an adversary A attacking KR, we can tation.
constructanadversaryBattackingGsuchthat
Theorem8.1 If AES is a secure PRP, then KR-AES
Advkr ≤ 2·(q+1)2·Advprg (3)
KR,A G,B (Construction5.2) is KR-secure. Concretely, given an
whereqistheminimumofMWandthemaximumnum- adversary A attacking KR-AES, we can construct an
berofqueriesAmakestoitsWindOandKeyderOora- adversaryBattackingAESsuchthat
cles. AdversaryBuseswithinasmallconstantfactorof
Advkr ≤ 2·(q+1)2· Advprp +2−128 (4)
theresourcesofA, plusthetime tocomputesetup and KR,A (cid:16) AES,B (cid:17)
GMWtimes. whereqistheminimumofMWandthemaximumnum-
berofqueriesAmakestoits WindOandKeyderOor-
Proof of Theorem7.4: Construction7.3 is exactly acles. Adversary B makes 2 oracle queries and uses
Construction6.1builtfromthe forwardsecurepseudo- withinasmallconstantfactoroftheresourcesofA,plus
randombitgeneratordefined by Construction7.1. The thetimetocomputesetupandAES2MWtimes.
theorem statement thereforefollows from Theorem6.2
We interpret Theorem8.1 as follows. Suppose A is
andLemma7.2.
an adversary against KR-AES that uses reasonable re-
sources, and in particular makes at most a reasonable
8 The security ofKR-AES number of queries q to its wind and key derivation or-
acles. Then we can construct an adversary B against
AES that also uses reasonable resources when MW is
Having shown how to construct secure key regres-
small. BecauseoftheresourcerestrictionsonBandun-
sion schemes from secure pseudorandom bit genera-
dertheassumptionthatAESisasecurePRP,itfollows
tors (KR-PRG and Construction7.3), we are now able thatAdvprp mustbesmall. Ifbothq andAdvprp
AES,B AES,B
to provethe security of KR-AES (Construction5.2) by
aresmall,thenbyEquation(4)Advkr mustalsobe
observing that KR-AES is exactly KR-PRG with k = KR,A
small,meaningthatKR-AESmustbeKR-secure.
l = 128 and with the PRG G defined as G(X) =
AsaconcreteexampleoftheboundinTheorem8.1,
AES (0128)kAES (1128) for all X ∈ {0,1}128. Be-
X X considerthecase whereMW andq are both220. Then
fore stating our formal result for KR-AES, we first re-
Equation(4)becomes
call the standard notion of a pseudorandom permuta-
tion[8,35]. Advkr ≤ 242·Advprp +2−86 ,
KR,A AES,Bwhich means that unlessA exploitsa propertyof AES Alg. windH1,H2(stp)
itself,AwillnotbeabletobreakthesecurityofKR-AES Ifstp=⊥thenreturn(⊥,⊥)
withprobabilitybetterthan2−86. Sinceitiswidelybe- Parsestpashi,stm ,...,stm i
1 MW
lievedthatAESissecure,Theorem8.1tellsusthatitis Ifi>MWreturn(⊥,⊥)
reasonabletoassumethatKR-AESissecureforreason- stp0 ←hi+1,stm ,...,stm i
1 MW
ablechoicesofMW. Return(stp0,stm )
i
To prove Theorem8.1 we use Theorem7.4, the Alg. unwindH1,H2(stm)
relationship between KR-AES and KR-PRG, and stm0 ←H (stm); Returnstm0
1
the fact that the function G defined as G(X) = Alg. keyderH1,H2(stm)
AES X(0128)kAES X(1128), X ∈ {0,1}128, is a secure K ←H 2(stm); ReturnK
PRGifAESisasecurePRP.Detailsin[24].
ThederivedkeyspaceforKR-ROisDK={0,1}l.
9 The security ofKR-SHA1
Inorderforsetupandwindtobe“efficient,”weassume
that MW has some “reasonable” value like 220; in the
Although we derived KR-SHA1 from the key ro- asymptoticsetting we wouldrequirethatMW be poly-
tation scheme in Figure3, we find that one can nomialinsomesecurityparameter.
also view KR-SHA1 as an instantiation of KR-PRG ThefollowingtheoremstatesthatConstruction9.1is
with k = l = 160 and G defined as G(X) = secure in the random oracle model for adversariesthat
SHA1(X)kSHA1(08kX)forall X ∈ {0,1}160. If we make a reasonable number of queries to their random
viewSHA1asarandomoracle,thenGisasecurePRG oracles.
intherandomoraclemodel,andwecanusethisobserva-
tionandTheorem7.4toprovethesecurityofKR-SHA1 Theorem9.2 The key regression scheme in
intherandomoraclemodel. Construction9.1 is secure in the random oracle
HerewegiveadirectproofofsecurityforKR-SHA1 model. Formally, let H : {0,1}k → {0,1}k and
1
in order to obtain a tighter bound. The tightness is- H : {0,1}k → {0,1}l berandomoraclesandletKR
2
sue with using KR-PRG and Theorem7.4 to prove the be the key regression scheme built from H ,H via
1 2
security of KR-SHA1 rests in the fact that the advan- KR-RO (Construction9.1). Then for any adversary A
tageofanadversaryinattackingGintherandomoracle wehavethat
modelmustbeupperboundedbyafunctionofthenum- (MW)2 q·MW
ber of randomoraclequeriesthatthe adversarymakes, Advk Kr R,A ≤ 2k+1 + 2k−MW−q , (5)
and this function will percolate through the bound in
Theorem7.4. whereq isthemaximumnumberofqueriestotalthatA
In what follows we view SHA1(·) in KR-SHA1’s makestoitsH 1andH 2randomoracles.
unwind algorithm and SHA1(08k·) in KR-SHA1’s
As a concrete example of the bound in Theorem9.2,
keyder algorithm as two different random oracles.
consider the case where MW = 220 and an adversary
Construction9.1, KR-RO, makes this generalizationof
A makes at most q = 240 queries to its random ora-
KR-SHA1 concrete. We choose notto modelSHA1(·)
cles. Then Equation(5) tells us that the advantage of
andSHA1(08k·)as a singlerandomoraclebecausewe
A in attacking KR-RO is upper boundedby 2−98. Al-
do not wish to restrict our analysis to the case where
thoughSHA1isnotarandomoracle,Theorem9.2gives
keyder mustprefixitsinputsto the randomoraclewith
usconfidencethatKR-SHA1mayprovideareasonable
thezerobyte.
levelofsecurityinpractice;seeSection5foradditional
Construction9.1 [KR-RO.] Let H : {0,1}k → discussion.
1
{0,1}k and H : {0,1}k → {0,1}l be random or- We prove Theorem9.2 in [24], but remark that we
2
acles. We can construct a key regression scheme could simplify the proof if, instead of definingKR-RO
KR-RO = (setup,wind,unwind,keyder) from H as in Construction9.1, we include the indices i in the
1
andH 2 asshownbelow. MWisapositiveintegeranda member states, and hence in the inputs to H 1 and H 2.
parameteroftheconstruction. Wechoosetoomittheindicesifromthememberstates
in KR-RO because we view KR-RO and KR-SHA1 as
Alg. setupH1,H2 closer to what developers might wish to implement in
stm MW ←$ {0,1}k practice.
Fori=MWdownto2do We remark that in addition to viewing KR-SHA1 as
stm i−1 ←unwindH1,H2(stm i) aninstantiationofKR-PRG,onecouldviewKR-AESas
stp←h1,stm ,...,stm i an instantiation of KR-RO with k = l = 128 and, for
1 MW
Returnstp allX ∈{0,1}128,withH (X)definedasAES (0128)
1 Xand H (X) defined as AES (1128); Diffie and Hell- SecurityforRSAkeygenerators. LetK beanRSA
2 X rsa
man suggestusing a blockcipheras a hashfunctionin keygeneratorwithsecurityparameterk. IfAisanad-
this manner in [16]. We choose to prove the security versary,welet
of KR-AES directly in Section8, rather than instanti-
Advrsa-ow
ate KR-RO, because we desire a proof of security for K rsa,A
KR-AESinthestandardmodel.
(N,e,d)←$ K ;
 rsa 
= Pr x←$ Z∗ ; : A(y,e,N)=x
10 The security ofKR-RSA   y ←xe mN odN  
denote the RSA one-way advantage of A in inverting
In our proof of security for KR-RSA we view
RSA with the key generator K . Under the concrete
the use of SHA1 in keyder as a random oracle. rsa
securityapproach,K issaid to be a “one-way”if the
Construction10.1,KR-RSA-RO,makesthisgeneraliza- rsa
RSAone-wayadvantageofalladversariesAusingrea-
tionconcrete.
sonableresourcesis“small.”
Construction10.1 [KR-RSA-RO.] GivenanRSA key
10.1 SecurityofKR-RSAunderoneKeyderOor-
generatorK forsomesecurityparameterkandaran-
rsa aclequery
dom oracle H: Z 2k → {0,1}l, we can construct a
key regression scheme KR-RSA-RO = (setup,wind,
Lemma10.2 below states that if the RSA key gen-
unwind,keyder)asshownbelow,whereMW=∞.
erator K is one-way, then the resulting construction
rsa
Alg. setupH KR-RSA-RO is secure againstadversariesthatuse rea-
(N,e,d)←$ K ; S ←$ Z∗ ; stp←hN,e,d,Si sonable resources and that make at most one KeyderO
rsa N oraclequery.
Returnstp
Alg. windH(stp)
Lemma10.2 If K is an RSA key generator with se-
rsa
ParsestpashN,e,d,Si; S0 ←Sd modN
curityparameterk,thenthekeyregressionschemeKR
stp0 ←hN,e,d,S0i; stm←hN,e,Si
built from K via KR-RSA-RO (Construction10.1) is
rsa
Return(stp0,stm)
KR-secure in the random oracle model against adver-
Alg. unwindH(stm) sariesrestrictedtooneKeyderOoraclequeryassuming
ParsestmashN,e,Si thatK isone-way. Concretely,givenanadversaryA
rsa
S0 ←Se modN ; stm0 ←hN,e,S0i attackingKRthatmakesatmostonekeyderivationor-
Returnstm0
acle query, we can constructan adversary B attacking
Alg. keyderH(stm) K suchthat
rsa
ParsestmashN,e,Si; K ←H(S) Advkr ≤(q+1)·Advrsa-ow , (6)
ReturnK KR,A K rsa,B
where q is the maximum number of winding oracle
The derived key space for the scheme KR-RSA-RO is
queriesthatAmakes. AdversaryB useswithinasmall
DK={0,1}l.
constantfactorof the resourcesas A plusperforms up
toqRSAencryptionoperations.
Toward proving KR-RSA secure, we first prove in
Section10.1thatKR-RSA-ROisKR-secureagainstad- To prove Lemma10.2 we observe that in order for an
versaries that use reasonable resources and that make adversary A in possession of the i-th member state
at most one KeyderO oracle query; the result in hN,e,S i to distinguish the (i + 1)-st key from ran-
i
Section10.1assumesthattheRSAkeygeneratorK in dom, the adversary must query its random oracle with
rsa
KR-RSA-ROisone-way. WethenshowinSection10.2 S ,wherehN,e,S iisthe(i+1)-stmemberstate.
i+1 i+1
that if a key regression scheme is secure against ad- Since S = Se modN, querying the random oracle
i i+1
versaries restricted to one KeyderO oracle query, then withS amountstoinvertingS . Theactualproofof
i+1 i
the key regression scheme is secure against adver- Lemma10.2involvesBguessingthenumberofWindO
saries making multiple KeyderO oracle queries. In oraclequeriesthatAmakes. Detailsin[24].
Section10.3wecombinethesetworesultstoshowthat
KR-RSA-ROis secureagainstadversariesthat use rea- 10.2 Security under one KeyderO oracle query
sonable resources but make an otherwise unrestricted impliessecurityundermany
numberofKeyderOoraclequeries.
BeforeproceedingswithSection10.1,wefirstdefine The following lemma states that if a key regression
whatitmeansforanRSAkeygeneratortobeone-way. scheme is secure against adversaries restricted to oneKeyderO oracle query, then the key regression scheme 11 Performance of key regression in
issecureagainstadversariesallowedmultipleKeyderO access-controlled content distribution
oraclequeries.TheproofofLemma10.3isin[24].
We integratedkeyregressionintotheChefsfilesys-
Lemma10.3 Ifakeyregressionschemeissecurewhen
tem [22] to measure the performancecharacteristics of
an adversary is limited to one KeyderO oracle query,
key regression in a real application. We first give an
thenthekeyregressionschemeissecurewhenanadver-
overviewof Chefs. Then we providemeasurementsto
saryisallowedmultipleKeyderOoraclequeries. Con-
show that key regression enablesefficientkey distribu-
cretely,letKRbeakeyregressionscheme.Givenanad-
tion even for publisherswith low-bandwidthand high-
versary AattackingKR thatmakesatmostq queries
1 latencyconnectionssuchascableandanalogmodems.
toWindOandq queriestoKeyderO,wecanconstruct
2
anadversaryBattackingKRsuchthat Chefs for access-controlled content distribution.
Chefs [22] is a secure, single-writer, many-reader file
Advkr ≤ q ·Advkr , (7)
KR,A 2 KR,B system for access-controlled content distribution using
B makes at most q +q −1 queries to WindO (or 0 untrustedservers. ChefsextendstheSFSread-onlyfile
1 2
queriesif q +q = 0), B makesatmost onequery to system [23] to provideaccess control. Chefs uses lazy
1 2
KeyderO,andBhasotherresourcerequirementswithin revocation[21,32]andKR-SHA1keyregressiontore-
a small constant factor of the resource requirements duce the amountof out-of-bandcommunicationneces-
ofA. saryforgroupkeydistribution.
Three modules comprise the Chefs file system. An
untrusted server makes encrypted, integrity-protected
10.3 The security of KR-RSA under multiple
content available in the form of a block store. A pub-
KeyderOoraclequeries
lishercreatesthe encrypted,integrity-protectedcontent
andmanageskeydistribution. Aclientdownloadscon-
From Lemma10.2 and Lemma10.3 it follows that
tentfromanuntrustedserver,thenverifiesintegrityand
KR-RSA-RO is secure in the random oracle model as-
decrypts the content using keys fetched from the pub-
suming that K is one-way, even for adversaries al-
rsa lisher. Ourpublisher,e.g.,ablogger,isexpectedtohave
lowed multiple KeyderO oracle queries. Theorem10.4
alow-bandwidthconnection.
makes this reasoning formal. Although SHA1 is not a
Several types of keys guard the access control and
randomoracle,Theorem10.4suggeststhatwheninstan-
confidentialityofcontentinChefs. Chefsusesacontent
tiatedwithasuitableRSAkeygenerator,KR-RSAmay
keytoencryptcontent. Amemberobtainsacontentkey
provide a reasonable level of security in practice; see
by opening a lockbox that is encrypted with the group
Section5foradditionaldiscussion.
key; the member derivesthe group key from the group
memberstate. Afteramembershipevent,e.g.,anevic-
Theorem10.4 If K is an RSA key generator with
rsa tion,thepublisherproducesanewkeyregressionmem-
security parameter k, then KR built from K via
rsa ber state. The remaining group members request this
KR-RSA-RO (Construction10.1) is KR-secure in the
member state on-demand from the publisher; to com-
randomoraclemodelundertheRSAassumption. Con-
municatethe newmemberstate, the publisherencrypts
cretely, given an adversary A attacking KR, we can
the member state with each member’s 1024-bit public
constructanadversaryBattackingK suchthat
rsa RSAkeyusingthelowexponente=3.
Advkr ≤2q2·Advrsa-ow ,
KR,A K rsa,B
11.1 Hypothesisandmethodology
where q is the maximum number of winding and key
derivation oracle queries that A makes. Adversary B
usesresourceswithinaconstantfactoroftheresources Performance measurements validate that (1) key re-
ofAplusthe time to performq RSAencryptionopera- gression allows a publisher to serve many keys per
tions. second to clients effectively independent of the pub-
lisher’snetworkthroughputandtherateofmembership
turnover,and(2)keyregressiondoesnotdegradeclient
Proof of Theorem10.4: The proof of Theorem10.4
latency. To test these hypotheses, we comparethe per-
follows from Lemma10.3 and Lemma10.2. Note that
formance of Chefs to Sous-Chefs, a version of Chefs
for the application of Lemma10.3 we set q = q and
1 withoutkeyregression.
q =q,meaningtheadversaryBfromLemma10.3may
2
makeupto2q−1queriestoitsWindOoracle,or2q if Experimental setup. The client and server contained
q =0. the same hardware: a 2.8 GHz Intel Pentium 4 with
512 MB RAM. Each machine used a 100 Mbit/secfull-duplex Intel PRO/1000 Ethernet card and a Max- announcedthatintheyear2003,theyadded31000paid
tor 250 GB, Serial ATA 7200RPM hard drivewith an subscribers(foratotalof73000)andmaintaineda71%
8 MB buffer size, 150 MB/sec transfer rate, and less renewalrate. Thus,a29%evictionratewouldgenerate
than 9.0 msec average seek time. The publisher was anexpected21170evictionsinoneyear. Thissuggests
a 3.06 GHz Intel Xeon with 2 GB RAM, a Broadcom thatthetotalnumberofmembershipeventswouldreach
BCM5704C Dual Gigabit Ethernetcard, and a Hitachi 52170.
320 GB SCSI-3 hard drivewith a 320 MB/sec transfer Torepresentaworkloadofsearchingnewspapercon-
rate. tent,theexperimenttestsafilesystemcontaining10000
Themachineswereconnectedona100Mbit/seclo- 8 KB encrypted files and the associated content keys.
calareanetworkandallusedFreeBSD4.9.NetPipe[46] Theexperimentconsistsofmountingthefilesystemand
measured the round-trip latency between the pairs of reading all the files. This causes the client machine to
machinesat249µsec,andthemaximumsustainedTCP fetchallthecontentkeys.
throughputoftheconnectionat88Mbit/secwhenwrit- We further motivate our example workload as fol-
ingdatain4MBchunksandusingTCPsendandreceive lows. While there is promising research in enabling a
buffersofsize69632KB.Whenwritingin8KBchunks thirdpartyservertosearchencrypteddata[2,12,26,28,
(theblocksizeinChefs),thepeakTCPthroughputwas 47,50],currentapproachesforsearchableencryptiondo
66Mbit/sec. not prevent the server from outputting false negatives.
The experiments used the dummynet [44] driver in BecauseChefsextendstheSFSread-onlyfilesystem,it
FreeBSD to simulate cable modem and analog modem inheritsthepropertythattheclientcanverifywhetherit
network conditions. For the cable modem on the pub- has received all intendedcontent (i.e., the whole truth)
lishermachine,theround-tripdelaywassetto20msec fromtheserver. Therefore,toavoidfalsenegatives,we
and the download and upload bandwidthto 4 Mbit/sec desire a client-based search in which the Chefs client
and 384 Kbit/sec respectively. For the analog modem, downloadsalltheencryptedcontentandkeystoperform
theround-tripdelaywassetto200msecandtheupload thesearchitself.
anddownloadbandwidtheachto56Kbit/sec.
Sous-Chefs. To determine the cost of key regression,
In the Chefs measurements, the inode cache has
Chefs is compared to a version of Chefs with key re-
16384entries, a directoryblockcache has512entries,
gression disabled. This strawman file system is called
anindirectblockcachehas512entries,andafileblock
Sous-Chefs. Chefs and Sous-Chefs differ only in how
cachehas64entries. Alargefileblockcacheisunnec-
they fetch group keys from the publisher. When using
essarybecausetheNFSloopbackserverperformsmost
KR-SHA1 for key regression, Chefs fetches a 20-byte
ofthefiledatacaching.
memberstate, encryptedinthe client’spublic1024-bit
Foreachmeasurement,themedianresultoffivesam-
RSA key with low exponent e = 3. Chefs then uses
plesarereported. ErrorsbarsinFigure5indicatemini-
keyregressiontounwindandderiveallpastversionsof
mumandmaximummeasurements.
thegroupkey. Sous-Chefsfetchesallthederivedgroup
keys at once (each 16 bytes). The group keys them-
11.2 Secure content distribution on untrusted
selves are encrypted with 128-bit AES in CBC mode.
storage
TheAESkeyisencryptedwiththeclient’sRSApublic
key. A Sous-Chefsclientisallowedto requesta single
Astandardbenchmarkisnotavailableformeasuring bulk transfer of every version of a group key to fairly
the effects of groupmembershipdynamics. Therefore, amortizethecostofthetransfer.
we evaluate Chefs based on how a client might search
Reduced throughput requirements. Figure 4 shows
forcontentinasubscription-basednewspaper.
that a publisher can serve many more clients in Chefs
Table 2 displays the performance of basic key re-
thanSous-Chefsinlow-bandwidth,high-latencycondi-
gression operations. The internal block size of the
tions. The CPU utilization for Chefs under no band-
hash function matters significantly for the throughput
widthlimitationisnegligible,indicatingthatthecostof
of KR-SHA1 key regression. Because SHA1 uses an
RSAencryptionsonthepublisherisnotthebottleneck.
internal512-bitblocksize, hashingvaluessmallerthan
Each test asynchronously plays back 20 traces of a
512bitsresultsinpoorerthroughputthanonewouldex-
single clientfetchingthe keysfor the search workload.
pect from SHA1 hashing longer inputs. For this rea-
Thiseffectivelysimulatestheeffectof20clientsapply-
son,KR-AESkeyregressionperformssignificantlybet-
ingthesamekeydistributionworkloadtothepublisher.
terthanKR-SHA1keyregression.
Afteralltraceshavecompleted,werecordtheeffective
Searching encrypted content. The benchmarks were numberoftraceplaybackspersecond. TheSous-Chefs
inspired by the membership dynamics reported at Sa- tracesof fetching10, 102, 103, 104, 105, and 106 keys
lon.com,asubscription-basedonlinejournal[45].Salon generate4,4,5,24,200,and1966asynchronousremoteKeyregressionprotocol Winds/sec Unwinds/sec
KR-SHA1 Notapplicable 687720
KR-AES Notapplicable 3303900
KR-RSA 158 35236
Table2.MicrobenchmarksofKR-SHA1,KR-AES,KR-RSAkeyregression.
10000
1000
100
10
1
10 100 1000 10000 100000 1e+06
Number of keys
ces/snoisses-tneilC
chefs
chefs (cable modem)
chefs (analog modem)
souschefs
souschefs (cable modem)
souschefs (analog modem)
Figure 4. Aggregate publisher throughput for key distribution plotted on a log-log graph. A
client-session consists of fetching key material sufficient to generate all the keys to decrypt
thepublishedcontent. Keyregressionenablesapublishertosupportmanyclient-sessionsper
second. Chefsalways performsbetterthan Sous-Chefsbecause keyregression performance
iseffectivelyindependentoftherateofmembershipturnover.
procedurecalls fromthe client to the publisher respec- isasmallcomponentoftheChefsbenchmark.With106
tively.Chefsalwaysgeneratesasingleremoteprocedure keys,keyregressionontheclienttakeslessthan1.5sec
call,regardlessofthenumberofkeyversions. withCPUutilizationneverexceedingof42%.
Improved client latency. The client latency experi-
ment measures the time for a single client to execute
12 Conclusions
thesearchworkload.Theuntrustedserverandpublisher
havewarmcacheswhiletheclienthasacoldcache.
The log-logchart in Figure 5 shows that Chefs out-
performsSous-Chefsforthesearchworkloadundersev- We presented provably-secureconstructions for key
eral network conditions. In Sous-Chefs, the network regression — addressing the shortfalls of key rotation.
transfer time dominates client latency because of the We also provided the first measurements of either a
sheer volume of keys transferred from the publisher to key regression or key rotation system. Finally, we in-
the client. There is no measurement for Sous-Chefs tegrated key regression in a content distribution appli-
downloading1000000keysbecausethekernelassumes cation to demonstrate how key regression enables effi-
that the mount failed after waiting 1000 seconds. On cient key distribution on low-bandwidth, high-latency
a 56 Kbit/sec network, Sous-Chefs is expected to take connections. Using key regression, a publisher can ef-
over 2232 seconds to download 1000000 keys each ficientlycontrolaccesstocontentindependentofgroup
16bytes. Thus,onlythreebarsappearforthetestcases membership dynamics and without needing a fast net-
involving1000000contentkeys. Key regressionitself workconnection.1000 10000 100000 1000000
1000
100
10
1
Number of keys
)ces(
ycnetal
tneilC
chefs
souschefs
souschefs (cable modem)
souschefs (analog modem)
Figure 5. A log-log chart of single client latency to read 10000 8 KB encrypted files and the
associated content keys. Key regression maintains a constant client latency regardless of
the number of keys. Under low-bandwidth, high-latency conditions, Sous-Chefs latency is
dominated my the transfer time of keys after reaching 10000 keys. Key regression enables
muchbetterlatencyinChefs.
Acknowledgments H. Shi. Searchable encryption revisited: Consis-
tencyproperties,relationtoanonymousIBE,andexten-
sions. In V. Shoup, editor, Advances in Cryptology –
K. Fu was supportedin part by Project Oxygenand
CRYPTO2005,volume3621ofLectureNotesinCom-
anIntelPh.D.Fellowship. S.Kamarawassupportedby
puter Science, Santa Barbara, CA, USA, Aug. 14–18,
a Bell Labs Graduate Research Fellowship. T. Kohno
2005.Springer-Verlag,Berlin,Germany.
wassupportedbyanIBMPh.D.Fellowship,NSFCCR-
[3] AkamaiTechnologies. http://www.akamai.com.
0208842,NSFANR-0129617,andNSFCCR-0093337.
[4] S.G.AklandP.D.Taylor. Cryptographicsolutiontoa
K.FuperformedthisresearchwhileatTheJohnsHop-
problemofaccesscontrolinahierarchy. ACMTransac-
kins University and MIT. T. Kohno performed part of
tionsonComputerSystems,1(3):239–248,1983.
this research while visiting UC Berkeley. We thank
[5] M.Backes, C.Cachin, andA.Oprea. Lazyrevocation
RonRivestfordetailedcommentsonthispaper;David
incryptographicfilesystems. In3rdInternationalIEEE
Mazie`res for suggestions on formalizing definitions of SecurityinStorageWorkshop,Dec.2005.
security; Mahesh Kallahalla and Ram Swaminathan [6] M. Backes, C. Cachin, and A. Oprea. Secure
for our initial work together to define key regression; key-updating for lazy revocation. IBM Re-
Fabian Monrose for early reviews of this paper; Frans search Report RZ 3627, Oct. 2005. Available
Kaashoek for his guidance and unending support; and at http://domino.research.ibm.com/
Frank Dabek, Emil Sit, and Jeremy Stribling for help library/cyberdig.nsf/index.html, key-
withthetestbed. word99637;alsoarchivedasCryptologyePrintArchive
Report2005/334.
[7] M. Bellare, A. Desai, E. Jokipii, and P. Rogaway. A
References
concretesecuritytreatmentofsymmetricencryption. In
38th Annual Symposium on Foundations of Computer
[1] M.AbdallaandM.Bellare. Increasingthelifetimeofa Science (FOCS ’97), pages 394–403. IEEE Computer
key: Acomparitiveanalysisofthesecurityofre-keying Society,1997.
techniques. In T. Okamoto, editor, Advances in Cryp- [8] M. Bellare, J. Kilian, and P. Rogaway. The secu-
tology – ASIACRYPT, volume 1976 of Lecture Notes rityofthecipherblockchainingmessageauthentication
in Computer Science, pages 546–559, Kyoto, Japan, code. In Y. Desmedt, editor, Advances in Cryptology
Dec.3–7,2000. – CRYPTO’94, volume 839 of Lecture Notes in Com-
[2] M.Abdalla,M.Bellare,D.Catalano,E.Kiltz,T.Kohno, puterScience,pages341–358,SantaBarbara,CA,USA,
T. Lange, J. Malone-Lee, G. Neven, P. Paillier, and Aug.21–25,1994.Springer-Verlag,Berlin,Germany.[9] M.BellareandP.Rogaway. Randomoraclesareprac- [21] K. Fu. Group sharing and random access in cryp-
tical: A paradigm for designing efficient protocols. In tographic storage file systems. Master’s thesis, Mas-
V.Ashby,editor,ACMCCS93:1stConferenceonCom- sachusettsInstituteofTechnology,May1999.
puter and Communications Security, Lecture Notes in [22] K.Fu. Integrityandaccesscontrolinuntrustedcontent
Computer Science, Fairfax, Virginia, USA, Nov. 3–5, distributionnetworks. PhDthesis,MassachusettsInsti-
1993.ACMPress. tuteofTechnology,September2005.
[10] M.BellareandB.Yee. Forwardsecurityinprivatekey [23] K.Fu,M.F.Kaashoek,andD.Mazie`res.Fastandsecure
cryptography. InM.Joye,editor,TopicsinCryptology– distributedread-onlyfilesystem. In4thSymposiumon
CT-RSA 2003, volume 2612 of Lecture Notes in Com- OperatingSystemsDesignandImplementation,2000.
puter Science, pages 1–18, San Francisco, CA, USA, [24] K. Fu, S. Kamara, and T. Kohno. Key regres-
Apr.13–17,2003.Springer-Verlag,Berlin,Germany. sion: Enablingefficientkeydistributionforsecuredis-
[11] M.BlumandS.Micali. Howtogeneratecryptograph- tributedstorage. Cryptology ePrintArchivehttp://
icallystrongsequencesofpseudo-random bits. InPro- eprint.iacr.org/: Report2005/303, 2005. (Full
ceedings of the 23rd IEEE Symposium on Foundations versionofthispaper.).
ofComputerScience(FOCS’82),1982. [25] D.K.Gifford.Cryptographicsealingforinformationse-
[12] D.Boneh, G.DiCrescenzo, R.Ostrovsky, andG.Per- crecyandauthentication. CommunicationsoftheACM,
siano. Publickey encryption withkeyword search. In 25(4):274–286,1982.
C.CachinandJ.Camenisch,editors,AdvancesinCryp- [26] E.-J.Goh. Secureindexes. CryptologyePrintArchive
tology – EUROCRYPT 2004, volume 3027 of Lecture http://eprint.iacr.org/: Report 2003/216,
NotesinComputerScience,pages506–522,Interlaken, 2003.
Switzerland, May 2–6, 2004. Springer-Verlag, Berlin, [27] S.Goldwasser and S.Micali. Probabilisticencryption.
Germany. Journal of Computer and System Sciences, 28(2):270–
[13] D. Boneh, C. Gentry, and B. Waters. Collusion resis-
299,Apr.1984.
tantbroadcastencryptionwithshortciphertextsandpri-
[28] P.Golle,J.Staddon,andB.R.Waters. Secureconjunc-
vatekeys.InV.Shoup,editor,AdvancesinCryptology–
tivekeywordsearchoverencrypteddata. InM.Jakobs-
CRYPTO2005,volume3621ofLectureNotesinCom-
son,M.Yung,andJ.Zhou,editors,ACNS04:2ndInter-
puterScience,pages258–275,SantaBarbara,CA,USA,
nationalConferenceonAppliedCryptographyandNet-
Aug.14–18,2005.Springer-Verlag,Berlin,Germany.
work Security, volume 3089 of Lecture Notes in Com-
[14] B.Cohen. IncentivesbuildrobustnessinBitTorrent. In
puter Science, pages 31–45, Yellow Mountain, China,
ProceedingsoftheFirstWorkshopontheEconomicsof
June8–11,2004.Springer-Verlag,Berlin,Germany.
Peer-to-PeerSystems,Berkeley,CA,June2003.
[29] N. M. Haller. The S/KEY one-time password system.
[15] J.-S. Coron, Y. Dodis, C. Malinaud, and P. Puniya.
InISOCSymposiumonNetworkandDistributedSystem
Merkle-Damga˚rd revisited: How to construct a hash
Security,February1994.
function. InV.Shoup,editor,AdvancesinCryptology–
[30] A.HarringtonandC.Jensen.Cryptographicaccesscon-
CRYPTO2005,volume3621ofLectureNotesinCom-
trol in a distributed filesystem. In Proceedings of 8th
puterScience.Springer-Verlag,Berlin,Germany,2005.
ACMSymposium on Access Control Models and Tech-
[16] W.DiffieandM. E.Hellman. Newdirectionsincryp-
nologies (SACMAT 2003), Villa Gallia, Como, Italy,
tography. IEEE Transactions on Information Theory,
June2003.
22:644–654,1978.
[17] Y. Dodis and N. Fazio. Public key broadcast encryp- [31] A.Joux. Multicollisionsiniteratedhashfunctions.Ap-
tion for stateless receivers. In Digital Rights Manage- plicationtocascadedconstructions. InM.Franklin,ed-
mentWorkshop,volume2696ofLectureNotesinCom- itor, Advances inCryptology –CRYPTO2004, volume
puter Science, pages 61–80. Springer-Verlag, Berlin, 3152ofLectureNotesinComputerScience,pages306–
Germany,2002. 316.Springer-Verlag,Berlin,Germany,2004.
[18] Y. Dodis and N. Fazio. Public key broadcast encryp- [32] M.Kallahalla,E.Riedel,R.Swaminathan,Q.Wang,and
tionsecureagainstadaptivechosenciphertextattack. In K.Fu. Plutus: Scalablesecurefilesharingonuntrusted
Y.Desmedt,editor,PKC2003: 6thInternationalWork- storage.In2ndUSENIXConferenceonFileandStorage
shoponTheoryandPracticeinPublicKeyCryptogra- Technologies,2003.
phy,volume2567ofLectureNotesinComputerScience, [33] J. Kelsey and T. Kohno. Herding hash functions and
pages100–115,Miami,USA,Jan.6–8,2003.Springer- the Nostradamus attack. Cryptology ePrint Archive
Verlag,Berlin,Germany. http://eprint.iacr.org/: Report 2005/281,
[19] A.FiatandM.Naor.Broadcastencryption.InD.Boneh, 2005.
editor, Advances inCryptology –CRYPTO’93, volume [34] L.Lamport.Passwordauthenticationwithinsecurecom-
773ofLectureNotesinComputerScience,pages22–26, munication. CommunicationsoftheACM,24(11):770–
SantaBarbara,CA,USA,Aug.17–21, 1993. Springer- 771,November1981.
Verlag,Berlin,Germany. [35] M.LubyandC.Rackoff. Howtoconstructpseudoran-
[20] M. Freedman, E. Freudenthal, and D. Mazie`res. De- dompermutationsfrompseudorandomfunctions. SIAM
mocratizing content publication with coral. In 1st JournalonComputing,17(2),1988.
USENIX/ACM Symposium on Networked Systems De- [36] S.MacKinnonandS.G.Akl. Newkeygenerationalgo-
sign and Implementation, San Francisco, CA, March rithmsfor multilevel security. In SP ’83: Proceedings
2004. Seehttp://www.coralcdn.org/. ofthe1983 IEEESymposium onSecurityandPrivacy,page72,Washington,DC,USA,1983.IEEEComputer
Society.
[37] Mandriva Linux. http://www.mandriva.com/
en/community/users/club.
[38] S.Micali.Fairpublic-keycryptosystems.InE.F.Brick-
ell,editor,AdvancesinCryptology–CRYPTO,volume
740ofLectureNotesinComputerScience, pages113–
138,Aug.16–20,1992.
[39] G.MiklauandD.Suciu.Controllingaccesstopublished
data using cryptography. In International Conference
on VeryLarge Data Bases, pages 898–909, September
2003.
[40] D. Naor, M. Naor, and J. Lotspiech. Revocation and
tracingschemesforstatelessreceivers. InJ.Kilian,edi-
tor,AdvancesinCryptology–CRYPTO,volume2139of
LectureNotesinComputerScience,pages41–62,Santa
Barbara,CA,USA,Aug.19–23,2001.
[41] D.Naor,A.Shenhav,andA.Wool.Towardsecuringun-
trusted storage without public-key operations. In First
InternationalWorkshoponStorageSecurityandSurviv-
ability,november2005.
[42] D. Reed and L. Svobodova. Swallow: A distributed
datastoragesystemforalocalnetwork. InA.Westand
P.Janson, editors, Local NetworksforComputerCom-
munications,pages355–373.North-HollandPubl.,Am-
sterdam,1981.
[43] R.L.Rivest,A.Shamir,andL.M.Adleman. Amethod
for obtaining digital signatures and public-key cryp-
tosystems. Communications of the ACM, 21(2):120–
126,1978.
[44] L.Rizzo. Dummynet: asimpleapproach totheevalu-
ationofnetworkprotocols. SIGCOMMComput.Com-
mun.Rev.,27(1):31–41,1997.
[45] Salon.com. http://www.salon.com/press/
release/.
[46] Q.Snell,A.Mikler,andJ.Gustafson. Netpipe: Anet-
work protocol independent performace evaluator. In
IASTED International Conference on Intelligent Infor-
mationManagementandSystems,1996.
[47] D.X. Song, D. Wagner, and A.Perrig. Practicaltech-
niquesforsearchesonencrypteddata. InIEEESympo-
siumonSecurityandPrivacy,pages44–55,2000.
[48] J. Staddon, S. Miner, M. Franklin, D. Balfanz,
M.Malkin, andD.Dean. Self-healingkeydistribution
withrevocation. InProceedingsofIEEESymposiumon
SecurityandPrivacy,2002.
[49] X. Wang, Y. L. Yin, and H. Yu. Finding collisions in
thefullSHA-1. InV.Shoup,editor,AdvancesinCryp-
tology–CRYPTO2005,volume3621ofLectureNotes
inComputerScience.Springer-Verlag,Berlin,Germany,
2005.
[50] B. R. Waters, D. Balfanz, G. Durfee, and D. K. Smet-
ters. Buildinganencryptedandsearchableauditlog. In
ISOCNetworkandDistributedSystemSecuritySympo-
sium(NDSS2004),2004.
[51] A.Yao. Theoryandapplicationsoftrapdoorfunctions.
InProceedingsofthe23rdIEEESymposiumonFounda-
tionsofComputerScience(FOCS’82),1982.