Secure Virtual Enclaves
February 4, 2000
Deborah Shands, Richard Yee
Jay Jacobs, E. John SebesOutline
Project Overview
SVE Architecture
Observations
Results/Conclusions
2/4/2000 2Coalition Examples
Commercial: outsourcing, contractors, or customers
needing limited access to corporate data
Civilian: disaster/incident response teams and crisis
management
Military: joint task forces engaged in distributed
collaborative planning
2/4/2000 3SVE Project Goals
Support collaborative computing
Provide mechanisms to control sharing
Enable unified approach to multiple distributed
application technologies (e.g., Java, DCOM, web apps.)
Support dynamic access policies, allowing changes to:
SVE membership, resources to be shared, and access
types permitted
2/4/2000 4SVE Project Constraints
Ensure application transparency
Retain organizational autonomy over local resources
Use only standard network protocols
Use only commercially available operating systems
2/4/2000 5Concept of Operation
enclaveA.com enclaveB.com
STOP
Services in SVE Principals in SVE
Legend: Services partly in SVE
Services not in SVE Principals not in SVE
2/4/2000 6SVE Concept of Operation
Virtual enclave: formed by collaborators sharing resources and
services
– Enclaves define limited trust relationships with one another
– Each enclave specifies internal resources accessible to partners
Secure virtual enclave: each enclave’s exports are
– Protected from access by non-SVE members
– Available to SVE members as specified by access policy
Dynamic modification: automatic reconfiguration due to
changes in SVE membership, resources, access policy
2/4/2000 7Outline
Project Overview
SVE Architecture
Observations
Results/Conclusions
2/4/2000 8Client-Server Architecture
Enclave A
Server
Server
SVE
Interceptor/
Enforcer
SVE
Gateway
Interceptor/
Enforcer
Client Client
Enclave B
2/4/2000 9SVE Infrastructure Architecture
SPEX SPEX
Policy Policy
Admin Admin
GUI GUI
GUI GUI
SVE Control Messages
SPEX SPEX
Controller Controller
Access Access Access Access Access Access
Calculator Calculator Calculator Calculator Calculator Calculator
Interceptor/ Interceptor/ Interceptor/ Interceptor/ Interceptor/ Interceptor/ Interceptor/ Interceptor/
Enforcer Enforcer Enforcer Enforcer Enforcer Enforcer Enforcer Enforcer
Enclave A Enclave B
2/4/2000 10SVE Policy Semantics
Current SVE policy semantics are very similar to Object-
Oriented Domain and Type Enforcement (OODTE)
Principals are mapped to a domain equivalence class
using a set of domain derivation rules
Resources are mapped to a type equivalence class
Access matrix is formed by associating a set of types
with a given domain
Principal recognition rules are domain derivation rules
that are published by an SVE member to allow its
principals to be recognized by other SVE members
2/4/2000 11Outline
Project Overview
SVE Architecture
Observations
Results/Conclusions
2/4/2000 12Enclave Autonomy
Organizations require a certain level of autonomy
Autonomy is a difficult requirement for distributed
security systems
SVE system supports autonomy
Most components of access policy used only within

the local enclave
An enclave may unilaterally withdraw from an SVE

at any time
Need to balance autonomy and collaboration
requirements via business decisions
2/4/2000 13Ambiguous Policy Semantics
Meaning of policy statements known only within defining
enclave (e.g., “manager” role)
How to prevent misunderstandings as coalitions are
formed???
Establish semantics offline

Represent and negotiate semantics within system

2/4/2000 14Outline
Project Overview
SVE Architecture
Observations
Results/Conclusions
2/4/2000 15SVE Prototype Results
Supports coalition sharing
Supports dynamic changes to both coalition membership
and resource access policies
Supports enclave autonomy
Provides experimental platform for studying security
policies for distributed systems
2/4/2000 16