Statistically Unique and Cryptographically Verifiable (SUCV) Identifiers and
Addresses
Gabriel Montenegro ClaudeCastelluccia
SUNLabs, Europe INRIARhoˆne-Alpes
29, cheminduVieux Cheˆne 655, avenuedel’Europe
38240Meylan,France 38330Montbonnot, France
gab@sun.com claude.castelluccia@inrialpes.fr
Abstract tion 10 compares our scheme with related work. Finally
Section11concludes.
Thispaperaddressestheidentifierownershipproblem. 2 ProblemStatement
ItdoessobyusingcharacteristicsofStatisticUniqueness
and Cryptographic Verifiability (SUCV) of certain enti- [1] argues that there is a fundamental problem in han-
ties which this document calls SUCV Identifiersand Ad- dling operations like Binding Updates (BU’s) in Mobile
dresses. Theircharacteristicsallowthemtoseverelylimit IP for IPv6 [16], source routing, etc, that allowshosts to
certain classes of denial of service attacksand hijacking modify how other hosts route packets to a certain desti-
attacks. SUCV addresses are particularly applicable to nation. Theproblem is that these operations canbe mis-
solvetheaddressownershipproblemthathindersmecha- used by rogue nodes to redirect traffic away from its le-
nismslikeBindingUpdatesinMobileIPv6. gitimate destination. Authentication does not solve this
problem. Even if a node unequivocally identifies itself,
keywords: Security,MobileIPv6,Addressownership. this has no bearing on its rights to modify how pack-
ets to any given address are routed. This is true even if
1 Introduction its packets currently seem to emanate from the address
in question. This last point is obvious if one considers
This paper addresses the identifier ownership prob-
DHCPleasedaddresses. Itisimperativenottoallowany
lem [1] by using characteristics of Statistic Uniqueness
node to redirect traffic for a DHCP address for which it
and Cryptographic Verifiability (SUCV) of certain enti-
held a valid lease previously. This would allow it to hi-
ties which this document calls SUCV Identifiers (SUCV
jacktrafficmeantforthecurrentvaliduseroftheaddress
ID’s). This paper also proposes using these SUCV char-
in question. Hence, protection against hijacking of valid
acteristics in related entities called SUCV Addresses in
addressesrequirescryptographicauthorizationforopera-
ordertoseverelylimitcertainclassesofdenialofservice
tionsthatmodifyrouting(BU’s,sourcerouting,etc).One
attacksandhijackingattacks. SUCVaddressescansolve
way to achieve authorization is by showing that the re-
the addressownership problem that hinders mechanisms
questing node owns the address for which routing infor-
likeBindingUpdatesinMobileIPv6.
mation is being altered. Quoting [1]: “Currently there
This paper is structured as follows: Section 2 defines
exists no specified mechanism for proving address own-
the address ownership problem. Section 3 presents the
ershipinInternet-widescale”.
notation used throughout this paper. Section 4 gives an
overviewofourproposal. Section5presentsSUCViden-
3 Notation
tifiersandaddresses,andhowtogeneratethem. Section6
describessucvP,theprotocolthatisusedbyamobilenode ThisSectionpresentsthenotationusedthroughoutthis
to prove owernship of its addresses to its correspondent paper.
nodesandtogeneratethesessionkeys.Section7presents
anextensiontosucvPforconstraineddevices(PDA’s,sen-
sors, phones, etc.). Section 8 explains how to provide
dataconfidentialityandlocationprivacywithsucvP.Sec-
tion 9 presents a security analysis of our proposal. Sec-
(cid:0)
prf: Pseudo-random function. SUCV mandates the
use of the keyed hash function HMAC [23] which
produces160bitsofoutput. Inputkeyisassumedto
alsobe160bits.
1(cid:0)
prfT:Pseudo-randomfunctionwhoseoutputistrun-
catedbytaking the Tleftmost bits ofthe output. In
SUCV,HMAC-SHA1isused,soprf96,forexample,
wouldbethekeyedhashfunctionHMAC-SHA1-96
[24].
(cid:0) hash: Cryptographic hash function, SHA-1 [28] for
SUCV.
(cid:0) hashT:Cryptographichashfunctionwhoseoutputis
truncatedbytakingtheTleftmostbitsoftheoutput.
(cid:0) SUCV:Statisticaluniquenessandcryptographicver-
ifiability,thepropertyexhibitedbytheidentifiersand
addresseswhicharethesubjectofthisstudy.Wealso
use SUCV to refer to the resultant mechanism as a
whole.
(cid:0)
sucvP: The protocol developed here, whose objec-
tivesareproofofaddressownershipandsessionkey
generation.
(cid:0)
sucvID:128bitidentifierobtainedasthekeyedhash
outputofthehashofthepublickey,usinganimprint
valueastheinputkey.
(cid:0)
sucvHID:64bitSUCVidentifierusedinsteadofthe
interface identifier, and combined with the routing
prefix to form an autoconfigured IPv6 address[13].
Obtainedasthekeyedhashoutputofthehashofthe
publickey,usinganimprintvalueastheinputkey.
(cid:0)
MIPv6:MobileIPv6[16].
(cid:0)
MN,HA,CN,BU,BAandCoA:Abbreviationsofmo-
bilenode,homeagent,correspondentnode,binding
update, binding acknowledgement and care-of ad-
dress,respectively,asdefinedbyMIPv6[16]
4 Proposal Overview
We assumethatwehaveanetworkinwhichthenodes
inherently distrust each other, and in which a global or
centralizedPKI(PublicKeyInfrastructure)orKDC(Key
DistributionCenter)isnotavailable.
Thegoalistoarriveat somefundamentalassumptions
about trust on top of which one can build some useful
peer-to-peercommunicationusingopportunisticsecurity.
But in such a network, is there a default rule we can
followsafely? Wepositthisisit:
(cid:0)
The above rule constitutes the only rule that operates
bydefault, allowinganyother more dangerousoperation
onlyifauthorizedbystrongcryptographicmechanisms.
In the absence of a third party, how does a principal
proveownershipofitsidentitytoapeer?Noticethatusual
owner verification relies on a third party to provide this
function. In our proposal, the principal self-generates a
private/publickeypair. However,itismuchmorepracti-
calfor protocolstousefixedlengthidentifiers(represen-
tations of identities). Because of this, we do not use the
public key itself as the identifier. Instead, the principal
uses material obtained via a prf of the public key as its
identity (or as part of its address), and provesits owner-
shipbysigningitwithitsprivatekey. Therecipientveri-
fiesthesignature,and,consequently,theownershipofthe
identity.Theseconsiderationsleadtothefollowingfunda-
mentalassumptionwithrespecttotheaboveDefaultTrust
Rule:
DefaultTrustRule:
Redirectoperationsareallowedonlywithaddresses
whicharesecurerlyboundtotherequestingentity.
(cid:0)
DefaultTrustRule:
Redirectoperationsareonlyallowedtoaffectrouting
forentitieswhichhavetheSUCVproperty.
5 SUCVIdentifiersand Addresses
InMIPv6,anodestartsusingitshomeaddress,andis-
sues BU’s as it moves. Handling these BU’s securely is
theissue. ItisneverevidenttotheCNthatwhoeverwas
using an address actually owns it. At the very most, the
MNcanprovethatatsomepointitwasusingacertainad-
dress,butitcannotproveownership. Ignoringthissubtle
distinctionleadstodenial-of-service(DOS)andhijacking
attacks.
Relying on ingress filtering may limit the risk, but es-
sentially, the only way for a node to prove ownership of
an identifier (in the absence of any other centralized or
global mechanism), is for it to prove that it created this
statisticallyuniqueseriesofbits.
5.1 SUCVIdentifiers
The idea is to use identifiers that have a strong cryp-
tographic binding with their public components (of their
private-publickeys). Thisisexactlythepurposethatcer-
tificates have. Let’s call them Statistically Unique Cryp-
tographicallyVerifiableID’s,orSUCVID’s.
Because of this, once a CN obtains information about
one of these identifiers, it has a strong cryptographic as-
surance about which entity created it. Not only that, it
knows that this identifier is owned and used exclusively
byonenode: itspeerinthecurrentexchange.
UsingidentifiersthatsatisfytheSUCVconditionsout-
lined above, it is possible to gain the tremendous advan-
tagethat othernodescansafelybelievethenodewhen itclaimsownershipofthatidentifier. Hencetheycansafely
heed its redirects when it says that it is now available at
some different CoA (and later at another). Furthermore,
youdonotrelyoningressfilteringtolimitexposure.
What should one use: pure identifiers with no routing
significance or addresses? With pure identifiers, routing
information must be included somewhere in the packet.
Thistakesupextraspaceinthe packetviahomeaddress
options,routingheadersortunnelingheaders.
A major advantage to using an address is that the data
traffic need not carry extra information in the packet to
guaranteeproperdeliverybyrouting. Becauseofthisitis
usefultocreateaddressesthatarebothroutableandsatisfy
theSUCVproperty: SUCVaddresses.
5.2 SUCVAddresses
InIPv6,addressesthatsatisfytheSUCVpropertymay
beobtainedasfollows(asitturnsout,thisisverysimilar
to,andwaspredatedby[4]):
(cid:0)
use the top 64 bits from your routing prefix (as in
[27])
(cid:0)
Where:
definethebottom64bitsasanSUCVID(calledthe
sucvHID).Usethese64bitsinsteadoftheinterface
identifierinIPv6[13].
The resultant 128 bit field is an identifier that is also
routable, avoiding the need for taking extra space in the
packetbysendingroutingoptions. Noticethatevenafter
moving,itispossibletoreusethesucvHIDportionofthe
address with the new networkprefix at the newlocation.
ThusitispossibletoreusetheHIDwithdifferentCoA’s.
Nevertheless,bysnoopingonbindingupdates,itispos-
sible for an attacker to learn the original network prefix
used by the home address. This tells an eavesdropper
where this home address beganto be used, and to which
networkitbelongs,potentiallyimportantinformation.
On the other hand, if you use a pure SUCV ID (with-
out any routing significance), then your packets will al-
ways need extra information somewhere to assure they
areroutedproperly. Eavesdroppersmaystillknowwhere
that identity is at any particular point in time. Neverthe-
less,thisisatangibleimprovementoveralwaysincluding
avalid64bitprefix,asthisdivulgesinformationaboutan
identity’stopologicalconnectivityorunderwhatprefix a
givenidentitybegantobeused(seeSection8).
5.3 GeneratingSUCVIdentifiersandAddresses
IdentifiersandaddressesforusewithSUCVaregener-
atedasfollows:
sucvID=hmac-sha-1-128(sha1(imprint),sha1(PK))
sucvHID=hmac-sha-1-64(sha1(imprint),sha1(PK))
(cid:0)
imprint: The imprint is a 64 bit field. It could be a
quantitythatdependsontheMN’slocationorsome-
thing created by the MN itself (a random value, for
example). Theobjectiveistousetheimprinttolimit
certain types of brute-force attacks (see Section 9.1
bylimitingtheirapplicability,orbyforcinginterac-
tionwiththeMN.
(cid:0)
PK:ThepublickeyistheDSApublickey.
Note that according to [13], the leftmost 3 bits of the
sucvID can be used to unequivocally distinguish them
from IPv6 addresses. Accordingly, we assume only 125
bitsmaybeused. Additionally,bit6ofthesucvHID(the
universal/local) has to be set to zero to indicate that the
sucvHIDisnotguaranteedtobegloballyunique.
6 SUCVProtocol (sucvP)Overview
Thefollowingprotocol,sucvP,isrunbetweenaMNand
anarbitraryCNto:
(cid:0)
prove the Mobile host home address and possibly
CoAownership
(cid:0)
to establish an IPSec ESP SA (Skey, Lifetime, SPI)
between the MN and itsCN thatwillbe usedto se-
cureMIPv6BUs.
As for the choice of using AH or ESP to protect the
binding updates, we chose the latter, because we believe
there is no added value in protecting the IP headers of
BU’s once a security association has been established.
ThisandtheheateddebateonthefutureofAHconvinced
ustouseESP.
sucvPisfunctionallyindependent ofMIPv6, andis,in
fact,aseparateprotocol. sucvPprovidestheauthorization
for the MIPv6 BU’s, but the authentication is provided
by IPsec ESP. These are two separate steps which could
run serially. For example, the sucvP step could be car-
riedoutoverUDP(asourinitialexperimentalimplemen-
tationdoes),afterwhichtheESP-authenticatedBUcould
besent.
Howeverforefficiencyreasons, sucvPmessagesmight
containMIPv6BUs(alongwithsucvP3).
InorderforsucvPtosetupanIPsecsecurityassociation
(including an SPI) just in time to process an ESPheader
and its encapsulated BU, the sucvP payload is carried as
an IP protocol number (currently unassigned). Further-
more, it must precede the ESP payload used to authenti-
catethebindingupdate.
6.1 GoalsandConstraints
ThisdesignallowssucvPtosatisfythesetwoobjectives:(cid:0)
notaffectexistingIPsecimplementationsmorethan
absolutelynecessary
(cid:0)
supportefficientBUprocessingbyreducingasmuch
aspossiblethenumberofroundtrips.
Furthermore,weassumethereisnopiggybackingwith
theBU,sonofurtherpayloadfollows.
sucvPhasbeendesignedbasedonthefollowingconsid-
erations:
1. the protocol should not rely on a third party (i.e. a
global PKI, central key distribution center, etc), al-
thoughitcoulduseoneifavailable
2. notallnodesneedtouseSUCVaddresses,onlythose
thatwishtheirbindingupdatestobeheeded(mobile
nodes)
3. notallnodesneedtoverifythevalidityofSUCVad-
dresses,onlythoseCN’sthatacceptandhandlebind-
ingupdatesfromMN’s(theseCN’smustuseSUCV
as explained below to safely populate their binding
caches)
4. sucvP packets are exchanged directly between the
mobile node and its correspondent nodes. They are
notroutedthroughtheHomeagentbecausethemo-
bilenodemightbehomelessorthehomeagentmight
beoutoforderforacertainperiodoftime. Theim-
plicationsforthisdecisionareexploredbelow.
6.2 PacketExchanges
Theproposedprotocolthatamobilehostusestosenda
BUtoitsCNisthefollowing:
(cid:0) sucvP1- The MN sends a sucvP1 message (just to
initiatetheexchange)toitscorrespondentnode.This
message contains a Nonce, N1. This packet may
contain a MIP HomeAddress Option containing the
MN’shomeaddress. TheCNmightsometimesneed
thehome addressto decidewhether itwantsto pur-
suetheprotocolexchangeornot. Thesourceaddress
of the packet is the MN’s current CoA. Addition-
ally,SUCVsupportsaverysimplenegotiationmech-
anism that works as follows: Optionally, the MN
can express its desire to use certain Diffie-Hellman
groups(fortheephemeralDHexchange),aswellas
algorithms for ESP authentication and for ESP en-
cryption.
(cid:0)
sucvP2- The CN replies with a sucvP2 mes-
sage that contains the following: N1, Client puz-
zle request, Diffie-Hellman value (
(cid:1)(cid:3) (cid:2)(cid:5) (cid:4)(cid:7) (cid:6)(cid:9) (cid:8)(cid:11) (cid:10)
sucvP1, by choosing those algorithms it wishes to
support.
In order to defend against sucvP1 storms, a host
might use the same Diffie-Hellman (DH) value for
a period of time. ThesucvP2 contains a client puz-
zle to prevent DoS attacks [20]. Along these line,
the CN may wish to ignore the optional negotiation
ofparametersinitiatedbytheMNinsucvP1. Inthis
case,thedefaultalgorithms(seeSection6.4)mustbe
usedbybothparties.
When the MN receives sucvP2, it verifies that the
nonceN1isthesameaswhatwassentinsucvP1. It
thensolvesthepuzzle. Atthisstageoftheprotocol,
theMN:
1. generates a DH value (
), Ses-
sion Key lifetime. The CN may respond to any op-
tional parameter negotiation included by the MN in
(cid:1)(cid:13) (cid:12)(cid:9) (cid:4)(cid:14) (cid:6)(cid:9) (cid:8)(cid:15) (cid:10)
) and derives
from it and the DH received from the CN the
sessionkeys(seeSection6.3).
2. computes
(cid:16)(cid:18) (cid:17)(cid:13) (cid:19)(cid:5) (cid:20)(cid:22) (cid:21)(cid:24) (cid:23)(cid:26) (cid:25)(cid:15) (cid:27)(cid:29) (cid:28)(cid:5) (cid:30) (cid:31)
(the ESP session key
usedtoauthenticatetheMIPv6bindingupdate
- see Section 6.3) lifetime asthe minimum of
the lifetimevaluesuggested bythe CNand its
lifetimevalue.
3. builds an IPSec SA. If ESP is used subse-
quently in the packet to secure a Binding Up-
date, the MN must use a fixed SPI assigned
fromtherange1to255(currentlyunassigned).
4. sendsasucvP3packet. Notethatthismessage
issentdirectlyfromtheMN’sCoAtotheCN.
(cid:0)
sucvP3- A sucvP3 message contains the following
fields: Puzzle reply, Public key and imprint it has
usedtogenerateitsHID,aDiffie-Hellmanvalue,the
(cid:16)(cid:5) (cid:17)! (cid:19)(cid:15) (cid:20) (cid:19)(cid:9) (cid:16)" (cid:10)$ #& %$ ’(cid:24) (
lifetimeandanSPI fortheCNtouse
when sending BA’s (secured via ESP) to the MN.
ThismessagemustbesignedbytheMNwithitspri-
vatekey(thepublickeyisusedtogeneratetheHID).
Note that this sucvP3 might be followedby an ESP
header authenticating an encapsulated BU. The au-
thentication is performed using the SA available in-
linewithinthissucvP3packet.
WhentheCNreceivesthesucvP3,itfirstchecksfor
avalidPuzzlereply.Itverifiesthesignatureusingthe
includedPublickey,andthenverifiesthatthisPublic
keyandimprintproducethesucvHIDusedaspartof
thesender’saddress(asperSection5.3. TheCNcan
then conclude that the MN owns its the Home and
CoAaddresses.
Atthispoint,theCNmakesanoteofthisPublickey
andHID.
The CN can then compute the session keys (using
theephemeralDHvalueasdescibedinSection6.3).From the fixed SPI, the CN learns that the secu-
rity association material is all inline in sucvP3. It
proceeds to build an IPSec SA and processes this
ESPheader. InpreparationforsubsequentESPpro-
cessing of BU’s, it computes an SPI and sends it in
sucvP4.Afterthispoint,andthankstothisSPI,IPsec
usage revertsto normal, i.e., future BU’s can be se-
cured via ESP, unaccompanied by any inline sucvP
material.
(cid:0)
sucvP4- In sucvP4, the CN sends an SPI. The MN
will use this SPI in association with ESP in order
to authenticate subsequent BU’s. The CN authenti-
cates sucvP4 with HMAC-SHA1 using the Session
key
)(cid:26) *+ (cid:17)(cid:13) (cid:19)(cid:5) (cid:20) (cid:16)(cid:15) %- ,(cid:29) .(cid:13) /
derived previously. Additionally,
aCNthatusesanSUCVaddresscouldsignsucvP4
instead. ThispossibilityisexploredbelowinSection
8.
ACNmayincludeaBA(bindingacknowledgement)
alongwithsucvP4,andifso,itmustuseESPforau-
thentication. TheSPI usedisthatcommunicatedby
theMNinsucvP3. WhentheMNreceivesasucvP4,
it must make note of the SPI corresponding to the
CN.
AslongastheMNusesthesameHIDinterfaceidenti-
fierforitsCoA,itdoesnothavetoprovetheCoAowner-
shipandBUauthenticationisenough.
Proving the CoA ownership can be veryuseful to pre-
ventamalicioushostfrombombingavictimwithpackets
byusingthevictim’saddressasCoA. Forexample, with
“regular”Mobile IPv6, a host canstart a big filetransfer
fromaserverandthensendaBUwiththevictim’saddress
asCoAtotheserver.Asaresult,thefilewillbesendtothe
victim. IfanhostcanprovethatitownsitsCoA,andthat
therefore it is not using someone’s else address as CoA,
thisattackcanbeavoided.
IfforanyreasontheMNconfiguresitsCoAwithanew
interface identifier, it must restart the whole protocol se-
quence.
6.3 DerivingtheSessionKeys
We need to generate keying material and keys for the
SUCVprotocolitselfandforusewithESP.
(cid:16)(cid:18) (cid:17)(cid:13) (cid:19)(cid:5) (cid:20)(cid:3) (cid:4)(cid:7) #(cid:22) ’1 02 (cid:10)$ 3(cid:9) 45 )6 (7 #(cid:13) (cid:16)(cid:18) (8 )9(cid:1) (cid:12) (cid:2) (cid:4)(cid:7) (cid:6)(cid:9) (cid:8)(cid:11) (cid:10): /(cid:29) ;" <> =& ?@6 (cid:4)A (cid:10)7 3(cid:18) @C BD ’(cid:24) /
whereN1isthenonceusedinsucvP1andsucvP2.
6.3.1 SUCVSessionKey
(cid:16)(cid:5) (cid:17)! (cid:19)(cid:15) (cid:20) (cid:16)(cid:15) %- ,E .A 02 (cid:10)$ 3(cid:9) 45 )6 (cid:16)(cid:18) (cid:17)(cid:13) (cid:19)(cid:5) (cid:20)& (cid:4)(cid:7) #& ’(cid:29) ;F (cid:1) (cid:12) (cid:2) (cid:4)(cid:7) (cid:6)(cid:9) (cid:8)(cid:11) (cid:10)5 ?<> =& ?@6 (cid:4)A (cid:10)7 3(cid:18) @C BD ’(cid:11) ?G(cid:22) /
UsedwithsucvP4for: authentication,andoptionallywith
sucvP5(seeSection8)forbothauthenticationandencryp-
tion.
6.3.2 KeysforESP-protectedBindingUpdates
(cid:16)(cid:5)
(cid:10)7
(cid:17)!
3I
(cid:19)(cid:15)
45
(cid:20)(cid:3)
)(cid:26)
(cid:4)(cid:7)
(cid:16)(cid:18) (cid:17)(cid:13)
#&
(cid:19)(cid:5)
’
(cid:20)(cid:3)
(cid:19)(cid:9)
(cid:4)(cid:14)
(cid:16)" (cid:10)$
#&
#& %-
’(cid:29) ;J (cid:16)(cid:5)
’(cid:24)
(cid:17)!
(H
(cid:19)(cid:15)
0
(cid:23)K(cid:20) (cid:28)(cid:9) LC M ?(cid:1) (cid:12) (cid:2)(cid:13) ?<> =& ?@6 (cid:4)A (cid:10)7 3(cid:18) @C BD ’(cid:11) ?N=(cid:5) /
Used to authenticate BU’s unaccompanied by SUCV
packets(oncesucvPiscompleted).
Note that whereas
(cid:16)(cid:18) (cid:17)(cid:13) (cid:19)(cid:5) (cid:20) (cid:16)(cid:15) %: ,(cid:29) .
is the actual key used
bytheSUCVprotocol,
(cid:16)(cid:5) (cid:17)! (cid:19)(cid:15) (cid:20)(cid:3) (cid:4)(cid:7) #& ’ (cid:19)(cid:9) (cid:16)" (cid:10)$ #& %- ’(cid:24) (
iskeyingma-
terial used to derive the real key for use with ESP, i.e.
(cid:16)(cid:18) (cid:17)(cid:13) (cid:19)(cid:5) (cid:20) (cid:19)(cid:9) (cid:16)(cid:24) (cid:10)- #& %$ ’(cid:24) (
inanalgorithm-specificmanner.
6.4 DefaultAlgorithms
The following algorithms must be supported by any
SUCVimplementation:
(cid:0)
DSA[5]forsigningsucvP3.
(cid:0)
Diffie-Hellman Oakley Group 1 [25] for the
ephemeralDiffie-Hellmanexchange.
(cid:0)
HMAC-SHA-1-96[24]forESPauthentication.
(cid:0)
3DES-CBC[26]forsucvP5andESPencryption.
7 ExtensionforConstrained Devices
InoursucvPprotocol,aMNmust:
1. generateaDSApublic/privatekeypair.
2. signthesucvP3message.
3. performaDHexponentiationtoderivetheSkey.
Alltheseoperationsareverycomputativallyexpensive
especiallyiftheMNisaconstraineddevice(i.e.aPDAor
asensorwithlimitedmemory,batteryorCPU)[3]. Ellip-
ticcurvecryptographicalgorithmsmightbemoreefficient
butstilltooexpensivetoexecuteforaconstraineddevice.
Inthissection,weproposeanextensiontoourscheme
forthistypeofcontraineddevices.Ourgoalistooff-load
most of the expensivecryptographic operations of a MN
toitsHA.WeassumethattheMNandHAshareasecret
key,possiblyobtainedviaimprinting[7],andthattheMN
trustsitsHA.
Theproposedextensionoperatesasfollows:
1. the HA generates the DSA keys (public and private
keys) and sends the public Key to the MN via the
securedchannel.2. the SUCV id and HID is generated by the MN it-
self by choosing a
(cid:17)
and computing sucvHID =
prf64(hash(publicKey),k).
3. whenaMNwantstoinitiateasucvPexchangewith
CN, itsends a
*P OR QR S 3(cid:9) (cid:19)(cid:18) T(cid:18) %- (cid:19)(cid:9) (cid:16)(cid:15) ’
messages, that con-
tainstheCNaddressandthekvalue,toitsHA(au-
thenticated with the shared key). The HA then ini-
tiates a sucvP exchange with the CN. The HA then
provesthatitknowstheprivatekeycorrespondingto
thepublicbysigningtheexchangedmessages(sucvP
hastobeslightlymodifiedhere)andgeneratesases-
sionkey,
*1 UV (cid:19)(cid:5) (cid:20)
usingDHalgorithm.
4. TheHAthensendstheSkeytotheMNviathesecure
channel.
5. TheMNcanthensendauthenticationBUstotheCN
usingthe
*1 UV (cid:19)(cid:5) (cid:20)
.
Withthisextensionalltheexpensivecryptographicop-
erations are offloaded to the home agent but the session
key that is used to authenticated the MIPv6 BU (
*W (cid:17)(cid:13) (cid:19)(cid:5) (cid:20)
)
is only known to the MN, its HA and the CN. A mali-
cious host that wants to redirect a MN’s traffic needs ei-
thertodiscovertheHA-MNsecretkeyortofindapublic
key/privatekeypairanda
(cid:17)(cid:13) X
suchthat
(cid:16)(cid:15) %: ,(cid:29) .(cid:3) Y[ Z(cid:22) \] 0> (cid:10)7 3I 4: ^I _- )(cid:26) ($ #(cid:3) (cid:16)(cid:18) (8 )‘(cid:10)$ %: a(cid:29) b @K ,(cid:11) /(cid:29) ;J (cid:17) X/
identifiers(asopposedtomorepermanentorlonger-lived
SUCVID’s)forthispurpose.
Furthermore, if nodes wish to have higher protection
against attackers than what is afforded by 63 bits in the
sucvAddr,theycanuseansucvID.Theprotocolexchange
isthesame,butsinceansucvIDisapureidentifierwith-
outanyroutinginformation,theMNisrestrictedtobeing
a client. Of course, asshownbelow,routing information
mustbeincludedsomewhereinthepacket,viahomead-
dressoptionsandroutingheaders(alternatively,tunneling
headerscouldbeusedaswell).
8.2 SupportforConfidentiality
8.2.1 Confidentiality
Ifconfidentialityisaconcern,thereisthepossibilityofan
intruder in the middle gaining knowledge of the session
keys,asexplainedinSection9. Infact,sucvPpreventsan
intruder from impersonatinga Mobile node but notfrom
impersonating a correspondent node. As a result, a MN
mightthinkthatitistalkingwithitsCNwhereasitisac-
tuallytalkingwithanintruder.TheMNmaywishtomake
sureitisindeedtalkingtoagivenCNwhoseaddressithas
previouslyobtained(via,forexample,aDNSsearch,ora
preconfiguredlist). IfinadditiontotheMN,theCNalso
usesanSUCVaddressthisproblemcanbeprevented.We
suggest that a CN uses a SUCV address when confiden-
tiality is an issue and that the CN signs sucvP4 to prove
itsaddressownership.Bydoingso,bothMNandCNhave
Bothareverydifficulttoachieve.
theassurancethattheyaretalkingtoeachotherandnotto
anintruder.
8 Privacy Considerations
A normal sucvP exchange consists of sucvP1 through 8.2.2 LocationPrivacy
sucvP3,andasubsequentsucvP4authenticatedusingthe
InMobileIPv6:
sessionkey.Thisbasicprotocoldoesnotallowanyhijack-
ingattacks,soitalreadyfulfillsthesecurityrequirements
forprotectingBU’sinMIPv6asdefinedbytheMobileIP
workinggroup[17].
8.1 SupportforRandomAddresses[27]
Afirstconcernregardingprivacyishowtouserandom
addressesasdefinedinRFC3041[27]inamobileenviron-
ment. Theissuehereisthat,whereastheseaddresseshide
anode’spermanentidentifier(perhapsderivedfromIEEE
addresses), the node cannot prove address ownership of
themsoitcannotsafelysendbindingupdates.Thismeans
thatanMNcannotuseRFC3041addresseswithrouteop-
timization. SUCV addresses are indistinguishable from
those defined in RFC3041, with the added benefit that
an MN can use them in a route optimized fashion. The
basic sucvP outlined above in Section 6 already handles
this case. Theonlyconsiderationisthatnodes interested
in being anonymous may want to use ephemeral SUCV
(cid:0)
each packet (BU and data) sent by a MN contains
a HomeAddress option that reveals the MN’s home
address.
(cid:0)
each packet sent to a MN contains a routing header
withtheMN’shomeaddress.
As a result it is very easy for any host in the network to
track the location of a MN by snooping its packets. If
location privacyis an issue, a MN can use an ephemeral
homeaddress
(cid:16)(cid:11) %: ,(cid:29) .(cid:3) cd \H \f eg (cid:21)(cid:26) (cid:25)(cid:15) (cid:31)(cid:18) (cid:21)K h
insteadofitsactualone
andonlyrevealitsactualhomeaddresssucvADDRtoits
CN (see [15] for more details). Packets (BU and data)
sent over the network then use the ephemeral home ad-
dress
(cid:16)(cid:15) %- ,(cid:29) .(cid:3) cd \f \H eg (cid:21)6 (cid:25)(cid:11) (cid:31)(cid:18) (cid:21)K h
.
This privacy extension can actually be applied to our
proposal. The MN will need an ephemeral SUCV iden-
tity
(cid:16)(cid:15) %- ,E .& Z& \ (cid:21)(cid:26) (cid:25)(cid:15) (cid:31)(cid:5) (cid:21)F h
, and defer revealing its more perma-
nentSUCVidentitysucvIDaftertheCNhasprovenown-ershipofitsaddress. Thisisaccomplishedroughlyviathe
followingextendedprotocolsequence:
(cid:0)
sucvP1: asusual
(cid:0)
sucvP2: theCNaddsabittoadvertiseitsSUCVca-
pabilities
(cid:0)
sucvP3: the MN proves ownership of its
(cid:16)(cid:15) %: ,(cid:29) .& ci \H \H ej (cid:21)(cid:26) (cid:25)(cid:15) (cid:31)(cid:18) (cid:21)K h
(derived from an ephemeral
public-private key. At this point, the MN derives
session keysbut isnotyetsureitsharingthemwith
theCNitself.
(cid:0) sucvP4: the CN provesownership of its SUCV ad-
dressbysigningsucvP4withitsprivatekey,atwhich
pointtheMNknowsthesessionkeyshavenotbeen
compromisedbyanintermediary.
(cid:0)
sucvP5: theMNusesthesessionkeyobtainedabove
to send an encrypted payload revealing its actual
SUCV Home Address sucvADDR. sucvP5 must be
signedwiththekeyusedtogeneratethesucvADDR
inordertoproveitsownership.
NoticethatiftheMNwishestousethestrongermode,
it can do so by using an
(cid:16)(cid:15) %: ,(cid:29) .(cid:3) Z(cid:22) \ (cid:21)(cid:26) (cid:25)(cid:15) (cid:31)(cid:18) (cid:21)K h
and sucvID in-
stead of
(cid:16)(cid:15) %: ,(cid:29) .& ci \H \H e (cid:21)(cid:26) (cid:25)(cid:15) (cid:31)(cid:18) (cid:21)K h
and sucvAddr, respectively.
Asinthediscussionabove,thisprovidesformoreprotec-
tionagainstattackers,withtheprovisothattheMNisnow
limitedtobeingaclient.Thatis,itmustinitiatecommuni-
cationwiththeCN,becauseitisnowusingnon-routable
entities(SUCVID’sversusSUCVAddresses).
9 Security Analysis
9.1 HashIDSizeConsiderations
InSUCVaddresses,oneofthelower64bitsisreserved
as the local/universal bit (the u bit), so only 63 bits are
actuallyusableasahash.
Suppose the hash function produces an n-bit long out-
put. If we are trying to find some input which will pro-
duce some target output value y, then since each output
isequallylikelyweexpecttohavetotry
k(cid:3) lnm(cid:3) oq pF r
possible
inputvaluesonaverage.
On the other hand, if we are worried about naturally
ocurring SUCV address duplications, then by the birth-
dayparadoxwewouldexpectthataftertrying
=(cid:22) ski tu k m! v k
possibleinputvalueswewouldhavea
wI G& x
probabilityof
collision[8].
Soif
By 0z ^| {
,youneeda populationof
=(cid:22) skj ti kI } pJ ~(cid:127)
i.e.
{! s^I _q tq =(cid:15) G| (cid:128)
thesame64bitprefix),andhavethesamecorrespondent
nodes. This is veryunlikely. Additionally,assuming the
collision is not deliberate the duplicate address detection
(DAD)willdetectit.
IfanattackerwishestoimpersonateagivenSUCVad-
dress,itmustattempt
nodesonaveragebeforeanytwoproducedupli-
cate addresses. This is acceptable especially if you con-
sider that this collision is actually harmfull only if the 2
hosts (that collide) are in the same site (i.e. they have
kI (cid:129)(cid:131) (cid:130)
(i.e. approximately
_$ s(cid:132)j tj =(cid:15) G pF (cid:133)
)
tries to find a public key that hashes to this SUCV ad-
dress. Iftheattackercando1millionhashespersecondit
willneed142,235years. Iftheattackercanhash1billion
hashesperseconditwillstillneed142years.
If we use SUCV Addresses as suggested in RFC3041
(perhapsrenewingthemasoftenasonceevery24hours),
an attacker would then have to to hash
w(cid:13) s{(cid:134) t(cid:135) =(cid:5) G& p } hashes/secondinordertobeabletofindapublickeythat
hashestothesucvHIDofagivenhost.
Note that the previousanalysis only considers the cost
ofcomputingthehashofthepublickey. Additionally,an
attacker must also generate a valid (public, private) key
pair. Thisisasignificantlymoreexpensiveoperation.
Thiswouldstillleaveopenthepossibilityofbrute-force
attacks[19].Inthisscenario,abadguyBGcouldgenerate
a huge table of PK’s and their corresponding HID’s, as-
suminganyfixedimprint. Itcouldthenlookformatching
realIPaddresses. Bydoingsoitwouldidentifya victim
forahijackingattack.BGcansendaBUtoanyCNwith-
outabindingentryforthevictim’saddress(forexample,
bytargettingnon-mobilefixedhostsasvictims).
In general, such attacks are possible with hash func-
tions, but notwith keyedhash functionsbecause they re-
quireinteractingwiththelegitimateuser[9]. Noticethat
normalusageofkeyedhashfunctionsrequiresanauthen-
ticatedsecret,whichwedonothave.Nevertheless,wecan
still limit exposurebycreating theHID (orID) using (in
additiontothePublickey)somekeyorknownstatethatis
establishedinadvanceofthesucvPinteractionitself,and
whichwillforceinteractionwiththeMN.Thisistherole
oftheimprint,sentbytheMNtotheCNinsucvP.Since
theimprintisnotauthenticated,theCNcouldverifyitin-
dependently of sucvP, perhaps by checking directly with
theMNbyroutingitviatheHA.True,theimprintisnota
secretasexpectedforHMACuse,butitservestoseverely
limitwhichentitiescanlaunchtheattacktoonlythoseen-
tities with this priviledged location, and within this time
period. Asanotherpossibility,theimprintmayinsteadbe
aquantitywhichtheCNknowsabouttheMN,andwhich
theCNcanverifyindependentlyusingaseparatesubsys-
tem (DNS, routing fabric, etc). Inthis case, the attackis
limited to only those nodes for which the imprint is also
avalidquantity. TyingtheHIDinthis mannermayhave
undesirableconsequenceswithregardstoprivacyandlo-
cationindependence(forexamplehomelessoperation).
Alternatively,onecouldalwaysusesucvID’s(inwhich
casethebrute-forceattackswouldbenearlyimpossible).Evenfor HID’s, actually carrying out such brute-force consideredsafeforanother20yearsorso.However,ifwe
attacks remain highly unlikely in practice, and we claim wanttokeepupwiththestrengthaffordedbythesucvID
ourschemeremainssecureevenwithoutrequiringanyof itself, we would need to use other MODP groups [18].
theabovecounter-measures. Forexample,MODPgroup5withexponentsof1563bits
shouldbeenoughtoderive90bitsymmetrickeys.MODP
9.2 Keysizeconsiderations group6with2048bitsshouldbeusedtoproduce100bit
symmetrickeys.
There are three ways that an attacker could break the
MIPv6securityprotocolpresentedinthepaper: 9.3 Intruder-in-the-middleattacks
1. IfanattackerfindaDSApublic/privatekeypairthat AsdescribedinSection6,amobilenodeanditscorre-
hashes to the MN’s sucvID, it can run a sucvP ex- spondentnodederiveashared(symetric)keytoauthenti-
changewithaCNandimpersonatetheMN.Thiscan catetheMIPv6BindingupdatessentbytheMN.
beachievedbyabruteforceattack.Theattackertries TheMNanditsCNderivethesharedkeyusingDiffie-
severalpublickeysasinputtothehashfunctionused Hellmanalgorithm.
to generate the sucvID. The difficulty of this attack
depends on the size of the sucvID and is at least as
hardasbreakingasymmetrickeyalgorithmthatuses
thesamekeysizeasthesucvIDsize(actuallythisis
more difficult because the attacker must also gener-
ate valid public/privatekey pairs before performing
thehashfunction).
2. Ifanattackercanfindthepublic/privatekeypairthat
is used to generate the sucvId and sign sucvP3, an
attackercanimpersonateaMNinsucvP.Breakinga
DSAsystemdependsontheDSAmodulusandsub-
group.
3. Ifanattackercanretrievethegeneratedsessionkeyit
cansendfakeBU’sonbehalfoftheMNandredirect
itstraffic. Anattackerhastwowaysofretrievingthe
session key: (1) generate it from the DH values ex-
changedbetweentheMNandtheCN,or(2)perform
a brute-force attack on the session key itself. The
difficultyoftheseattacksdependrespectivelyonthe
DHmodulussizeandthesessionKeysize.
A security system is consistent if all the components
ofthesecuritychainprovidethesamesecuritylevelsand
noneofthemisaweaklink.
Most of the security parameters used in our proposal
(DHmodulussize,Sessionkeysize,DSAsubgroup)can
beadjusted. TheonlyfixedparameteristheSUCVidenti-
fieritself.Itiseither63bitslong(i.e.weuseansucvHID)
or125bitslong(ifusingansucvIDitself).
If we use sucvHID’s, the security of our proposal de-
pends on these 63 bits. Accordingly, the symmetric key
strengthshouldnotbeless,notwouldwegainmuchbyit
beingsignificantlystronger. Inlightof[6],Oakleygroup
1isaboutenoughforthisapplication(althoughthereare
othermoreconservativeviews[14]).
However,ifweusesuvcID’s,wewillneedasymmetric
keystrengthof almost128 bits (125bits) ofoutputfrom
ourprf. Noticethat96bitssymmetrickeysaregenerally
(cid:0)
The CN chooses a random secret y and sends
(cid:1)(cid:3) (cid:2)(cid:18) (cid:4)(cid:7) (cid:6)(cid:9) (cid:8)(cid:11) (cid:10)
totheMN(intheDHvaluefieldofsucvP2)
(cid:0)
The MN chooses a random secret x and sends
(cid:1) (cid:12) (cid:4)(cid:14) (cid:6)(cid:9) (cid:8)(cid:15) (cid:10)
toitsCN(intheDHvaluefieldsucvP3)
The session key shared by the MN and its CN is then a
hash digest of
(cid:1) (cid:12) (cid:2)(cid:5) (cid:4)(cid:14) (cid:6)(cid:9) (cid:8)(cid:15) (cid:10)
(g and p are known by the MN
andCN).
9.3.1 SummaryoftheAttack
DiffieHellmanisknowtobevulnerabletotheintruder-in-
the-middleattackonun-authenticatedDHkeyagreement:
CN -->gˆy-->Intruder-->gˆy_i-->MN
CN<--gˆx_i-->Intruder<--gˆx<--MN
Theintruderintercepts
(cid:1)(cid:13) (cid:2)
sentbytheCNandsends
(cid:1)(cid:3) (cid:2)J (cid:136)
totheMN.Theintruderalsointercepts
(cid:1)(cid:3) (cid:12)
sentbytheMN
and sends
(cid:1) (cid:12) (cid:136)
to the CN.Asa result, MN sharesthe key
(cid:1) (cid:12) (cid:2) (cid:136)
with theintruder(it actuallythinks thatitissharing
thiskeywithitsCN).TheCNsharesthekey
(cid:1) (cid:12) (cid:2)(cid:136)
withthe
intruder (it actually thinks that it issharing this keywith
theMN).TheIntrudercanthenimpersonatetheMNand
theCN.
In our protocol, the MN signs sucvP3 (with contains
(cid:1) (cid:12)
). As a result, the intruder can not modify nor replace
thismessage. Thisonlythingthattheintrudercoulddois
thefollowingattack:
sucvP1: CN<--HID’-->Intruder<--HID<--MN
sucvP2: CN-->gˆy-->Intruder-->gˆyi-->MN
sucvP3: CN<--gˆxi-->Intruder<--gˆx<--MN
In sucvP1, MN sends its
YV Z(cid:22) \
by virtue of sending
fromitsaddress(theHIDisjustthebottom64bitsinthe
address). Theintrudercouldreplacethis
Y[ Z& \
byanother
value, say
YV Z(cid:22) \(cid:138) (cid:137)
, without affecting return routability, as
long as the prefix remains the same. In sucvP2, the CN
sends its DH value
(cid:1) (cid:2)
, which is replaced by the intruder
for
(cid:1)(cid:13) (cid:2) (cid:136)
. InsucvP3, the MN sends its
(cid:1) (cid:12)
. Noticethat the
intrudercanreplaceitbyanother
(cid:1) (cid:12) (cid:136)
aslongasthis
(cid:1) (cid:12)(cid:137)
is
usedtocreate
Y[ Z& \ (cid:137)
.9.3.2 Risks
Thekeyscreatedarederivedfrom:
(cid:1) (cid:12) (cid:2)(cid:131) (cid:136)
(betweentheMN
and the intruder) and
(cid:1)(cid:13) (cid:2) (cid:12) (cid:136)
(between the intruder and the
CN).
SotheintrudercannotpassitselfoffasMN(assuming
it is computationally unfeasible to find another private-
publicpairthatgeneratesthesameHID).Itcan,however,
pass itself off as
(cid:139)(cid:140) <(cid:141) (cid:137)
, where this is the address formed
from
Y[ Z& \(cid:138) (cid:137)
. Thismeansthatitisnotpossibleforanin-
truder to hijack an existing communication between MN
andCN.Butiftheintruderispresentattheverybeginning
of the communication, and if it sits on the path it could
supplant MN. In so doing it could obtain knowledge of
anysessionkeysderivedforthiscommunication.
Ifthesessionsupportedencryption,theendpointsmight
beledtobelieveintheprivacyoftheirconversation,obliv-
ious to the fact that the intruder could snoop. For exam-
ple,supposeanMNestablishedansucvPsessionwithan
CN. Subsequently,and using this optimized path, an ap-
plication (for example telnet) started. If a security pol-
icydatabaserequiredallsuchapplicationtraffictobeen-
crypted,amisconfiguredsystemmightleveragetheexist-
ing sucvP session and use ESP for confidentiality. This
wouldresultintheintermediarybeingprivytoalltheap-
plicationtraffic.
Becauseofthis,sucvPsessionkeysmustnotbeusedfor
anythingmorethansecuringBU’s. Inotherwords,IPsec
trafficselectorsintheSPDmustlimituseofSA’sobtained
viasucvPforthesolepurposeofsecuringBU’s. Inorder
to avoid anypotential misapplication of these SA’s BU’s
mustnotbepiggybacked.
Not heeding the above guidelines may result in the
aforementioned snooping attack. Nevertheless, the at-
tacker would have to remain on the path forever. This
interception is possible because of the non-authenticated
nature of the example. Of course, if the exchange is
authenticated, perhaps as contemplated by default by
HIP[10,11,12],thiswouldnotbepossible. Evenifthis
interceptionispossible,oncetheintruderceasestobeon
the path between MN and CN there is nothing further it
cando. Inotherwords,theuseofunauthenticatedSUCV
entitiesdoesnotaddanyrisktothosethatcurrentlyexist.
EvenunauthenticatedSUCV,eliminatesthepossibilityof
onthepathredirectionoftraffic. Noticethatwithcurrent
MIPv6, “offthepath” (as well as “on the path”)redirec-
tionoftrafficispossible.
Insomecase,aMNmightrequesttoitsCNtoacknowl-
edgethereceptionoftheBU.Theintrudercouldactually
fooltheMNbysendinganacknowledgementwiththeCN
addressassourceaddress(notethattheintrudercouldalso
authenticate this acknowlegementsince it knowsthe key
used by the MN,
(cid:1) (cid:12) (cid:2)
packets from the CN via its home agent (note that the
sameproblemexistsalsowillcurrentMobileIPv6speci-
fication)!
OnesolutiontotheseproblemsisforthetheCNtouse
an SUCV address and to sign sucvP2 (the message that
contains the DH value). Then, the intruder will not be
abletosubstitute
). This might confuse the MN that
hasreceivedanacknowledgementbutkeepsreceivingthe
(cid:1)(cid:13) (cid:2)
by
(cid:1)(cid:3) (cid:2) (cid:136)
.
Of course, the intruder can hinder successful comple-
tion oftheSUCV protocol, thus preventingtheCNfrom
heedingtheMN’sBUusingrouteoptimizationtotheMN.
In effect, this is a denial-of-service attack against route
optimization, and it leads to service degradation not dis-
ruption.
The previous security analysis shows that the protocol
described in Section 6 prevents any intruders from redi-
recting the traffic addressed to a mobile host’s home ad-
dress and consequently provides the minimal Mobile IP
securityrequirement[17].
9.3.3 Why not Route sucvP2 Through the Home
Agent?
What, if we assume sucvP1 was carried with a home
address option, and then sucvP2 travelled via the home
agent. At this point, the home agent can check that the
validity of this
(cid:139)(cid:140) < (cid:137)
(corresponding to
Y[ Z(cid:22) \ (cid:137)
), its cur-
rent care-of address, etc. In this case, none of the above
snooping would be possible. In order to further mitigate
the sucvP2 packet from being redirected, the MN must
check upon its reception that it was sent tunneled by its
homeagent. Homeaddressoptionscanbemisusedtoset
updistributeddenialofserviceattackswherebytheseop-
tions are sent to numerous hosts prompting them all to
respond to the same address. Evenif CN’s exercisecau-
tionwhensendingtheirsucvP2packetsasinstructedviaa
home addressoption, thenatureofDDoSattacks issuch
thatanygivenCNmaynotsendmorethanafewsucvP2’s
to the same home address region (same prefix), the col-
lection of thousands of such responses may be sufficient
toclogatargetnetwork.
The above analysis shows the pro’s and cons of using
the home address option. Notice that for our purpose of
authenticatingBU’swedonotneedtoresorttotheheavy
requirementofroutingsucvP2viatheHA.SUCVpackets
areexchangeddirectlybetweentheMNandtheCN.
9.4 Denial-of-ServiceAttacks
Denial-of-service(DOS)attacksthatexhaustahostre-
source (memory and computional resources) is a major
securitythreatontheInternet. Inthesectionwestudythe
behaviors of the protocol described in Section 6 against
DoSattacks.
(cid:0)
sucvP1 storm: Malicious hosts, could try to attackahost, bysendingastormofsucvP1messages. We
preventthispotentialattackasfollows:
1. whenreceivingasucvP1,ahostdoesnotcreate
any state and replies with a constant message
(sucvP2)thatcontainsaclientpuzzle[20].
2. An hostonly creates state if itreceivesa valid
puzzlereplytoitspuzzlerequest(insucvP3).
(cid:0)
sucvP2 storm: Malicious host could try to attack a
host by sending a storm of sucvP2 messages. We
prevent this attack by inserting a nonce, N1, in the
sucvP1. IfahostreceivesasucvP2withanonceN1
thatisnotequaltothenonceN1thatithassetinthe
initialsucvP1,thissucvP2mustberejected.
Note that an intruder (between the MN and its CN)
couldinterceptthesucvP1andreplytotheMNwith
a fake sucvP2 containing a valid N1 and an inten-
tionallydifficultpuzzlerequest. TheMNwouldthen
spend a lot of CPU and power computing the puz-
zle reply. Thisattackcanbeavoided iftheMN had
a mean to authenticate the address used by its CN.
One solution is that the CN uses a SUCV address
andsignssucvP2.
Instead of this heavy alternative, we suggest that a
MNsimplyrejectanysucvP2messagesthatcontain
an overly complex client puzzle request Of course,
theMNitselfdefinesthecomplexitythresholdofthe
puzzlerequestasafunctionofitsprocessingpower.
Asa result, the attackthat consists ofsending com-
plexpuzzles(insucvP2)toaMN,inordertoexhaust
its computing resources, will not be sucessful, be-
causetheMNwilldropthesucvP2. TheMNservice
willbe degraded(because its incoming packetswill
then be routed through its home agent) but not dis-
rupted.
(cid:0)
sucvP3 storm: Malicioushosts could tryto attack a
host by sending a storm of sucvP3 messages. We
prevent this attack by using a client puzzle. A host
accepts a sucvP3 message only after verifying that
thepuzzlereply(containedinthesucvP3)isvalid.
10 Related Work
CAM[4]presentsasolutiontotheMobileIPv6security
problemthatisverysimilartoourproposal.Whenwefirst
submitted our work to the IETF in April 2001, we were
unawareofthiswork. CAMalsousesIPv6addressesde-
rivedfromcryptographickeystosolvetheMIPv6address
ownershipproblem. ThemaindifferencesbetweenCAM
andSUCVare:
(cid:0)
CAMreliesonsignaturestoauthenticatebindingup-
dates.InSUCV,asignatureisonlyusedbythesucvP
protocol to proveaddress owernship. A session key
is derived between the MN and its CN, after which
thebindingupdatesareauthenticatedusingIPsec.
(cid:0)
CAMrequiresthattheCNandMNhaveasynchro-
nizedclocktoprotectagainstreplayattacks. Webe-
lieve that this is a strong assumption that is not al-
ways practical. SUCV uses a puzzle mechanism to
protectagainstsuchattacks.
(cid:0) CAM only uses addresses derived from crypto-
graphic keys. In addition, SUCV defines the con-
cept of an SUCV identifier that is longer (128 bits)
andthereforemoresecure. Asexplainedpreviously,
an SUCV identifier may be used as a non-routable
Home Address when the mobile node is the client
(i.e. whenitinitiatesthecommunication).
(cid:0)
Inadditiontoproposingamechanismtosolvethead-
dress ownership problem, SUCV also providespro-
videdataandlocationprivacy.
(cid:0)
Digitalsignaturesareveryexpensiveoperationsthat
can not be performed on small mobile devices such
asPDAorsensors. SUCVproposesanextensionfor
constraineddevicesthatoff-loadalloftheexpensive
computations(signature,DHexponentiationandses-
sion key generation) to the home agent, while still
providingend-to-endsecurity(seesection7).
(cid:0)
CAM uses a hash to derive what we call the
sucvHID.Weuseaprf-basedmechanism.
TheBAKEproposal[2]presentsa solutiontotheMo-
bileIPv6securityandkeydistributionproblems. Ascom-
paredtoSUCV,BAKEislighterintermsofcomputational
overhead, but weakersecurity-wise. In fact, BAKE only
requiresafewhashoperationsbutissubjecttoman-in-the
middle attacks when the attacker resides along the rout-
ingpathbetweentheCNandtheMN’shomeagent. The
BAKE protocol uses three messages. The first one is a
triggersentbytheMN.TheCNreplieswithasecondmes-
sagethatcontainsacryptographictoken. Thismessageis
senttotheMNviaitsHA.Uponreceptionofthemessage,
theMNsendsathirdmessagetotheCNthatcontainsan-
other cryptographic token. The generated key is derived
fromthetwotokens. Asaresult,onlyanintruderthatcan
hear messages 2 and 3could reconstruct the session key.
Also,sincemessage2issentviathehomeagent,theCN
hasreasonableassurancethatthehomeaddressbelongsto
theMN.AlthoughBAKEhasitsbenefitswebelievethat
itisnotsecureenoughtobeadopted. Anintruderthatis
close to theCN (on thesame wirelesslink, for example)
canhearallthreemessagesandbeapotentialattacker.11 Conclusion
We propose a protocol for a mobile node to prove the
ownership of its addresses and to authenticate the bind-
ingupdatethatitsendstoitsCN.Thisprotocolwasmade
partofMobileIPv6fordeploymentreasons. Howeverthe
address ownership problem is more general than Mobile
IPv6andotherprotocolsandapplicationsmightneedthis
functionality. The sucvP protocol, in fact, can be used
by all protocols and applications aboveit. Communicat-
ing hosts can use it to proveto each other that they own
theirrespectiveaddresses.Theycanfurtheruseittoderive
shared keys that can be used by the hosts’ protocols and
applications. This protocol provides mutual ownership
proof (i.e. proves the address ownership of both hosts)
and/orunilateralownershipproof(i.e.provesonlythead-
dressownershipofoneofthehosts).
Acknowledgements
The authors appreciate the helpful comments received
from the following individuals: Erik Nordmark, Alberto
Escudero, Lars Henrik Petander, Imad Aad, Pars Mutaf
andtheanonymousreviewers.
Appendix: ImplementationConsiderations
Thissectionpresentssomeofthedesignchoicesmade
inoursucvPprototypeimplementation.
sucvPisimplementatedasauserprocessthatusesUDP
toexchangesucvPmessages. ThisprocessusesOpenSSL
library(undertheFreeBSDOS)forallthecryptographic
functions(hash,signatures,DHexponentiation,etc).
This section describes the puzzle mechanism that we
used, the digital signature implementation, the Session
keygenerationandthepacketformats.
Puzzleimplementation
sucvP makes use of puzzle to protect it against DoS
attacks. The puzzle that we implemented is the one de-
scribedin[20]. Intheproposedscheme,theserverperi-
odicallygeneratesanonce,
<V (cid:16)
,andsendsittotheclient
withthetargetvalue,
(cid:142)
,andthenumberofbitstomatch.
To solve the puzzle, the client generates a random
nonce, Nc and solves
(cid:143)
from the following equation by
bruteforce.
(7 #(cid:13) (cid:16)(cid:18) (8 ) <V (cid:16)(cid:22) ;" <V ,(cid:9) ;(cid:24) (cid:143)(cid:144) /5 0(cid:145) (cid:142)
Theservercandecidethedifficultylevel
(cid:17)
ofthepuzzle
bysettingthe
(cid:17)
firstbitsof
(cid:142)
to0. Thedifficultylevelcan
be increased by decreasing
(cid:17)
(i.e. the client will has to
try more value to match the corresponding
(cid:142)
). If
G
(cid:17)(cid:140) 0
, no work is required, the puzzle is simply a cookie. If
(cid:17)(cid:7) 0z =(cid:18) kI (cid:132)
,theclientmustreversetheentirehashfunction,
whichiscomputionallyverydifficult.
ThispuzzlemechanismiswellsuitedtosucvPbecause
theserver(i.e. theCNinourcase)usesthesame
<V (cid:16)
for
allthesucvP1messagesitreceiveswithinagivenperiod
oftimeandthereforedoesnothavetokeepastateperpuz-
zlesent. Theserverchangesthevalueof
<V (cid:16)
periodically
tolimitthetimeclientshaveforprecomputingsolutions.
We use
*1 Y[ c(cid:141) =
as the hash function in our implementa-
tion.
Theformatofthepuzzlerequestisthefollowing:a
<V (cid:16)
field(4bytes),a
(cid:17)
field(4bytes),a
(cid:142)
field(20bytes).
The format of the puzzle reply (used in sucvP3) is: a
<(cid:144) (cid:16)
field(4bytes),a
<[ ,
field(4bytes)anda
(cid:143)
field(20
bytes).
SessionKeygeneration
sucvPgeneratesaSessionkeybetweentheMNandthe
CN,Skey,thatisusedtoauthenticatedMIPv6BU.
SkeyisderivedusingtheDiffie-Hellmanalgorithm:
(cid:0)
The CN chooses a random secret y and sends
(cid:1)(cid:3) (cid:2)(cid:18) (cid:4)(cid:7) (cid:6)(cid:9) (cid:8)(cid:11) (cid:10)
totheMN(intheDHvaluefieldofsucvP2).
(cid:0)
The MN chooses a random secret x and sends
(cid:1) (cid:12) (cid:4)(cid:14) (cid:6)(cid:9) (cid:8)(cid:15) (cid:10)
toitsCN(intheDHvaluefieldsucvP3)
According to [21], the result of a DH exchange, de-
noted
(cid:1)(cid:13) (cid:12) (cid:2) (cid:4)(cid:7) (cid:6)(cid:9) (cid:8)(cid:15) (cid:10)
, as a direct key to cryptographic algo-
rithms should be avoided. Whenever possible first hash
thisvalueandthenusethehashedvalueasakeytoaprf
forderivingfurtherkeys.Thishastheeffectofnotrelying
on the security of each independent bit in
(cid:1) (cid:12) (cid:2)
but rather
onthe“overallcryptographicentropy”presentin
(cid:1) (cid:12) (cid:2)
.
As a result, the Skey in sucvP is generated as follows:
*+ UV (cid:19)(cid:5) (cid:20)(cid:146) 0(cid:147) (cid:10)7 3I 45 )6 (7 #(cid:13) (cid:16)(cid:18) ((cid:148) )(cid:149) (cid:1) (cid:12) (cid:2)(cid:5) (cid:4)(cid:14) (cid:6)(cid:9) (cid:8)(cid:15) (cid:10)- /E ;" <(cid:150) =(cid:18) /
, where N1 is the
nonceusedinsucvP1andsucvP2.
Our implementation uses HMAC-SHA1-96 as prf and
SHA-1ashashfunction.
OurimplementationdefaultgroupisOakleygroup1. P
isfixedto
kI (cid:151)(cid:131) (cid:129) (cid:133)(cid:153) (cid:152) k| (cid:151)(cid:24) (cid:154)(cid:131) (cid:155) (cid:152) =W (cid:156)(cid:150) kI (cid:129)" (cid:155)W t(cid:158) (cid:157)kI (cid:129)(cid:131) } (cid:133) s(cid:10)$ @6 (cid:159)(cid:3) (cid:156)(cid:160) =(cid:15) _(cid:22) ¡(cid:22) ^| (cid:132)| ^
,its
size is 768 bits and g is set to 2 (since P and g are fixed
they do not have to be sent in sucvP2 and sucvP3). As
a result only
(cid:1) (cid:12) (cid:4)(cid:7) (cid:6)(cid:9) (cid:8)(cid:11) (cid:10)
and
(cid:1)(cid:13) (cid:2)(cid:18) (cid:4)(cid:14) (cid:6)(cid:9) (cid:8)(cid:15) (cid:10)
have to sent overthe
network. Thesevaluesare768bitslong.
Notethatthegenerationofasessionkeyisnotsufficient
to authenticatethe MIPv6 BU. A lifetime and a SPI (i.e.
a Security association) have to be associated with it. In
our scheme, the Skey lifetime is the minimum value of
thelifetimevaluesuggestedbytheMNandtheCN.
Signatureimplementation
OursucvPimplementationusestheDSA[5]OpenSSL
routinestosignthesucvP3message.In DSA, a message M’s signature is defined by
3
and
(cid:16)
, such that:
3¢ 0 )9(cid:1)! £(cid:18) (cid:4)(cid:14) (cid:6)(cid:9) (cid:8)(cid:15) (cid:10)- /F (cid:4)(cid:14) (cid:6)(cid:9) (cid:8)& T
and
(cid:17) oq p )(cid:26) *+ Y[ c¥ =& )(cid:26) (cid:139)ƒ /(cid:148) (cid:156)¤ §7 3I /" /K (cid:4)(cid:7) (cid:6)(cid:9) (cid:8)(cid:22) T
(cid:16)⁄ 0
, where
(cid:1)
,
(cid:17)
,
(cid:10)
,
T
and
§
are
definedinFIPS186(notethatthepublickeyis
(cid:20)
andthe
privatekeyis
§
).
The signature (
3
and
(cid:16)
) is then transmitted along with
themessagetotheverifier. Thepublicparameters
(cid:10)
,
T
,
(cid:1)
,
and
(cid:20)
mustalsobemadeavailabletotheverifier.
NotethataccordingtoFIPS186,
3
,
(cid:16)
and
T
are160bit
longand
(cid:10)
,
T
,
(cid:1)
,
(cid:20)
are
^| _j (cid:156)y (cid:132)g tu ’
byteslong. Asignature
format as used in sucvP3 contains the following field: a
typefield(8bits),alenghtfield(32bits)thatcontainsthe
lenght of the whole signature message in bytes, a
3
field
(160bits),a
(cid:16)
field(160bits),a
T
field(160bits),a
’
field
(8bits), a
(cid:10)
field (
^I _j (cid:156)(cid:160) (cid:132)j td ’
bytes), a
T
field (
^| _j (cid:156)(cid:135) (cid:132)R t(cid:158) ’
bytes),a
(cid:1)
field(
^I _P (cid:156)(cid:144) (cid:132)P t' ’
bytes),anda
(cid:20)
field(
^I _P (cid:156)(cid:144) (cid:132)P t5 ’
Construction,” RSA CryptoBytes, Vol. 2, No. 1,
Spring1996.
[10] Bob Moskowitz, ”HIP Architecture”, draft-ietf-
moskowitz-hip-arch-02.txt
[11] Bob Moskowitz, ”HIP Implementation”, draft-
moskowitz-hip-impl-01.txt
[12] Bob Moskowitz, ”Host Identity Payload and Proto-
col”,draft-moskowitz-hip-03.txt
[13] R.HindenandS.Deering,”IPVersion6Addressing
Architecture,”RFC2373,July1998.
[14] A.K. Lenstra and E.R. Verheul, Selecting Cryp-
tographic Key Sizes, manuscript, (Oct.1999).
bytes). http://citeseer.nj.nec.com/lenstra99selecting.html
Themessageverificationisthenperformedasdescribed
inFIPS186. [15] Castelluccia, Dupont, ”A Simple Privacy Exten-
sion for Mobile IPv6,” draft-castelluccia-mobileip-
References privacy-00.txt,February2001.
[1] Pekka Nikander, ”An Address Ownership Problem [16] D. Johnson, C. Perkins, ”Mobile IP for IPv6”,
in IPv6”, draft-nikander-ipng-address-ownership- draft-ietf-mobileip-ipv6-14.txt, July 2001. Work in
00.txt,February2001. progress.
[2] PekkaNikanderandCharlesPerkins, ”BindingAu-
[17] Mankin, Patil, Harkins, Nordmark, Nikander,
thenticationKeyEstablishmentProtocolforMobile
Roberts,Narten,”ThreatModelsIntroducedbyMo-
IPv6”,draft-perkins-bake-00.txt
bile IPv6 and Requirements for Security in Mobile
IPv6”, draft-ietf-mobileip-mipv6-scrty-reqts-01.txt,
[3] N. Modadugu, D. Boneh and M. Kim, ”Generat-
October2001.Workinprogress.
ing RSA Keys on a Handheld Using an Untrusted
Server”,RSA2000.
[18] T. Kivinen and M. Kojo, ”More MODP Diffie-
[4] Greg O’Shea and Michael Roe, ”Child-proof Au- Hellman Groups for IKE”, draft-ietf-ipsec-ike-
thentication for MIPv6 (CAM)”, ACM Computer modp-groups-01.txt
CommunicationsReview,April2001.
[19] P. van Oorschot and M. Wiener, “Parallel Colli-
[5] NIST FIPS 186 : Digital Signa- sionSearchwithApplicationstoHashFunctionsand
ture Standard (DSS), May 1994. DiscreteLogarithms,”Proceedingsofthe2ndACM
http://www.itl.nist.gov/fipspubs/fip186.htm Conference on Computer and Communications Se-
curity,Fairfax,VA,November1994.
[6] Hilarie Orman and Paul Hoffman, ”Determining
Strengths For Public Keys Used For Exchanging [20] TuomasAura, Pekka NikanderandJ.Leiwo,DOS-
Symmetric Keys”, draft-orman-public-key-lengths- resistantauthenticationwithclientpuzzles.InBruce
02.txt Christianson, BrunoCrispo,andMikeRoe, editors,
Proceedings of the 8th International Workshop on
[7] Frank Stajano and Ross Anderson, ”The Resurrect-
SecurityProtocols,LectureNotesinComputerSci-
ing Duckling: Security Issues for Ad-hoc Wireless
enceseries,Cambridge,UK,April2000.Springer.
Networks”,SecurityProtocolsWorkshop,1999.
[8] A.J.Menezes,P.C.vanOorschotandS.A.Vanstone. [21] Hugo Krawczyk, ”Rationale for the definitions of
Handbook of applied cryptography. CRC Press, SKEYID”, message to the IPsec mailing list, June
1997. 20,2001.
[9] M.Bellare, R.Canetti andH. Krawczyk.“Message [22] Vern Paxson, ”An Analysis of Using Reflectors in
AuthenticationusingHashFunctions–TheHMAC DistributedDenial-of-ServiceAttacks,”2001.[23] Krawczyk,H.,Bellare,M.andR.Canetti,”HMAC:
Keyed-HashingforMessageAuthentication”,RFC
2104,February1997.
[24] C.MadsonandR.Glenn”TheUseofHMAC-SHA-
1-96 within ESP and AH”, RFC 2404, November
1998.
[25] H.Orman,”TheOAKLEYKeyDeterminationPro-
tocol”,RFC2412,November1998.
[26] R. Pereira, ”The ESP CBC-Mode Cipher Algo-
rithms”,RFC2451,November1998.
[27] T.Narten, R.Draves”PrivacyExtensionsfor State-
lessAddressAutoconfigurationinIPv6,”RFC3041.
[28] NIST, FIPS PUB 180-1: Secure Hash Standard,
April 1995. http://www.itl.nist.gov/fipspubs/fip180-
1.htm
[29] H. Dobbertin, ”Cryptanalysis of MD5 Compress”,
http://www.cs.ucsd.edu/users/bsy/dobbertin.ps