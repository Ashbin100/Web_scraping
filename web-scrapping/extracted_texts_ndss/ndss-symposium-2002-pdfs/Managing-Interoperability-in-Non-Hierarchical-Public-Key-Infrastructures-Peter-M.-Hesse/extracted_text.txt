Managing Interoperability in Non-Hierarchical Public Key Infrastructures
Peter M.Hesse DavidP.Lemire
Gemini SecuritySolutions A&N Associates
pmhesse@geminisecurity.com dlemire@anassoc.com
tosuccessivelyretrieveissuercertificatesuntilacertificateis
1 Introduction locatedthatwasissuedbythetrustedroot.
Thispaperdiscussesconsiderationsforcertificateissuing
systems and certificate processing applications, and
directory systems in environments that employ non-
hierarchical public key infrastructures (PKIs). The
observationsandrecommendationshere,whileapplicableto
almost any non-hierarchical PKI, are most relevant to
situationswheretheestablishmentofinteroperabilityamong
thePKIsofdisparateorganizationsisaprimarygoal. They
CertificationAuthority
are based on our work with a PKI interoperabilitytestbed RReelylyininggppaarrtiteiessaarreeccoololorreeddththee
comprised of a bridge certification authority (CA)
EndEntity ssaammeeaassththeeirirtrtruussttaanncchhoorr..
interconnectingmultiplePKIsbasedonCAproductsfrom Certificate
severalvendors. Ourviewisthat themoresophisticated Figure1–HierarchicalPKI
aspects of X.509 certificate issuance and processing (e.g.,
Awidely-usedvariationonthesingle-rootedhierarchical
certificatepoliciesandmappings,nameconstraints)aretools
PKIistheinclusionofmultipleCAsastrustedroots. Here,
that allow the PKI to establish the limits of security
endentitycertificatesarevalidatedusingthesameapproach
interoperabilitybetween organizations [1]. Consequently,
as with any hierarchical PKI. The difference is that a
we believe that the extensions for these X.509 features
certificatewillbeacceptedifitcanbeverifiedbacktoany
shouldberoutinelypopulatedbycertificateissuingsystems,
of the set oftrusted roots. Popular web browsers use this
and expected and processed by certificate processing
approach,andareshipped withtrustedCAlistscontaining
applications. Thegoaloftherecommendationshereinisto
dozens of CAs. While this approach simplifies the
promote interoperability among the PKI relying parties,
implementationofalimitedformofcertificateverification,
while still allowing the owning organizations to maintain
italsohasnumeroussecurityweaknesses. Forexample,the
securitycontrol.
userhaslittleornoideaofthepoliciesoroperatingpractices
ofthevariousroots,and is usuallyunaware of whichroot
1.1 PKIStructures
wasusedtoverifyagivencertificate. Also,therevocation
of a trusted CAis nearly impossible, since it requires that
ThisdiscussionisorientedtowardPKIsorcombinations
every user somehow be notified of the CA’s change of
ofPKIswithnon-hierarchicalcertificategraphs. SuchaPKI
status. Theorganizationmustthenrelyontheuserstotake
mayresultthroughtheimplementationofanon-hierarchical
thenecessaryactionstoremovetheCAfromthetrustlist.
mesh PKI, or the interconnection of hierarchical and non-
hierarchicalPKIsviacross-certification. TrustedCAList
1.1.1 Hierarchical: A hierarchical PKI, depicted in
Figure1, is one in which all of the subscribers / relying
partiestrust asingle"root"CA. TherootCAcertifiesthe
public keys of subordinate CAs. These CAs then certify
subscribersormay,inalargePKI,certifyotherCAs. Inthis
architecture,certificatesareissuedinonlyonedirection,and
a CA never certifies another CA "superior" to itself.
CertificationAuthority
Typically, only one superior CA certifies each CA.
Certification path construction in a hierarchical PKI is a EndEntity
straightforwardprocessthatsimplyrequirestherelyingparty Certificate
Figure2–Multi-RootedHierarchicalPKI1.1.2 Mesh: In a mesh style PKI (depicted in Figure 3),
each subscriber trusts the CA that issued that subscriber's
certificate(s). TheCAsinthisenvironmenthavenosuperior
/subordinaterelationship. Inamesh,CAsinthePKIcross-
certify. Thatis,eachCAbothissuesacertificatetoandis
issued a certificate by peer CAs in the PKI. The figure
depictsameshPKIthatisfullycross-certified,howeveritis
possibletoarchitectanddeployameshPKIwithamixture
ofunidirectionalandcross-certifications. Certificationpath CertificationAuthority
construction in a mesh PKI is more complex than in a
CrossCertificate
RReelylyininggppaarrtiteiessaarreeccoololorreeddththee
hierarchicalPKIduetothelikelyexistenceofmultiplepaths EndEntity ssaammeeaassththeeirirtrtruussttaanncchhoorr..
betweenarelyingparty’strustanchorandthecertificateto
Certificate
beverified,and thepotentialforloopsand “dead ends”in
Figure4:AHybridPKI
non-hierarchical certificate graphs. In addition, while a
diagram of the mesh PKI may appear similar to the Incurrentimplementations,thissituationcreatesaconcern
hierarchicalPKI,thecertificatesforthebi-directionalcross- that theapplicationsused underthe hierarchicalPKIs will
certificationsaretypicallystoredascertificatepairs,rather nothavepathbuildingcapabilitiesrobustenoughtohandle
than individual certificates. These pairs are stored in a thismorecomplexcertificategraph.Asthenumberofcross-
different directory attribute than is normally used for the certified PKIs grows, the number of the relationships
certificatesinahierarchicalPKI. betweenthemgrowsexponentially. Twoprincipalconcerns
aboutcrosscertificationarethecreationofunintendedtrust
pathsthroughtransitivetrust,andthedilutionofassurance
when a high-assurance PKI with restrictive operating
policies is cross-certified with a PKI with less restrictive
policies.
1.1.4 Bridge: Anotherapproachtotheinterconnectionof
PKIsistheuseofa“bridge”certificationauthority(BCA).
CertificationAuthority ABCAis a nexus to establish trust paths among multiple
CrossCertificate PKIs. The BCAcross-certifies with one CA(known as a
RReelylyininggppaarrtiteiessaarreeccoololorreeddththee
EndEntity ssaammeeaassththeeirirtrtruussttaanncchhoorr.. “principal” CA [PCA]) in each participating PKI. Since
Certificate eachPKIonlycross-certifieswithoneotherentity(i.e.,the
BCA), and the BCA cross-certifies only once with each
Figure3–MeshPKI
participating PKI, the number of relationships in this
environment grows linearly with the number of PKIs.
1.1.3 BilateralCross-certification: PKIscanbeconnected However, when interconnecting PKIs in this way, the
viacrosscertificationtoenabletherelyingpartiesofeachto numberandvarietyofPKIsinvolvedcanresultinacomplex
verifyandacceptcertificatesissuedbytheotherPKI. Ifthe non-hierarchicalenvironment,asshowninFigure5.
PKIs are hierarchical, cross-certification will typically be The U.S. Federal government is in the process of
accomplishedbyeachrootCAissuingacertificateforthe establishing a BCA intended to enable interoperability
other PKI’s root CA. This results in a slightly more amongU.S.Governmentagenciesbycross-certifyingwith
complex, but still essentially hierarchical environment. If theirPKIs. Therecommendationsinthispaperarederived,
the PKIs are mesh style, then a CA within each PKI is in largepart,fromtheauthors’experience workingonthe
selected, more or less arbitrarily, to establish the cross- second phase of the DoD-sponsored BCA technology
certification,effectivelycreatingalargermeshPKI. Figure demonstration. Detailed information about the BCA
4depictsahybridsituationresultingfromahierarchicalPKI technologydemonstration can be found in the final report
cross-certifyingameshPKI. [2].considered “advanced” and less commonly employed,
particularlyinhierarchicalPKIs. Ourexperiencesuggests
that these “advanced” elements are essential both to
achieving interoperability and to maintaining security
B
controlsinnon-hierarchicalPKIs.
2.1.1 Publickey/signature: Ingeneral,aCAmayeither
generateakeypairorreceive,viaarequest,thepublickey
to be placed in end-entity certificates it issues. However,
CertificationAuthority support for receiving a public key in a certificate request,
CrossCertificate RReelylyininggppaarrtiteiessaarreeccoololorreeddththee ratherthangeneratingakeypair,isessentialwhenaCAis
EndEntity ssaammeeaassththeeirirtrtruussttaanncchhoorr..
issuing certificates to other CAs; proper control of the
Certificate subject CA’s private signature key cannot otherwise be
Figure5:Cross-certificationwithaBridgeCA guaranteed.
2.1.2 Names: The authors’ experience is primarily with
1.2 Scope
systemsthatuseX.500hierarchicalnamingconventions. In
a non-hierarchical PKI, proper management of the name
The environment assumed for this paper is a non-
spaceisextremelyimportant. IntheoperationofaCA,the
hierarchicalPKI built using the conventions ofX.509 and
namesitplacesinthesubjectnameofthecertificatemustbe
thewidely-followedPKIX(RFC2459)profile[3]. Wealso
constrained,eitherprocedurallyortechnically,tothename
assumetheuseofadirectorysystemforthedisseminationof
space for which that CA has responsibility. Proper
certificates, certificate revocation lists (CRLs), and other
managementofthenamespaceisessentialtotheregulation
information of interest to relying parties. Within the
oftransitivetrustinthePKI.
directorysystem, interactions among directoryservers are
When a PKI is being deployed, the directory
conducted using X.500 DirectorySystemProtocol (DSP);
administratorsshouldworkwiththepolicyadministratorsin
client access to the directory is typically via Lightweight
advancetodevelopanamingarchitecturethatwilltakeinto
DirectoryAccessProtocol(LDAP). Finally,weexpectthat
considerationthepossibilityoffutureinteroperability. This
each organization will establish operating policies for its
willminimizefuturenamingconflicts(namespaceoverlap)
PKI,andthattheestablishmentofcross-certificationcarries
withexternaldirectories. Iftwodirectoriesareconfiguredto
withittheneedtodeterminetherelationshipsbetweenthe
chain,andtheircontrollednamespacesoverlap,thechaining
operatingpoliciesofthePKIsinvolved.
willnotfunctioncorrectly. (Moreondirectorychainingis
foundinsection3.1.3). Thisoverlappednamingwillcause
2 Certification Authorities reduced functionality and interoperability problems once
deployed.
This section addresses considerations for Certification
Authorities(CAs). CertificationAuthoritiesaretheheartof 2.1.3 Basic Constraints and Key Usage: RFC2459
a PKI; they process certificate requests, sign public key requires the basic constraints extension to be present and
certificates, createand signCRLs,and publishcertificates identifiedascriticalinallCAcertificates,andindicatesthat
and CRLs to a directory system to make them readily itshouldnotbepresentinend-entitycertificates. Thekey
availabletocertificateusers. RFC2459requiresconforming usage extension is considered optional in RFC2459, but
CAs to support the authority key identifier, subject key must be marked critical if present. In a non-hierarchical
identifier, basic constraints, key usage, and certificate PKI, certificate processing systems can potentiallybenefit
policies extensions. We believe that in a non-hierarchical from the information provided by these extensions. The
PKI, support for the name constraints, certificate policy basic constraints extension simplifies the identification of
constraints, and certificate policy mapping extensions are CAcertificates. The key usage extension provides useful
alsonecessary. Inaddition,certainconsiderationsapplyto informationwhenapathbuildingalgorithmneedstochoose
someoftheotherextensions. among several candidates as the next certificate in a path.
Werecommendalwaysincludingthekeyusageextension,
2.1 Standardcertificatecomponents populatedaccordingtotheproperuseofthecertificateand
anyrestrictionsassociatedwiththecryptographicalgorithm
WehavebrokenourdiscussionofCAoperatingpractices inuse,andalwaysincludingthebasicconstraintsextension
into those components of a public key certificate that are inaCAcertificate.
commonlyemployed(i.e.,standardcomponents)andother
components, such as certificate policies, that might be2.1.4 Authority and Subject Key Identifiers: The Figure6showsaBCAinterconnectingthreePKIs. Inthe
authority key identifier (AKID) and subject key identifier certificate issued by the bridge to each PKI, a permitted
(SKID) can be placed in certificates to simplify the subtree in the name constraints extension provides a
certificate path building process. However, section 3.1.4 definitivespecificationofthenamespacethattheotherPKIs
identifies reasons why the authorityCertIssuer and in the environment will recognize for that PKI. For
authorityCertSerialNumber components of AKIDs should example,thecertificateissuedbytheBCAtothePCAofthe
not be used. If the key identifier component is used, the organizationAPKIwillinclude:
AKID in certificateA should equate to the SKID in the NameConstraints
certificate of the authority that issued certificateA. Key PermittedSubtrees(c=US,o=A)
identifiers can be very beneficial to the efficiency of path If OrganizationA issues any certificates outside this
buildingalgorithms,andshouldalwaysbepopulated. permittednamespace,thosecertificateswillberejectedby
Somecertificatepathverificationalgorithmserroneously relyingpartiesinOrganizationsBandC. Thus,inthelarger
require that SKIDs and AKIDs be matched as the path is communityformedbythecross-certificationofthesePKIs,
verified. Somecertificatepathbuildingalgorithmswillfail theOrganizationAPKIisrestrictedtoawell-knownname
to locate valid paths if there are mismatches in the space.
SKID/AKID valuesofcertificatesevaluated ascandidates
c=US,o=B
forinclusioninthepath. To avoid bothofthesepotential
c=US,o=A
problems,itisextremelyimportantthataCAensurethatthe
SKID inthecertificate(s) issued to it match the AKIDs in
thecertificatesitissues. B c=US
OrganizationB
2.1.5 SubjectAlternateName: Oneofthemostcommon OrganizationA c=US,o=C
applications for interoperable PKIs is electronic mail
(email). We recommend always populating the subject
CertificationAuthority
alternate name of end-entity certificates with the email
CrossCertificate OrganizationC
address (rfc822Name) of the subject, in order to allow a
EndEntity
strongbindingbetweenanemailaddressandthepublickey RReelylyininggppaarrtiteiessaarreeccoololorreeddththee
Certificate ssaammeeaassththeeirirtrtruussttaanncchhoorr..
certificatebeingusedforsecureemail. Implementorsshould
beawarethatachangeintheemailaddresswillcreatethe Figure6:NameConstraintswithaBridgeCA
needtorevokeandreplacethecertificate.
ThismechanismalsoprovidesameanstoeliminatePKIs
Additionally,certificateprocessingsystemsmaywishto
that an organization does not wish to trust. The use of an
abletolocateendentitycertificatesinthedirectorysystem
excludedsubtreeinthecertificatefromaPCAtothebridge
forretrievalanduseinencryptionoperations. Ifthesubject
willaccomplishthatgoal.
DN of the desired certificate is known, the search is
For example, if the certificate issued by PCA-B to the
straightforward. However,particularlyinsecureelectronic
BCAincluded:
mailapplications,thecertificateprocessingsystemmayonly
NameConstraints
knowtheemailaddressoftheend-entitywhosecertificateis
ExcludedSubtrees(c=US,o=C)
sought. It is our recommendation that the certification
then relying parties within organization B will be able to
authority populate the mail attribute of the certificate
validatecertificates issued byOrganizations Aand B(and
subject’sdirectoryentrywiththeemailaddressplacedinthe
future Organizations D, E, …), but will reject certificates
subjectalternatenameextension.
issuedbyOrganizationC.
Anotherbenefitofthiscarefulmanagementofnamespace
2.2 Advancedcertificatecomponents istheabilityofanorganizationtoprotectitsnamespacein
thebridgeenvironment. Inourexample,eachorganization’s
ThissectionaddressesrecommendationsforotherX.509 PCAcanincludeanexcludedsubtreeinthecertificateissued
certificateextensionsthatareimportanttothemanagement to the BCA, with that excluded subtree specifying the
ofinteroperabilityinnon-hierarchicalPKIs. organization’sownnamespace. Forexample,thecertificate
issued from the Organization A PCA to the BCA would
2.2.1 Name Constraints: As mentioned in the section contain:
above on Names, management of the name space is a NameConstraints
particularly important consideration in a non-hierarchical ExcludedSubtrees(c=US,o=A)
PKI. Inabridgedenvironment,thenameconstraintscertifi- Thisnameconstraintensuresthatrelyingpartieswithinthe
cate extension is the cornerstone tool for managing name OrganizationAPKI willreject certificates issued byPKIs
spaceandcontrollingtransitivetrust. CAsoperatinginthis reached through the BCA that contain names within the
environmentmustbeabletopopulatethisextension. OrganizationA namespace. While certificates from a“rogue” CA that have names within the OrganizationA intent, they must appear in end-entity certificates without
namespace may be recognized by other PKIs, otherpoliciesthatmaybeacceptabletootherPKIsthrough
OrganizationA can be confident that it’s own subscribers policymapping.
willnoterroneouslyacceptsuchcertificatesasvalid.
Theuseofnameconstraintsinanenvironmentinvolvinga 2.2.3 Certificate Policy Mapping: Certificate policy
Bridge CA requires that interoperating organizations trust mappingisanimportantfeatureformanagingtrustinnon-
the Bridge CA to set name constraints properly in all hierarchicalPKIs. Animportantbenefitoftheuseofpolicy
certificatesitissues. Seesection2.3.5formoreinformation. mapping is that relying party applications need only be
Thecombinationofclearallocationoftheoverall name configuredwiththecertificatepoliciesoftheirowndomain
space and routine inclusion of name constraints in the as acceptable policies. This allows the organization to
certificatesissuedbyandtoPCAsaccordingtostrictpolicy manage policy interoperability through cross-certificate
allowstheorganizationsparticipatinginthisenvironmentto content, rather than needing to actively manage the
regulateinteroperabilityastheyseefit. acceptablepolicysettingsoflargenumbersofrelyingparty
applications distributed throughout the organization. CAs
2.2.2. CertificatePolicy: InasingleorganizationPKI,the need to populate the certificate policy mapping extension
use of certificate policies may be unnecessary. When whenevertheyissue across-certificateto a CAinanother
connecting the PKIs of multiple organizations, however, domain.
certificatepoliciesareanimportanttoolforbothregulating Certificatepolicymappingisafundamentalrequirement
interoperability and maintaining the level of assurance in the United States Federal PKI Bridge CA (BCA)
required for high-sensitivity or high-dollar-value environment. TheU.S.FederalBCAwillissuecertificates
transactions. For example, one organization may invest tootherPKIassertingcertificatepoliciesuniquetotheBCA,
considerable resources in a very high assurance PKI with mappings to the certificate policies of the subject
operating with hardware cryptographic tokens, and domain. Cross-certifyingprincipalCAsarecorrespondingly
rigorouslyenforcedproceduresforpersonnelidentification; expected to issue certificates to the BCA that assert their
another PKI connected through cross-certification may ownissuerdomaincertificatepolicies,withmappingstothe
operate with software tokens and much less rigorous BCApolicies. ThisconceptisillustratedinFigure7.
procedures,andacorrespondinglylowerlevelofassurance. In the example illustrated, a relying party application
Theinclusionofcertificatepoliciesinallcertificatesissued withinOrganizationB’sPKIconfiguredtoaccept“BHigh”
byeachPKIofferstheopportunityforrelyingpartiesboth as an acceptable certificate policy will, through policy
within and outside of the PKI to take the PKI’s level of mapping,recognizeand accept “AHigh” as anequivalent
assuranceintoaccountwhenacceptingspecificcertificates policy. WhenaddinganewPKItotheBCAcommunity,the
forspecificpurposes. BCA’s policy authority will evaluate the policies and
CAsoperatinginnon-hierarchical,andespeciallymulti- proceduresofthenewPKIanddefinepolicyequivalencies.
organization, environments should routinely include the When cross-certifying with the BCA, an organization can
certificatepoliciesextensioninallcertificatestheyissue. In makeanindependentdeterminationofthecorrespondence
order to simplify the use of mapping to establish betweentheBCA’spoliciesandthoseoftheorganization,
equivalenciesamongthepoliciesofdifferentorganizations, andprovidethatdeterminationtotheorganization’srelying
we also recommend that the certificate policies extension partiesusingthecertificatepolicymappings.
include all of the organization’s policies that apply. For
Issuer=OrgAPCA Issuer=BCA
example, assume an organization has established two Subject=BCA Subject=OrgBPCA
policies: “basic” and “enhanced”, with the “enhanced” CertificatePolicy=AHigh CertificatePolicy=BridgeHigh
PolicyMapping:BridgeHigh=AHigh PolicyMapping:BHigh=BridgeHigh
policy conveying a higher level of assurance. We
recommendallcertificatesthatassertthe“enhanced”policy
alsoassertthe“basic”policy;thisensuresthatinsituations
A BCA B
where the ‘less trustworthy’ certificate is adequate, the
‘more trustworthy’ certificate is also useable. This also
avoidstheneed forauserto beissued andhaveto choose Issuer=BCA Issuer=OrgBPCA
among multiple certificates when a single certificate is Subject=OrgAPCA Subject=BCA
CertificatePolicy=BridgeHigh CertificatePolicy=BHigh
sufficient. PolicyMapping:AHigh=BridgeHigh PolicyMapping:BridgeHigh=BHigh
Theconversetothisiswhencertificatepoliciesareusedin
CertificationAuthority Certificate
across-certified,multi-organizationalenvironmenttocreate
Figure7:PolicyMappingwithaBridgeCA
isolated communities. An organization might create an
“internaluseonly”certificatepolicythatisnotintendedto
be verified by the relying parties of other, cross-certified 2.2.4 Certificate Policy Constraints: Certificate policy
PKIs. In order to ensure that such policies achieve their constraints can be used to control the certificate policyprocessingthroughatrustchain. BCAcross-certificateswill this environment, a CA must be able to map to certificate
oftencontaincertificatepolicyconstraintsextensions,with policies other than those of its own domain. It may also
the inhibitPolicyMapping field populated. The certificate needtoincludemultiplepolicymappingsinasinglecross-
from the PCA to the BCA will contain an certificate. WhileitisreasonableforaCAtobeconstrained
inhibitPolicyMappingfieldwiththeskipCertsvaluesetto1. to only assert its own domain’s policy OIDs in the
ThisensuresthatrelyingpartiesfromthePCAdomainwill certificates it issues, CA implementers should be wary of
allowthe policy mappingfromthe Bridge to otherPCAs’ imposingarbitraryconstraintsontheCA’sabilitytospecify
policies, but no further mappings withinor fromtheother thepolicymappingsintheCAcertificatesitissues.
domainsarepermitted. ThecertificatefromtheBCAtothe
PCA will contain an inhibitPolicyMapping field with the 2.3.3. Population of Cross Certificates in Directory:
skipCerts value set to 0. This ensures that relying parties Directory systems are not trusted in PKI; they serve as
from other domains will not accept policy mappings that repositories for trusted (signed) objects, but there are no
occur within distant domains. CAs should be able to security requirements on the directories themselves.
populatecertificatepolicyconstraintsinthisfashionifthey However, it is important to prevent unauthorized
intendtointeroperateinaBCAenvironment. modification of directory information because corrupted
directory information will lead to a denial of service for
2.2.5. CRLDistributionPoints: VariouscommercialPKI directoryusers. Itisimportantthereforetoemployaccess
products have different conventions for where revocation controlstopreventunauthorizeddirectorymodifications.
informationispublished. Itmaybefoundinanattributeof These access controls can complicate the population of
the CA’s directory entry, stored in another directory crosscertificates.Crosscertificatesarestoredtogetherinthe
location, retrieved froma specified URI, etc. In a single- crossCertificatePairattributeinthedirectory;thisattribute
vendorimplementation,theknowledgeofwhererevocation contains an ASN.1 encoded sequence of certificates.
informationispublishedmaybebuiltintotheapplications. Unfortunately,thetwocomponentsofthepairaredeveloped
However,inenvironmentswheremultiplevendorproducts andsignedbytwodifferententities. Thesamepairisalso
may be employed, it cannot be assumed that applications reversedandplacedinanotherentry. IfCAXcross-certifies
will have prior knowledge of the usual conventions or withCAY,twocrosscertificatepairsarecreated:
specificconfigurationofanyCA. Inthisenvironment,CAs • InCAX’sentry,thereisapairwithCAXasthe
shouldroutinelypopulatetheCRLdistributionpoints(DP) subjectintheforwardcomponent,andCAYasthe
extensionofthecertificatestheyissueinordertomaximize subjectinthereversecomponent.
the likelihood that all certificate processing systems will • InCAY’sentry,thereisapairwithCAYasthe
successfullylocatetherevocationinformationtheyneed. subjectintheforwardcomponent,andCAXasthe
subjectinthereversecomponent.
2.3 Issues
EitherbothCAXandCAYmusthaveaccesstoreadand
write each others’ crossCertificatePair attribute, or some
manualprocessmustbecreatedwhichallowsthedatatobe
2.3.1 CrossCertificateRequests: Certificationauthority
updatedproperly. Certificateissuingsystemsanddirectory
productssupportmanydifferentrequest/responseformatsfor
administrators should consider this when cross-certifying
cross-certification. Some of these formats are self-signed
with other domains. Mechanisms, either technical or
certificateexchange,PKCS#10requests,andrequestsusing
procedural,mustbeestablishedtoensurethatbothelements
thePKIXCertificateManagementProtocol(CMP)[4]. The
of the cross-certificate pair are correctly encoded and
twomostimportantcomponentsoftherequestformatarethe
populated.
subjectpublickey,andthesubjectkeyidentifier. TheAKID
used in the certificates the requesting CA issues must be
2.3.4. CriticalityofExtensions: Certainextensionshave
passedastheSKIDintherequestbecausenotallproducts
their criticality defined by RFC 2459. Other extensions,
calculate SKIDs from the public key in the same fashion.
suchaskeyusage,certificatepolicies,andCRLdistribution
Forexample,inFigure6,OrganizationAcross-certifieswith
pointscanbemarkedcriticalornotattheCA’sdiscretion.
theBridgeCA. IftheOrganizationAPCAplacesanAKID
Markinganextensioncriticalwillrequireittobeprocessed
in the certificates it issues, the Bridge CA must use that
byrelyingparties,butwillcausefailureswithanysoftware
AKID as the SKID in the cross-certificate issued to the
incapable of processing that extension. This balance
Organization A PCA for maximum interoperability.
between maintaining security controls and allowing
Certification authority products should be able to fulfill
interoperability is an important one to consider. Before
cross-certificaterequestsforspecificpublickeysandSKIDs.
marking extensions critical, authorities should consider
whetheritwouldreduceinteroperabilitywithrelyingparties
2.3.2 PolicyMapping: CAsoperatinginnon-hierarchical
incross-certifieddomains.
PKIsmayneedtodealwithmultiplecertificatepolicies. In2.3.5. InteroperatingwithaBridgeCA: Thepopulation bytherelyingparty’strustroot,andendingwiththetarget
ofcertainextensionsandsettingsmustbedoneproperlyin certificate that needs to be validated. Figure 8 shows an
order to reduce the risk of unintended trust. This is example of a certificate path. In this figure, the arrows
especiallytrueinenvironmentsinvolvingaBridgeCA. If representcertificates.
the Bridge CA violates the trust of the organizations it is
Trust
involved with and issues certificates improperly (e.g. A B C Target
Root
without proper name constraints or policy constraints
specified),relyingpartiesmaytrustcertificatestheydidnot
Certificate1 Certificate2 Certificate3 Certificate4
expect or intend to trust. To reduce this risk, the A(TrustRoot) B(A) C(B) Target(C)
organizations along with the Bridge CAoperators need to
CertificationAuthority EndEntity Certificate
clarify how certificates and their components are issued.
Figure8:ExampleCertificatePath
Thiswillmostoftenbespecifiedthroughcertificateprofiles
asapartofthecertificatepolicyandcertificationpractices Thenotationforthecertificates isSubject(Issuer). In all
oftheBridgeCAandPCAs. certificate paths, the issuers and subjects match in this
relationshipsothattheissuancerelationshipflowsfromthe
trust root to the target, with zero or more intermediate
3 CertificateProcessingSystems
certificates between. In order for the certificate path to
successfullyvalidate,thenamesandsignaturesmustchain
Acertificateprocessingsystemisasystemthatisacting
throughoutthepath. IntheexampleinFigure9,theissuer
onbehalfofarelyingpartyinordertodeterminethevalidity
distinguished name in certificate 1 must match the
ofacertificate. Themostcommonexampleofacertificate
distinguished name of the trust root. Additionally, the
processingsystemisfoundinS/MIMEemailapplications.
signatureoncertificate1mustbeverifiedcryptographically
These applications validate certificates used to verify
usingthetrustrootpublickey. Likewise,theissuernamein
signatures of incoming messages, as well as validate key
certificate 2 must match the subject name in certificate 1,
management certificates used when encrypting outgoing
and so forth. This must be true for all certificates in the
messages. Theseapplications,hereafterreferredtoas“thick
path. Once this information has been verified for all
clients,”performallthe necessaryprocessingto build and
certificatesinthepath,thecertificatepathisconsideredto
validate certificate chains. It is expected that some client
becomplete.
softwarethatneedstovalidatecertificateswillbedeveloped
as a “thin client,” offloading some or all of the required
3.1.2. Building Paths in Non-Hierarchical PKI
processing to a server component [5]. In these cases, the
Structures: InahierarchicalPKI,theprocessofbuildinga
certificateprocessingsystemistheservercomponent. This
path is quite simple; the application starts with the target
sectionofthedocumentdiscusseshowcertificateprocessing
certificate, obtains the issuer’s certificate, and repeats this
systems need to behave in order to properly process
processuntilacertificateisencounteredthatisissuedbythe
certificates within a non-hierarchical PKI structure. The
trustroot. Thismethod,tobereferredtoasthe“findissuer”
recommendations here apply to both thick clients and to
method,willalwaysfindacompletecertificatepathifone
servercomponentsperformingthesefunctionsonbehalfof
existsinthestrictlyhierarchicalPKI. However,thissimple
thin clients. Generally, certificate processing systems
methodcannotbeusedinnon-hierarchicalPKIstructuresfor
performtwologicalfunctions:buildingthecertificatepath,
afewdifferentreasons.
andvalidatingthecertificatepath.
Dead-ends Inanon-hierarchicalPKIstructurethesimple
“findissuer”algorithmmayfailprematurelywithoutfinding
3.1 CertificatePathBuilding
anexistingpathduetoa“dead-end”. Considertheexample
inFigure9:
Certificate path building is the process by which the
certificate processing system obtains the certificate path Trust
Z
Root
between the trust root and the target certificate. Different
implementationsbuildthecertificatepathindifferentways;
it is not our intent to recommend a single “best” way to
C Y
performthisfunction. Guidanceisprovidedonthetechnical
issues that surround the path building process, and the
capabilities a path building implementation must have in Target
order to build certificate paths successfully in non-
hierarchicalPKIstructures. CertificationAuthority EndEntity Certificate
Figure9:Dead-endExample
3.1.1. CertificatePathCompleteness: Acertificatepathis
anorderedlistofcertificatesstartingwithacertificateissuedNotethatinthisexample,Chastwocertificates:oneissued As mentioned earlier, directory systems are capable of
byY,andtheotherissuedbytheTrustRoot. Letussuppose interoperatingviatheuseofDSP chaining. Thischaining
that the “find issuer” algorithm is used, and the order in relationship allows for a distributed directory system,
whichitretrievedthecertificateswasTarget(C),C(Y),Y(Z), therebytakingtheburdenoffoftheclientwhenperforming
Z(Z). Inthiscase,Zhasnocertificatesissuedbyanyother retrievals. It is important to note that DSP chaining
entities,andsothepathbuildingprocessstops. SinceZis eliminates the need to configure client software to access
nottherelyingparty’strustroot(ZmaybetheTarget’strust multipledirectories. TheDSPchaineddirectorysystemwill
root), the certificate path is not complete, and will not obtain the information requested by the client (if it is
validate. Thisexampleshowsthatinanon-hierarchicalPKI, available through one of its chaining relationships) in the
additionalcomplexitymustbeincludedtohandlethecases client’soriginalrequest.
in which entities are issued multiple certificates from Some directory systems are not capable of performing
differentissuers. DSP chaining or are intentionally not chained to other
Loop Detection In a non-hierarchical PKI structure, the directories for various reasons. In these cases, LDAP
“find issuer” algorithm may become caught in a loop referralsareoftenused. Whenqueriedforinformationthat
withoutfindinganexistingpath. Considertheexamplein is not available in the directory system, the system may
Figure10: respond witha“notfound”error,andanLDAPreferralin
the extra information portion ofthe LDAP response. The
Trust
Root referral contains a list of one or more other servers that
shouldbecontactedtocheckfortheinformation[6]. When
directorieswithoutchainingrelationshipsareused,directory
A Z
clients must be capable of receiving LDAP referral
information, and following the referrals to obtain the
B Y requireddata.
Typically, end-user certificates are found within the
userCertificate attribute, and CA certificates are found
Target
withinthecACertificateattribute. Innon-hierarchicalPKIs,
thecrossCertificatePairattributemustalsobeexaminedto
CertificationAuthority EndEntity Certificate
obtaincrosscertificatesissuedbetweenentities. Theobject
Figure10:LoopExample within the crossCertificatePair attribute is not itself a
certificate; it is an ASN.1 encoded sequence of two
Let us suppose that in this example the “find issuer”
certificates. CertificateprocessingsystemsthatuseX.500or
algorithm is used, and the order in which certificates are
LDAP repositories to obtain certificates must be able to
retrievedisTarget(B),B(Y),Y(Z),Z(B),B(Y),Y(Z),Z(B),
retrieveandparsecrossCertificatePairattributesinorderto
B(Y)… You can see that a loop has formed, which will
successfullybuildpathsinnon-hierarchicalPKIs.
causethecorrectpath(Target,B,A)toneverbefound. The
certificate processing system must recognize loops before
3.1.4. Improving Path Building Efficiency using Key
theyform to allowthe certificate path building process to
Identifiers: Keyidentifiersrefertotwoextensionsthatmay
continueandfindvalidpaths. Werecommendthattheloop
appear in certificates; subject key identifier (SKID), and
detectionnotonlydetecttherepetitionofacertificateinthe
authority key identifier (AKID). These extensions were
path, but also detect the presence of the same subject
createdtoassistinthepathbuildingprocess. Considerthe
distinguishedname/subjectpublickeypairoccurringtwice
exampleinFigure11:
inthepath. Aname/keypairshouldonlyappearonceinthe
path,otherwisethetrustchainisdiluted. Trust
Z
Root
3.1.3. Certificate Retrieval in Non-Hierarchical PKI
Structures: Ifthecertificatepathbuildingfunctionusesan A(TrustRoot) A(Z)
SKID=ABC SKID=XYZ
X.500 or LDAP repositoryto obtain certificates, there are
multiple attributes that must be examined within the
A1 A2
?
directoryentriesfortheentitiesinthepath. Therearetwo
common protocols for accessing information from a Target(A)
AKID=ABC
directory system, Directory Access Protocol (DAP) and
Target
LDAP. LDAPhasbecometheprotocolofchoiceforclient-
to-directory communications. Many directory products
CertificationAuthority EndEntity Certificate
availabletodaysupportclient-to-directorycommunications
Figure11:KeyIdentifierExample
via either DAP or LDAP, while using Directory System
Protocol(DSP)fordirectory-to-directorycommunications.Inthisexample,ourtargethasonecertificate,butthereare LDAPrepository,anInternetURI,orsomeothernon-local
twocertificatesfortheissuerA. Thesetwocertificateshave source. Due to the delays associated with both the
the same subject distinguished name, but different public establishing of connections as well as network transfers,
keys and subject key identifiers. The path building certificate processing systems should attempt to be as
algorithmshouldfavorthecertificateinwhichthetarget’s efficient as possible when retrieving data from external
AKID matchestheissuer’sSKID whenchoosing between sources. Certificateprocessingsystemsthatareconsistently
the two issuer certificates. This will most likely lead the veryslowduring processing will be disliked by users and
pathbuildinginthecorrectdirection. will be slow to be adopted into organizations. Certificate
TherearetwoissueswiththeuseofAKIDandSKIDthat processingsystemsshould do whatever possibleto reduce
we will present. The first is the use of the the delays associated with requesting and retrieving data
authorityCertIssuerandauthorityCertSerialNumberpartsof fromexternalsources.
theAKIDtoidentifytheissuerofacertificate. Thistypeof Perhaps the best way in which retrieval efficiency can
AKIDisnotusefulinfindingtheissuerofacertificateina often be improved is by the use of a caching mechanism.
cross-certifiedenvironment. Thisisbecausetheissuerofa Certificateprocessingsystemsshould cache dataretrieved
certificatemayitselfbethesubjectofmanycertificatesfrom fromexternalsourcesforsomeperiodoftime,nottoexceed
different issuers, and the AKID may not have been the useful period of the data (i.e., an expired certificate
developed from the point of view of the relying party. should not be cached). Although this comes at a cost of
ConsidertheexampleinFigure12: increased memory/disk consumption by the system, the
benefit of reducing network transmissions is great. In the
Trust
Root Z testing performed during the NSA Bridge CA PhaseII
demonstration [2][7], the applications that performed
caching consistently demonstrated significantly improved
performancethesecondorsubsequenttimeacertificatepath
A was processed, or when similar (e.g., same issuer) target
certificatesneededtobevalidated.
Target(A)
AK AI uD thorityCertIssuer=Z 3.1.6. Other Optimizations: The Certificate Path
Target AuthorityCertSerialNum=123 Development Library (CPDL), developed by Entrust
CygnaCom, providesa freeware implementationofapath
CertificationAuthority EndEntity Certificate building algorithm that works in non-hierarchical PKI
Figure12:AuthorityKeyIdentifierExample structures. This algorithm performs a few additional
optimizationsthatmaybeworthwhiletoimplementinother
If the target certificate contains an AKID with the
certificateprocessingsystems. Thefirstisfiltering. While
authorityCertIssuer and authorityCertSerialNumber
buildingpaths,theCPDLfiltersoutanycertificatethatcan
components,theinformationinthatextensionmayleadto
beruled out because it would cause the current pathto be
the certificate A(Z), which leads away from the relying
invalid. Twoexamplesoffiltersthatareusedarefiltering
party’s trust root. Therefore, in a non-hierarchical PKI,
expired certificates and certificates that will invalidate the
AKIDs containing authorityCertIssuer and
policyrequirementsofthecurrentpath. Inthesecases,ifa
authorityCertSerialNumbershouldbeignoredbycertificate
choiceneedstobemadebetweenmultiplecertificatesthat
processingsystems.
mayallbethenextpartofthecertificatepath,thefiltering
Thesecondissueisaweaknessofmanycurrentcertificate
sometimesallowsthechoicestobereduced.
processing systems. Although the AKID and SKID
The second optimization performed by the CPDL is
extensions may be used to assist in the path development
certificatesorting. Onceagain,atsomepointduringthepath
process,nostandardrequiresthemtomatchorbepresentin
buildingprocessthealgorithmmaybefacedwiththechoice
orderforapathtobevalid. Certificateprocessingsystems
ofmorethanonecertificatethatmaycompletethepath. The
shoulduseAKIDandSKIDvaluestoassistinpathbuilding,
CPDLsortsthesecertificatesaccordingtorulesdesignedto
but should not require them to be available or to match
favor certificates that are more likely to lead to a valid
appropriately in order to successfully build and validate a
certificatepath. Twoexamplesofsortingrulesaresorting
completecertificatepath.
certificates that contain consistent signature algorithms
aheadofthosethatdonot,andsortingcertificatesthathave
3.1.5. Caching and Retrieval Efficiency: Certificate
more relative distinguished name (RDN) components in
processingsystemsoperatinginanon-hierarchicalPKIwill
commonwiththetrustrootaheadofthosethathavefewer.
oftenneedtoretrievecertificatesandcertificaterevocation
Completedetailsonthefilteringandsortingrulesperformed
lists(CRLs)fromasourceoutsidetheapplicationprotocol.
by the CPDL are available at the CPDL website,
Typically, these objects are retrieved from an X.500 or
http://www.cygnacom.com/products3.1.7. BuildingDirection: Acertificatepathcanbebuiltin issued by the root, and ending with the target. The main
two common directions. These directions are sometimes concern for certificate processing systems is that the
referredtoby“forward”and“reverse”,butthosenamescan validation algorithm is able to process and validate basic
be misleading. They will be referred to here as “building certificatesalongwiththecertificateextensionsoutlinedin
fromtheroot”and“buildingfromthetarget”. Inthecaseof Sections 2.1 and 2.2 of this document. Standards such as
building fromthe root, the algorithm generallystarts with PKIX RFC 2459 do not mandate support for all of those
the root, and attempts to retrieve certificates that are the extensions; inordertomaintainallsecuritycontrolswhile
subject of the current certificate, until ending at the target allowing interoperability, these extensions must be
certificate. Building from the target starts with the target processed. (A chart detailing differences between the
certificate,andattemptstoretrievethecertificate(s)oftheof requirementsofPKIXRFC2459andthisdocumentisfound
thecurrentcertificate’sissuer,untilendingwithacertificate in the conclusion) The extensions should be processed
issuedbytheroot. exactly as outlined in the X.509 or PKIX RFC 2459; no
BothmethodsmaybepossibleindifferingPKIstructures. specialhandlingoutsidethosestandardrecommendationsis
Itmaybedifficulttobuildfromtherootinastricthierarchy; needed.
itmaybedifficulttobuildfromthetargetinahighlycross- Experience has identified certain issues regarding
certifiedenvironment. Apaperentitled“BuildingCertificate certificatepathvalidationinnon-hierarchicalPKIstructures.
Paths:Forwardvs.Reverse”[8]waspresentedatthe2001 Theremainderofthissectionwilladdressthoseissuesand
NDSS conference, and favored building from the root. providerecommendations.
Building from the root, while appealing because of the
optimizationsthatcanbeperformedduringthepathbuilding 3.2.1. Extensions in Trusted Root Certificates: In the
process,hassomepracticalproblems. Thefirstisrequiring previous section entitled Certificate Path Building, a
thepresenceofreversecrosscertificates. Buildingfromthe certificatepathwasdefinedasthesetofcertificatesbetween
root can only be performed when the reverse element of thetargetandacertificateissuedbythetrustroot. Itisthe
crossCertificatePaircomponentsarepresentformost(ifnot opinionoftheauthorsthatacertificatepathdoesnotinclude
all) of the CA certificates in the path. Unfortunately, the theself-signedtrustedrootcertificate. TheX.509standard
standard LDAP v3 schema requires the presence of the leavesroomforinterpretationastowhetherornottheself-
forward element of crossCertificatePair, but allows the signedtrustedrootcertificateshouldbepartofthecertificate
reverseelementtoremainoptional(thisaspectoftheLDAP path, and used in the validation process. After much
v3 schema is being changed to require populating both discussion and debate with people involved in both the
elements). Therefore the certificates desired may not be X.509 and PKIX standards processes, the authors have
present. The second is the act of performing signature concludedthatself-signedtrustedrootcertificateshouldnot
validation while building certificate paths. Building from be part of the validation process. The self-signed trusted
therootallowspathcompletenesstobecheckedaseachnew root certificate simply provides a convenient container to
certificateisaddedtothepath—toensurenocertificatewith store both a distinguished name and public key for the
an invalid nameorsignature iseveradded to thepath. In trusted root. Extensions in the self-signed trusted root
practice, this approach may be counterproductive because certificate such as basic constraints, name constraints,
cryptographic verification operations are relatively slow certificatepolicyconstraints,etc.shouldbeignoredduring
comparedtoother,simplerchecksofcertificatecontent. If thevalidationprocess. Ifthetrustedrootwishestoimpose
many subject certificates are present (which might be the these constraints on the certificate path, these extensions
case in an environment containing a Bridge CA), it is shouldbepresentinallcertificatesissuedbythetrustedroot
possible that many unnecessarysignature validations may in order to ensure they are processed by all certificate
occurwhichwouldslowdownthepathbuildingprocess. processingsystems.
Thisdocumentdoesnotfavoreitherdirectionforbuilding.
Implementors of building algorithms should consider the 3.2.2. OrderofValidationOperations: BoththeX.509
pointsmadeintheaforementionedpaperaswellastheitems andPKIXRFC2459standardsprovideexamplealgorithms
discussed here before making a decision on building for the validation of certificate paths. These algorithms
direction. provide a reference to establish the correct results of path
processing, but are not necessarily the best or most
3.2 CertificatePathValidation optimized way to validate certificate paths. More likely,
these algorithms were chosen because of the ability to
Certificatepathvalidationisnotmuchdifferentinanon- describethemfullyand accurately. Certificateprocessing
hierarchical PKI than it is in a strict hierarchy. This is systemsarefreetoimplementwhatevervalidationalgorithm
because once the certificate path has been constructed, it theychoose,aslongastheendresultsareguaranteedtobe
will,inanycase,bepresentedtothevalidationalgorithmas thesameasthesestandardalgorithms.
a simple chain of certificates, starting with a certificateIt is our recommendation that the algorithm used to or more locations where the CRL that may contain the
validatecertificatepathsperformallchecks onthepathin current certificate can be found. Certificate processing
theorderfromfastest checksto slowest checks. Consider systems should process this extension to maximize
threeaspectsofcertificatepathvalidation:namechaining, interoperability.
policy chaining, and signature chaining. Checking name
chaining is extremely fast, so that might occur first. 4 Conclusion
Checking policy chaining is also quite fast, although a bit
moreinvolvedthannamechaining,soitmightbeperformed
WehavesuccessfullyappliedtheseconceptsintheDOD
second. Checkingsignaturechainingrequirescryptographic
BCAtechnologydemonstrationtoshowhowcrossdomain
operations that are computationally intensive, and may
PKIscanworkwitheachdomaincontrollinghowmuchto
involve an external cryptographic device such as a smart
trustanotherdomain.Thedemonstrationillustratesthatthe
card. Thisispotentiallyquiteslow,inrelativeterms,soit
moresophisticatedaspectsofX.509certificateissuingand
shouldbeperformedlast.Performingthesechecksinorder
processing,especiallycertificatepolicies,policymappings,
fromfastesttoslowestallowsinvalidpathstoberuledout
andnameconstraints,areeffectivetoolsthatallowthePKI
quickly,sothatthenextpossiblyvalidpathcanbebuiltand
to establish the limits of security interoperability between
validation attempted. Reducing unnecessary delays will
organizationsintangibleform. Consequently,theseX.509
increasetheusabilityofanycertificateprocessingsystem.
featuresshouldbepopulatedbycertificateissuingsystems,
and expected and processed by certificate processing
3.2.3. RevocationChecking: As apart ofthecertificate applications. We believe that this will promote
pathvalidationprocess,allcertificatesshouldbecheckedto interoperability among the relying parties within non-
ensuretheyhavenotbeenrevoked. IncertainPKIsthisis hierarchical PKIs, while still allowing the participating
handledbytheuseofcertificaterevocationlists(CRLs);in organizationstomaintainsecuritycontrol.
others, an on-line protocol such as the online certificate Thefollowingchartoutlinesthedifferencesbetweenthe
status protocol (OCSP) is used. A requirement of any recommendationsofthispaperandguidancegivenbyPKIX
certificateprocessingsystemwishingtooperateinaspecific RFC 2459 on particular certificate extensions used when
PKI environment is to be able to retrieve and process workinginnon-hierarchicalPKIstructures.
revocation data for that environment in whatever form it
may be provided. Applications operating in non- RFC2459 ThisDocument
hierarchical, multi-vendor PKIs may encounter several
Basic Populate Populateand
different approaches to publishing revocation data in the
Constraints andprocess process
validationofasinglecertificatepath. KeyUsage Populate Populateand
OCSPProcessing Acertificatevalidationalgorithmthat andprocess process
issuesan OCSP request willencountersomedelays inthe Certificate Populate Populateand
network communication associated with this request. As Policies andprocess process
was mentioned before, it is important to consider these Authorityand Populate, Populateand
communication delays while developing the algorithmfor SubjectKey recommend process(see
Identifiers process 3.1.3.1)
the validation process to ensure as minimal a delay as
CertificatePolicy Optional Populateand
possible.
Mappings process
CRL Retrieval While certificate status checking is
Name Optional Populateand
typically considered part of the validation process, the
Constraints process
certificate processing system may actually wish to obtain
CRLDistribution Optional Populateand
CRLs during the path building process. This is because Points process
whilecertificatesforintermediateCAsarebeingretrieved Subject Optional Populate
during the building process, the additional delay and AlternativeName
overheadtoobtaintheassociatedCRLatthesametimemay
besmallenoughtowarrantthisextraprocessing. However, Specificrecommendationsforthosethatareusingorplan
if CRLs are expected to be large, or if the PKI is highly touseanon-hierarchicalPKIstructurearelistedbelowfor
cross-certified, leading to many incorrect retrievals before convenience. For more information about each
the correct path is found, it may not be as beneficial to recommendation,seethereferredsection.
retrieveCRLsduringthecertificatepathbuildingprocess. CertificationAuthoritiesmustbeableto…
• Populatealltheextensionslistedinsections2.1and2.2
3.2.4. CRL Distribution Point Processing: The CRL • Populatesubject keyidentifier with arequested value
DistributionPoints(CRLDP)extensioniscommonlyfound providedbytheauthoritybeingcross-certified(section
in certificates operating in both hierarchical and non- 2.3.1)
hierarchicalstructures. Thisextensionidentifiesalistofone• Perform policy mappings to policies other than those
configured by the system at installation time (section
2.3.2)
• Perform multiple policy mappings within the same
certificate(section2.3.2)
• PopulatethecrossCertificatePairattributeinadirectory
ifapplicable(section2.3.3)
• Configure the criticality of extensions as allowed by
PKIXRFC2459
CertificateProcessingSystemsmustbeableto…
• Buildcertificatepathsusingcrosscertificates(section
3.1.2)
• Buildcertificatepathsinthepresenceofdead-endsand
loopsinthePKIstructure(section3.1.2)
• Buildcertificatepathswithoutrequiringthepresenceof
properly configured key identifiers in all certificates
(section3.1.4)
• Processingallextensionslistedinsections2.1and2.2
asoutlinedinPKIXRFC2459
• Ignore extensions in trusted root certificates when
validatingcertificatepaths(section3.2.1)
• Beasefficientaspossiblewhenbuildingandvalidating
certificatepaths(sections3.1.5and3.2.2)
5 References
1. ITU-T Recommendation X.509: Information Technology–
Open Systems Interconnection, “The Directory: Public-key
andAttributeCertificateFrameworks”,March2000.
2. National Security Agency. “Phase II Bridge Certification
Authority Interoperability Demonstration Final Report”,
prepared by A&N Associates, 2001. Available at
http://www.anassoc.com/Techno.htm
3. R. Housley, W. Ford, W. Polk, D. Solo, “Internet X.509
PublicKeyInfrastructure--CertificateandCRLProfile”,IETF
RequestforCommentsNo.2459,January1999.
4. C. Adams, S. Farrell, “Internet X.509 Public Key
Infrastructure--Certificate Management Protocols”, IETF
RequestforCommentsNo.2510,March1999.
5. A. Malpani, P. Hoffman, R. Housley, T.Freeman, “Simple
Certificate Validation Protocol (SCVP)”, IETF PKIX
WorkingGroupInternetDraft,July2000(workinprogress).
6. M.Wahl,T.Howes,S.Kille,“LightweightDirectoryAccess
Protocol (v3)”, IETF Request for Comments No. 2251,
December1997.
7. NationalSecurityAgency.“TechnicalInteroperabilityProfile
fortheBridgeCertificationAuthority(BCA)Interoperability
DemonstrationPhaseII”,preparedbyA&NAssociates,2001.
8. Y.Elley,A.Anderson,S.Hanna,S.Mullan,R.Perlman,S.
Proctor. “BuildingCertificationPaths:Forwardvs.Reverse”,
In Network and Distributed System Security Symposium
ConferenceProceedings:2001