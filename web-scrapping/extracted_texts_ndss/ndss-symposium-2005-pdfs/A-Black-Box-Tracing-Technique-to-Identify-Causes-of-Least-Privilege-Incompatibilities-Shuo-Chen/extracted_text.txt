A Black-Box Tracing Technique to Identify
Causes of Least-Privilege Incompatibilities
ShuoChen JohnDunagan ChadVerbowski Yi-Min Wang
UniversityofIllinois atUrbana-Champaign MicrosoftResearch
shuochen@uiuc.edu {jdunagan, chadv,ymwang}@microsoft.com
Abstract moteAccessService;anddevelopersthatuseRazzletosetup
theirbuildenvironment.
In addition to causing individual applications to require
Most Windows users run all the time with Admin privi- Admin privileges, least-privilege incompatibilities exert a
leges. ThissignificantlyincreasesthevulnerabilityofWin- social pressure to run all applications with Admin privi-
dowssystemsbecausethecompromiseofanyuser-levelap- leges. This social pressure exists for two reasons: First,
plication becomes a system compromise. To address this least-privilege incompatible applications often fail with
problem, we present a novel tracing technique to identify misleading error messages, so users without Admin privi-
the causes of least-privilege incompatibilities (i.e., appli- leges spend significantly more time troubleshooting; Sec-
cation dependencies on Admin privileges). Our evalua- ond, the number of least-privilege incompatible applica-
tiononanumberofreal-worldapplicationsshowsthatour tionsissufficientlygreatthatstartingeachonefromasepa-
tracing technique significantly helps developers fix least- rateaccountwithAdminprivileges,orsettingupscriptsto
privilegeincompatibilities,andcanalsohelpsystemadmin- dothissemi-automatically,isasignificantinconvenience.
istratorsmitigatetheimpactofleast-privilegeincompatibil- In this paper, we describe a tracing technique to iden-
itiesthroughlocalsystempolicychanges. tify the causes of least-privilege incompatibilities, making
it easier to fix or mitigate them. Our technique is black-
box, i.e. it does not require source code. Identifying the
1 Introduction causes of least-privilege incompatibilities enables two im-
portantscenarios:
Theprincipleofleast-privilegeisthatsoftwareshouldrun
only with the privileges necessary to accomplish the task (cid:127) Developers can fix least-privilege incompatibilities
athand. Muchpreviousworkhassoughttobuildsoftware more easily. Developers face a number of challenges
betterconformingtothisprinciple(e.g.,[6,18,26]).Unfor- in identifying and understanding least-privilege incom-
tunately,adherencetotheleast-privilegeprincipleonWin- patibilities. In large software projects, developers must
dows systems is quite low: Most users run all the time as oftenmodifycodewrittenbyothers,wheretheyhaveno
members of the Administrators group (“with Admin priv- aprioriinsightintofailingsecuritychecks. Additionally,
ileges”), similar to executing all commands as root on a libraries and other software components commonly en-
UNIXsystem.Thisincreasestheseverityofsecuritythreats capsulate system calls and are sometimes available only
faced by Windows users, because the compromise of any in binary form, making failures more opaque. Simply
userapplicationbecomesasystemcompromise. Thisthreat setting breakpoints often requires many iterations to
is both acute and widespread; attacks against user level narrowdownthesourcecodelineresponsibleforasingle
networkingapplicationsarecommon,andincludespyware least-privilege incompatibility. In contrast, our tracing
[29, 33], self-propagating email [7], web browser exploits technique allows a single test pass to produce a list of
[9,10],andinstantmessaging(IM)clientexploits[8]. all the least-privilege incompatibilities in the exercised
ManyWindowsusersrunwithAdminprivilegesbecause, codepaths,andtoprovideadditionalinformationbeyond
infact,theapplicationstheyuserequireAdminprivileges. sourcelines,suchasobjectnames,AccessControlLists
A Microsoft online article lists 188 such applications with (ACLs),andcallstacks(ifsymbolfilesarepresent). Our
least-privilege incompatibilities [21]. Furthermore, this evaluation suggests that this information significantly
problemspansmanyusertypes: childrenthatplayBobthe reduces the total time required to fix least-privilege
Builder; anyone filing taxes with TurboTax; corporate em- incompatibilities.
ployees that connect to their corporate network using Re-(cid:127) System administrators can mitigate some least- expressing the user’s identity, and the rest for groups that
privilege incompatibilities through system policy the user belongs to, such as the Administrators group, or
changes. MakingACLchangessothatapplicationscan theBackupOperatorsgroup. UNIXsimilarlyattachesboth
run with reduced privilege is a well-known technique a user ID and a set of group IDs to a process. In order to
[6, 23]. Our tracing technique enables faster identifica- implement the setuid mechanism, UNIX adds another two
tionofboththerelevantACLsandothercausesofleast- userIDs, sothatatanypointthereisarealuserID,anef-
privilegeincompatibilities,suchasmissingnamedprivi- fectiveuserID,andasaveduserID[11].
leges. Ourevaluationsuggeststhatthisoftenallowssys- Windowsdoesnotsupportthenotionofasetuidbit,and
tem administrators to modify the system policy so that Windowsdeveloperstypicallyfollowadifferentconvention
previously least-privilege incompatible applications can in implementing privileged functionality. For example, in
berunwithoutAdminprivileges. UNIX, sendmail was historically installed with the setuid
bitsothatanunprivilegedusercouldinvokeit,andthepro-
Theuseoftracing, adynamictechnique, impliesastan-
cesscouldthenreadandwritetothemailspool,aprotected
dard set of tradeoffs. Our tracing technique only iden-
OS file. In Windows, a developer would typically write
tifies least-privilege incompatibilities on exercised code
sendmailasaservice(equivalenttoaUNIXdaemon), and
paths, and achieving good code coverage may require the
auserwouldinteractwithsendmailusingLocalProcedure
additional use of sophisticated test generation technology
Call(LPC).Onewouldimplementthesendmailcommand-
[3,16,19]. Becausetracingcanmissleast-privilegeincom-
line interface as a simple executable that sends the com-
patibilitiesonunexercisedcodepaths,itdoesnothaveper-
mandlineargumentstotheserviceviaLPC.TheWindows
fect completeness. In Section 5, we discuss the reasons to
service model allows services to be started on demand, so
prefertracingtostatictechniques, eventhoughstatictech-
dormant services occupy no memory, just as in the UNIX
niquescanprovideperfectcompleteness,fortheparticular
sendmailcase.
problemofidentifyingleast-privilegeincompatibilities.
AWindowstokenalsocontainsasetofprivileges(which
Our evaluation on eight real-world applications demon-
can be enabled or disabled), such as the SystemTime or
stratestheaccuracyandusefulnessofourtracingtechnique.
Shutdown privilege. These two privileges grant the abili-
Because our technique does not require source code, we
ties, respectively, to change the system clock and to shut-
were able to include in our evaluation third-party appli-
downthesystem. Conceptually,privilegesareusedtogrant
cations for which we only have binaries. To demonstrate
abilities that do not apply to a particular object, while ac-
accuracy, we show that few logged security checks were
cessestoindividualobjectsareregulatedusingAccessCon-
unrelated to least-privilege incompatibilities (good sound-
trolLists(ACLs). Incontrast, UNIXtypicallyusesgroups
ness), and that bypassing the remaining logged checks al-
toimplementnamedprivileges. Forexample, membership
lows the application to run without Admin privileges (an
inthefloppygroupgrantsaccesstothefloppydrive.Tocre-
empiricaltestofcompleteness). Todemonstrateusefulness,
ateanequivalenttotheSystemTimeprivilegeinUNIX,one
we first show that the number of security checks respon-
mightcreateaSystemTimegroup,createaChangeSystem-
sible for least-privilege incompatibilities is small. Based
Time setuid executable, set its group to SystemTime, and
bothonthetracedleast-privilegeincompatibilitiesandcon-
giveitgroup-executepermission.
sultations with developers knowledgeable about the appli-
WindowsandUNIXbothsupportACLs,butagain,their
cations, we conclude that this information is a significant
implementations are slightly different. UNIX file systems
helpinfixingtheincompatibilities.
typicallyassociateeachfilewithanownerandagroup,and
Theremainderofthispaperisorganizedasfollows: Sec-
store access rights for the owner, members of the group,
tion 2 provides relevant background information on the and all others. Windows ACLs can contain many <SID,
Windows Security Model. Section 3 describes our imple- access>pairs,asinAFS(theAndrewFileSystem). These
mentation. Section 4 presents our evaluation. Section 5 <SID, access> pairsare used to grant one user the ability
discusses related work. Section 6 concludes and discusses
to read and write the object, another user the ability only
ourplansforfuturework.
toreadtheobject,allmembersofanothergrouptheability
to read the object, etc. ACLs in Windows can be attached
2 Background on the Windows Security
notonlytofiles,buttoanyobjectaccessiblethroughahan-
Model dle,suchasregistryentriesandsemaphores. InUNIX,and
moresoinPlan9,accesscontrolismadeuniformacrossre-
WedescribetheabstractionsandmechanismsoftheWin-
sourcesbyexportingmostresourcesthroughthefilesystem
dows security model by comparison to the UNIX security
(e.g.,/dev/audio).
model. A Windows token represents the security context
ofauser. Tokensareinheritedbyprocessescreatedbythe
user. A token contains multiple Security IDs (SIDs), one2.1 SecurityCheckingFunctions Check Monitor and Noise Filter component applies a con-
servativenoisefilteringalgorithmtokeeponlythosesecu-
The interface to security checking in Windows is com-
ritychecksthatmightberesponsibleforleast-privilegein-
plex. We identified a small set of security checking func-
compatibilities. Theactualloggingofthesechecksisdone
tionstoinstrument,andwetookseveralstepstoassureour-
theSecurityCheckEventLoggercomponent.Aftertracing,
selves of their completeness: reading the Windows source
we apply a separate log validation step, described in more
code,consultingaseniorWindowsarchitect,andexamining
detailinSection3.2. Figure2showsthisworkflow.
thekernelcallstackatobservedapplicationfailures. Based
onthesestepsandoursuccessidentifyingleast-privilegein-
3.1 Security Check Monitoring and Noise Filter-
compatibilitiesintheapplicationsinourevaluationsection,
ing
wehavegoodconfidenceinthesetoffunctionsweidenti-
fied. Note that the complexity of security interfaces is not Wedeveloped asimplenoisefilteringalgorithmspecific
unique to Windows; previous work has discussed the sub- toidentifyingleast-privilegeincompatibilitiesmotivatedby
tletiesofUNIXsecurityinterfaces[11,14]. thefollowingobservation:largenumbersofsecuritychecks
Thefivefunctionsweidentified,andtheirroleinthese- fail on running Windows systems without any noticeable
curity subsystem, are presented in Figure 1: the functions end-user impact. We speculate that these failed checks
themselves are circled, and the arrows denote function in- comefromapplicationsandlibrariesattemptingtoacquire
puts and outputs. For the purpose of discussion, we have objectwithrightstheydonotrequirefortheirproperfunc-
changed the function names to make them more intelligi- tioning, but we have not yet managed to investigated this.
ble. Privilege-Check is used to check that privileges are Our noise filtering algorithm identifies calls that succeed
held and enabled in the token. Adjust-Privilege is used to with Admin privileges and fail without them. This has no
enableordisableprivileges. Access-Checkisusedtocheck false negatives, i.e., it does not eliminate any true least-
whether a user has access to a particular object, as deter- privilegeincompatibilitiesfromthelog. Itdoesnotentirely
mined by its ACL. Reference-Object also performs access eliminate false positives: some applications attempt to ac-
checks;requeststoreadorwriteanobjectflowthroughthis quire objects with rights they do not need, falling back to
function,whichcheckstheHandleTabletoseewhetherthe acquiringtheobjectwithfewerrightswithoutanyapparent
ability toperform the operation was previously granted by adverseeffect.
Access-Checkwhenthehandletotheobjectwascreated. Ournoisefilteringalgorithmassumestheuserisrunning
SID-Compareisusedbothinternallybythesecuritysub- theapplicationwithAdminprivileges. Inthesecuritysub-
system and directly by applications. In particular, least- system, we intercept all security checks, and initially al-
privilegeincompatibleapplicationsoftenuseSID-Compare low the check to pass through unmodified. If the check is
to fail early. The application checks if the user holds a successfulandthetokencontainedmembershipintheAd-
SIDgrantingmembershipintheAdministratorsgroup,and ministratorsgroup,thenoisefiltertemporarilyremovesthis
fails if not. Intercepting this direct application check was membership from the token and performs a second check.
necessary for us to determine the later (and more interest- Ifthissecondcheckfails,theSecurityCheckEventLogger
ing)setofcheckscausingleast-privilegeincompatibilities. is called. Although our implementation only differentiates
Of course, a developer attempting to fix a least-privilege betweenmembershipandnon-membershipintheAdminis-
incompatible application would find removing this SID- trators group, it would be straightforward to configure the
Comparechecktobeanobviousmodification. component to handle other groups (e.g., the Backup Oper-
atorsgroup). Toconvinceourselvesthatthisapproachhad
3 Identifying Least-Privilege Incompatibili- merit, we performed a quick experiment, collecting three
ties 2-hourtracesduringregularofficehoursononeofourpri-
marymachines. Theresultsofthesetracesaresummarized
We implemented our tracing technique for identifying inTable1.
least-privilegeincompatibilitiesbyaddingtwocomponents In each of these traces, the set of security checks that
totheWindowsXPServicePack1kernel,aSecurityCheck wouldbeloggedafterapplyingournoisefilteringalgorithm
MonitorandNoiseFilterandaSecurityCheckEventLog- (the column labeled Difference) is much smaller than the
ger. Because security checks are a tiny fraction of an un- totalnumberoffailedchecks. The2K-3Kremainingfailed
modified system’s performance, the overhead our compo- checksstillconstituteaconservativesupersetofthechecks
nents added to each security check had a negligible effect corresponding to least-privilege incompatibilities. Though
on overall system performance. To apply our technique, a 2K-3K checks is probably too many to examine by hand,
developerorsystemadministratorstartsthetracer,runsthe in practice we expect the tracer to be run in much shorter
incompatible application with Admin privileges, and then intervals—identifyingtheleast-privilegeincompatibilities
stops the tracer. While the tracer is running, the Security described in Section 4 required trace lengths of less thanThread or process SID to compare SID-Compare Identical?
Token
Security Descriptor
User ID: Alice’s SID
ACE 1: Allow Alice read
Group 1 ID: SID of Users Group
SIDs ACE 2: Allow Adminswrite
… ACL
…
Group n ID: SID of AdminsGroup
Desired Access ACE n: Allow Users execute
Privilege 1: SystemTime(Disabled)
Privileges
… Object (e.g., file,
registry key, …)
Privilege n: ShutDown(Enabled) Access-Check Succeed?
Handle Table Entry
Target Privileges Target Privilege, Compute granted Granted Object
Enable/Disable access on success Access Pointer
Privilege-Check Adjust-Privilege
Reference-Object
Succeed?
Succeed? Succeed?
(Privileges held (Privilege
Desired Access
and enabled?) held?)
Figure1.WindowsSecurityCheckingFunctions
Securitychecks Security checks Failures with Ad- Failures without Difference
withusertoken minprivileges Adminprivileges
Trace1 1,756,000 417,257 79,317 81,597 2,280
Trace2 1,124,000 315,014 64,336 66,385 2,049
Trace3 913,000 422,783 94,453 97,170 2,717
Table1.Two-HourTracesofSecurityChecks
20seconds. Manuallyinspectingthelogsalsoyieldedtwo closingthefile, attemptingtoreopenitwithadifferentset
otherunsurprisingobservations. First,securitycheckstend ofpermissions,anddoingtheappropriatefixup. Appropri-
tooccurinburstsrightafternewprocessesarestarted. Sec- ately handling calls to arbitrary objects would have been
ond,thepotentialcausesofleast-privilegeincompatibilities evenmorechallenging.
appeartocovertheentirerangeofsecuritychecks: access Intricacies of Access-Check with MAXI-
check failures on semaphores and registry keys, privilege MUM ALLOWED. The Access-Check function can
checkfailures,andmanyothers. be called either with an explicit list of desired accesses,
This noise filtering algorithm depends on the fact that such as read and write, or it can be called with a special
theunderlyingWindowssecuritysubsystemisstatelessbe- argument (MAXIMUM ALLOWED) asking for all al-
cause it re-executes certain calls with modified arguments. lowedaccesses. BecauseAdminprivilegesgrantadditional
A natural alternative approach to modifying the security accesses on most objects, it might seem necessary to log
subsystemwouldhavebeentomodifytheAPIsthataccess most calls with MAXIMUM ALLOWED as potential
resources,e.g. thefilesystemorsocketAPIs. However,the least-privilege incompatibilities. However, this would
statefulnatureoftheseinterfaceswouldhavemadeourap- quickly lead to a large number of false positives: for
proach to noise filtering either difficult or impossible. For example,whenwestartedtheTurboTaxapplication(oneof
example,re-executingaFile-Opencallwouldhaverequired the examples in our evaluation), Access-Check was calledStart Run app with Stop Start Run app without Stop
tracing Admin privileges tracing validation Admin privileges validation
Security Check Monitor
and Noise Filter
Log of Security Check Monitor
Security Check least-privilege and Noise Filter
Event Logger incompatibilities (in validation mode)
Figure2.WorkflowofTracingandValidation
303 times with MAXIMUM ALLOWED access, and 189 theobject,andindeed,asecuritydescriptorcanbecreated
of these calls return different accesses based on whether a byaprogrammerwithoutreferencetoanobject,thoughthis
userhasAdminprivileges. practiceisrare.Toobtainobjectnameswhentheyexist,the
Fortunately, all the calls that we observed to Access- loggerwalksbackalongthekernelstack, traversingframe
Check with MAXIMUM ALLOWED occurred during ob- pointer frames. The traversal stops at any function frame
ject handle creation. When object handles are created, that is known to contain object name information, which
the accesses granted by Access-Check are cached, and isthenwrittentothelog. Thistechniquerequiresakernel
latercallsthroughReference-Objectarecomparedtothese compiled with frame pointers, which is the case for Win-
cached accesses. This allowed us to avoid the po- dows XP Service Pack 1. We have currently implemented
tentially large number of false positives due to MAXI- retrievingobjectnamesfromfivefunctionsthatweknowto
MUM ALLOWEDbymodifyingtheReference-Objectin- be particularly common parents of Access-Check, such as
terface to incorporate our noise filtering algorithm: retry Create-File. This has been sufficient to give us very good
successful requests to see whether they would have suc- coverage. It allowed us to debug all the least-privilege in-
ceededwithoutAdminprivileges. compatibilities given in the evaluation section, and it re-
Applying the noise filtering algorithm at the Reference- turnedobjectnamesfor98.3%oftheaccesschecksinone
Object interface required maintaining a small amount ofour2-hourtraces(8490outof8639checks).
of additional state for each object handle. When ob-
ject handles are created with Access-Check and MAXI- 3.3 LogValidation
MUM ALLOWED, we initialize an additional field in the
handle,AssumedGrantedAccess,withtheresultsofAccess- We performed a separate validation step to confirm that
Check and MAXIMUM ALLOWED after removing Ad- all the least-privilege incompatibilities in the code paths
minprivileges. WhenReference-Objectislatercalledwith wemanagedtoexerciseweredetectedbyourtracingtech-
anobjecthandle,thedesiredaccessiscomparedtoboththe nique. We could not directly modify the code for some of
actual granted accesses and AssumedGrantedAccess. The the applications in our evaluation, so instead we modified
request is then logged if the desired access is allowed by thebehaviorofourSecurityCheckMonitorandNoiseFilter
theactualgrantedaccessesandnotbyAssumedGrantedAc- to change the outcomes of the security checks themselves.
cess. This validation step is the reverse of the tracing step: ap-
plicationsarerunwithoutAdminprivileges,andpreviously
3.2 SecurityCheckEventLogger logged checks are made to succeed where they otherwise
would have failed. The application will work without Ad-
We implemented the Security Check Event Logger by min privileges if and only if the logged checks cover all
modifying ETW (Event Tracing for Windows), a kernel causesofleast-privilegeincompatibilities.
component thatalready allowslogging events suchasreg- Though it might seem possible to mitigate all least-
istryaccesses,pagefaultsanddiskI/O.Eachsecuritycheck privilegeincompatibilitiesbyusingthevalidationtechnique
logentryindicatesthecurrentprocessname,themonitored tochangetheoutcomeofcertainsecuritychecks(oftenef-
securitycheckingfunction,targetprivileges,thedesiredac- fectivelychangingACLs),wehaveseveralreasonstourge
cessandgrantedaccess,astackdump(thereturnaddresses caution in this approach. First, some applications legiti-
onthekernelstack),andtheobjectname. mately require Admin privileges, and the objects they are
Obtaining the object name of each Access-Check call is accessing should retain their strict ACLs. A significant
moredifficultthanobtainingtheotherinformation. Access- complicatingfactoristhattheACLsmaybeforkernelob-
Check is performed on a security descriptor and a token. jects whose significance is less clear than files or registry
Thereisnobackwardpointerfromthesecuritydescriptorto keys. Secondly,forapplicationsthatshouldnotrequireAd-min privileges, developers are free to change application game without Admin privileges, an error message appears
behavior in many ways. Changing ACLs may require sig- stating “Automenu: insufficient privilege”. The tracer in-
nificantly more work than the alternative modifications to tercepted4002checksduringapplicationstartup,ofwhich
application behavior. Finally, the architecture of the Secu- 899wouldhavefailediftheuserhadnothadAdminprivi-
rity Check Monitor and Noise Filter component requires a leges.Only15checkssurvivednoisefiltering.The5unique
lookuptabletodeterminewhethertochangetheoutcomeof entriesamongthese15checksareshowninTable2.
particularsecuritychecks.ReconfiguringACLsinplacehas Two things point to the first entry in the log being the
better scalability and efficiency, avoiding both the lookup likely cause of the least-privilege incompatibility. First,
stepandtheneedtomaintainadditionalstateinthesecurity the error message mentions the AutoMenu process. Sec-
subsytem. Indeed, this is exactly how ACL modifications ond, HKEY LOCAL MACHINE (HKLM) is a portion of
arecurrentlyhandledinthefilesystemandregistry. the Registry used for storing machine-wide settings. We
used our validation technique to confirm this hypothesis.
4 Evaluation Althoughwehavenotheardfromtheapplicationdevelop-
ersdirectly,anecdotalevidencepointstothisbeingacom-
We evaluated the effectiveness of our tracing technique monmistakeleadingtoleast-privilegeincompatibility,eas-
on eight least-privilege failure scenarios drawn from real ily fixed by using a per-user store. This least-privilege in-
applications. These applications include small utility pro- compatibilityisalsosimpletomitigatebymodifyingACLs
grams,videogames,documentprocessingapplications,and becausenosystemcriticalinformationisstoredinthe“Bob
softwaredevelopmenttools,andspanthespectrumofusers, the Builder” section of the Registry. We have not yet de-
includingpre-schoolchildren,teenagers,professionalsand ducedwhyexploreralsogeneratesentriesinthelog,butas
homeusers. Thepurposeoftheevaluationisbothtounder- mentioned previously, our technique sometimes generates
standtheeffectivenessofthetechniqueinproducingasmall falsepositives.
setofsecuritychecksresponsiblefortheleast-privilegein-
compatibility,andtounderstandhowhelpfulthiswouldbe
toadeveloperseekingtofixtheincompatibility,orasystem 4.1.2 RAZZLE
administratorseekingtomitigateit.
SeveralMicrosoftproductsusetherazzlebuildenvironment
For our experiments we installed and traced applica-
configurationtool. DevelopersmusthaveAdminprivileges
tions using an account with Admin privileges. We found
tousethecurrentversionofthistool. Whenauserwithout
that most least-privilege incompatibilities are encountered
Adminprivilegesrunsrazzleandthenattemptstochangeto
quickly: for interactive applications, we found that we
asourcecodedirectory,theyreceivea“permissiondenied”
only needed to trace application startup, while for non-
message.
interactive applications (e.g., scripts), we traced the entire
Tracing razzle from start to finish yielded 7 log entries
run of the application. We validated our logs using a sec-
(shown in Table 3) out of 8660 security checks. One no-
ond account without Admin privileges. We found that the
tices immediately from the trace that razzle launches a se-
causesofleast-privilegeincompatibilitiesinourevaluation
ries of other processes. Our first hypothesis was that the
fall into three categories: overly-restrictive ACL settings,
ACLonc:\sysman(oursourcecodedirectory)wasrespon-
insufficient granularity of privilege in the application de-
siblefortheleast-privilegeincompatibility,andwechanged
sign, and programmatic enforcement ofunnecessary privi-
the ACL manually. However, when we ran razzle a sec-
legerequirements.
ondtime,theACLsrevertedtorequiringAdminprivileges.
4.1 OverlyRestrictiveACLs Oursecondhypothesiswasthatthechildprocessrazacl.exe
was changing the ACLs. We confirmed this by changing
The three applications in this section required elevated theACLmanuallyandthenremovingtherazaclexecutable;
privilegesbecausetheyeitherstoredtheirsettingsinamore thisallowedauserwithoutAdminprivilegestouserazzle.
secure location than necessary, or they did not correctly We learned from consulting razzle developers that razacl
configure ACLs to allow access by the appropriate users. removesuseraccountsfromACLsinthebuildtreetopro-
Theseproblemsareallfixablewithsmallcodechanges,and duce a consistent build environment across user accounts.
itappearstobepossibletoworkaroundthembymanually Changingrazzletoproduceaconsistentbuildenvironment
reconfiguringtherelevantACLs. without requiring Admin privileges is trivial, and indeed,
the next version of razzle is already slated to have this
changeincorporated. Thisleast-privilegeincompatibilityis
4.1.1 BobTheBuilderGame
easilymitigatedbyasystemadministratorbecauserazzleis
“BobTheBuilder,CanWeFixIt”isavideogamedesigned ashellscript,andsoasystemadministratorcaneasilymod-
for children as young as 3. If a user attempts to start the ifyittonotuserazacl.IfrazzlehadbeencompiledcodethatSecurityFunction Process ObjectName
Reference-Object Automenu.exe \REGISTRY\HKLM\SOFTWARE\BBC Multimedia\Bob the
Builder\1.0.0
Access-Check explorer.exe \ProgramFiles\THQ\BobtheBuilder\StartBTB.exe
Access-Check explorer.exe \WINDOWS\explorer.exe
Access-Check explorer.exe \WINDOWS\system32\mydocs.dll
Access-Check explorer.exe \WINDOWS\system32\shell32.dll
Table2.UniqueLogEntriesforBobTheBuilder
requiredrazaclinordertocomplete,asystemadministrator technicallychallengingbecauseourlabdidnotallowusto
still could have written a separate script to reset the ACLs easilyfaketheremoteenvironmentthatRASassumes. Our
afterrunningrazacl. workaroundwastotraceasmallscript[22]thatreplicated
thecoreRASbehavior,andthentovalidatetheresultsusing
4.1.3 MicrosoftGreetings2001 therealRASprogramfromaremotelocation.
Tracing the small script generated 7 log entries out of
Microsoft Greetings 2001 is a document processing appli- 2566securitychecks. Sixofthesevencheckswererelated
cation. Our trace of Microsoft Greetings’ startup recorded tofiles,registrykeysandTCP/IPdevicesthatweeliminated
37 potential causes of least-privilege incompatibilities, ascausesofleast-privilegeincompatibilitiesusingourval-
(summarized in Table 4), out of the 12,618 total security idation technique. Causing just the last check to succeed
checks. allowedboththescriptandtherealRASprogramtoberun
Invalidatingthelogs,wefoundthatthefirstthreeclasses withoutAdminprivileges.
ofloggedsecuritychecksmustsucceedfortheapplication Analyzing this one security check in more detail, we
to be usable without Admin privileges. All the security saw the Windows script interpreter attempting to enu-
checksintheremainingtwoclassesappeartobefalsepos- merate all network connections by calling the function
itives. All the failed checks appear to be easily fixable, as get EnumEveryConnection in class CNetSharingManager
theyseemtoreflectthestandardmistakeofstoringsettings definedinHNETCFG.dll(HomeNetworkingConfiguration
in a machine-wide scope. Indeed, the next (and renamed) Manager). This function checks that the user has Admin
version of this software, Microsoft Picture It! 2002, does privileges using the function CheckTokenMembership ex-
nothaveanyleast-privilegeincompatibilities.Fromthesys- portedbyADVAPI32.dll,whichinternallycallsintotheker-
temadministratorperspective,thesecondandthirdclasses nelfunctionAccess-Check.
ofsecuritychecksaremitigatableusingonlystandardtools, From discussions with the developers of this tool we
but the first class requires the use of our validation tech- learnedthatRASenumeratesallnetworkconnections,and
nique. Finally, the large number of least-privilege incom- switches all of them to run over the newly created Virtual
patibilitiesinthisexampleillustratesthebenefitsofrequir- PrivateNetwork(VPN).TheonlyAPIforenumeratingnet-
ingonlyonetracetoidentifyalltheincompatibilities. workconnectionsenumeratesthemforallconnections(not
just the current user), and this API was designed to be us-
4.2 InsufficientPrivilegeGranularityinApplica-
ableonlywithAdminprivileges.TheRASdevelopersseem
tionDesign
tobefacedwithtwopossiblesolutionstothisleast-privilege
incompatibility: aWindowsservicecouldperformworkon
Thethreeapplicationsinthissectionallhavesomefunc-
behalfofRAS,thusallowinganyusertoswitchotherusers’
tionality that is appropriate for all users, and some func-
connections to run over the VPN; alternatively, if an al-
tionalitythatshouldonlybeusablewithAdminprivileges.
ternative API were present that allowed enumerating only
However,theyallfailtoaccommodatebothmodesofoper-
thenetworkconnectionsforaparticularuser,onemightbe
ationintheirdesign,andconsequentlyarenotusableatall
satisfiedwithswitchingonlythatuser’sconnectionstorun
withoutAdminprivileges. Wethank[4]forbringingmany
over the VPN. A system administrator would be restricted
oftheseexamplestoourattention.
toaddressingthisproblembyusingourvalidationtechnol-
ogytocausethisonecheckforAdminprivilegestosucceed
4.2.1 RemoteAccessService(RAS)
—thiswouldberoughlyequivalenttothefirstofthepossi-
RASisaprogramforcorporateemployeestoremotelycon- bledevelopersolutions.
nect to the corporate network. Running RAS without Ad- Thisexampleillustratesthatleast-privilegeincompatibil-
minprivilegesleadstoanerrormessageroughlyoneminute ities may result from non-intuitive security checks where
after the program starts. Reproducing this problem was a library indirectly checks access in its lower level imple-SecurityFunction Process ObjectNameorSecurityAction
Access-Check explorer.exe \WINDOWS\system32\cmd.exe
Adjust-Privilege razacl.exe EnableSecurityprivilege
Privilege-Check razacl.exe CheckifSecurityprivilegeenabled
Access-Check cmd.exe \sysman
Access-Check findstr.exe \sysman
Access-Check perl.exe \sysman
SID-Compare tfindcer.exe DetermineifuserhasAdminprivileges
Table3.LogEntriesforRAZZLE
SecurityFunction ObjectNameorSecurityAction
SID-Compare DetermineifuserhasAdminprivileges
Access-Check \ProgramFiles\MicrosoftPictureIt! PhotoPub\pidocob.dll
3Access-Check \REGISTRY\HKLM\SOFTWARE\Microsoft\PictureIt! (andsubkeys)
22Access-Check \REGISTRY\HKLM\SOFTWARE\Classes(andsubkeys)
11additionalentries ...
Table4.SummaryofLogEntriesforMicrosoftGreetings2001
mentation. Incaseslikethese,evendevelopersbenefitfrom group whose members can change the power configura-
tracingnotrequiringsourcecode. However,becauseweac- tion. In a shared laptop scenario, one could then add each
tually did have access to the application source code, we new laptop user to the group and make a user’s configura-
were able to construct the entire sequence of calls respon- tion dominant when that user is logged in to the console.
sible for the least-privilege incompatibility, not just within However,evenwiththismodification,powerconfiguration
theRASapplication. wouldstillbeunavailabletoanunprivilegeduser.
4.2.2 WindowsPowerConfiguration
Windowspoweroptionsareconfiguredperuserandstored
in the user’s profile. However, Admin privileges are
4.2.3 WindowsClock/Calendar
required to change power options, and the application
only allows users with Admin privileges to change the
power options for their own account. When a user at- Doubleclickingthenumericclockontheright-bottomcor-
tempts to change their power options without Admin neroftheWindowsdesktoppresentsapictorialclockanda
privileges, they receive an “access denied” error mes- calendar.Usersfindthisahandytooltousewhentheywant
sage. Tracing this action led to 5 logged checks out toanswerquestionslike“whatisthedateofthelastMon-
of 1364 total. Two of these logged checks were for dayofMay?”Unfortunately,attemptingtolaunchtheclock
\REGISTRY\HKLM\SOFTWARE\Microsoft\Windows withoutAdminprivilegesleadstoan“insufficientprivilege
\CurrentVersion\Controls Folder\PowerCfg, and we vali- tochanhesystemtime”errormessage. Evenifonewanted
datedthatthisoneACLwasthecauseoftheleast-privilege to launch this application from a script granting it Admin
incompatibility. privileges,thismightbedifficultbecausethecommandline
From discussing this with internal Microsoft developers isnotreadilyavailable. Tracingthisactionledto3logged
we have surmised that power configuration presents diffi- checks(showninTable5)outof455total.
cultpolicyissues,wherecertainscenarioscallforper-user We validated that the SystemTime privilege check is
settings, andyetthosesettingshavemachine-wideimpact. the cause of the least-privilege incompatibility. From dis-
Oneuser’spoweroption,suchastimetoturnoffharddisks, cussing this case with internal Microsoft developers, we
mayinterferewithapplicationsrunningforotherloggedin surmisedthattheoriginalclockwasnotdesignedtobeused
users. At the same time, in a shared laptop scenario one in a read-only manner, but that this privilege check would
couldreasonablywantthepoweroptionstochangedepend- provide a good place to branch, displaying a read-only UI
ingonthepersonusingthemachine(e.g.,thelong-tripuser iftheprivilegewasmissing. Thisleast-privilegeincompat-
versus the short-trip user). We speculate that it might be ibility does not appear to fit our model for mitigation by a
possible to better handle this issue by adding a privileged systemadministrator.SecurityFunction Process ObjectNameorSecurityAction
Access-Check explorer.exe \WINDOWS\system32\rundll32.exe
Access-Check rundll32.exe \BaseNamedObjects\shell.{A48F1A32-A340-11D1-BC6B-
00A0C90312E1}
Adjust-Privilege rundll32.exe EnableSystemTimeprivilege
Table5.LogEntriesforWindowsClock/Calendar
4.3.2 TurboTax2003
TurboTax is tax calculation software released by Intuit.
Running TurboTax without Admin privileges generates an
error message stating that Admin privileges are necessary
tousetheapplication. Tracingtheapplicationstartupgen-
erated 11 log entries out of 12503 total security checks.
Figure 3. Error Message When Starting Diablo II The 11 logged entries break down to one entry for SID-
GamewithoutAdminprivileges Compare, three for Access-Check on semaphores, four for
Access-Check on HKLM registry keys, and three others.
4.3 Programmatic Enforcement of Unnecessary Surprisingly,usingourvalidationtechniquewediscovered
PrivilegeRequirements that just causing the SID-Compare call to succeed is suffi-
cienttoallowusingtheapplicationextensivelywithoutAd-
Thetwoapplicationsinthissectionprogrammaticallyen- min privileges; we succeeded in running TurboTax, com-
force that the user possess Admin privileges, but they ap- pletinga1040AtaxformandprintingittoaPDFfile. We
peartofunctionperfectlywellifthischeckisbypassed. We havenotyetreceivedaresponsefromthedevelopersofTur-
discussthereasonsfortheserequirementsinmoredetailin boTax, but we have two different reasons that we believe
thecontextofeachapplication. might have caused the TurboTax developers to insert this
check. First, apubliclyavailabletranscriptofadiscussion
withanIntuitcustomerservicerepresentativesuggeststhat
4.3.1 DiabloIIGame requiringAdminprivilegeswasaquickfixsolutiontodata
privacy concerns [31]. Because Admin privileges convey
Diablo II is an action game that ships on three CDs: an
complete control of the system, leaking information about
installdisc,acinematicsdisc,andaplaydiscthatmustbe
other users through the application does not represent an
in the drive for the game to work. When a user without
increased exposure of private data if the user viewing the
Admin privileges attempts to play the game, a misleading
informationalreadyhasAdminprivileges. Thesecondrea-
error message (Figure 3) pops up claiming the CD drive
sonweconsideredisthatsomecodepathwedidnotexecute
is empty. Tracing this action generated 3 log entries out
generates a failure when the user lacks Admin privileges.
of 1573 total checks, 440 of which fail for a user without
Onbalance,webelievetheevidencepointstothecheckfor
Adminprivileges. The3logentriesareshowninTable6.
Adminprivilegesbeinganexplicitdecisionbytheapplica-
BecausetheerrormessagementionstheCD-ROMdrive,
tiondeveloperstorequireAdminprivileges.
wehypothesizedthatthethirdlogentrywasresponsiblefor
theleast-privilegeincompatibility. Weverifiedthatpassing
5 RelatedWork
thischeckaloneallowsthegametobeplayedwithoutAd-
minprivileges. A common approach to increasing system security is to
Thisexampleillustrateshowleast-privilegeincompatibil- sandboxapplicationsorusers,sothatthescopeofindivid-
ities can be presented to the user with a misleading error ualcompromisesisdecreased. Common sandboxing tech-
message. Wehavenotreceived anyresponsefromtheDi- niquesincludevirtualmachines[15],systemcallinterposi-
ablo II developers, but the misleading error message leads tion[1,14,30], andrestrictedfilesystems[12]. Ourwork
us to believe that the failure mode was not anticipated by differsfromthispriorartinthatwearenotinventinganew
thedevelopers. Wespeculatethatthismaybeasimplepro- sandbox or developing a new technology to better imple-
grammingoversightwheretheprogramattemptstoacquire ment an existing sandbox. Instead, our tracing technique
certain unnecessary CD-ROM accesses, and that it could is designed to help developers and system administrators
easily be fixed. This least-privilege incompatibility also make useofanexistingand well-understood sandbox: the
could easily be mitigated by a system administrator using unprivilegeduser.
ourvalidationtechnique. Other previous work has investigated technologies forSecurityFunction Process ObjectName
Access-Check explorer.exe \ProgramFiles\DiabloII\DiabloII.exe
Access-Check Game.exe \REGISTRY\MACHINE\SYSTEM\ControlSet001\Control\
MediaProperties\PrivateProperties\Joystick\Winmm
Access-Check Game.exe \Device\CdRom0
Table6.LogEntriesforDiabloII
buildingorre-buildingsystemssothattheybetterconform [24],andtheactualACLscandependonruntimestate,e.g.,
to the principle of least privilege [13, 25, 32]. Provos et virtualdirectoriessuchas“MyDocuments”willbemapped
al show how separating OpenSSH into privileged and un- to different directories (with different ACLs) depending
privileged parts (privilege separation) would have reduced on the current user. Second, our investigation shows that
itsvulnerabilitytoseveralsecurityholesthatwerelaterdis- privilege failures sometimes occur after the flow of con-
covered[26]. BrumleyandSongdescribethePrivtranstool trol passes through multiple libraries, and static analysis
whichsignificantlyautomatesthisprocessusingstaticanal- becomes increasingly difficult as the scope of the analysis
ysisandannotationsonprivilegedoperations[5]. Ourtech- increases. Lastly, static analysis typically requires source
nique iscomplementary to Privtrans, and our tracing tech- code,andsometimesadditionalannotations,andsocannot
niquecouldpotentiallybeusedtoautomaticallyproducethe beusedifportionsofthecodeareonlyavailableinbinary
annotationsrequiredbyPrivtrans. format. This is a common situation for system adminis-
A common assumption in much of this earlier work is trators, and also for developers due to the common use of
that some part of the program under investigation (e.g., third-partycomponents.
OpenSSH) legitimately requires the ability to perform a The most closely related previous work is the cur-
privileged operation. In contrast, our investigation into rent developer practice of identifying privilege failures by
Windows applications suggests that in many cases, the re- tracing the file system or registry and grepping for AC-
quirementthattheapplicationruninaprivilegedcontextis CESS DENIED [17]. Our technique goes beyond this by
a trivial bug. In other cases, the requirement that the ap- monitoringacompletesetoffunctionswithintheWindows
plicationruninaprivilegedcontextreflectsalargerdesign securitysubsystemandimplementingamoresophisticated
flaw.Therewasonlyanargumentfortheapplicationrequir- noise filtering strategy. Our evaluation in Section 4 justi-
ingAdminprivilegesintwooftheeightcasesweevaluated, fiestheimportanceofbothoftheseadvancesforidentifying
RASandPowerConfig. least-privilegeincompatibilities.OnUNIXsystems,system
Some previous research has focused on new models for calltracingissometimessimilarlyusedtodebugaccessfail-
access control, e.g., Role Based Access Control, Type En- ures. Ourtracingtechniquediffersfromsystemcalltracing
forcement, and Mandatory Access Control [20]. The de- initsmoresophisticatednoisefiltering,andthesignificantly
velopment of policies for such systems, and in particular smallercodebasethatmustbecorrectlyunderstoodinorder
theretrofittingofpoliciestoexistingapplications,hasbeen tocorrectlycaptureallaccessfailures. Systemcalltracing
recognizedtorequireasignificantamountofwork[28]. A must monitor all functions that have security implications
tracing approach likes ours might help in policy develop- andareexposedbytheOSAPI,whileweonlyneedtomon-
ment for such systems by providing insight as to why par- itorfivefunctionsintheWindowssecuritysubsystem.
ticular applications do or do not violate particular access A recently proposed alternative approach to eliminating
controlpolicies. least-privilegeincompatibilitiesistoencouragedevelopers
Wenowconsiderpreviousworkthathasusedstaticanal- to run without Admin privileges [27]. Initiating this prac-
ysis[2,34],acommonlycitedalternativetodynamictrac- tice helps with code bases being developed from scratch,
ingtechniquessuchasourown. Amajorstrengthofstatic but is difficult to incorporate into large pre-existing code
analysisisthatitcanachievecode-coveragetrivially,while bases.Eveninthedevelopmentofnewsoftware,ourtracing
dynamic techniques often require sophisticated test-case techniqueprovidesseveraladditionalbenefitstodevelopers
generationstrategiestoexerciseallcodepaths,ifexercising running without Admin privileges: individual test passes
all code paths is possible at all. However, no one has pre- canuncovermultipleleast-privilegeincompatibilities;these
viously attempted to apply static analysis to this problem, least-privilege incompatibilities are identified as such (not
andindeed,webelievestaticanalysiswouldbedifficultor just as bugs with unknown causes); and additional help-
impossible for at least three reasons. First, the underlying ful debugging information is provided, such as complete
property being checked is a function of all ACLs on the call stacks (if symbol files are present), object names, and
system,andthisisnotafixedtarget. Itisstandardpractice ACLs.
toreconfigureACLsbasedonthedeploymentenvironment6 ConclusionandFutureDirections [6] M. E. Carson. Sendmail without the Superuser. USENIX
Security1993.
Least-privilege incompatibilities cause many Windows [7] CERT. Advisory CA-2004-02 Email-borne Viruses.
users to run with Admin privileges. This significantly in- http://www.cert.org/advisories/CA-2004-02.html.
creases the vulnerability of Windows systems: any com- [8] CERT. AOL Instant Messenger client for Windows con-
promiseofauserlevelapplicationbecomesasystemcom- tainsabufferoverflowwhileparsingTLV0x2711packets.
http://www.kb.cert.org/vuls/id/907819.
promise. To address this problem, we introduce a black-
[9] CERT. Critical Vulnerabilities in Microsoft Windows.
box tracing technique that identifies the causes for least-
http://www.us-cert.gov/cas/techalerts/TA04-212A.html.
privilegeincompatibilities. Ourtechniquecatchesallleast-
[10] CERT. Internet Explorer Update to Disable
privilegeincompatibiltiesonexercisedcodepaths.
ADODB.Stream ActiveX Control. http://www.us-
We evaluated our tracing technique using eight least- cert.gov/cas/techalerts/TA04-184A.html.
privilege incompatible applications. These eight applica- [11] H. Chen, D. Wagner, and D. Dean. Setuid demystified.
tions span a variety of user types, and exhibit a variety of USENIXSecurity2002.
reasonsfortheunderlyingleast-privilegeincompatibilities. [12] C.Cowan,S.Beattie,G.Kroah-Hartman,C.Pu,P.Wagle,
andV.Gligor. SubDomain: ParsimoniousServerSecurity.
Basedontheseevaluationsandsubsequentdiscussionswith
LISA2000.
developers, we conclude that the tracing technique makes
[13] C.Evans.VerysecureFTPdaemon.http://vsftpd.beasts.org.
fixingormitigatingleast-privilegeincompatibilitiessignifi-
[14] T.Garfinkel. TrapsandPitfalls: PracticalProblemsinSys-
cantlyeasier. temCallInterpositionBasedSecurityTools.NDSS2003.
In the future, our tracing technique would provide even [15] T. Garfinkel, B. Pfaff, J. Chow, M. Rosenblum, and
morevalueifitwasintegratedwithotherdevelopmenttech- D. Boneh. Terra: A Virtual Machine-Based Platform for
nologies, such as the ability to set breakpoints. Also, we TrustedComputing.SOSP2003.
believethatourlogvalidationtechniquehighlightstheneed [16] A.Gotlieb,B.Botella,andM.Rueher. Automatictestdata
generationusingconstraintsolvingtechniques.InProceed-
for a utility to configure security permissions associated
ings of the International Symposium on Software Testing
with objects other than files and registry keys. In addition
andAnalysis,pages53-62.ACM,1998.
to aiding system administrators in mitigating some least-
[17] D. GUI. Debugging Permissions Problems.
privilege incompatibilities, such a utility would be conve-
http://msdn.microsoft.com/library/default.asp?
nientfordevelopersdebuggingtheseincompatibilities. Fi- url=/library/en-us/dnaskdr/html/askgui03272001.asp.
nally,wespeculatethatatracingtechniquelikeourscould [18] M.Howard,J.Pincus,andJ.Wing. MeasuringRelativeAt-
be fruitfully applied to some least-privilege problems on tackSurfaces.ProceedingsofWorkshoponAdvancedDe-
otheroperatingsystems. velopments in Software and Systems Security, Taipei, De-
cember2003.AlsoCMU-CS-03-169TechnicalReport,Au-
gust2003.
Acknowledgements
[19] D. Jackson and M. Vaziri. Finding bugs with a constraint
solver. In Proceedings of the International Symposium on
WethankourcolleaguesatMicrosoftandMicrosoftRe-
SoftwareTestingandAnalysis,pages14-25.ACM,2000.
search for their assistance and insightful comments, and
[20] P.A.LoscoccoandS.D.Smalley.MeetingCriticalSecurity
in particular Doug Beck, Bill Bolosky, Brad Daniels, Jon Objectives with Security-Enhanced Linux. In the Proceed-
Howell, Jon Pincus, Dan Simon, Helen Wang, Rich Ward, ingsofthe2001OttawaLinuxSymposium,July2001.
andAlecWolman. [21] Microsoft. Certain Programs Do Not Work Cor-
rectly If You Log On Using a Limited User Account.
http://support.microsoft.com/default.aspx?scid=kb;en-
References
us;307091.
[22] Microsoft. Retrieving the Properties of a Connec-
[1] A. Acharya and M. Raje. MAPbox: Using Parameter-
tion (VBScript). http://msdn.microsoft.com/library/
ized Behavior Classes to Confine Untrusted Applications.
default.asp?url=/library/en-us/ics/ics/retrieving the proper-
USENIXSecurity2000.
ties of a connection vbscript .asp.
[2] K. Ashcraft and D. Engler. Using Programmer-Written
[23] T. Oetiker. MSI Packaging How-to.
CompilerExtensionstoCatchSecurityHoles.IEEESecu-
http://isg.ee.ethz.ch/tools/realmen/det/msi.en.html.
rityandPrivacy2002.
[24] P. Proctor. Hardening Windows NT Against At-
[3] T.Ball. Abstraction-guidedTestGeneration:ACaseStudy,
tack. http://www.secinf.net/windows security/ Harden-
Microsoft Research Technical Report, MSR-TR-2003-86,
ing Windows NT Against Attack.html.
November2003. [25] N.Provos. ImprovingHostSecuritywithSystemCallPoli-
[4] K. Brown. Keith’s Security Hall of Shame. cies.USENIXSecurity2003.
http://www.pluralsight.com/keith/hallofshame/default.htm. [26] N.Provos, M.Friedl, andP.Honeyman. PreventingPrivi-
[5] D. Brumley and D. Song. Privtrans: Automatically parti- legeEscalation.USENIXSecurity2003.
tioning Programs for Privilege Separation. USENIX Secu- [27] P. Provost. Non-Admin Development in VS.NET 2003.
rity2004. http://www.peterprovost.org/archive/2004/11/01/2040.aspx.[28] T. Rhodes. FreeBSD Handbook, Chap- [32] W. Venema. Postfix Overview.
ter 15: Mandatory Access Control, http://www.postfix.org/motivation.html.
http://www.freebsd.org/doc/en US.ISO8859- [33] Y.-M. Wang, R. Roussev, C. Verbowski, A. Johnson, M.-
1/books/handbook/mac.htmlciteseer.nj.nec.com/ W.Wu,Y.Huang,andS.-Y.Kuo. Gatekeeper: Monitoring
ganesh03peertopeer.html. Auto-StartExtensibilityPoints(ASEPs)forSpywareMan-
[29] S.Saroiu,S.D.Gribble,andH.M.Levy. Measurementand agement.InProceedingsofUsenixLISA,Nov.2004.
[34] J. Yang, T. Kremenek, Y. Xie, and D. Engler. MECA: an
Analysis of Spyware in a University Environment. NSDI
Extensible,ExpressiveSystemandLanguageforStatically
2004.
CheckingSecurityProperties.ACMCCS2003.
[30] M.R.TalGarfinkel,BenPfaff. Ostia: ADelegatingArchi-
tectureforSecureSystemCallInterposition.NDSS2004.
[31] Toups. Administrator Privileges for Turbo-
Tax?!?! http://www.dslreports.com/forum/ re-
mark,9732454mode=flat.