Enriching intrusion alerts through multi-host causality
SamuelT.King,Z.MorleyMao,DominicG.Lucchetti,Peter M.Chen
DepartmentofElectricalEngineeringandComputerScience
ComputerScienceandEngineeringDivision
UniversityofMichigan
http://www.eecs.umich.edu/CoVirt
Abstract highlightssuspiciousmessagesbutdoesnotdescribehow
the receiving system reacted to these messages or what
causedthesendingsystemtosendthesuspiciousmessage.
Currentintrusiondetectionsystemspointoutsuspicious Tripwire[6]alertsadministratorstomodi(cid:2)edsystem(cid:2)les
statesoreventsbutdonotshowhowthesuspiciousstate butdoesnotshowwhatcausedthemodi(cid:2)cationsorhow
oreventsrelatetootherstatesoreventsinthesystem. We themodi(cid:2)edsystem(cid:2)leswereusedafterward.Additional
show howto enrichanIDS alert with informationabout contextmayhelpanadministratorseetheconnectionsbe-
how those alerts causally lead to or result from other tween different alerts or (cid:2)nd other hosts that have been
events in the system. By enriching IDS alerts with this compromised.
typeofcausalinformation,wecanleverageexistingIDS This paper describes how to enrich an IDS alert with
alerts to learn more about the suspected attack. Back- causal information about the state or events detected by
ward causal graphs can be used to (cid:2)nd which host al- the IDS. Informally, causal information shows which
lowedamulti-hopattack(suchasaworm)toenteralocal eventsledtothestate/eventdetectedbytheIDSandwhich
network; forward causal graphs can be used to (cid:2)nd the events were affected by the state/event detected by the
otherhoststhatwereaffectedbythemulti-hopattack. We IDS.Formally,thiscausalinformationisde(cid:2)nedbyLam-
demonstrate this use of causality on a local network by port’shappens-beforerelationship[8],whichresultsfrom
trackingtheSlapperworm,amanualattackthatspreads messagesbetweenhostsandinterprocesscommunication
via several attack vectors, and an e-mail virus. Causal- withinahost.Forexample,acausaldependencyiscreated
itycanalsobeusedtocorrelatedistinctnetworkandhost fromprocessAtoprocessBifprocessAforksprocessB,
IDSalerts.Wedemonstratethisuseofcausalitybycorre- if processA sends a message to process B, orif process
latingSnortandhostIDSalertstoreducefalsepositives A writes a (cid:2)le that is later read by process B. By itera-
onatestbedsystemconnectedtotheInternet. tively analyzing these causal dependencies, we compute
the transitive closure of causal relationships in the form
of a multi-host causality graph. A causality graph with
1.Introduction anIDS alertas arootnodeshowswhichevents wereaf-
fectedbythestate/eventthatgeneratedthealert.Acausal-
Intrusion detection systems (IDSs) are used to alert ity graph with an IDS alert as a leaf node shows which
system administrators to possible attacks. IDSs moni- eventsledtothestate/eventthatgeneratedthealert.
tor events at various levels in a system and attempt to Causality graphscanimprovetheeffectivenessofIDS
alert administrators to events that match known attacks alerts,asinthefollowingscenarios:
(signature-based IDS) or do not match normal behavior
(anomaly-based IDS). Host-based IDSs monitor events
on a single host, such as system calls or (cid:2)le accesses.
Network-basedIDSs monitorpacketsthat aresent orre-
ceived.
One factor that limits the accuracy and usefulness of
IDSalertsisthelackofaccompanyingcontext.IDSalerts
pointoutsuspiciouseventswithoutrelatingthemtoother
events and state in the system. For example, Snort [1]
(cid:0) Awormexploitsavulnerabilityinacompany’spub-
licwebserver,thenstartsinfectingmachinesthatare
behindthecompany(cid:2)rewall. AnIDSononeofthe
internalmachinesdetectsanomalousactivity,butno
IDSalertsoccuronthecompany’spublicwebserver.
A causality graph can trace a worm from the ma-
chine that detected the intrusion back to the com-
pany’spublicwebserverthatallowedthewormintothe network. Figures 1(cid:150)3 demonstrate this capabil-
ityforatestbedofmachinesinfectedbytheSlapper
worm.
(cid:0) An intruder logs in as a privileged user and sched-
ules a job (e.g., through the root’s crontab (cid:2)le) for
that night that will scan slowly for othervulnerable
hosts. While loggingin as a privilegeduser andis-
suing a slow port scan are both suspicious, neither
issuspiciousenoughonitsowntotriggeranalertto
the administrator. A causality graph can show that
theloginsessionthatwrotethecrontab(cid:2)leindirectly
ledtotheslowportscan.Figure6demonstrateshow
acausalitygraphlinkedtwoIDSalertsduringanat-
tackononeofourtestbedcomputers.
The contributions of this paper are (1) to propose
causality graphs as a way to enrich IDS alerts; (2) to
showhowtoenhancetheBackTrackersystem[7]tocreate
bi-directional,multi-hostcausalitygraphs;(3)todemon-
stratehowcausalitygraphscanhelptrackthepropagation
ofmulti-hostattackswithinanadministrativedomain;and
(4)todemonstratehowcausalitygraphscanhelpcorrelate
otherwisedisconnectedIDSalerts.
The following is an overview of the paper. Section 2
describeshowtheoriginalBackTrackersystem(cid:2)ndsand
displaysobjectsandeventsfromasinglehostthatcausally
precede a given intrusion detection point, and Section 3
describeshowweexpandthescopeofBackTrackerto(cid:2)nd
and display events from a network of hosts that causally
precede or causally follow a given intrusion detection
point. We call this extendedsystem BDB, which stands
for Bi-directional, Distributed BackTracker. BDB repre-
sents a mechanism that administrators can use to enrich
IDSalerts;administratorscanthenusevariouspolicieson
topofthismechanism. Sections4and5describeseveral
scenarios that demonstrate how an administrator might
usetheinformationprovidedbyBDB totrackmulti-hop
attacks (worms, manual attacks, and e-mail viruses) and
correlate disconnected IDS alerts. Section 7 describes
some limitations of our approach, and Section 8 relates
ourworktopriorresearch.
2.BackTracker
Weintroducedtheideaofusingcausalitytoanalyzein-
trusionswiththeBackTrackersystem[7]. BackTracker
usesamodi(cid:2)edLinuxkerneltologsystemcallsthatform
dependencies between operating system objects. Back-
Trackeranalyzesdependenciesbetweenthreetypesofob-
jects: processes, (cid:2)les, and (cid:2)lenames. For example, a
process (cid:1) (cid:2)ledependencyisformedwhenaprocesswrites
a (cid:2)le, and a (cid:2)le (cid:1)
to allow BackTracker to track a (cid:2)le across renameoper-
ations and through symbolic links. A process
process dependencyis formedwhen a
processreadsa(cid:2)le. Filesareidenti(cid:2)edbyinodenumber
(cid:1) process
dependencyis formedwhen one process creates another
process. Bi-directional dependencies are also possible,
suchaswhentwoprocessessharememorywitheachother
(process
(cid:2)
process).See[7]formoredetailsontheobjects
andeventsanalyzedbyBackTracker.
BackTracker’s analysis starts from a suspicious object
oreventdetectedbyanIDS.BackTrackerisindependent
of which IDS is used, as long as the IDS can identify a
suspiciousoperatingsystemeventorobject.BackTracker
analyzesthecausalrelationshipsformedbetweenobjects
to constructa graph of the objects andevents that led to
thespeci(cid:2)edintrusiondetectionpoint.Wecallthisaback-
wardgraphbecauseitlooksbackintimefromagivenIDS
alert.BackTrackerthen(cid:2)ltersoutthedominantsourcesof
noiseinthebackwardgraphaccordingtodefault(cid:2)ltering
rules.Forexample,theloginprogramreadsandwritesthe
(cid:2)le/var/run/utmp,whichmakesitappearthateachnewlo-
ginsessionisaffecteddirectlybyallpriorloginsessions.
BackTracker’s default rules seek to (cid:2)lter out events that
generatea lot ofnoise in the backwardgraphbut enable
onlyalowdegreeofcontrolbetweenobjects. Newrules
can be addedeasilyby anadministrator,andweuse this
to add 1-3simplerules foreach networkservice usedin
this paper (web, FTP, SMB). For example, we (cid:2)lter out
readsandwritestothelistofprocessesmaintainedbythe
FTPserver(/var/run/ftp.pids-all). See[7]forafullerdis-
cussionoftheuseof(cid:2)lteringrules.
[7]showedthatcombiningcausalanalysisandasetof
sixsimpleruleswasveryeffective.Weanalyzedmultiple
attacksonamachinewehadsetupasahoneypot,andin
eachcasetheresultingbackwardgraphhighlightedeffec-
tivelythesourceoftheintrusionandthepathbetweenthe
initialcompromiseandtheintrusiondetectionpoint.
Figure2showsBackTracker’soutputforacompromise
caused by the Slapper worm [2]. After an IDS detected
a suspicious process (update), BackTracker generated
the backwardgraphthatled to this detectionpoint. This
graphshowsthatthewormcompromisedtheApacheweb
server(httpd)andcausedittoexecuteabashshell.The
bashshelldownloadedandunpackedauuencodedtar(cid:2)le,
whichcontainstheSlapperexecutableandthesourcecode
for anotherprogram(update.c). The bash shell com-
piledthisprogram,thenrantheslapperprocess,whichran
thenewlycompiledupdateprogram.
3.Bi-directional, multi-hostcausality
The original BackTracker tool helps system adminis-
tratorsdeterminehowanattackoccurredbyshowingthe
chainofeventsthatleduptothepointatwhichanintru-
sion was detected. Inthis section, we show howto gen-
eralizeBackTracker’suseofcausalityintwoways: track-ingcausaleffectsforwardaswellasbackward,andusing sages with additionalinformation[10], eitherat network
backwardandforwardcausalityacrossmultiplehostsona routers or using our modi(cid:2)ed kernel. Finally, one could
network.Wethendescribenew(cid:2)lteringrulestoprioritize identify packets by storing a hash of their contents. We
thecausalpathsmostlikelytodescribeanintrusionasit currentlyidentifypacketsbytheirsourceanddestination
traversesacrossmultiplehosts. addresses and sequencenumber; this simple approachis
suf(cid:2)cient fortheTCP-basedattacksevaluatedin this pa-
3.1.Forwardtracking per.
BackTracker shows which events preceding an intru-
3.3.Prioritizingpackets
sion detection point could have contributed to the mod-
i(cid:2)ed state or event that was detected. We would like to Tracking the causal relationships caused by network
generalizethis approachto analyzeinthe forwarddirec- communicationcanleadtoextremelylargegraphs. Con-
tion.Analyzingcausalityintheforwarddirectionanswers sider the following scenario: an intruder attains a login
thequestion(cid:147)Whateventsandstatewereaffectedbythe sessiononaninternalcomputer(A).Hethenusesthatlo-
intrusiondetectionpoint?(cid:148). Considerascenarioinwhich gin session to compromise an internal SMB server (B).
anattackerreplacesthe/bin/lsexecutablewithapro- From the SMB server, he browses the departmentalweb
gram that sends a user’s private (cid:2)les to a collectionsite. server, then launches a worm. Using one of the outgo-
Once an IDS detects that /bin/ls was modi(cid:2)ed, for- ing worm messages as a starting point, an administrator
wardtrackingwill showwhich(cid:2)les ofwhichuserswere cangenerateamulti-host,backwardcausalitygraph.This
leakedas a result; this couldhelplimitthedamagedone graphwillincludethekeylinkintheattack,whichisthe
bytheintrusion(e.g.,byinformingtheuserwhichcredit messagefromtheloginsession(A)totheSMBserver(B).
cardsshouldbecanceled). However, the graph will also include the irrelevantmes-
Forward causal analysis is a straightforwardextension sages from the departmental web server. To make mat-
to backward analysis. Forward tracking uses the same ters worse, the graph may also include other clients that
log of system calls and objects logged by BackTracker. happenedtoaffecttheexecutionofthedepartmentalweb
Whereas BackTracker adds events to a graph if they af- serverbeforethatserversentpagestotheSMBserver.
fectanobjectbeforethatobject’stimethreshold,forward Anotherexamplescenariois if a networkservicehan-
trackingaddseventstoagraphiftheywereaffectedbyan dles a series of requests in a single process. If this net-
objectafterthatobject’stimethreshold. workserviceis compromised,it will causallydependon
allpriorincomingrequests.Fortunately,networkservices
3.2.Multi›hostcausality areoftenbuilttocreateanewprocesstohandleeach(ora
few)incomingrequests. Creatinganewprocesshelpsto
BackTracker’sanalysisislimitedtoeventsthatoccurred
limitthesetofincomingpacketsthatcausallyprecedean
on the same host as the state or event that was detected
intrusion.
bytheIDS.Becausemanyattackspropagateviathenet-
Inordertocounteractthetendencyofgraphstoexplode
work, we wouldlike to generalizethis approachtotrack
in size, we must prioritize which packets to include in
intrusions as they infect multiple hosts. This will allow
multi-host causality graphs. This is analogous to (cid:2)lter-
us to leverage one host’s IDS alert to (cid:2)nd other com-
inghosteventsthatarelesslikelytobecriticalstepsinan
promisedhosts upstream(usingbackwardcausality)and
intrusion. Prioritizingpacketsleadstothesametradeoffs
downstream(usingforwardcausality).Aswithhost-level
inherent to any kind of (cid:2)ltering. Even objects or events
causality,thistypeoftrackingislimitedtomachinesun-
that are unlikelyto be importantin understandingan in-
derouradministrativecontrol.
trusion may nevertheless be relevant, and (cid:2)ltering these
To track causality across multiple hosts, we extend
outmayaccidentallyhideimportantsequencesofevents.
BackTracker’sloggingtoalsotracknetworksendsandre-
Therearenumerousmethodsonecouldusetoprioritize
ceives. Ifprocess1onmachineAsendsapackettopro-
which packets to follow in backward or forward causal
cess 2 on machine B, this forms an inter-host causal de-
analysis.The(cid:2)rstmethodisasimpleheuristicthatworks
pendencyfromprocess1toprocess2. Connectingasend
wellfortoday’ssimpleworms. Acommonpatternofto-
eventwithitscorrespondingreceiveeventrequiresidenti-
day’swormsistoconnecttoa networkservice,compro-
fyingeachpacket(orconnection).Thereareseveralways
mise it (e.g., with a buffer over(cid:3)ow), then immediately
toidentifypackets. Thesimplestistouseinformationin
start a root shell or a backdoor process. For this pat-
existing network headers, such as the source and desti-
tern, the best process to follow when performing back-
nationIPaddress,portnumber,andsequencenumber(for
ward causality process is the highest (i.e., earliest) pro-
TCPmessages)1.Anotherapproachistosupplementmes-
useingress(cid:2)lteringtocheckthatthesemessagesdonotspoofaninternal
1Thegatewaythatreceivesmessagesfromoutsidethenetworkcan networkaddress[5]cessinthebackwardgraphthatreceivedanetworkpacket. External Local (2)
The best packet to followfor this pattern is the most re- Network Network Host B
centpacketreceivedbythehighestprocess. We callthis
heuristichighestprocess,mostrecentpacket. Host A
Amoregeneralandrobustmethodforprioritizingpack-
(3)
etsistochoosepacketsthatarerelatedcausallytoanother
Host C
IDSalert.Forexample,anadministratormayuseforward
trackingfromahostthathasdetectedabackdoorprocess.
Theforwardcausalgraphfromthisprocesswillshowall (1)
hoststhatreceivedamessagefromthebackdoorprocess,
aswellasthesubsequentactionsonthosehoststhatwere
Host D
caused(directlyorindirectly)byreceivingthatmessage.
Someofthesemessagesarelikelyinnocentorineffective,
while others may be malicious and effective. Messages
Figure1.Inter›hostpropagationoftheSlap›
that are malicious and effective are more likely to lead
per worm. The worm (cid:2)rst infects Host A,
causally to other IDS alerts and should therefore be pri-
then launches attacks against Hosts B, C,
oritized. These other IDS alerts may be from a network
and D. After an IDS detects the attack on
anomalydetectorthatpointsoutsuspiciousmessagesdi-
Host D, BDB tracks the attack backward to
rectly,ortheymaybefromahostIDSthatdetectssuspi-
HostA,thentracksitforwardtoHostsBand
cioushostactivitythatresultsindirectlyfromthesemes-
C.Thesolidlinesdepicttheattacks,andthe
sages.
dottedlinesdepicttheorder ofBDB’sanal›
Another method of prioritizing packets leverages the
ysis.
factthatmostwormsrepeattheiractionsastheytraverse
hosts. Theyusuallypropagatefromhosttohostusingthe
sameexploit,orperhapsusingoneofafewexploits.They
may also perform the same activities on each host they
4.Tracking multi-hopattacks
compromise, such as installing backdoors, patching vul-
nerabilities,orscanningforprivateinformation.Thesere- Thepriorsectionsintroducedthemechanismsusedby
peatedactionsformapatternthatcharacterizestheworm. BDBtoconnectmultiplealarmstogether. Inthenexttwo
Aswecausallyfollowanintrusionalertfromhosttohost sections,wediscussanddemonstrateseveralwaystouse
(forwardorbackward),wecanlearnthispatternanduse these mechanisms. In this section, we track attacks that
ittoprioritizepacketsthatcausesimilarpatternsonother traverseseveralhostswithinanadministrativedomain.
hosts.
A pattern for a worm may be characterized in many 4.1.Overview
ways.Itcouldbethesetof(cid:2)lesorprocessesthatcausally
Manyorganizationsplacemostoftheircomputersand
followfromareceivedpacket. Moregenerally,onecould
servicesonanintranetbehinda(cid:2)rewall,withonlyafew
characterizea wormby thetopologyofthe causalgraph
computersandservicesexposedtothepublicInternet.Re-
resultingfromthereceivedpacket. Infact,onecanview
lying too heavily on this type of perimeter defense has
thetopologyormembershipofapacket’sforwardcausal-
well-known (cid:3)aws: if an attacker breaches the (cid:2)rewall
itygraphasasignatureofawormandraiseanIDSalert
(such as through an infected laptop, email virus, or bug
wheneveroneseesthissignature.Similarly,onecanview
inoneofthepublicnetworkservices),hegainsaccessto
thetopologyormembershipofanetworkservice’scausal-
thecomputersonthelocalnetwork,whichareoftenless
itygraphasapro(cid:2)leofthatnetworkserviceandraisean
secured.Tocleanupaftersuchabreach,theadministrator
alarmwheneveroneseesananomalouscausalitygraph.
must (cid:2)rst (cid:2)nd all the computersthat have been compro-
Finally, in some cases one can take advantage of
mised. It can be quite dif(cid:2)cult to (cid:2)nd which computers
application-speci(cid:2)cknowledgetoidentifymoreprecisely
havebeencompromisedduringanattack,becausetheat-
whichincomingpacketcausesagivenaction. Forexam-
tackermaybreakintoasystem,stealorcorruptdata,then
ple,amailclientmaybeabletoinformthecausalitytrack-
cleanupbyremovingtelltalesignsofhisattack.
ingsystemwhichdownloadedmailmessagecontainedthe
In this section, we show how BDB can track attacks
attachmentthatisbeingviewed. Ifthevieweriscompro-
thattraversemultiplehosts,evenwhentheintrusionisde-
misedwhileviewingthatattachment,thecausalitytracker
tected initially on only a single host. After an intrusion
canfocusontheappropriatemessage.
isdetectedonasinglehost,BDBtracksbackwardtode-
termine what led to the intrusion on that host. Trackingback continues across nodes until it reaches the point at sourcecode,whichisdownloadedbyashelloverasocket.
which the attack entered the intranet. Finding the point Theshellisstartedbyacompromisedwebserver.
theattackenteredtheintranetisusefulinsecuringthenet- Using the highest process, most recent packet heuris-
workagainstfutureattacks.Iftheattackenteredviaanin- tic, BDB identi(cid:2)es a packet received by the web server
fectedlaptop, the administratorcan chastise andeducate process as likely to be part of the attack. That packet
theuser;iftheattackenteredviaabuggynetworkservice, originatedfromHostAandisthestartingpointforback-
theadministratorcandisablethatserviceorapplyapatch ward trackingonthat host. Trackingthe packeton Host
[13].Afterbackwardtrackingiscomplete,BDBperforms Aresultsinsequenceofeventssimilartothosefoundon
forward tracking to (cid:2)nd other compromised hosts. As HostD.However,thehighestprocess,mostrecentpacket
BDB (cid:2)ndscompromisedhostsduringbackwardandfor- heuristicidenti(cid:2)esapacketthatoriginatedfromanexter-
ward tracking, it providesthe opportunityto learn about nalsource,soBDB’straversalbackwardstops.
the attack. The information it learns can be used to de- WhiletrackingthewormbackwardfromHostDtoHost
velopnetworkandhostsignaturesoftheattackthatcanbe B,BDBcollectsinformationaboutthewormintheform
usedtoavoidfuturecompromisesorscanothernetworks of a backward causality graph. These graphs are signa-
forcompromisedhosts. turesthatdescribehowthewormbehavesonacomputer.
AsdiscussedinSection3.3,prioritizingwhichpackets BDBusesthisinformationtogoforwardanddetectother
tofollowcanbedoneinavarietyofways.InSection4.2, instancesoftheworm.
we track the Slapper worm backward using the highest The forward traversal begins with the httpd process
process,mostrecentpacketheuristic. Duringtheforward onHostAsincethatisthestartingpointoftheworm(Fig-
trackingphase, we prioritizewhich packets to followby ure3). BDBinitiallyconsidersallactivityresultingfrom
leveraging the signatures learned about the worm while this point. In addition to communicating with Host D,
tracking it backward. In Section 4.3, we prioritize the thewormalsocontactsHostsBandC.BDBusesforward
packets by following those (cid:3)agged as suspicious by the tracking to examine the effects of each outgoing packet
Snort network IDS. In Section 4.4, we use application- onthereceivinghosts. Todetermineifthewormhadin-
speci(cid:2)cinstrumentationtoidentifywhiche-mailmessage fectedthesemachines,BDBsearchestheforwardgraphs
ledtolatereventsonthehost. for the causality signatures foundwhile traversingback-
ward. Inbothcases,thesignatureisfound,andthehosts
4.2.Slapperworm aredeemedexploited.
BDB tracks the Slapper worm effectively using the
We(cid:2)rstdemonstratetheabilityofBDBtotrackattacks
highest process, most recent packet heuristicand match-
across multiple hosts by releasing a modi(cid:2)ed version of
ing host worm signatures found during the backward
the Slapper worm on a local worm testbed (Figure 1).
traversal phase. Despite the heavy load on the network
Wemodi(cid:2)edthespreadingpatternofSlappertolookfor
service that was exploited, BDB (cid:2)ltered out irrelevant
newvictimsonthelocalnetworkbeforeusingitsdefault
eventsandhighlightedonlytheactionsoftheworm. The
methodofsearchingforvulnerablemachinesamongran-
backwardandforwardgraphsofalloftheinfectednodes
domlygeneratedIPaddresses.
containatotalof171objectsand251events,whichis2-
Ourtestbed containsfourvulnerablewebservers: one
3 orders of magnitude less than the total activity on the
accessiblefromboththepublicInternetandthelocalnet-
system.
work, and three accessible only from the local network.
Tomakeithardertotracktheworm,weaddbackground
4.3 Multi›vectormanualattack
noisebyrunningtheSPECweb99benchmarkbetweenthe
webservers.TwomachinesactedasSPECweb99servers, Although the highest process, most recent packet
andtheothertwomachinesactedasSPECweb99clients. heuristiciseffectivefortheSlapperwormandmanyother
Thisworkloadgenerated95,943operatingsystemobjects existing exploits we examined, an attacker that knows
and1,628,937eventsspreadoutoverthefour machines. about this heuristic couldevade detection. For example,
Thetestwasrunfor20minutes,withthewormbeingre- anattackercouldimplicateaninnocentrequestbyreceiv-
leased10minutesafterthetestbegan. ingitbetweentheinitialexploitandthenextphaseofthe
The initial detection point occurred on Host D when attack. Another dif(cid:2)cult scenario occurs when there are
an IDS detected a suspicious process named update; multiple network services at different roots of the back-
Figure 2 shows the causality graph on Host D that led ward graph; in this case, there is no uniquehighest pro-
to this process. The update process is used by Slap- cess.
per to spread the worm to other machines. This process Onewaytoaddresstheseshortcomingsistouseanet-
onHostDisthestartingpointofourbackwardtraversal. work IDS to prioritizewhichpackets to follow. While a
Thecausalitygraphshowsthatupdateiscompiledfrom networkIDSmaynotbeaccurateenoughtotrackattacksswapper
init
rc
S85httpd
nice, initlog
httpd
httpd 192.168.2.204:443
sh, bash
tar /tmp/.unlock.uu
gcc /tmp/update.c /tmp/slapper uudecode
cpp0 slapper /tmp/.unlock
/tmp/cciF5bJi.i tar, gzip
cc1 pipe
/tmp/cc7xWEXC.s collect2
gcc, gcc, as
/tmp/cc9ysyIA.o
ld
/tmp/update
update
Figure2. Backward causality graphforSlapper worm forHost D.Processes are shownas boxes
(labeled by program names called by execve during that process’s lifetime); (cid:2)les are shown as
ovals; sockets are shown as diamonds. BackTracker can also show process IDs, (cid:2)le inode
numbers,andsocketports. Theintrusiondetectionpointisshaded.External Local
External IP Network Network
Host A Host B Host C Host D
web server web server web server web server
httpd, sh, bash
(2) (3)
Host E Host F Host G Host H
rm /var/log/httpd/error_log rm uudecode + tar + gcc
ftp server ftp server ftp server ftp server
(5)
(1) (4) (6)
/tmp/slapper
Host I Host J Host K Host L
samba server samba server samba server samba server
slapper /tmp/update
Figure4.Inter›hostpropagationofthemulti›
update update update vector attack. We carried out an attack on
(cid:2)ve of the 16 testbed hosts (A, E, I, G, K)
using multiple attack vectors (solid lines).
Host B Host C Host D
After an IDS detects the attack on Host I,
BDB tracks the attack backward to Host E
Figure3.ForwardcausalitygraphofHostA
andA,thentracksitforwardtoHostsE,I,G,
fortheSlapperattack. Thesubgraphformed
andK.
byexecutinguudecode,tar, andgccisrep›
resentedbytheboxwithdoublelines.
load source code from a randomly selected web or ftp
server, then unpack this source code to a randomly se-
by itself, it may be accurate enough to prioritize which lectedsambamounteddirectoryandcompileit.Theentire
packetsBDBshouldfollow.Inthispaper,weusethenet- processisrepeatedforthedurationofthetest. Theseac-
work IDS Snort [1] to prioritizepackets for BDB. Snort tivitiesresultinlargeamountsofnoise;acrossalltwelve
matchesmessagesagainstanumberofknownsignatures; nodes there are over 2 GB of network traf(cid:2)c, 6,589,526
forthistest, weuserulesthat(cid:2)ndcommonlyusedshell- operatingsystemeventsand814,262operatingsystemob-
codeinstructions. Forexample,Snortdetectsconsecutive jects. Thetestwasrunfor20minutes,andtheintrusions
no-op instructions, which are used often in buffer over- occurred10minutesaftertheteststarted.
(cid:3)ow attacks to compensate for variations in process ad- The attack is detected initially on Host I, when the
dressspaces. Althoughthistypeofnetworkanomalyde- attacker launches a backdoor process that opens a raw
tectorispronetofalsepositives,itiseffectiveenoughto socket. BDB generates a backward graph using the
prioritize which causally-related network packets to ex- backdoor process as the detection point, then sees
amine(cid:2)rst. which of the causally related incoming packets were
ToevaluatewhetheranetworkIDScanprioritizepack- (cid:3)agged as suspicious by Snort. In this case, one of the
ets effectively, we carried out an attack on our local incomingpacketsinthebackwardgraphhadbeen(cid:3)agged
network that exploits several network services on vari- assuspiciousbySnort. Thesuspiciouspacketcamefrom
ous nodes within our system (Figure 4). We simulate the ftp server on Host E. Using the suspicious packet as
a stealthy attacker by compromising one host at a time, thestartingpointforanotherBackTrackeriteration,BDB
ratherthanscanningthenetworkandattackingallvulner- again found that one of the causally related packets on
ablehosts.Westartbybreakingintoapubliclyaccessible Host E’sbackwardgraphhadbeen(cid:3)aggedas suspicious
webserver.Fromthere,wecompromisesucceedinghosts bySnort.Thispacketledusbacktothepublicwebserver
throughvulnerabilitiesintheftpandsambaservers.Each onHostA.AllcausallyrelatedincomingpacketsonHost
attackresultsinaninteractiveshell,andweusethatshell Aarefromexternalconnections,sothebackwardtraver-
todownloadtoolsandbreakintothenexthost. salendshere.
Our testbed includes 12 hosts: four web servers, four Startingfromtheexternalwebserver,BDBusesSnort
ftp servers, and four samba servers. Each of the nodes toprioritizeamongthecausallyrelatedoutgoingpackets,
also doubles as a client. To make it harder to track the with the goal of (cid:2)nding other compromised hosts. The
attack, we add background noise through arti(cid:2)cial users forwardanalysisledusbacktoHostEandthenagainto
who are logged into each computer. Each user mounts Host I. From Host I, BDB found that the attacker broke
allfoursambaserversinhis(cid:2)lespace. Theusersdown- intoHostGandthenHostK.In the end, BDB found all of the infected hosts and BDB’s resultingcausalitygraphisabletotrackthevirus
highlighted420operatingsystemobjectsand19network backwardfromtheinitialdetectiononHostA(Figure5a),
packetsofthe814,262objectsand2GBofnetworkdata back to when the virus was received by the exim server
on the entire system. BDB’s resulting causal graph is (Figure5b),backtotheupstreamHostB(Figure5c).
small enough that an administrator who wants to under-
stand the attack in more detail can examine each object
andpacketbyhand. 5. Correlating multiple alerts within and
Although BDB found all compromised hosts, there acrossnodes
were some false positives in our analysis. In particular,
Snort (cid:3)agged as high priority seven packets that unsuc-
In this section, we discuss the bene(cid:2)ts of correlating
cessfully attempted to use the samba exploit. These did
multipleIDSalertsusingcausality,andweshowhowcor-
not affect our analysis because none of the unsuccessful
relatingalertswithcausalitycanreducefalsepositiveson
break-in attempts generated any extraneous network ac-
atestbedsystem.
tivity,andalloftheattackedhostswereeventuallybroken
into.Toreducethesefalsepositives,BDBcouldprioritize
networkpacketsfurtherbyusingadditionalIDSs; forin- 5.1.Overview
stance,itcouldseewhichsuspiciousnetworkpacketsled
tootherhostIDSalertsonthereceivinghost.
A major problem with many IDSs is false positives.
One approach to reduce these false positives is to com-
4.4.E›mailvirus
bine multiple host or networks IDS alerts into a single,
Attacks often propagate through a network via e-mail higher-con(cid:2)dencealert.Priorapproachesconnectdistinct
viruses. E-mailvirusestypicallyspreadbyfoolingauser alertsthroughstatisticalcorrelationonvariousfeaturesof
into running a suspicious application or by exploiting a thealert,suchasthedestinationIPaddressortimeofthe
helper process used to handle an attachment. Unfortu- alert. BDB makesit possibleto correlatealerts in a new
nately, the structure of e-mail handling programs makes waybyrevealingwhichalertsarerelatedcausally.
it dif(cid:2)cult for BDB to track the causal relationship be- The main bene(cid:2)t of relating alerts causally is its po-
tweenincomingmessagesandsubsequentactions.E-mail tentialforincreasedaccuracy(cid:151)statisticalcorrelationmay
serversthatreceivemessages ande-mailclientsthat dis- suffer from coincidentalevents, whereas causal relation-
playthemforuserstendtobelong-livedandtoreadmul- shipsaredeterminedbychainsofspeci(cid:2)cOSandnetwork
tiple messages at a time. Because BDB tracks causality events.
at the granularityofa process, it assumes conservatively Inaddition,usingcausalitytocorrelatealertscanreduce
thatallmessagesthathavebeenreadaffectallsubsequent dramatically the amount of data each IDS needs to pro-
actions. Trackingcausalityat a moreprecisegranularity cess. Forexample,in Section4.3,weshowedhowBDB
requires program-speci(cid:2)c instrumentation, and this sec- revealed which outgoing network packets were causally
tiondemonstrateshowonecanenhanceBDBinthisway related to a host IDS alert. BDB can thus narrow the
totracke-mailviruses. search for suspicious network activity to a handful of
We made two application-speci(cid:2)c changes to support packets,eveninthemidstofabusynetwork. Inthesame
e-mailtrackingacrossmultiplehosts. First,wemodi(cid:2)ed way,BDBcanreducetheamountofdatathatahostIDS
theexime-mailservertolinkthenetworkmessagesitre- must examine. For example, a host IDS need examine
ceiveswithe-mailmessagesIDs.Second,wemodi(cid:2)edthe onlythoseprocessesand(cid:2)lesthatarerelatedcausallyto
pinee-mailclienttoinformBDBofthe(cid:147)current(cid:148)e-mail packets thatare(cid:3)aggedas suspiciousbya networkIDS.
message ID being read at a given time. We assume that ThisallowsonetouseintensivehostIDSsthatwouldoth-
thesavingofanattachmentorlaunchingofahelperpro- erwisebetooslow[12].
cess is caused by the current e-mail message being read Two IDS alerts maybe relatedcausallyin a varietyof
bytheuser.Thesechangesallowustotrack(backwardor ways. Onealertmaycausallyprecedeorfollowtheother.
forward)theeffectsofane-mailmessageasitisreceived Or,twoalertsmayshareacommonancestor,suchaswhen
by the server, transferred to the client, and viewed by a a single shell process executes two child processes that
user. Resulting actions on a host, such as writing (cid:2)les, eachperformasuspiciousaction. Itisuptohigher-level
startingnewprocesses,andsendingmessages,aretracked policies to determine how to score these differentcausal
viaBDB’snormalmechanisms. relationships,andweleavethistofuturework.Wespecu-
We tested the ability of BDB to track an e-mail virus latethatalertsaremorelikelytobecorrelatedifoneisthe
byinstallingourinstrumentede-mailserverandclienton directdescendantoftheotherthaniftheysimplysharea
our testbed, then releasing a virus. Figure 5 shows how commonancestor.bash Message−Id: 1234 bash Message−Id: 5678
pine pine
/tmp/virus.pl /tmp/virus.pl
DNS incoming email DNS
socket
perl perl
outgoing email Message−Id: 1234 outgoing email
socket socket
(a) initial detection point on Host A (b) exim email server (c) Host B, track back from sending of message 1234
Figure5.BackTrackingane›mailvirus. In(a),BDBusesitsnormaltrackingplusaninstrumented
e›mailclienttotrackbackfromanoutgoingnetworkconnectiontothecausallyrelatedincoming
e›mail message. In (b), BDB uses the instrumented e›mail server to link the suspicious e›mail
messagewiththeincomingnetworkmessagethatdeliveredthate›mailmessage. Thisprocedure
identi(cid:2)esthehostthatsentthee›mailvirus,wherethebacktrackingcanberepeated.
5.2.Results ancestor (the httpd process), We con(cid:2)rmed by hand that
thesetwoalertswereindeedtheresultofasuccessfulat-
To test how effectivelycausality can be used to corre-
tack. Snort’s alert resulted from a suspicious outgoing
latealerts,weranBDBontwotestsystemsthatwereex-
packet (triggering the (cid:147)uid=(cid:148) rule that indicates the out-
posed to the Internet. One system was running the de-
put of the id command)that was sent by a shell process
fault RedHat 6.2 installation; the other was running the
executed by a compromised web server. The shell pro-
defaultRedHat7.0installation. Bothsystemshadseveral
cessalsodownloadedvarioustoolsandgainedrootaccess
vulnerableserversthatwereaccessiblefromtheInternet,
through a local modutils exploit, which triggered the
including the bind, ftp, and web servers. We con(cid:2)gured
hostIDSalert.
thesystemtouseanetworkIDSandahostIDS.Weused
We examined the other Snort alerts by hand to see if
SnortwithitsdefaultrulesasanetworkIDS,andweused
there were any other true positives. We foundone other
ahostIDSthat(cid:3)aggedassuspiciousanyprocessthatruns
truepositive,inwhichtheattackercompromisedtheweb
as root. While bothIDSs are expectedto generatemany
serverbutdidnotgainrootprivilege. Thisillustratesthe
falsepositives,correlatingalertsfromthesetwoIDSsus-
tradeoffs involved in correlating IDS alerts. Reporting
ingcausalitycanincreaseourcon(cid:2)dencethatalertsresult
only correlating alerts reduces the number of false posi-
fromactualcompromises. Tocorrelatealerts, westarted
tives,butitmaymasksometruepositivesaswell. Corre-
withSnortalertsandgeneratedcausalgraphsonthehost
latingSnortalertswithamoresophisticatedhostIDSmay
for each suspicious network message. We then reported
havereportedbothtruepositives.
any processes in the resulting causal graphs that ran as
Overall, BDB effectively reduced the number of false
root.
positives on our testbed. It also reduced administrative
We ranthesystemfortwodays. 2 Duringthisperiod,
overheadbyallowingustouseSnort’sdefaultrules,rather
Snort generated39 alerts, and the host IDS detected nu-
thancustomizingtheset ofrules byhandto reducefalse
merous root processes. Of these alerts, BDB detected
positives.
two that were connected causally: an outgoing message
(cid:3)aggedbySnortandtworootprocesses. Figure6shows
thatthealertswereconnectedcausallythroughacommon 6. Prototype implementation and perfor-
mance
2WealsousedBDBononeofourdesktop computers tocorrelate
SnortandhostIDSalerts. Althoughwewerenotattackedsuccessfully
BDBisaworkingprototypeimplementedfortheLinux
overthisperiod,BDBwaseffectiveat(cid:2)lteringoutthenumerousfalse
positivesgeneratedbySnort. operatingsystem. Causaltrackingisimplementedastwopipe
tar
63.249.88.129:4598
httpd, sh /var/tmp/0
uname w wget hostname cat ls id 0
141.213.4.4:53 208.185.127.168:80 /var/tmp/0.tar pipe pipe sh, 0, sh 0 shmem
tar, gzip adduser modprobe
/etc/passwd.9793
Figure 6. Correlating alerts. This (cid:2)gure shows howa causal graph can connect twodistinct IDS
alerts. Thetwoalertsareshownasshadedboxes. OnealertisgeneratedbySnort,andtheother
is generated by a host IDS that detects root processes. The bold lines highlight the events that
mostdirectlyrelatethe(cid:3)aggedIDSalerts.
separate modules: one for logging the speci(cid:2)c causal imumeffectiveness,anadministratorshouldrunBDBon
eventsandanotherforgeneratingforwardand backward allhostsinheradministrativedomain.
graphs. The loggingrequires modi(cid:2)cationsto the Linux Second, BDB tracks only a subset of the many events
operating system; the resulting logs can be written to a that form dependencies, and events outside this set lead
local (cid:2)le or streamed out over the network. The graph to covert channels. For example, BDB ignores the de-
generatorthenparsesthelogstocreatethegraphs. BDB pendencythatis formedifoneprocesscreatesa (cid:2)le ina
storeslogsinaMySQLdatabase;thisallowsittogenerate directoryandanotherprocessliststhecontentsofthatdi-
graphsquicklyevenforlargelogs. Forexample,generat- rectory. [7]describeswhyitisdif(cid:2)cultforanattackerto
ing a graph froma log containing2,187,963objects and use these types of covertchannels to carry out an attack
55,894,869 events takes about 26 seconds. The time to withoutbeingtrackedbyBDB,butitisstillpossible. An
generate graphs is proportionalto the numberof objects attackermayalsocreateacovertchannelbyleveragingan
in the (cid:2)nal causal graph rather than the total number of unmonitored host. BDB cannot track causality on hosts
objectsinthelog.Asaresult,themulti-hopexampledis- that lack instrumentation, and an attacker can break the
cussedinSection4.3tooklessthan45secondstoperform causalchainbytraversingsuchahost.
thecompleteanalysisoverall12nodes. Another style of attack against BDB is to deliberately
create noise in the causal graphs, either by generating a
7.Limitations large number of events, or by implicating innocent pro-
cesses and hosts. However, these actions may make it
As with most security enhancements, using causal
easierforanIDStonoticetheattacker.
tracking to enrich IDS alerts has its limits. First, BDB
can track events only on hosts that are using its kernel
modi(cid:2)cations. Bothbackwardandforwardtrackingstop
whentheyreachahostthatisnotrunningBDB.Formax-8.Relatedwork demonstratedhowcausalitywasabletotracktheSlapper
wormasitspreadwithinalocalnetwork.Wealsoshowed
Other research projects have used the idea of causal-
howcausalitytrackedamanualattackthatspreadviadif-
itytoidentifytheeffectsofanintrusion. TheRepairable
ferentattackvectors,andweshowedhowcausalitycould
File System [16] identi(cid:2)es potentially tainted (cid:2)les by
beenhancedwithapplication-speci(cid:2)cknowledgetotrack
trackingthe(cid:3)ow ofinformationacrossoperatingsystem
an e-mail virus. Finally, we showed how causality can
events. While the Repairable File System performs for-
correlate distinct network and host IDS alerts to reduce
wardcausalanalysis,itdoesnottrackdependenciesacross
thenumberoffalsepositives.
the network or (cid:2)lter the resulting graph to prioritize the
Inthefuture, we planto explorehowthe causalgraph
likely paths of an intrusion. In the database area, work
generatedbyBDBcanbeusedasastandalonehostIDS.
byAmmann,Jajodia,andLiutracksthe(cid:3)owofcontami-
An administrator can specify or pro(cid:2)le a set of causal
natedtransactionsthroughadatabaseandrollsdataback
graphsforeachnetworkservice, then restrict thesystem
if it has been affected directly or indirectly by contami-
togenerateanalertifitseesacausalgraphoutsideofthis
natedtransactions[3].
set. We alsoplanto studywhattypes ofcausalrelation-
In addition to our approach of using causality, other
shiparemostlikelytoconnectrelatedIDSalerts.
techniques have been used to track multi-hop attacks.
Insummary,webelievethatcausalityisausefulwayto
WorkbyZhangandPaxsondetects(cid:147)steppingstones(cid:148)used
gainadditionalinformationfromexistingIDSalerts. By
to carry interactive communicationacross multiple hops
leveragingtruepositivesfoundbyexistinganIDS,BDB
by seeing which packets have correlated size and tim-
can(cid:2)ndotherhoststhatwerealsocompromisedandcan
ing characteristics [15]. Wang and Reeves extend this
correlate distinct alerts to form fewer, higher-con(cid:2)dence
approachby manipulatingthe timing of packets to more
alerts.
easily correlated packets across multiple hops [14]. Our
approachhas advantagesanddisadvantagescomparedto
10.Acknowledgments
prior approaches. The main disadvantageis that ourap-
proach requires one to monitor each host in the chain. The ideas in this paper were re(cid:2)ned during discus-
Henceourapproachissuitablemainlyforcommunication sions with Michael Bailey, Evan Cooke, David Wat-
within a single administrativedomain. The main advan- son, andFarnamJahanian. Theanonymousreviewspro-
tage of our approach is that it is independent of timing vided valuable feedbackthat helped improvethe quality
becauseitcantrackactualcause-and-effectchains,rather of this paper. This research was supported in part by
thanrelyingonlessrobustcharacteristicssuchastiming. ARDA grantNBCHC030104, NationalScience Founda-
Hence our approach can track non-interactive multi-hop tiongrantsCCR-0098229andCCR-0219085,andbyIntel
attacks,suchasworms(evenstealthyones). Corporation. Samuel King was supportedby a National
Many prior researchers have sought to correlate IDS Defense Science and Engineering Graduate Fellowship.
alerts to reduce false positives [11] [4] [9]. Most prior Any opinions, (cid:2)nding, conclusions or recommendations
projects correlate IDS alerts based on shared features, expressedinthismaterialarethoseoftheauthorsanddo
such as source or destination IP addresses of packets or not necessarily re(cid:3)ect the views of the National Science
the time at whichthe IDS alert occurred. Other projects Foundation.
use prior knowledge about sequences of actions to con-
nectIDSalertstogetherintoanattackscenario.Ourwork References
addsanewwaytoconnectIDSalerts,bytrackingactual
[1] Snort:TheOpenSourceNetworkIntrusionDetectionSys-
cause-and-effectchains to connect prior alerts with later
tem. http://www.snort.org/.
ones.
[2] CommonVulnerabilitiesandExposuresCAN-2002-0656,
July2002.
9.Conclusionsand future work [3] P.Ammann,S.Jajodia,andP.Liu. RecoveryfromMali-
ciousTransactions.IEEETransactionsonKnowledgeand
CausalityprovidesanewmechanismforenhancingIDS DataEngineering,14(5):1167(cid:150)1185,September2002.
alerts. Instead of seeing each IDS alert in isolation, one [4] F.Cuppens and A. Miege. Alert Correlation in a Coop-
can use causality to see whicheventsandstate led upto erativeIntrusionDetectionFramework. InProceedingsof
the2002IEEESymposiumonSecurityandPrivacy,May
theIDSalert,andwhicheventsandstatewerein(cid:3)uenced
2002.
bythestatedetectedbytheIDS.BDBfollowscausalre-
[5] P.FergusonandD.Senie. NetworkIngressFiltering:De-
lationshipsbothforwardandbackwardandfollowscausal
featingDenialofServiceAttackswhichemployIPSource
relationshipsacrossmultiplehosts.
AddressSpoo(cid:2)ng,January1998. RFC2267.
Themechanismofcausalitycanbeusedinavarietyof [6] G. H. Kim and E. H. Spafford. The design and imple-
waystoincreasetheaccuracyandreachofIDSalerts.We mentationofTripwire: a(cid:2)lesystemintegritychecker. InProceedings of1994 ACMConference on Computerand
CommunicationsSecurity(CCS),pages18(cid:150)29,November
1994.
[7] S.T.Kingand P.M.Chen. Backtracking Intrusions. In
Proceedingsofthe2003SymposiumonOperatingSystems
Principles(SOSP),pages223(cid:150)236,October2003.
[8] L. Lamport. Time, Clocks, and the Ordering of Events
in a Distributed System. Communications of the ACM,
21(7):558(cid:150)565,July1978.
[9] P.Ning, Y. Cui, and D. S. Reeves. Constructing Attack
ScenariosthroughCorrelationofIntrusionAlerts. InPro-
ceedingsofthe2002ACMConferenceonComputerand
CommunicationsSecurity(CCS),pages245(cid:150)254,Novem-
ber2002.
[10] S.Savage,D.Wetherall,A.Karlin,andT.Anderson.Prac-
ticalNetwork Supportfor IPTraceback. InProceedings
ofthe2000ACMSIGCOMMConference,pages295(cid:150)306,
August2000.
[11] A.ValdesandK.Skinner. ProbabilisticAlertCorrelation.
InProceedingsofthe2001InternationalWorkshoponthe
RecentAdvancesinIntrusionDetection(RAID),October
2001.
[12] D. Wagner and D. Dean. Intrusion Detection via Static
Analysis. In Proceedings of 2001 IEEE Symposium on
ComputerSecurityandPrivacy,2001.
[13] H. J. Wang, C. Guo, D. R. Simon, and A. Zugenmaier.
Shield: Vulnerability-DrivenNetworkFiltersforPrevent-
ingKnownVulnerabilityExploits. InProceedingsofthe
2004ACMSIGCOMMConference,August2004.
[14] X. Wang and D. S. Reeves. Robust Correlation of En-
crypted Attack Traf(cid:2)c Through Stepping Stones by Ma-
nipulation of Interpacket Delays. In Proceedings of the
2003ACMConferenceonComputerandCommunications
Security(CCS),October2003.
[15] Y.Zhang and V.Paxson. DetectingSteppingStones. In
Proceedings of the 2000 USENIX Security Symposium,
August2000.
[16] N.ZhuandT.Chiueh. Design,Implementation,andEval-
uationofRepairable FileService. InProceedings ofthe
2003 International Conference on Dependable Systems
andNetworks(DSN),pages217(cid:150)226,June2003.