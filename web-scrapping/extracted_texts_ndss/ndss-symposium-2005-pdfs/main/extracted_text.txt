Rekeying and Storage Cost for Multiple User
Revocation
1
Sandeep S. Kulkarni Bezawada Bruhadeshwar
Department of Computer Science and Engineering
Michigan State University
East Lansing MI 48824 USA
Abstract
to pay for it. In the algorithms for secure group
communication (e.g., [1{7]), a group controller dis-
In this paper, we focus on tradeo(cid:11)s between storage tributes a cryptographic key, called the group key,
cost and rekeying cost for secure multicast. Speci(cid:12)- to all users. The group key is used to encrypt data
cally, we present a family of algorithmsthat provide transmitted to the group. The group membership
atradeo(cid:11)betweenthenumberofkeysmaintainedby is dynamic. When group membership changes, to
users and the time required for rekeying due to re- protect the con(cid:12)dentiality of the current users, the
vocation of multiple users. We show that some well groupcontrollerchangesandsecurelydistributesthe
known algorithms in the literature are members of new group key.
this family. We show that algorithms in this fam-
When a user is admitted to the group, the group
ily can be used to reduce the cost of rekeying by
controller changes the group key and securely uni-
43%(cid:0)79% when compared with previous solutions
casts it to the joining user. To send the new group
while keeping the number of keys manageable.
key to the current users, the group controller en-
Keywords : Secure Multicast, Rekeying and
crypts it with the old groupkey and multicasts it to
Storage Tradeo(cid:11)s, User Requirements and
them. Thus, the cost of rekeying for the group con-
Capabilities, Heterogeneous Environments
trollerdue toa joininguserissmall. However,when
a user is revoked,i.e., the user leaves or is forcefully
removed from the group, the group controller needs
1 Introduction
to securely unicast the new group keyto eachof the
remaining users. Thus, revoking users from secure
Applications such as conferencing, distributed in-
groups is more expensive.
teractive simulations, networked gaming and news
Many solutions have been proposed (e.g., [2{5,7,
dissemination are group oriented. In these applica-
8]) for e(cid:14)ciently revoking a single user. In these so-
tions, it is necessary to secure the group communi-
lutions, for a group of N users, the group controller
cationasthe dataissensitiveoritrequiresthe users
distributesthe new groupkeyinO(logN)encrypted
1Email: fsandeep, bezawadag@cse.msu.edu Web: http: messages. To revoke multiple users, the group con-
//www.cse.msu.edu/~{sandeep,bezawada}, Tel: +1-517-355- troller repeats the process of rekeying for each re-
2387, Fax: 1-517-432-1061 This work is partially sponsored
voked user. Hence, in these solutions, the cost of
by NSF CAREER 0092724, ONR grant N00014-01-1-0744,
rekeying is high. Moreover, if the group controller
DARPAcontract F33615-01-C-1901,andagrantfromMichi-
ganState University. were to interrupt the group communication during2 Key Distribution in Secure
the rekeying, the resulting delay is unreasonable for
manyapplications. Thus,e(cid:14)cientdistributionofthe Multicast
new group key to revoke multiple users is a critical
problem in secure group communication.
Toensuregroupsecurity,allusersinthegroupshare
One approach to revoke multiple users is to asso- a group key, k . The group key is used to encrypt
g
ciate a key with every non-empty subset of users in the data transmitted to the group. When users are
thegroup. Thus,ifoneormoreusersarerevoked,the revoked from the group, to protect the con(cid:12)den-
groupcontrollerusesthekeyassociatedwiththesub- tiality of the remaining users, the group controller
set of the remaining users to encrypt the new group needs to change and distribute the new group key
key and transmits it to the users. The advantage of to these users. To simplify the distribution of the
thisapproachisthatthe communicationoverheadis new group key, each user maintains additional keys
only one message for revoking any number of users. (e.g., in [2{5,7,8]), which are shared with other
However, the number of keys stored by the group users. To send the new group key, k0 , to the re-
g
controller and the users is exponential in the size of maining users, the group controller encrypts k0 us-
g
the group. In this paper, we describe a family of ing the shared keys not known to the revoked users.
key management algorithms that reduce the rekey- Tore(cid:13)ectcurrentgroupmembership,thegroupcon-
ingcostduetomultipleuserrevocationwhilekeeping trolleralsoneedstochangeanddistributetheshared
the storage cost manageable. Using our algorithms, keysthat areknowntothe revokedusers. Thereare
thegroupcontrollercane(cid:14)cientlydistributethenew two approaches available with the group controller
group key. The main contributions of our paper are fordistributing the new sharedkeys. In the (cid:12)rst ap-
as follows: proach, the group controller explicitly transmits the
newsharedkeys(e.g.,in[2,3,5])tothecurrentusers.
Inourwork,weadoptthesecondapproachwherethe
(cid:15) Wedescribeourfamilyofkeymanagementalgo- groupcontrollerandtheusersupdatethesharedkeys
rithmsfore(cid:14)cientlydistributingthe newgroup using the followingtechnique: k0 =f(k0 ;k ), where
x g x
key when multiple users are revoked from the k is the old shared key, k0 is the new shared key
x x
group. In our algorithms, the storage at the and, f is a one-way function. Using this technique,
group controlleris linear and the storageat the only those current users who knew the old shared
users is logarithmic in the size of the group. key, k , will be able to get the new shared key, k0 .
x x
Also, we show that many existing algorithms This technique was also used in [4,9]. However, this
(e.g., [3,4]) are members of this family. technique may be prone to long term collusion at-
tacks, as described in [4], by the revoked users. To
provide resistance against such attacks, the group
controller adopts a policy in which the keys known
(cid:15) We argue the applicability of our algorithms to
tothecurrentusersarerefreshedatregularintervals
scenarioswhereusershavevaryingrequirements
of time.
or capabilities. As an illustration, we provide
a scenario in which users are classi(cid:12)ed as long- From the above discussion, we note that, the
livedortransient,basedonthedurationoftheir rekeyingcostforthegroupcontrollertorevokemulti-
group membership. pleusersisthecostofsendingthenewgroupkey. We
measurethiscostinthenumberofmessagessentand
the encryptions performed by the group controller
Organization of the paper: The paper is orga- for distributing the new group key. In Section 3,
nized as follows. In Section 2, we describe the prob- wedescribeourkeymanagementalgorithmsandthe
lem of group key distribution and discuss some re- techniques for distributing the new group key. Us-
lated solutions. In Section 3, we describe our family ing simulation results, we show that our algorithms
of key management algorithms and present sample reduce the cost of rekeying by 43%-79% when com-
algorithmsfromthisfamily. InSection4,wepresent pared with the existing solutions.
the simulation results of our algorithms and com- Related Work. Other approaches to address
paretheirperformanceagainstprevioussolutions. In the problem of revokingmultiple users are proposed
Section 5, we conclude the paper and discuss future in [10{15]. In [10], the group controller maintains a
work. logical hierarchyof keys that areshared by di(cid:11)erentsubsets of the users. To revoke multiple users, the know k can decrypt this message. The adversary
groupcontrolleraggregatesallthe necessarykeyup- (anyoneoutsidethegroup)canlistentoallmessages
datestobeperformedandprocessestheminasingle sent over the network. Hence, for simplicity, we as-
step. However, the group controller interrupts the sume that all communication is broadcast in nature
groupcommunicationuntilallthe necessarykeyup- and,hence,wedonotexplicitlyidentifytheintended
dates are performed and then, distributes the new recipients of a message. This assumption is similar
group key to restore group communication. This to that in [2{5,7,8].
interruption to group communication is undesirable
for real-timeand multimedia applications and needs
to be kept small. In [11], to handle multiple group 3 Key Management Algo-
membership changes, the group controller performs
rithms
periodic rekeying, i.e., instead of rekeying whenever
groupmembershipchanges,thegroupcontrollerper-
In Section 3.1, we describe the basic structure and
forms rekeying only at the end of selected time in-
the associated key management algorithm. In Sec-
tervals. However,therevokeduserscanaccessgroup
tion 3.2, we describe our hierarchical key manage-
communication until the group is rekeyed. This can
ment algorithm for larger groups using the concepts
either causemonetarylossto the serviceprovideror
in the basic scheme.
compromise con(cid:12)dentiality of other users. In [12],
the group controller maintains a logical hierarchy of
keys similar to the solution in [10]. To revoke mul- 3.1 The Basic Structure
tiple users, the group controller distributes the new
group key using keys that are not known to the re- WearrangeagroupofK usersaschildrenofarooted
voked users. However, this solution achieves a good tree as shown in Figure 1. Let R be the root node.
rekeying cost only if the size of the revoked users is We use the tuple, hR;u1;u2;:::;u Ki, to denote the
small or very large. basic structure.
In[13],LubyandStaddonfocusonthetradeo(cid:11)be-
R
tween the storage cost and the rekeying cost. They
identifyalowerboundontherekeyingcostbasedon
the number of keys that the users maintain. Their
work is based on previous work in [14] and assumes
that an upper bound on the number of users, say x,
that need to be revoked is known in advance. The
U1 U2 UK
key distribution algorithm in [14] uses the value of Figure 1: Partial View of Basic Structure
x to distribute the keys. Hence, if the number of
users that need to be revoked is more than x then
theiralgorithmfailstorevokethemusingtheshared
The key management algorithm we use for the
keys. By contrast, our algorithm does not assume
basic structure is the complete key graph algorithm
that the number of revoked users is known in ad-
from[3]. Inthisalgorithm,foreverynon-emptysub-
vance. In[15],theauthorsproposeakeydistribution
set of users the group controller provides a unique
technique which allows the users to recover group
shared key which is known only to the users in the
key updates which are lost in an unreliable network
subset. The group controller gives these keys to the
environment. Their key distribution technique is re-
users at the time of joining the group. Of the keys
sistant to a collusion of upto t users. However, in
thatauser,sayu ,receives,(1)onekeyisassociated
i
their approach, for higher values of t, the length of
with the set fu1;u2:::;u Kg and, hence is known to
themessagesentbythegroupcontrollerislarge. Fi-
all the users, and (2) one key is associated with the
nally,inthispaper,wehavenotaddressedtheissues
set fu g. The former key, say k , is the group key
i R
of rekeying for joining users in detail. We refer the
whereas the latter key is the personal key.
interestedreaderto[16]foragooddiscussionofsuch
Thus,thenumberofkeysstoredbythegroupcon-
techniques.
troller are 2K (cid:0)1 and the number of keys held by
Notations. We use kfmg to denote that mes- each user is
2K(cid:0)1.
Now, we consider the process of
sage m is encrypted with key k. Only users who rekeying in this scheme when one or more users arerevoked from the group. The proof of the follow- note that, the degree can be di(cid:11)erent for di(cid:11)erent
ing theorem describes the rekeying process for user nodesinthehierarchy. However,forthe sakeofsim-
revocation. plicity, in this paper, we assume that the nodes in
Theorem 1. In the basic structure, when one or the hierarchical structures have a uniform degree d.
more users are revoked, the group controller can dis- Now, each of the basic structures of the form
tribute the new group key securely to the remaining hR i;u i1;u i2;:::;u idi is associated with the shared
users using at most one encrypted transmission. keys as described in Section 3.1. The struc-
Proof. We consider 3 possible cases of user revo- ture at next higher level, hR;R1;R2;:::;R di, is
cation from the basic structure. also associated with shared keys. The personal
Case 0. When no users are revoked, the group key associated with R i, 1 (cid:20) i (cid:20) d in struc-
controllersendsthe newgroupkeyusingthe current ture hR;R1;R2;:::;R di is the same as the group
group key that is known to all the users. Although, key of the structure hR i;u i1;u i2;:::;u idi. Fur-
thistrivialcaseisnotimportantforthebasicscheme, ther, the structure hR;R1;R2;:::;R di is associated
it is important for the hierarchical algorithm we de- with shared keys. Now, each user in the basic
scribe in Section 3.2. structure hR i;u i1;u i2;:::;u idi is provided with any
Case 1. When m<K users are revoked from the shared key that is provided to R i in the structure
group and the group controller needs to distribute hR;R1;R2;:::;R di. Toillustrateourhierarchicalal-
the new group key to the remaining K (cid:0)m users. gorithm, we consider four examples for d=N, 2, 3,
The group controller uses the shared key, k K(cid:0)m as- 4. In the hierarchical structure, we denote the key
sociatedwiththeremainingsubsetofK(cid:0)musersto associated with a subset fa;b;:::;zg by k ab:::z.
send the new group key. Thus, the group controller Example 0. Whend=N,thekeymanagemental-
0
transmits k K(cid:0)mfk gg. As the revoked users do not gorithm corresponds to the basic structure (cf. Sec-
know k K(cid:0)m, only the current users will be able to tion 3.1) with K = N. Thus, the number of keys
decrypt this message. maintainedbythegroupcontrollerare2N(cid:0)1andthe
Case 2. Allusersarerevokedfromthegroup. The number of keys maintained by each user are
2N(cid:0)1.
groupcontrollerdoes not need to distribute the new Example 1. In Figure 3(a), we show a hierarchy
group key and thus, does not send any messages. with d=2.
We note that, once the new group key is dis- Consider that the shared keys associated with
tributed, the current users update the necessary hR;R1;R2i are fk R, k R1, k R2g, and the shared keys
sharedkeysusingtheone-wayfunctiontechniquewe associated with hR1;u11;u12i are fk R1, k u11, k u12g.
described in Section 2. However, the basic structure Then, in this scheme, user u11, knows the shared
requires the group controller and the users to store keys k , k and k . We note that, the hierarchi-
u11 R1 R
a large number of keys which is not practical if the calalgorithmford=2correspondstothelogicalkey
group is large. In the Section 3.2, we present our hierarchy proposed in [2,3].
hierarchical algorithm to reduce the number of keys
Example 2. InFigure3(b),weshowapartialview
storedatthe groupcontrollerandthe users. Ourhi-
of a sample hierarchy with d = 3. Consider that
erarchical algorithm preserves some attractive com-
the shared keys associated with hR;R1;R2;R3i are,
municationpropertiesofthebasicstructurewhilere-
fk ;k , k , k , k , k , k g, and the
ducing the storage requirement for the shared keys.
R R1 R2 R3 R1R2 R1R3 R2R3
shared keys associated with hR1;u11;u12;u13i are,
fk ,k ,k ,k ,k ,k ,k g,then,
u11 u12 u13 u11u12 u11u13 u12u13 R1
3.2 The Hierarchical Key Manage- thesharedkeysknowntouseru11 are,fk u11,k u11u12,
k , k , k , k , k g. We note that, the
ment Algorithm u11u13 R1 R1R2 R1R3 R
hierarchy for d = 3 corresponds to the complemen-
In our hierarchical algorithm, we compose smaller tary key hierarchyproposed in [4].
basic structures in a hierarchical fashion. To illus- Example 3. In Figure 3(c), we show a partial
trate the hierarchical structure, consider the sam- view of a sample hierarchy with d = 4. Consider
ple structure hR;R1;R2;:::;R di shown in Figure 2, that the shared keys associated with hR;R1, R2,
where each R i, 0 (cid:20) i (cid:20) d, further consists of the R3, R4i are, fk R;k R1, k R2, k R3, k R4, k R1R2, k R1R3,
basicstructurehR i;u i1;u i2;:::;u idi. Theparameter k R1R4, k R2R3, k R2R4, k R3R4, k R1R2R3, k R1R2R4,
d is the number of elements in a basic structure and k , k g and, the shared keys associ-
R1R3R4 R2R3R4
canbeconsideredasthe degreeofthe hierarchy. We ated with hR1, u11, u12, u13, u14i are, fk u11, k u12,R Level 0
Level 1 (h-1)
R1 R2 Rd
Level 2 (h)
U11 Udd
Figure 2: Partial View of Hierarchical Key Management Structure
R R R
R1 R2 R1 R2 R3 R1 R2 R3 R4
U11 U12 U21 U22 U11 U33 U11 U44
(a) (b) (c)
Figure 3: Hierarchies for (a) degree=2 (b) degree=3 and (c) degree=4
k , k , k , k , k , k , k , onemessage(cf. Theorem1fromSection3.1)forthe
u13 u14 u11u12 u11u13 u11u14 u12u13 u12u14
k , k , k , k , k , basic structures from which users are revoked. As
u13u14 u11u12u13 u11u12u14 u11u13u14 u12u13u14
k R1g. Then, the shared keys known to user u11 are, the number of basic structures from which users are
fk ,k , k , k ,k , k , revokedisatmostr,therekeyingcostduetothehth
u11 u11u12 u11u13 u11u14 u11u12u13 u11u12u14
k , k , k , k , k , k , level is r. We note that, the number of encryptions
u11u13u14 R1 R1R2 R1R3 R1R4 R1R2R3
k , k , k g. and messages will be lower if more than one user is
R1R2R4 R1R3R4 R
Now, we describe the process of rekeying for user revoked from the same basic structure.
revocation for an arrangement with h levels. At the next higher level (level h(cid:0)1), the number
Theorem 2. In our hierarchical key management of revoked nodes, i.e., marked nodes, is at most r.
algorithm, whenrusersarerevokedfromahierarchi- At this level, to send the new group key, the group
cal structure with h levels, the group controller can controller sends at most one encrypted message for
distribute the new group key securely to the remain- each structure. Based on the key distribution in the
ing users using at most h:r encrypted transmissions. hierarchical algorithm, this message is decrypted by
Proof. We mark all the nodes which are the theuserswhicharechildrenofthenon-revokednodes
ancestors of the revoked users. At each level, a ineachsuchstructure. As thenumberofsuchstruc-
marked node, R can be considered to be revoked tures at this level is at most r, the group controller
i
from the structure, hR;R1:::;R i;:::;R di. As an sends at most r messages for this level. Further, in
illustration, in the hierarchy with d = 4 in Figure theworstcase,thegroupcontrollersendsr messages
3(c), if u11, u44 are revoked users, then we mark forallthelevelsinthehierarchy. Thus,forrrevoked
R1 and R4. We consider u11 to be revoked from users, the cost of distributing the new group key is
the basicstructure,hR1;u11;u12;u13;u14iandR1 to at most h:r encrypted transmissions.
be revoked from the structure hR;R1;R2;R3;R4i. Wenotethat,atthehighestlevel(level1),thereis
Similarly, u44 is revoked from the basic structure, onlyonestructure. Asthisscenarioissimilartouser
hR4;u41;u42;u43;u44i and R4 is revoked from the revocation from a basic structure, using Theorem 1
structure, hR;R1;R2;R3;R4i. at this level, the group controller sends at most one
To send the new group key, at the lowest level encryptedmessageforthenewgroupkey. Therefore,
(level h), the group controllerneeds to send at most we can reduce the total rekeying cost from Theorem2 to (h(cid:0)1):r+1. Thus, we have: structure.
Theorem 3 In our hierarchical key management
algorithm, when r users are revoked, the group con-
4 Simulation Results and
troller can distribute the new group key securely to
the remaining users using at most (h(cid:0)1):r+1 en- Analysis
crypted transmissions.
The upper bounds in Theorems 1 and 2 are tight
Wecomparethe performanceof ouralgorithmswith
for a small number of revoked users. If the num-
thealgorithmsin[10,12]. In[10],thegroupcontroller
ber of revoked users is O(N) where N is the group
associatesasetofkeyswiththenodesofarootedtree
size,thenthegroupcontrollercandistributethenew
and the users with the leaves of the tree. Each user
group key by only considering the structures at the
knowsthekeysassociatedwiththenodesonthepath
lowestlevel. The groupcontrollersendsat most one
from itself to the root. To revoke a user, the group
message for each basic structure. As there are N=d
controllerrecursivelydistributesthechangedkeysat
basic structures at the lowest level, the group con-
the higher levels in the key tree using the changed
troller sends at most N=d messages.
keys at the lower levels. To revoke multiple users,
Theorem 4 In our hierarchical key management
insteadofsequentiallydistributingthechangedkeys
algorithm, for revoking any number of users, the
for eachrevokeduser, the groupcontrollerprocesses
group controller can distribute the new group key se-
allthe keyupdatesinasinglestep. Thisreducesthe
curely to the remaining users using at most N=d en-
costofchangingakeymultipletimesifitisknownto
crypted transmissions.
multiple revoked users. In [12], the group controller
We can combine the results in Theorems 2 and 4 maintains a key tree similar to [10]. Each node in
asfollows. Torevokerusers,forklowerlevelsinthe the key tree is associated with a public key and a
hierarchy, the group controller uses the result from privatekeypair. Torevokemultipleusers,thegroup
Theorem 2 and sends at most (h(cid:0)k):r encrypted controllertraversesthetreeanddeterminesthecom-
messages.
Atlevelk,foreachofthedk(cid:0)1
structures, mon ancestors of the remaining users. The group
the group controlleruses the result from Theorem 4 controller uses the public keys of these ancestors to
and sends at most
dk(cid:0)1
encrypted messages. There- send the new groupkeytothe remainingusers. The
fore, we can also say that the rekeying cost in our remaining users use the private keys known to them
hierarchical key management algorithm is bounded and determine the new group key from the informa-
by
(h(cid:0)k):r+dk(cid:0)1
where 1(cid:20)k (cid:20)h. tion sent by the group controller.
Wenotethat,alltheresultswederivedgiveupper Methodology of Experiments. We denote the algo-
boundsontherekeyingcostforrevokingusers. Thus, rithm from [10] by Batch LKH, the algorithm from
theminimumoftheseboundsisstillanupperbound. [12]byResilient LKH andouralgorithmbyOur Al-
Thesimulationresultsshowthat,onanaverage,the gorithm. In the simulations, we assume that the al-
performanceofouralgorithmsisslightlybetterthan gorithms maintain full and balanced hierarchies (re-
these bounds. spectively, trees) of keys. For each experiment, we
Some of the basic structures in the hierarchical selectedarandomsetofuserstoberevokedfromthe
structure may have less than d users. To revoke group, and recorded the number of encrypted mes-
users, the group controller assumes that all the ba- sagessent by the groupcontrollerfor the new group
sic structures (cf. Section 3.1) are full. This as- key.
sumption allows the group controller to distribute Wesimulatedthealgorithmswithdegrees3,4and
thenewgroupkeyaccordingtherekeyingtechniques 5. For each experiment, we computed the average
we described in Theorems 2, 3 and 4. We note that, cost of user revocation over 100 trials. The results
in this model, the rekeying cost for the group con- areshowninFigures4-5. Regardingouralgorithms,
troller does not increase and is determined by the weconsiderdegrees3,4and5. Wealsoexperimented
actual number of revoked users. For a full hierar- withthesedegreevaluesforthealgorithmsin[10,12]
chical structure with h levels of hierarchy,the group and selected the version with the minimal cost.
controller stores, O((d dh (cid:0)(cid:0) 11 )(2d (cid:0)1)) keys and, each Based on these (cid:12)gures, as the degree of the hi-
userstoresO(h:(2d(cid:0)1))
keys. Thus,in the hierarchi- erarchy increases, the rekeying cost reduces due to
calstructure, forsmall valuesof d, the user needsto the reduction of the height h of the hierarchy. From
storeO(h)keysasagainstO(2N(cid:0)1)keysinthebasic
theseresults,weobservethatouralgorithmsperformCost of Revoking a Single User
30
25
20
15
10
5
00 5000 10000 15000
Group Size
segasseM
/ snoitpyrcnE
Batch LKH
Resilient LKH Our Algorithm
degree=4 degree=5
Group Size
segasseM
/ snoitpyrcnE
Cost of Revoking a Single User
120
100
80
60
degree=3 40
20
00 5000 Group Size 10000 15000
segasseM
/ snoitpyrcnE
Cost of Revoking 5 Users
200
B Ra et sc ilh ie L nK t H LKH 180
Our Algorithm 160
140
120
100
80
degree=3 60
degree=4 40 degree=5
20
00 5000 10000 15000
Group Size
segasseM
/ snoitpyrcnE
Cost of Revoking 10 Users
Batch LKH
Resilient LKH Our Algorithm
degree=3
degree=4 degree=5
(a) (b) (c)
Figure 4: Comparison of Rekeying Costs for Revoking. (a) One User (b) 5 users and (c) 10
users
450
400
350
300
250
200
150
100 50
0 0 5000 10000 15000
Group Size
segasseM
/ snoitpyrcnE
Cost of Revoking 25 Users
800
Batch LKH
Resilient LKH Our Algorithm 700
600
500
400
300
degree=3
degree=4 200 degree=5 100
0 0 5000 10000 15000
Group Size
segasseM
/ snoitpyrcnE
Cost of Revoking 50 Users
1400
Batch LKH
Resilient LKH Our Algorithm 1200
1000
800
600
degree=3 400
degree=4 degree=5 200
0 0 5000 10000 15000
Group Size
segasseM
/ snoitpyrcnE
Cost of Revoking 100 Users
Batch LKH
Resilient LKH Our Algorithm
degree=3
degree=4 degree=5
(a) (b) (c)
Figure 5: Comparison of Rekeying Costs for Revoking (a) 25 users (b) 50 users and (c) 100
users
muchbetterthantheexistingsolutions. Speci(cid:12)cally, Another important observation in this context is
the cost of rekeying in our algorithm is 66%(cid:0)79% illustratedinFigure7. Speci(cid:12)cally,inthis(cid:12)gure,we
less than that of [10] and 43%(cid:0)74% less than that compare the upper bound identi(cid:12)ed in Section 3.2
of [12]. Finally, the algorithm in [10] is an optimiza- with the experimental value. As shown in Section
tion to the logical key hierarchy in [3] for handling 3.2, the upper bound for rekeying cost is the mini-
multiple user revocations. Hence, our algorithm re- mum of
(h(cid:0)k):r+dk(cid:0)1,
where 1 (cid:20) k (cid:20) h. From
duces the rekeying cost to a value that is less than this(cid:12)gure,itfollowsthattheexperimentalvalueisa
that in [3]. close estimate to the upper bound that is computed
In (cid:12)gure 6, we compare the keys maintained by analytically. Forthisreason,thegroupcontrollercan
ouralgorithmforvariousdegreeswiththekeysmain- use this analyticalestimate in deciding the choice of
tained in [10]. Also, if we considerthat a public and degree that should be chosen so that the rekeying
private key pairs corresponds to one key in the key cost remains within acceptable limits.
tree then the number of keys maintained in [12] is
the same as the number of keys maintained in [10].
5 Conclusion
As we can see, the number of keys is manageable
andthereisatradeo(cid:11)bywhichmaintainingalarger
number of keys per user, it is possible to reduce the In this paper, we presented a family of algorithms
cost of rekeying. that provide a tradeo(cid:11) between the number of keys16x 104
14
12
10
8
6
4
2
00 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
Group Size x 104
syeK
Number of Keys Stored by the Group Controller 100
degree=3
degree=4
degree=5 90
80
70
60
50
40
30
20
Batch LKH Degree =3 10
00 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
Group Size x 104
syeK
Number of Keys Stored by the Users
degree=3
degree=4
degree=5
Batch LKH Degree=3
(a) (b)
Figure 6: Number of Keys Stored by the (a) Group Controller and (b) Each User
35 30
25
20
15
10
5
0 0 2000 4000 6000 8000 10000
Group Size
segasseM
/ snoitpyrcnE
Theoritical Vs Experimental Cost for Revoking 5 Users 140 degree=3 degree=4 degree=5 120
100
80
60
40
Upper Bound Experimental 20
0 0 2000 4000 6000 8000 10000
Group Size
segasseM
/ snoitpyrcnE
Theoritical Vs Experimental Cost for Revoking 25 Users 450 degree=3 degree=4 400 degree=5
350
300
250
200
150
100
Upper Bound 50
Experimental
0 0 2000 4000 6000 8000 10000
Group Size
segasseM
/ snoitpyrcnE
Theoritical Vs Experimental Cost for Revoking 100 Users degree=3 degree=4 degree=5
Upper Bound Experimental
(a) (b) (c)
Figure 7: Comparison of Theoretical Upper Bounds Vs Experimentally Results for Rekeying
Cost to revoke (a) 5 users (b) 25 users and (c) 100 users
maintained by the users and the time required for at the right child. With such a design, the users in
rekeyingduetothe revocationofmultiple users. We the left tree will receive onlya small number of keys
showedthatouralgorithmsreducethe costof rekey- whereastheusersintherighttreewillreceivealarge
ing by43%(cid:0)79%whencomparedwith the previous number of keys. It follows that for the right tree,
solutionsin[10,12]whilekeepingthenumberofkeys the group controller can take advantage of reduced
manageable. rekeyingcostprovidedbytheuseofatreewithlarger
degree, while still allowing users with lower capabil-
Ouralgorithmsalsoenablethe groupcontrollerto ities to participate in the group communication.
dealwithheterogeneoussetofusersthathavedi(cid:11)er-
entcapabilities. Weillustratethisbyasimpleexam- Alternatively, our algorithms could be used in
ple. Consider the case where the basic structure at cases where the nature of the users varies. To il-
the root level has a degree2, the trees rooted at the lustratethisissue,considerthecasewherethegroup
left childofthe rootcanonlymaintainasmallnum- consists of two kinds of users, long-lived and short-
berofkeys,andtheusersrootedatthe rightchildof lived. If the group controller can obtain such infor-
the root can maintain a large number of keys. Now, mation(whichmaycontainasmallnumberoferrors)
we can use a smaller degree for the tree rooted at based on the past behavior of users then the group
the left child and a larger degree for the tree rooted controller can provide a smaller number of keys tolong-livedusersandalargernumberofkeysforshort- [3] Chung Kei Wong, Mohamed Gouda, and Si-
lived users. In other words, the group controllercan mon S. Lam. Secure group communications us-
provide a preferential treatment to long-lived users. ing key graphs. IEEE/ACM Transactions on
Our algorithms are also suited for overlay multi- Networking, 2000.
cast applications. In overlay multicast [17{19], the
[4] SandeepS. KulkarniandBezawadaBruhadesh-
end nodes perform the processingand forwardingof
war. Adaptive rekeying for secure multi-
multicast data without using IP multicast support.
cast. IEEE/IEICE Special issue on Commu-
As these tasks result in increased overhead at the
nications: Transactions on Communications,
end nodes, reducing control tra(cid:14)c is an important
E86-B(10):2948{2956,October 2003.
problem for overlay multicast. Our algorithms re-
duce the overhead at the end nodes by reducing the
[5] D.McGrew and A.Sherman. Key establishment
number of group key update messages sent by the
inlargedynamicgroupsusingone-wayfunction
group controller. These bene(cid:12)ts are also desirable
trees. Manuscript.
in wireless systems which are constrained in bat-
tery power. In [20], the measurements on wireless [6] S.Mittra. Iolus: Aframeworkforscalablesecure
network interface cards show that transmission con- multicasting. In Proc. ACM SIGCOMM’97,
sumes more battery power than reception if the idle pages 277{288,1997.
listening time of the interface is small. As stream-
ingmulticastsessionsresultinminimalidletime,the [7] MarcelWaldvogel,GermanoCaronni,DanSun,
energy consumption is dominated by the amount of Nathalie Weiler, and Bernhard Plattner. The
transmitted data. Thus, in heterogeneous systems versakey framework: Versatile group key man-
which comprise of wired and wireless systems, our agement. IEEE Journal on Selected Areas in
algorithmscanbeused toimprovebatterylongevity Communications, 1999.
of wirelesssystemsbyreducingthe amountof tra(cid:14)c
they need to transmit forward. [8] R.Canetti, J.Garay, G.Itkis, D.Micciancio,
M.Naor, and B.Pinkas. Multicast security: A
Our hierarchical algorithm can be combined with
taxonomyand e(cid:14)cient authentication. In Proc.
the logical key hierarchy in [3]. A major motivation
of INFOCOMM’99, March 1999.
for such a combination is to reduce the storage and
computationaloverheadoftheusers. Toachievethis,
[9] Isabella Chang, Robert Engel, Dilip Kandlur,
the group controller determines the utility of di(cid:11)er-
DimitriosPendarakis,andDebanjan Saha. Key
ent keys at each level during user revocation over a
management for secure internet multicast us-
periodof time anddiscardsthose keyswhicharethe
ing boolean function minimization techniques.
least useful. For example, the group controller can
In Proceedings IEEE Infocomm’99, volume 2,
maintain only logical keys at higher levels in the hi-
pages 689{698,March 1999.
erarchy if additional shared keys, as required in our
hierarchical algorithms, are not useful. Such hybrid [10] X. Steve Li, Yang Richard Yang, Mohamed
schemes will allow the group controller to adapt to Gouda, and Simon S. Lam. Batch updates of
heterogeneous systems where users have varying re- key trees. In Proceedings of the Tenth Interna-
quirementsandcapabilities. Weareworkingonsuit- tionalWorldWideWebConference(WWW10),
abletechniquestocombinethesealgorithmsbasedon Hong Kong, China, May 2001.
the application requirements.
[11] S. Setia, Samir Koushish, and Sushil Jajodia.
Kronos: A scalable group re-keying approach
References
for secure multicast. In IEEE Symposium on
Security and Privacy, pages 215{228,2000.
[1] H.Harney and C.Muckenhirn. Group key man-
agement protocol (GKMP) speci(cid:12)cation. RFC [12] Hartono Kurnio, Safavi-Naini Rei, and Huax-
2093, July 1997. iong Wang. E(cid:14)cient revocation schemes for se-
cure multicast. In International Conference on
[2] DebbyM.Wallner,EricJ.Harder,andRyanC. Information Security and Cryptology 2001, Lec-
Agee. Key management for multicast: Issues ture Notes in Computer Science, volume 2288,
and architectures. RFC 2627. pages 160{177,December 2002.[13] M.LubyandJ.Staddon. Combinatorialbounds
for broadcastencryption. In Advances in Cryp-
tology - EUROCRYPT’98, number 1403 in
LNCS, pages 512{526, Espoo, Finland, 1998.
Springer-Verlag.
[14] A.Fiat and M.Naor. Broadcast encryption. In
Advances in Cryptology - CRYPTO’93, number
773 in LNCS, pages 480{491. Springer-Verlag,
1994.
[15] J. Staddon, S. Miner, M. Franklin, D. Balfanz,
M. Malkin, and D. Dean. Self-healing key dis-
tribution with revocation. In 2002 IEEE Sym-
posium on Security and Privacy, Oakland, CA,
May 2002.
[16] Sandro Rafaeli and David Hutchison. A survey
of key management for secure group commu-
nication. ACM Comput. Surv., 35(3):309{329,
2003.
[17] Y.-H.Chu, S.G.Rao, S.Seshan, and H.Zhang. A
caseforendsystemmulticast. IEEE Journalon
Selected Areas in Communications, 20(8):1456{
1471, October 2002.
[18] B.Zhang, S.Jamin, and L.Zhang. Host multi-
cast: A framework for delivering multicast to
end users. In IEEE INFOCOM, March 2000.
[19] J.Liebeherr, M.Nahas, and W.Si. Application-
layer multicasting with delaunay triangulation
overlays. IEEE Journal on Selected Areas
in Communications, 20(8):1472{1488, October
2002.
[20] LauraMarie Feeney and Martin Nilsson. Inves-
tigating the energy consumption of a wireless
network interface in an ad hoc networking en-
vironment. In IEEE Infocom, Anchorage AK,
April 2001.