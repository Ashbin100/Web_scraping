PNNI Global Routing
Infrastructure Protection (PGRIP)
Livio Ricciulli, Pierangela Samarati,
Sabrina Di Vimercati, Patrick LincolnHello Flooding Database Sync. Routing PGL Election
User
Routing Database
TCP
IP ARP UNI PNNI
Q93b
AAL
ATM
AAL=ATM Adaptation Layer
PNNI=Private-Network Network InterfaceProblem
Routing Routing
Attacker
Transport Protocols Transport Protocols
Crypto Layer Crypto Layer
Key Management InfrastructureIntrusion Detection
Routing Routing
Attacker
Transport Protocols Transport Protocols
Intrusion Intrusion
Detection DetectionPGRIP’s Anomaly Detection
Routing Routing
Database Database
Anomaly Anomaly
Detection Detection
Routing Routing
Attacker
Transport Protocols Transport ProtocolsAdvantages
• Higher level abstraction
• More portable
• Reactive rather than preventive
• Cryptographic layer optional
• Handle spontaneous and Byzantine faults in
a unified mannerPGRIP’s System-level Design
•Groups (m+1)-connected
To Higher layer
•3m+1 PGC Routers
•PGC 3m-connected
m=1
PGL=Peer Group Leader
PGC=Peer Group Core
PGL
PGL
PGL PGLPGRIP’s Node Level Architecture
•Allow to express anomalies without knowledge of protocols
•Filter and delegate alarms
•Interactive Consistency protocol to increase resilience
•Fix problems in a reactive manner
Anomaly Alarm Distributed Remediation
Detection Propagation Diagnosis Protocols
(to higher levels)Database Graph
Protocols
Anomaly Detection
Operation
(node.addr.X.hl.Y)
T/F
Logical Expression
Z != Y
(node.addr.X.hl.Z)
History
Graph after change is applied
Statistical
OperatorRules
• Operation
– Add(path_exp), Update(path_exp),
Delete(path_exp)
• State
– path_exp + statistical info
• Condition
– Logical expression
• Alarm
– Unique anomaly identifierPath Expressions and Conditions
node
• Operation
X
– Update(node.X.ni)
ni
– node.X.ni.priority.P
lead prio
– node.X.ni.leader.L
node
L P
• State
X
– node.X.ni.priority.O ni
– node.X.ni.leader.L
lead prio
• condition
L O
„
– P O
If X does not change leadership status, changing its priority is anomalousPath Expressions and Conditions
node
• Operation
X
– Update(node.X.hl.Z)
hl
– node.X.hl.Z.id.R
Z
– node.X.hl.Z.port.P node
id port
• State R
R P
hl
– node.R.hl.P.id.Y
• condition P
„ id
– Y X
Y better equal X!
Y
R knows that: My port P is connected to Y
X says: I am connected to port P of node RAlarm Propagation
1. Always filter and log alarm
2. Pass alarm to diagnosing module
3. If we do not know how to diagnose, pass
alarm up in the routing hierarchyDiagnosing Module
• Each PGC router receives same alarms
• Each PGC performs diagnosis
independently
• After the diagnosis, the PGC routers use an
interactive consistency protocol to agree on
result (conclusion is guaranteed).
• If no useful diagnosis is reached, give alarm
back to alarm propagation module
• If we found the fault pass fault to resolverResolver Module
• Use some mechanism to fix fault
– If there is a bad router, preempt it
• PGC routers sign and propagate preemption packets
• If at least 3m core routers preempt X, delete X from
the database and discard all packets coming from X
– If there is a suspicion that X lied, ask X’s
neighbors to synchronize their database
• Turn on cryptographic mechanism to verify integrity
of information
• If do not have cryptography, make sure route does
not go through XConclusion and Future Work
• Design is very scalable and robust
• Fault tolerance principles are useful and
should be exploited more
• Expand this work to non-ATM routing and
pursue inter-operation
• Implement anomaly detection module and
formulate and deploy some useful rules
• Research on Byzantine fault diagnosis
• Design robust reconfiguration protocols to
repair routing faults